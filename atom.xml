<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Ruan Bekker's Blog]]></title>
  <link href="http://blog.ruanbekker.com/atom.xml" rel="self"/>
  <link href="http://blog.ruanbekker.com/"/>
  <updated>2017-12-09T02:14:13-05:00</updated>
  <id>http://blog.ruanbekker.com/</id>
  <author>
    <name><![CDATA[Ruan]]></name>
    <email><![CDATA[ruan@ruanbekker.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Unmask a Masked Service in Systemd]]></title>
    <link href="http://blog.ruanbekker.com/blog/2017/12/09/unmask-a-masked-service-in-systemd/"/>
    <updated>2017-12-09T02:02:21-05:00</updated>
    <id>http://blog.ruanbekker.com/blog/2017/12/09/unmask-a-masked-service-in-systemd</id>
    <content type="html"><![CDATA[<p>I was busy setting up a <code>docker-volume-netshare</code> plugin to use NFS Volumes for Docker, which relies on the <code>nfs-utils/nfs-common</code> package, and when trying to start the service, I found that the <code>nfs-common</code> service is <code>masked</code>:</p>

<h2>Unmasking a Service in SystemD:</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo systemctl start docker-volume-netshare.service
</span><span class='line'>Failed to start docker-volume-netshare.service: Unit nfs-common.service is masked.
</span></code></pre></td></tr></table></div></figure>


<p>Looking at the <code>nfs-common</code> service:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo systemctl is-enabled nfs-common
</span><span class='line'>masked
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>sudo systemctl <span class="nb">enable </span>nfs-common
</span><span class='line'>Synchronizing state of nfs-common.service with SysV service script with /lib/systemd/systemd-sysv-install.
</span><span class='line'>Executing: /lib/systemd/systemd-sysv-install <span class="nb">enable </span>nfs-common
</span><span class='line'>Failed to <span class="nb">enable </span>unit: Unit file /lib/systemd/system/nfs-common.service is masked.
</span></code></pre></td></tr></table></div></figure>


<p>It appears that the unit file has a symbolic link to /dev/null:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>file /lib/systemd/system/nfs-common.service
</span><span class='line'>/lib/systemd/system/nfs-common.service: symbolic link to /dev/null
</span></code></pre></td></tr></table></div></figure>


<p>I was able to unmask the service by removing the file:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo rm /lib/systemd/system/nfs-common.service
</span></code></pre></td></tr></table></div></figure>


<p>Then reloading the daemon:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo systemctl daemon-reload
</span></code></pre></td></tr></table></div></figure>


<p>As we can see the <code>nfs-common</code> service is not running:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo systemctl status nfs-common
</span><span class='line'>● nfs-common.service - LSB: NFS support files common to client and server
</span><span class='line'>   Loaded: loaded <span class="o">(</span>/etc/init.d/nfs-common<span class="p">;</span> generated<span class="p">;</span> vendor preset: enabled<span class="o">)</span>
</span><span class='line'>   Active: inactive <span class="o">(</span>dead<span class="o">)</span>
</span><span class='line'>     Docs: man:systemd-sysv-generator<span class="o">(</span>8<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Let&rsquo;s go ahead and start the service:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo systemctl start nfs-common
</span><span class='line'><span class="nv">$ </span>sudo systemctl status nfs-common
</span><span class='line'>● nfs-common.service - LSB: NFS support files common to client and server
</span><span class='line'>   Loaded: loaded <span class="o">(</span>/etc/init.d/nfs-common<span class="p">;</span> generated<span class="p">;</span> vendor preset: enabled<span class="o">)</span>
</span><span class='line'>   Active: active <span class="o">(</span>running<span class="o">)</span> since Sat 2017-12-09 08:59:47 SAST<span class="p">;</span> 2s ago
</span><span class='line'>     Docs: man:systemd-sysv-generator<span class="o">(</span>8<span class="o">)</span>
</span><span class='line'>  Process: <span class="m">7382</span> <span class="nv">ExecStart</span><span class="o">=</span>/etc/init.d/nfs-common start <span class="o">(</span><span class="nv">code</span><span class="o">=</span>exited, <span class="nv">status</span><span class="o">=</span>0/SUCCESS<span class="o">)</span>
</span><span class='line'>      CPU: 162ms
</span><span class='line'>   CGroup: /system.slice/nfs-common.service
</span><span class='line'>           └─7403 /usr/sbin/rpc.idmapd
</span></code></pre></td></tr></table></div></figure>


<p>Now we can see the serive is unmasked and started, also remember to enable to service on boot:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo systemctl <span class="nb">enable </span>nfs-common
</span><span class='line'>nfs-common.service is not a native service, redirecting to systemd-sysv-install.
</span><span class='line'>Executing: /lib/systemd/systemd-sysv-install <span class="nb">enable </span>nfs-common
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>sudo systemctl is-enabled nfs-common
</span><span class='line'>enabled
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup a NFS Server on a RaspberryPi]]></title>
    <link href="http://blog.ruanbekker.com/blog/2017/12/05/setup-a-nfs-server-on-a-raspberrypi/"/>
    <updated>2017-12-05T10:45:35-05:00</updated>
    <id>http://blog.ruanbekker.com/blog/2017/12/05/setup-a-nfs-server-on-a-raspberrypi</id>
    <content type="html"><![CDATA[<p>Setup a NFS Server/Client on RaspberryPi 3</p>

<h2>Setup the Server Side - Disks and Directories</h2>

<p>Prepare the directories:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo mkdir -p /opt/nfs
</span><span class='line'><span class="nv">$ </span>sudo chown pi:pi /opt/nfs
</span><span class='line'><span class="nv">$ </span>sudo chmod <span class="m">755</span> /opt/nfs
</span></code></pre></td></tr></table></div></figure>


<p>For demonstration, I will be using the same disk as my OS, but if you have other disks that you would like to mount, mount them like the following:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo lsblk
</span><span class='line'><span class="nv">$ </span>sudo mount /dev/sda2 /opt/nfs
</span><span class='line'><span class="nv">$ </span>sudo chown -R pi:pi /opt/nfs/existing_dirs
</span><span class='line'><span class="nv">$ </span>sudo find /opt/nfs/existing_dirs/ -type d -exec chmod <span class="m">755</span> <span class="o">{}</span> <span class="se">\;</span>
</span><span class='line'><span class="nv">$ </span>sudo find /opt/nfs/existing_dirs/ -type f -exec chmod <span class="m">644</span> <span class="o">{}</span> <span class="se">\;</span>
</span></code></pre></td></tr></table></div></figure>


<p>If you mounted the disk, and you would like to mount the disk on boot, we need to add it to our <code>/etc/fstab</code>. We can get the disk by running either:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo lsblk
</span><span class='line'><span class="c"># or</span>
</span><span class='line'><span class="nv">$ </span>sudo blkid
</span></code></pre></td></tr></table></div></figure>


<p>Populate the <code>/etc/fstab</code> with your disk info, it will look more or less like:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>/dev/sda2 /opt/nfs ext4 defaults,noatime <span class="m">0</span> 0
</span></code></pre></td></tr></table></div></figure>


<p>Append <code>rootdelay=10</code> after <code>rootwait</code> in <code>/boot/cmdline.txt</code>, then reboot for the changes to become active.</p>

<h2>Setup the Server Side - Installing NFS Server</h2>

<p>Install the NFS Server packages:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo apt install nfs-kernel-server nfs-common rpcbind -y
</span></code></pre></td></tr></table></div></figure>


<p>Configure the paths in <code>/etc/exports</code>, we need to uid gid for the user that owns permission that we need to pass to the NFS Client. To get that:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>id pi
</span><span class='line'><span class="nv">uid</span><span class="o">=</span>1000<span class="o">(</span>pi<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1000<span class="o">(</span>pi<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Setup our path that we would like to be accessible via NFS:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>/opt/nfs 192.168.1.0/24<span class="o">(</span>rw,all_squash,no_hide,insecure,async,no_subtree_check,anonuid<span class="o">=</span>1000,anongid<span class="o">=</span>1000<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>If you would like to have open access:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>/opt/nfs *<span class="o">(</span>rw,all_squash,no_hide,insecure,async,no_subtree_check,anonuid<span class="o">=</span>1000,anongid<span class="o">=</span>1000<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Export the config, enable the services on boot and start NFS:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo exportfs -ra
</span><span class='line'><span class="nv">$ </span>sudo systemctl <span class="nb">enable </span>rpcbind
</span><span class='line'><span class="nv">$ </span>sudo systemctl <span class="nb">enable </span>nfs-kernel-server
</span><span class='line'><span class="nv">$ </span>sudo systemctl <span class="nb">enable </span>nfs-common
</span><span class='line'><span class="nv">$ </span>sudo systemctl start rpcbind
</span><span class='line'><span class="nv">$ </span>sudo systemctl start nfs-kernel-server
</span><span class='line'><span class="nv">$ </span>sudo systemctl start nfs-common
</span></code></pre></td></tr></table></div></figure>


<h2>Setup the NFS Client</h2>

<p>On the client install the NFS Client packages:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo apt install nfs-common -y
</span></code></pre></td></tr></table></div></figure>


<p>Create the mountpoint of choice and change the ownership:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo chown pi:pi /mnt
</span></code></pre></td></tr></table></div></figure>


<p>Setup the <code>/etc/idmapd.conf</code> to match the user:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>Mapping<span class="o">]</span>
</span><span class='line'>Nobody-User <span class="o">=</span> pi
</span><span class='line'>Nobody-Group <span class="o">=</span> pi
</span></code></pre></td></tr></table></div></figure>


<p>Mount the NFS Share to your local mount point:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo mount 192.168.1.2:/opt/nfs /mnt
</span></code></pre></td></tr></table></div></figure>


<p>Enable mount on boot via <code>/etc/fstab</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>192.168.1.2:/opt/nfs /mnt nfs rw <span class="m">0</span> 0
</span></code></pre></td></tr></table></div></figure>


<h2>Resources:</h2>

<ul>
<li><a href="https://zsiti.eu/nfs-file-sharing-server-raspberry-pi/">Great Resource on NFS</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Elasticsearch Curator to Manage and Curate Your Elasticsearch Indexes]]></title>
    <link href="http://blog.ruanbekker.com/blog/2017/12/04/elasticsearch-curator-to-manage-and-curate-your-elasticsearch-indexes/"/>
    <updated>2017-12-04T08:39:06-05:00</updated>
    <id>http://blog.ruanbekker.com/blog/2017/12/04/elasticsearch-curator-to-manage-and-curate-your-elasticsearch-indexes</id>
    <content type="html"><![CDATA[<p><img src="http://obj-cache.cloud.ruanbekker.com/elasticsearch-2.jpg" alt="" /></p>

<p>Elasticsearch Curator helps you to manage and curate your Elasticsearch Indices. I will show how to use the Curator in the following ways:</p>

<ul>
<li>Create Indexes</li>
<li>Reindex Indexes</li>
<li>Set Replica Counts on Indexes</li>
<li>Delete Indexes</li>
</ul>


<h2>Install Elasticsearch Curator</h2>

<p>Install Elasticsearch Curator as follows:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>virtualenv .venv
</span><span class='line'><span class="nv">$ </span><span class="nb">source</span> .venv/bin/activate
</span><span class='line'><span class="nv">$ </span>pip install elasticsearch-curator
</span></code></pre></td></tr></table></div></figure>


<p>Populate the configuration whith your Elasticsearch Host details:</p>

<figure class='code'><figcaption><span>config.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="nn">---</span>
</span><span class='line'><span class="l-Scalar-Plain">client</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">hosts</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">es.domain.com</span>
</span><span class='line'>  <span class="l-Scalar-Plain">port</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">443</span>
</span><span class='line'>  <span class="l-Scalar-Plain">use_ssl</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">True</span>
</span><span class='line'>  <span class="l-Scalar-Plain">ssl_no_validate</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">False</span>
</span><span class='line'>  <span class="l-Scalar-Plain">http_auth</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">timeout</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">30</span>
</span><span class='line'>  <span class="l-Scalar-Plain">master_only</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">False</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">logging</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">loglevel</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">INFO</span>
</span><span class='line'>  <span class="l-Scalar-Plain">logfile</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">logformat</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">default</span>
</span><span class='line'>  <span class="l-Scalar-Plain">blacklist</span><span class="p-Indicator">:</span> <span class="p-Indicator">[</span><span class="s">&#39;urllib3&#39;</span><span class="p-Indicator">]</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Action: Create Indices</h2>

<p>Use Curator to Create Elasticsearch Indexes:</p>

<figure class='code'><figcaption><span>action-create-indices.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="nn">---</span>
</span><span class='line'><span class="l-Scalar-Plain">actions</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">create_web-app1-metrics</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">action</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">create_index</span>
</span><span class='line'>    <span class="l-Scalar-Plain">description</span><span class="p-Indicator">:</span> <span class="p-Indicator">&gt;-</span>
</span><span class='line'>      <span class="no">Create Elasticsearch Index based on Todays Date</span>
</span><span class='line'>      <span class="no">Specify Number of Primary and Replica Shards</span>
</span><span class='line'>      <span class="no">web-app1-metrics-2017.12.04</span>
</span><span class='line'>    <span class="l-Scalar-Plain">options</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="s">&#39;&lt;web-app1-metrics-{now/d}&gt;&#39;</span>
</span><span class='line'>      <span class="l-Scalar-Plain">extra_settings</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">settings</span><span class="p-Indicator">:</span>
</span><span class='line'>          <span class="l-Scalar-Plain">number_of_shards</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">5</span>
</span><span class='line'>          <span class="l-Scalar-Plain">number_of_replicas</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">1</span>
</span><span class='line'>        <span class="l-Scalar-Plain">continue_if_exception</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">True</span>
</span><span class='line'>        <span class="l-Scalar-Plain">disable_action</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">False</span>
</span><span class='line'>
</span><span class='line'>  <span class="l-Scalar-Plain">create_web-app2-metrics</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">action</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">create_index</span>
</span><span class='line'>    <span class="l-Scalar-Plain">description</span><span class="p-Indicator">:</span> <span class="s">&quot;Create</span><span class="nv"> </span><span class="s">Index</span><span class="nv"> </span><span class="s">with</span><span class="nv"> </span><span class="s">the</span><span class="nv"> </span><span class="s">1st</span><span class="nv"> </span><span class="s">of</span><span class="nv"> </span><span class="s">this</span><span class="nv"> </span><span class="s">Month</span><span class="nv"> </span><span class="s">in</span><span class="nv"> </span><span class="s">Daily</span><span class="nv"> </span><span class="s">Format</span><span class="nv"> </span><span class="s">-</span><span class="nv"> </span><span class="s">web-app2-metrics-2017.12.01&quot;</span>
</span><span class='line'>    <span class="l-Scalar-Plain">options</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="s">&#39;&lt;web-app2-metrics-{now/M}&gt;&#39;</span>
</span><span class='line'>      <span class="l-Scalar-Plain">extra_settings</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">settings</span><span class="p-Indicator">:</span>
</span><span class='line'>          <span class="l-Scalar-Plain">number_of_shards</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">5</span>
</span><span class='line'>          <span class="l-Scalar-Plain">number_of_replicas</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">2</span>
</span><span class='line'>        <span class="l-Scalar-Plain">continue_if_exception</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">True</span>
</span><span class='line'>        <span class="l-Scalar-Plain">disable_action</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">False</span>
</span><span class='line'>
</span><span class='line'>  <span class="l-Scalar-Plain">create_web-app3-metrics</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">action</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">create_index</span>
</span><span class='line'>    <span class="l-Scalar-Plain">description</span><span class="p-Indicator">:</span> <span class="s">&quot;Create</span><span class="nv"> </span><span class="s">Index</span><span class="nv"> </span><span class="s">with</span><span class="nv"> </span><span class="s">Last</span><span class="nv"> </span><span class="s">Months</span><span class="nv"> </span><span class="s">Date</span><span class="nv"> </span><span class="s">in</span><span class="nv"> </span><span class="s">Month</span><span class="nv"> </span><span class="s">Format</span><span class="nv"> </span><span class="s">-</span><span class="nv"> </span><span class="s">web-app3-metrics-2017.11&quot;</span>
</span><span class='line'>    <span class="l-Scalar-Plain">options</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="s">&#39;&lt;web-app2-metrics-{now/M-1M{YYYY.MM}}&gt;&#39;</span>
</span><span class='line'>      <span class="l-Scalar-Plain">extra_settings</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">settings</span><span class="p-Indicator">:</span>
</span><span class='line'>          <span class="l-Scalar-Plain">number_of_shards</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">5</span>
</span><span class='line'>          <span class="l-Scalar-Plain">number_of_replicas</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">2</span>
</span><span class='line'>        <span class="l-Scalar-Plain">continue_if_exception</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">True</span>
</span><span class='line'>        <span class="l-Scalar-Plain">disable_action</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">False</span>
</span><span class='line'>
</span><span class='line'>  <span class="l-Scalar-Plain">create_web-app4-metrics</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">action</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">create_index</span>
</span><span class='line'>    <span class="l-Scalar-Plain">description</span><span class="p-Indicator">:</span> <span class="s">&quot;Create</span><span class="nv"> </span><span class="s">Index</span><span class="nv"> </span><span class="s">with</span><span class="nv"> </span><span class="s">Daily</span><span class="nv"> </span><span class="s">Format</span><span class="nv"> </span><span class="s">12</span><span class="nv"> </span><span class="s">Hours</span><span class="nv"> </span><span class="s">from</span><span class="nv"> </span><span class="s">Now</span><span class="nv"> </span><span class="s">-</span><span class="nv"> </span><span class="s">web-app4-metrics-2017.12.05&quot;</span>
</span><span class='line'>    <span class="l-Scalar-Plain">options</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="s">&#39;&lt;web-app2-metrics-{now/d{YYYY.MM.dd|+12:00}}&gt;&#39;</span>
</span><span class='line'>      <span class="l-Scalar-Plain">extra_settings</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">settings</span><span class="p-Indicator">:</span>
</span><span class='line'>          <span class="l-Scalar-Plain">number_of_shards</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">5</span>
</span><span class='line'>          <span class="l-Scalar-Plain">number_of_replicas</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">2</span>
</span><span class='line'>        <span class="l-Scalar-Plain">continue_if_exception</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">True</span>
</span><span class='line'>        <span class="l-Scalar-Plain">disable_action</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">False</span>
</span></code></pre></td></tr></table></div></figure>


<p>When Running curator, you can append <code>--dry-run</code> to test your config/action without touching your data. To create these indexes:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curator --config config.yml action-create-indices.yml
</span><span class='line'>
</span><span class='line'>2017-12-04 14:22:40,252 INFO      Preparing Action ID: create_web-app1-metrics, <span class="s2">&quot;create_index&quot;</span>
</span><span class='line'>2017-12-04 14:22:40,303 INFO      GET https://es.domain.com:443/ <span class="o">[</span>status:200 request:0.036s<span class="o">]</span>
</span><span class='line'>2017-12-04 14:22:40,304 INFO      Trying Action ID: create_web-app1-metrics, <span class="s2">&quot;create_index&quot;</span>: Create Elasticsearch Index based on Todays Date Specify Number of Primary and Replica Shards web-app1-metrics-2017.12.04
</span><span class='line'>2017-12-04 14:22:40,304 INFO      <span class="s2">&quot;&lt;web-app1-metrics-{now/d}&gt;&quot;</span> is using Elasticsearch date math.
</span><span class='line'>2017-12-04 14:22:40,304 INFO      Creating index <span class="s2">&quot;&lt;web-app1-metrics-{now/d}&gt;&quot;</span> with settings: <span class="o">{</span><span class="s1">&#39;continue_if_exception&#39;</span>: True, <span class="s1">&#39;settings&#39;</span>: <span class="o">{</span><span class="s1">&#39;number_of_replicas&#39;</span>: 1, <span class="s1">&#39;number_of_shards&#39;</span>: 5<span class="o">}</span>, <span class="s1">&#39;disable_action&#39;</span>: False<span class="o">}</span>
</span><span class='line'>2017-12-04 14:22:41,490 INFO      PUT https://es.domain.com:443/%3Cweb-app1-metrics-%7Bnow%2Fd%7D%3E <span class="o">[</span>status:200 request:1.185s<span class="o">]</span>
</span><span class='line'>2017-12-04 14:22:41,490 INFO      Action ID: create_web-app1-metrics, <span class="s2">&quot;create_index&quot;</span> completed.
</span><span class='line'>2017-12-04 14:22:41,490 INFO      Preparing Action ID: create_web-app2-metrics, <span class="s2">&quot;create_index&quot;</span>
</span><span class='line'>2017-12-04 14:22:41,533 INFO      GET https://es.domain.com:443/ <span class="o">[</span>status:200 request:0.033s<span class="o">]</span>
</span><span class='line'>2017-12-04 14:22:41,534 INFO      Trying Action ID: create_web-app2-metrics, <span class="s2">&quot;create_index&quot;</span>: Create Index with the 1st of this Month in Daily Format - web-app2-metrics-2017.12.01
</span><span class='line'>2017-12-04 14:22:41,534 INFO      <span class="s2">&quot;&lt;web-app2-metrics-{now/M}&gt;&quot;</span> is using Elasticsearch date math.
</span><span class='line'>2017-12-04 14:22:41,534 INFO      Creating index <span class="s2">&quot;&lt;web-app2-metrics-{now/M}&gt;&quot;</span> with settings: <span class="o">{</span><span class="s1">&#39;continue_if_exception&#39;</span>: True, <span class="s1">&#39;settings&#39;</span>: <span class="o">{</span><span class="s1">&#39;number_of_replicas&#39;</span>: 2, <span class="s1">&#39;number_of_shards&#39;</span>: 5<span class="o">}</span>, <span class="s1">&#39;disable_action&#39;</span>: False<span class="o">}</span>
</span><span class='line'>2017-12-04 14:22:41,634 INFO      PUT https://es.domain.com:443/%3Cweb-app2-metrics-%7Bnow%2FM%7D%3E <span class="o">[</span>status:200 request:0.099s<span class="o">]</span>
</span><span class='line'>2017-12-04 14:22:41,634 INFO      Action ID: create_web-app2-metrics, <span class="s2">&quot;create_index&quot;</span> completed.
</span><span class='line'>2017-12-04 14:22:41,634 INFO      Preparing Action ID: create_web-app3-metrics, <span class="s2">&quot;create_index&quot;</span>
</span><span class='line'>2017-12-04 14:22:41,673 INFO      GET https://es.domain.com:443/ <span class="o">[</span>status:200 request:0.028s<span class="o">]</span>
</span><span class='line'>2017-12-04 14:22:41,674 INFO      Trying Action ID: create_web-app3-metrics, <span class="s2">&quot;create_index&quot;</span>: Create Index with Last Months Date in Month Format - web-app3-metrics-2017.11
</span><span class='line'>2017-12-04 14:22:41,674 INFO      <span class="s2">&quot;&lt;web-app2-metrics-{now/M-1M{YYYY.MM}}&gt;&quot;</span> is using Elasticsearch date math.
</span><span class='line'>2017-12-04 14:22:41,674 INFO      Creating index <span class="s2">&quot;&lt;web-app2-metrics-{now/M-1M{YYYY.MM}}&gt;&quot;</span> with settings: <span class="o">{</span><span class="s1">&#39;continue_if_exception&#39;</span>: True, <span class="s1">&#39;settings&#39;</span>: <span class="o">{</span><span class="s1">&#39;number_of_replicas&#39;</span>: 2, <span class="s1">&#39;number_of_shards&#39;</span>: 5<span class="o">}</span>, <span class="s1">&#39;disable_action&#39;</span>: False<span class="o">}</span>
</span><span class='line'>2017-12-04 14:22:41,750 INFO      PUT https://es.domain.com:443/%3Cweb-app2-metrics-%7Bnow%2FM-1M%7BYYYY.MM%7D%7D%3E <span class="o">[</span>status:200 request:0.076s<span class="o">]</span>
</span><span class='line'>2017-12-04 14:22:41,751 INFO      Action ID: create_web-app3-metrics, <span class="s2">&quot;create_index&quot;</span> completed.
</span><span class='line'>2017-12-04 14:22:41,751 INFO      Preparing Action ID: create_web-app4-metrics, <span class="s2">&quot;create_index&quot;</span>
</span><span class='line'>2017-12-04 14:22:41,785 INFO      GET https://es.domain.com:443/ <span class="o">[</span>status:200 request:0.027s<span class="o">]</span>
</span><span class='line'>2017-12-04 14:22:41,786 INFO      Trying Action ID: create_web-app4-metrics, <span class="s2">&quot;create_index&quot;</span>: Create Index with Daily Format <span class="m">12</span> Hours from Now - web-app4-metrics-2017.12.05
</span><span class='line'>2017-12-04 14:22:41,786 INFO      <span class="s2">&quot;&lt;web-app2-metrics-{now/d{YYYY.MM.dd|+12:00}}&gt;&quot;</span> is using Elasticsearch date math.
</span><span class='line'>2017-12-04 14:22:41,786 INFO      Creating index <span class="s2">&quot;&lt;web-app2-metrics-{now/d{YYYY.MM.dd|+12:00}}&gt;&quot;</span> with settings: <span class="o">{</span><span class="s1">&#39;continue_if_exception&#39;</span>: True, <span class="s1">&#39;settings&#39;</span>: <span class="o">{</span><span class="s1">&#39;number_of_replicas&#39;</span>: 2, <span class="s1">&#39;number_of_shards&#39;</span>: 5<span class="o">}</span>, <span class="s1">&#39;disable_action&#39;</span>: False<span class="o">}</span>
</span><span class='line'>2017-12-04 14:22:42,182 INFO      PUT https://es.domain.com:443/%3Cweb-app2-metrics-%7Bnow%2Fd%7BYYYY.MM.dd%7C%2B12%3A00%7D%7D%3E <span class="o">[</span>status:200 request:0.396s<span class="o">]</span>
</span><span class='line'>2017-12-04 14:22:42,183 INFO      Action ID: create_web-app4-metrics, <span class="s2">&quot;create_index&quot;</span> completed.
</span><span class='line'>2017-12-04 14:22:42,183 INFO      Job completed.
</span></code></pre></td></tr></table></div></figure>


<p>Lets have a look at our indices to confirm that our indices was created:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -s -XGET <span class="s2">&quot;https://es.domain.com/_cat/indices/web-*?v&quot;</span>
</span><span class='line'>health status index                       uuid                   pri rep docs.count docs.deleted store.size pri.store.size
</span><span class='line'>green  open   web-app2-metrics-2017.12.01 qJHVyft1THemh1qGvA8u0w   <span class="m">5</span>   <span class="m">2</span>          <span class="m">0</span>            <span class="m">0</span>       810b           810b
</span><span class='line'>green  open   web-app2-metrics-2017.11    y5R4vNfOSh2tiC-yGtkgLg   <span class="m">5</span>   <span class="m">2</span>          <span class="m">0</span>            <span class="m">0</span>       810b           810b
</span><span class='line'>green  open   web-app2-metrics-2017.12.05 -ohbgD6-TmmCeJtVv84dPw   <span class="m">5</span>   <span class="m">2</span>          <span class="m">0</span>            <span class="m">0</span>       810b           810b
</span><span class='line'>green  open   web-app1-metrics-2017.12.04 WeGkgB9FSq-cuLVR7ccQFQ   <span class="m">5</span>   <span class="m">1</span>          <span class="m">0</span>            <span class="m">0</span>       810b           810b
</span></code></pre></td></tr></table></div></figure>


<h2>Action: Reindex Indices based on Timestring</h2>

<p>I would like to reindex a months worth of index data to a monthly index:</p>

<figure class='code'><figcaption><span>action-reindex.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="nn">---</span>
</span><span class='line'><span class="l-Scalar-Plain">actions</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">re-index_web-app1-metrics</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">action</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">reindex</span>
</span><span class='line'>    <span class="l-Scalar-Plain">description</span><span class="p-Indicator">:</span> <span class="s">&quot;reindex</span><span class="nv"> </span><span class="s">web-app1-metrics</span><span class="nv"> </span><span class="s">to</span><span class="nv"> </span><span class="s">monthly</span><span class="nv"> </span><span class="s">index</span><span class="nv"> </span><span class="s">of</span><span class="nv"> </span><span class="s">last</span><span class="nv"> </span><span class="s">months</span><span class="nv"> </span><span class="s">date</span><span class="nv"> </span><span class="s">-</span><span class="nv"> </span><span class="s">archive-web-app1-metrics-2017.11&quot;</span>
</span><span class='line'>    <span class="l-Scalar-Plain">options</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">continue_if_exception</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">False</span>
</span><span class='line'>      <span class="l-Scalar-Plain">disable_action</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">False</span>
</span><span class='line'>      <span class="l-Scalar-Plain">wait_interval</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">9</span>
</span><span class='line'>      <span class="l-Scalar-Plain">max_wait</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">-1</span>
</span><span class='line'>      <span class="l-Scalar-Plain">request_body</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">source</span><span class="p-Indicator">:</span>
</span><span class='line'>          <span class="l-Scalar-Plain">index</span><span class="p-Indicator">:</span> <span class="s">&#39;&lt;web-app1-metrics-{now/d-31d{YYYY.MM.dd}}&gt;&#39;</span>
</span><span class='line'>        <span class="l-Scalar-Plain">dest</span><span class="p-Indicator">:</span>
</span><span class='line'>          <span class="l-Scalar-Plain">index</span><span class="p-Indicator">:</span> <span class="s">&#39;&lt;archive-web-app1-metrics-{now/M-1M{YYYY.MM}}&gt;&#39;</span>
</span><span class='line'>    <span class="l-Scalar-Plain">filters</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">filtertype</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">none</span>
</span></code></pre></td></tr></table></div></figure>


<p>Running the Curator to reindex all last months data: <code>web-app1-metrics-2017.11.{01-31}</code> to the index: <code>web-app1-metrics-2017.11</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curator --config config action-reindex.yml
</span></code></pre></td></tr></table></div></figure>


<h2>Curator to Change Replica Counts on your Indices:</h2>

<p>We will change all our indices settings to replica count of 2, that is matched with our prefix pattern. We are using <code>wait_for_completion</code> so the job will only be completed once the replica count number is updated and data has been replicated to the replica shards.</p>

<p>Our action file:</p>

<figure class='code'><figcaption><span>action-replicas.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="nn">---</span>
</span><span class='line'><span class="l-Scalar-Plain">actions</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">increase_replica_2</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">action</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">replicas</span>
</span><span class='line'>    <span class="l-Scalar-Plain">description</span><span class="p-Indicator">:</span> <span class="p-Indicator">&gt;-</span>
</span><span class='line'>      <span class="no">Increase the replica count to 2 for logstash- prefixed indices older than</span>
</span><span class='line'>      <span class="no">10 days (based on index creation_date)</span>
</span><span class='line'>    <span class="l-Scalar-Plain">options</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">count</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">2</span>
</span><span class='line'>      <span class="l-Scalar-Plain">max_wait</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">-1</span>
</span><span class='line'>      <span class="l-Scalar-Plain">wait_interval</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">10</span>
</span><span class='line'>      <span class="l-Scalar-Plain">wait_for_completion</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">True</span>
</span><span class='line'>      <span class="l-Scalar-Plain">disable_action</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">False</span>
</span><span class='line'>    <span class="l-Scalar-Plain">filters</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">filtertype</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">pattern</span>
</span><span class='line'>      <span class="l-Scalar-Plain">kind</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">prefix</span>
</span><span class='line'>      <span class="l-Scalar-Plain">value</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">packet-capture-2017.11.</span>
</span></code></pre></td></tr></table></div></figure>


<p>Using Curator to increase our replica count on all the matched indices:</p>

<figure class='code'><figcaption><span>action-replicas.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">$ curator --config config.yml action-replicas.yml</span>
</span><span class='line'><span class="l-Scalar-Plain">2017-12-04 13:42:41,322 INFO      Health Check for all provided keys passed.</span>
</span><span class='line'><span class="l-Scalar-Plain">2017-12-04 13:42:41,323 INFO      Action ID</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">increase_replica_2, &quot;replicas&quot; completed.</span>
</span><span class='line'><span class="l-Scalar-Plain">2017-12-04 13:42:41,323 INFO      Job completed.</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Curator to Delete your Indices:</h2>

<figure class='code'><figcaption><span>action-replicas.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="nn">---</span>
</span><span class='line'><span class="c1"># documentation:</span>
</span><span class='line'><span class="c1"># https://www.elastic.co/guide/en/elasticsearch/client/curator/current/ex_delete_indices.html</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">actions</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">delete-index_web-app1-metrics</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">action</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">delete_indices</span>
</span><span class='line'>    <span class="l-Scalar-Plain">description</span><span class="p-Indicator">:</span> <span class="p-Indicator">&gt;-</span>
</span><span class='line'>      <span class="no">Delete indices older than 21 days - based on index name, web-app1-metrics-</span>
</span><span class='line'>      <span class="no">prefixed indices. Ignore the error if the filter does not result in an</span>
</span><span class='line'>      <span class="no">actionable list of indices (ignore_empty_list) and exit cleanly.</span>
</span><span class='line'>    <span class="l-Scalar-Plain">options</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">ignore_empty_list</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">True</span>
</span><span class='line'>      <span class="l-Scalar-Plain">disable_action</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">False</span>
</span><span class='line'>    <span class="l-Scalar-Plain">filters</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">filtertype</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">pattern</span>
</span><span class='line'>      <span class="l-Scalar-Plain">kind</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">prefix</span>
</span><span class='line'>      <span class="l-Scalar-Plain">value</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">web-app1-metrics-</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">filtertype</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">age</span>
</span><span class='line'>      <span class="l-Scalar-Plain">source</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">name</span>
</span><span class='line'>      <span class="l-Scalar-Plain">direction</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">older</span>
</span><span class='line'>      <span class="l-Scalar-Plain">timestring</span><span class="p-Indicator">:</span> <span class="s">&#39;%Y.%m.%d&#39;</span>
</span><span class='line'>      <span class="l-Scalar-Plain">unit</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">days</span>
</span><span class='line'>      <span class="l-Scalar-Plain">unit_count</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">21</span>
</span><span class='line'>      <span class="l-Scalar-Plain">exclude</span><span class="p-Indicator">:</span>
</span><span class='line'>
</span><span class='line'>  <span class="l-Scalar-Plain">delete-index_web-app2-metrics</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">action</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">delete_indices</span>
</span><span class='line'>    <span class="l-Scalar-Plain">description</span><span class="p-Indicator">:</span> <span class="p-Indicator">&gt;-</span>
</span><span class='line'>      <span class="no">Delete indices older than 1 month - based on index name, web-app2-metrics-</span>
</span><span class='line'>      <span class="no">prefixed indices. Ignore the error if the filter does not result in an</span>
</span><span class='line'>      <span class="no">actionable list of indices (ignore_empty_list) and exit cleanly.</span>
</span><span class='line'>    <span class="l-Scalar-Plain">options</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">ignore_empty_list</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">True</span>
</span><span class='line'>      <span class="l-Scalar-Plain">disable_action</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">False</span>
</span><span class='line'>    <span class="l-Scalar-Plain">filters</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">filtertype</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">pattern</span>
</span><span class='line'>      <span class="l-Scalar-Plain">kind</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">prefix</span>
</span><span class='line'>      <span class="l-Scalar-Plain">value</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">web-app2-metrics-</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">filtertype</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">age</span>
</span><span class='line'>      <span class="l-Scalar-Plain">source</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">name</span>
</span><span class='line'>      <span class="l-Scalar-Plain">direction</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">older</span>
</span><span class='line'>      <span class="l-Scalar-Plain">timestring</span><span class="p-Indicator">:</span> <span class="s">&#39;%Y.%m.%d&#39;</span>
</span><span class='line'>      <span class="l-Scalar-Plain">unit</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">months</span>
</span><span class='line'>      <span class="l-Scalar-Plain">unit_count</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">1</span>
</span><span class='line'>      <span class="l-Scalar-Plain">exclude</span><span class="p-Indicator">:</span>
</span></code></pre></td></tr></table></div></figure>


<p>First we will execute a Dry Run:</p>

<figure class='code'><figcaption><span>action-replicas.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">$ curator --config /opt/curator/es-dev/config.yml /opt/curator/es-dev/actions/action-delete.yml --dry-run</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">2017-12-04 14:43:19,789 INFO      Preparing Action ID</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">delete-index_web-app1-metrics, &quot;delete_indices&quot;</span>
</span><span class='line'><span class="l-Scalar-Plain">2017-12-04 14:43:19,850 INFO      GET https://es.domain.com:443/ [status:200 request:0.037s]</span>
</span><span class='line'><span class="l-Scalar-Plain">2017-12-04 14:43:19,851 INFO      Trying Action ID</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">delete-index_web-app1-metrics, &quot;delete_indices&quot;</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Delete indices older than 21 days - based on index name, web-app1-metrics- prefixed indices. Ignore the error if the filter does not result in an actionable list of indices (ignore_empty_list) and exit cleanly.</span>
</span><span class='line'><span class="l-Scalar-Plain">2017-12-04 14:43:19,859 INFO      GET https://es.domain.com:443/_all/_settings?expand_wildcards=open%2Cclosed [status:200 request:0.008s]</span>
</span><span class='line'><span class="l-Scalar-Plain">2017-12-04 14:43:19,862 INFO      GET https://es.domain.com:443/ [status:200 request:0.002s]</span>
</span><span class='line'><span class="l-Scalar-Plain">2017-12-04 14:43:19,957 INFO      DRY-RUN MODE.  No changes will be made.</span>
</span><span class='line'><span class="l-Scalar-Plain">2017-12-04 14:43:19,957 INFO      (CLOSED) indices may be shown that may not be acted on by action &quot;delete_indices&quot;.</span>
</span><span class='line'><span class="l-Scalar-Plain">2017-12-04 14:43:19,957 INFO      DRY-RUN</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">delete_indices</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">web-app1-metrics-2017.11.01 with arguments</span><span class="p-Indicator">:</span> <span class="p-Indicator">{}</span>
</span><span class='line'><span class="l-Scalar-Plain">2017-12-04 14:43:19,958 INFO      DRY-RUN</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">delete_indices</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">web-app1-metrics-2017.11.02 with arguments</span><span class="p-Indicator">:</span> <span class="p-Indicator">{}</span>
</span><span class='line'><span class="l-Scalar-Plain">2017-12-04 14:43:19,958 INFO      DRY-RUN</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">delete_indices</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">web-app1-metrics-2017.11.03 with arguments</span><span class="p-Indicator">:</span> <span class="p-Indicator">{}</span>
</span><span class='line'><span class="l-Scalar-Plain">2017-12-04 14:43:19,958 INFO      DRY-RUN</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">delete_indices</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">web-app1-metrics-2017.11.04 with arguments</span><span class="p-Indicator">:</span> <span class="p-Indicator">{}</span>
</span><span class='line'><span class="l-Scalar-Plain">2017-12-04 14:43:19,958 INFO      DRY-RUN</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">delete_indices</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">web-app1-metrics-2017.11.05 with arguments</span><span class="p-Indicator">:</span> <span class="p-Indicator">{}</span>
</span><span class='line'><span class="l-Scalar-Plain">2017-12-04 14:43:19,958 INFO      DRY-RUN</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">delete_indices</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">web-app1-metrics-2017.11.06 with arguments</span><span class="p-Indicator">:</span> <span class="p-Indicator">{}</span>
</span><span class='line'><span class="l-Scalar-Plain">2017-12-04 14:43:19,958 INFO      DRY-RUN</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">delete_indices</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">web-app1-metrics-2017.11.07 with arguments</span><span class="p-Indicator">:</span> <span class="p-Indicator">{}</span>
</span><span class='line'><span class="l-Scalar-Plain">2017-12-04 14:43:19,958 INFO      DRY-RUN</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">delete_indices</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">web-app1-metrics-2017.11.08 with arguments</span><span class="p-Indicator">:</span> <span class="p-Indicator">{}</span>
</span><span class='line'><span class="l-Scalar-Plain">2017-12-04 14:43:19,959 INFO      DRY-RUN</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">delete_indices</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">web-app1-metrics-2017.11.09 with arguments</span><span class="p-Indicator">:</span> <span class="p-Indicator">{}</span>
</span><span class='line'><span class="l-Scalar-Plain">2017-12-04 14:43:19,959 INFO      DRY-RUN</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">delete_indices</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">web-app1-metrics-2017.11.10 with arguments</span><span class="p-Indicator">:</span> <span class="p-Indicator">{}</span>
</span><span class='line'><span class="l-Scalar-Plain">2017-12-04 14:43:19,959 INFO      DRY-RUN</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">delete_indices</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">web-app1-metrics-2017.11.11 with arguments</span><span class="p-Indicator">:</span> <span class="p-Indicator">{}</span>
</span><span class='line'><span class="l-Scalar-Plain">2017-12-04 14:43:19,959 INFO      DRY-RUN</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">delete_indices</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">web-app1-metrics-2017.11.12 with arguments</span><span class="p-Indicator">:</span> <span class="p-Indicator">{}</span>
</span><span class='line'><span class="l-Scalar-Plain">2017-12-04 14:43:19,959 INFO      DRY-RUN</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">delete_indices</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">web-app1-metrics-2017.11.13 with arguments</span><span class="p-Indicator">:</span> <span class="p-Indicator">{}</span>
</span><span class='line'><span class="l-Scalar-Plain">2017-12-04 14:43:19,959 INFO      Action ID</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">delete-index_web-app1-metrics, &quot;delete_indices&quot; completed.</span>
</span><span class='line'><span class="l-Scalar-Plain">2017-12-04 14:43:19,959 INFO      Preparing Action ID</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">delete-index_web-app2-metrics, &quot;delete_indices&quot;</span>
</span><span class='line'><span class="l-Scalar-Plain">2017-12-04 14:43:20,025 INFO      GET https://es.domain.com:443/ [status:200 request:0.050s]</span>
</span><span class='line'><span class="l-Scalar-Plain">2017-12-04 14:43:20,026 INFO      Trying Action ID</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">delete-index_web-app2-metrics, &quot;delete_indices&quot;</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Delete indices older than 1 month - based on index name, web-app2-metrics- prefixed indices. Ignore the error if the filter does not result in an actionable list of indices (ignore_empty_list) and exit cleanly.</span>
</span><span class='line'><span class="l-Scalar-Plain">2017-12-04 14:43:20,034 INFO      GET https://es.domain.com:443/_all/_settings?expand_wildcards=open%2Cclosed [status:200 request:0.008s]</span>
</span><span class='line'><span class="l-Scalar-Plain">2017-12-04 14:43:20,039 INFO      GET https://es.domain.com:443/ [status:200 request:0.003s]</span>
</span><span class='line'><span class="l-Scalar-Plain">2017-12-04 14:43:20,090 INFO      DRY-RUN MODE.  No changes will be made.</span>
</span><span class='line'><span class="l-Scalar-Plain">2017-12-04 14:43:20,090 INFO      (CLOSED) indices may be shown that may not be acted on by action &quot;delete_indices&quot;.</span>
</span><span class='line'><span class="l-Scalar-Plain">2017-12-04 14:43:20,090 INFO      DRY-RUN</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">delete_indices</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">web-app2-metrics-2017.11.01 with arguments</span><span class="p-Indicator">:</span> <span class="p-Indicator">{}</span>
</span><span class='line'><span class="l-Scalar-Plain">2017-12-04 14:43:20,090 INFO      DRY-RUN</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">delete_indices</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">web-app2-metrics-2017.11.02 with arguments</span><span class="p-Indicator">:</span> <span class="p-Indicator">{}</span>
</span><span class='line'><span class="l-Scalar-Plain">2017-12-04 14:43:20,090 INFO      DRY-RUN</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">delete_indices</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">web-app2-metrics-2017.11.03 with arguments</span><span class="p-Indicator">:</span> <span class="p-Indicator">{}</span>
</span><span class='line'><span class="l-Scalar-Plain">2017-12-04 14:43:20,090 INFO      DRY-RUN</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">delete_indices</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">web-app2-metrics-2017.11.04 with arguments</span><span class="p-Indicator">:</span> <span class="p-Indicator">{}</span>
</span><span class='line'><span class="l-Scalar-Plain">2017-12-04 14:43:20,090 INFO      Action ID</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">delete-index_web-app2-metrics, &quot;delete_indices&quot; completed.</span>
</span><span class='line'><span class="l-Scalar-Plain">2017-12-04 14:43:20,090 INFO      Job completed.</span>
</span></code></pre></td></tr></table></div></figure>


<p>Everything seems to be as expected, lets run the Curator without the Dry-Run mode:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curator --config config.yml action-delete.yml
</span><span class='line'>
</span><span class='line'>2017-12-04 14:43:40,042 INFO      Deleting selected indices: <span class="o">[</span>u<span class="s1">&#39;web-app1-metrics-2017.11.06&#39;</span>, u<span class="s1">&#39;web-app1-metrics-2017.11.07&#39;</span>, u<span class="s1">&#39;web-app1-metrics-2017.11.04&#39;</span>, u<span class="s1">&#39;web-app1-metrics-2017.11.05&#39;</span>, u<span class="s1">&#39;web-app1-metrics-2017.11.02&#39;</span>, u<span class="s1">&#39;web-app1-metrics-2017.11.03&#39;</span>, u<span class="s1">&#39;web-app1-metrics-2017.11.01&#39;</span>, u<span class="s1">&#39;web-app1-metrics-2017.11.08&#39;</span>, u<span class="s1">&#39;web-app1-metrics-2017.11.09&#39;</span>, u<span class="s1">&#39;web-app1-metrics-2017.11.11&#39;</span>, u<span class="s1">&#39;web-app1-metrics-2017.11.10&#39;</span>, u<span class="s1">&#39;web-app1-metrics-2017.11.13&#39;</span>, u<span class="s1">&#39;web-app1-metrics-2017.11.12&#39;</span><span class="o">]</span>
</span><span class='line'>2017-12-04 14:43:40,043 INFO      ---deleting index web-app1-metrics-2017.11.06
</span><span class='line'>2017-12-04 14:43:40,043 INFO      ---deleting index web-app1-metrics-2017.11.07
</span><span class='line'>2017-12-04 14:43:40,043 INFO      ---deleting index web-app1-metrics-2017.11.04
</span><span class='line'>2017-12-04 14:43:40,043 INFO      ---deleting index web-app1-metrics-2017.11.05
</span><span class='line'>2017-12-04 14:43:40,043 INFO      ---deleting index web-app1-metrics-2017.11.02
</span><span class='line'>2017-12-04 14:43:40,043 INFO      ---deleting index web-app1-metrics-2017.11.03
</span><span class='line'>2017-12-04 14:43:40,043 INFO      ---deleting index web-app1-metrics-2017.11.01
</span><span class='line'>2017-12-04 14:43:40,044 INFO      ---deleting index web-app1-metrics-2017.11.08
</span><span class='line'>2017-12-04 14:43:40,044 INFO      ---deleting index web-app1-metrics-2017.11.09
</span><span class='line'>2017-12-04 14:43:40,044 INFO      ---deleting index web-app1-metrics-2017.11.11
</span><span class='line'>2017-12-04 14:43:40,044 INFO      ---deleting index web-app1-metrics-2017.11.10
</span><span class='line'>2017-12-04 14:43:40,044 INFO      ---deleting index web-app1-metrics-2017.11.13
</span><span class='line'>2017-12-04 14:43:40,044 INFO      ---deleting index web-app1-metrics-2017.11.12
</span><span class='line'>2017-12-04 14:43:40,287 INFO      DELETE https://es.domain.com:443/web-app1-metrics-2017.11.01,web-app1-metrics-2017.11.02,web-app1-metrics-2017.11.03,web-app1-metrics-2017.11.04,web-app1-metrics-2017.11.05,web-app1-metrics-2017.11.06,web-app1-metrics-2017.11.07,web-app1-metrics-2017.11.08,web-app1-metrics-2017.11.09,web-app1-metrics-2017.11.10,web-app1-metrics-2017.11.11,web-app1-metrics-2017.11.12,web-app1-metrics-2017.11.13?master_timeout<span class="o">=</span>30s <span class="o">[</span>status:200 request:0.243s<span class="o">]</span>
</span><span class='line'>2017-12-04 14:43:40,417 INFO      Action ID: delete-index_web-app1-metrics, <span class="s2">&quot;delete_indices&quot;</span> completed.
</span><span class='line'>2017-12-04 14:43:40,417 INFO      Preparing Action ID: delete-index_web-app2-metrics, <span class="s2">&quot;delete_indices&quot;</span>
</span><span class='line'>2017-12-04 14:43:40,453 INFO      Trying Action ID: delete-index_web-app2-metrics, <span class="s2">&quot;delete_indices&quot;</span>: Delete indices older than <span class="m">1</span> month - based on index name, web-app2-metrics- prefixed indices. Ignore the error <span class="k">if</span> the filter does not result in an actionable list of indices <span class="o">(</span>ignore_empty_list<span class="o">)</span> and <span class="nb">exit </span>cleanly.
</span><span class='line'>2017-12-04 14:43:40,491 INFO      Deleting selected indices: <span class="o">[</span>u<span class="s1">&#39;web-app2-metrics-2017.11.03&#39;</span>, u<span class="s1">&#39;web-app2-metrics-2017.11.01&#39;</span>, u<span class="s1">&#39;web-app2-metrics-2017.11.02&#39;</span>, u<span class="s1">&#39;web-app2-metrics-2017.11.04&#39;</span><span class="o">]</span>
</span><span class='line'>2017-12-04 14:43:40,492 INFO      ---deleting index web-app2-metrics-2017.11.03
</span><span class='line'>2017-12-04 14:43:40,492 INFO      ---deleting index web-app2-metrics-2017.11.01
</span><span class='line'>2017-12-04 14:43:40,492 INFO      ---deleting index web-app2-metrics-2017.11.02
</span><span class='line'>2017-12-04 14:43:40,492 INFO      ---deleting index web-app2-metrics-2017.11.04
</span><span class='line'>2017-12-04 14:43:40,566 INFO      DELETE https://es.domain.com:443/web-app2-metrics-2017.11.01,web-app2-metrics-2017.11.02,web-app2-metrics-2017.11.03,web-app2-metrics-2017.11.04?master_timeout<span class="o">=</span>30s <span class="o">[</span>status:200 request:0.074s<span class="o">]</span>
</span><span class='line'>2017-12-04 14:43:40,595 INFO      GET https://es.domain.com:443/ <span class="o">[</span>status:200 request:0.002s<span class="o">]</span>
</span><span class='line'>2017-12-04 14:43:40,596 INFO      Action ID: delete-index_web-app2-metrics, <span class="s2">&quot;delete_indices&quot;</span> completed.
</span><span class='line'>2017-12-04 14:43:40,596 INFO      Job completed.
</span></code></pre></td></tr></table></div></figure>


<h2>Resources:</h2>

<ul>
<li><a href="https://www.elastic.co/guide/en/elasticsearch/client/curator/current/index.html">Elasticsearch Curator</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Basic Concourse Pipeline With Bash and Golang Jobs]]></title>
    <link href="http://blog.ruanbekker.com/blog/2017/11/24/basic-concourse-pipeline-with-bash-and-golang-jobs/"/>
    <updated>2017-11-24T18:38:15-05:00</updated>
    <id>http://blog.ruanbekker.com/blog/2017/11/24/basic-concourse-pipeline-with-bash-and-golang-jobs</id>
    <content type="html"><![CDATA[<p><img src="https://i.snag.gy/gzkdu9.jpg?nocache=1511644783495" alt="" /></p>

<p>From one of my previous posts, we went through the steps to setup a <a href="http://blog.ruanbekker.com/blog/2017/11/07/setup-a-concourse-ci-server-on-ubuntu-16/">Concourse CI Server on Ubuntu</a> .</p>

<h2>What are we doing today?</h2>

<p>Today we will setup a basic pipeline that executes 2 jobs, one using a alpine container that runs a couple of shell commands, and the other job will be using a Golang container to build and execute a golang app. I will also be experimenting with auto trigger, that will trigger the pipeline to run its jobs every 60 seconds.</p>

<p>Our Pipeline will look like the following:</p>

<p><img src="https://i.snag.gy/D0oO4M.jpg" alt="" /></p>

<h2>Our Pipeline Definition:</h2>

<figure class='code'><figcaption><span>bash-and-golang.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">resources</span><span class="p-Indicator">:</span>
</span><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">container-resource</span>
</span><span class='line'>  <span class="l-Scalar-Plain">type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">time</span>
</span><span class='line'>  <span class="l-Scalar-Plain">source</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">interval</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">60m</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">jobs</span><span class="p-Indicator">:</span>
</span><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">my-alpine-job</span>
</span><span class='line'>  <span class="l-Scalar-Plain">plan</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">get</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">container-resource</span>
</span><span class='line'>    <span class="l-Scalar-Plain">trigger</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">true</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">task</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">vanilla-alpine-tasks</span>
</span><span class='line'>    <span class="l-Scalar-Plain">params</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">OWNER</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">ruan</span>
</span><span class='line'>    <span class="l-Scalar-Plain">config</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">platform</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">linux</span>
</span><span class='line'>      <span class="l-Scalar-Plain">image_resource</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">docker-image</span>
</span><span class='line'>        <span class="l-Scalar-Plain">source</span><span class="p-Indicator">:</span>
</span><span class='line'>          <span class="l-Scalar-Plain">repository</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">alpine</span>
</span><span class='line'>          <span class="l-Scalar-Plain">tag</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">edge</span>
</span><span class='line'>      <span class="l-Scalar-Plain">run</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">path</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/bin/sh</span>
</span><span class='line'>        <span class="l-Scalar-Plain">args</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">-c</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="p-Indicator">|</span>
</span><span class='line'>          <span class="no">apk update &gt; /dev/null</span>
</span><span class='line'>          <span class="no">apk upgrade &gt; /dev/null</span>
</span><span class='line'>          <span class="no">apk add curl &gt; /dev/null</span>
</span><span class='line'>          <span class="no">echo &quot;Public IP is: `curl -s http://ip.ruanbekker.com`&quot;</span>
</span><span class='line'>          <span class="no">echo &quot;Hostname is: $HOSTNAME&quot;</span>
</span><span class='line'>          <span class="no">echo &quot;Owner is: $OWNER&quot;</span>
</span><span class='line'>          <span class="no">echo foo &gt; /tmp/word.txt</span>
</span><span class='line'>          <span class="no">export MAGIC_WORD=`cat /tmp/word.txt`</span>
</span><span class='line'>          <span class="no">echo &quot;Magic word is $MAGIC_WORD&quot;</span>
</span><span class='line'>          <span class="no">cat &gt; app.sh &lt;&lt; EOF</span>
</span><span class='line'>          <span class="no">#!/usr/bin/env sh</span>
</span><span class='line'>          <span class="no">echo &quot;Hello, World!&quot;</span>
</span><span class='line'>          <span class="no">EOF</span>
</span><span class='line'>          <span class="no">chmod +x app.sh</span>
</span><span class='line'>          <span class="no">echo &quot;Shell Script Executing:&quot;</span>
</span><span class='line'>          <span class="no">./app.sh</span>
</span><span class='line'>
</span><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">my-golang-job</span>
</span><span class='line'>  <span class="l-Scalar-Plain">plan</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">get</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">container-resource</span>
</span><span class='line'>    <span class="l-Scalar-Plain">trigger</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">true</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">task</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">golang-tasks</span>
</span><span class='line'>    <span class="l-Scalar-Plain">params</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">OWNER</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">james</span>
</span><span class='line'>    <span class="l-Scalar-Plain">config</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">platform</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">linux</span>
</span><span class='line'>      <span class="l-Scalar-Plain">image_resource</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">docker-image</span>
</span><span class='line'>        <span class="l-Scalar-Plain">source</span><span class="p-Indicator">:</span>
</span><span class='line'>          <span class="l-Scalar-Plain">repository</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">golang</span>
</span><span class='line'>          <span class="l-Scalar-Plain">tag</span><span class="p-Indicator">:</span> <span class="s">&#39;1.6&#39;</span>
</span><span class='line'>      <span class="l-Scalar-Plain">run</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">path</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/bin/sh</span>
</span><span class='line'>        <span class="l-Scalar-Plain">args</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">-c</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="p-Indicator">|</span>
</span><span class='line'>          <span class="no">echo &quot;User: `whoami`&quot;</span>
</span><span class='line'>          <span class="no">echo &quot;Go Version: `go version`&quot;</span>
</span><span class='line'>          <span class="no">echo &quot;Hostname is: $HOSTNAME&quot;</span>
</span><span class='line'>          <span class="no">echo &quot;Owner is: $OWNER&quot;</span>
</span><span class='line'>          <span class="no">echo bar &gt; /tmp/word.txt</span>
</span><span class='line'>          <span class="no">export MAGIC_WORD=`cat /tmp/word.txt`</span>
</span><span class='line'>          <span class="no">echo &quot;Magic word is $MAGIC_WORD&quot;</span>
</span><span class='line'>          <span class="no">cat &gt; app.go &lt;&lt; EOF</span>
</span><span class='line'>          <span class="no">package main</span>
</span><span class='line'>
</span><span class='line'>          <span class="no">import &quot;fmt&quot;</span>
</span><span class='line'>
</span><span class='line'>          <span class="no">func main() {</span>
</span><span class='line'>            <span class="no">fmt.Println(&quot;Hello, World!&quot;)</span>
</span><span class='line'>          <span class="no">}</span>
</span><span class='line'>          <span class="no">EOF</span>
</span><span class='line'>          <span class="no">go build app.go</span>
</span><span class='line'>          <span class="no">echo &quot;Go App Executing:&quot;</span>
</span><span class='line'>          <span class="no">./app</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Login to Concourse:</h2>

<p>Logon to concourse and set your target:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>fly -t ci login --concourse-url<span class="o">=</span>http://10.20.30.40:8080
</span><span class='line'>logging in to team <span class="s1">&#39;main&#39;</span>
</span><span class='line'>
</span><span class='line'>username: admin
</span><span class='line'>password:
</span><span class='line'>
</span><span class='line'>target saved
</span></code></pre></td></tr></table></div></figure>


<p>List your targets:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>fly targets
</span><span class='line'>name      url                       team  expiry
</span><span class='line'>ci        http://10.20.30.40:8080   main  Sat, <span class="m">25</span> Nov <span class="m">2017</span> 23:30:55 UTC
</span></code></pre></td></tr></table></div></figure>


<h2>Apply Configuration</h2>

<p>Apply your Configuration:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>fly -t ci <span class="nb">set</span>-pipeline -p bash-and-golang -c bash-and-golang.yml
</span><span class='line'>
</span><span class='line'>apply configuration? <span class="o">[</span>yN<span class="o">]</span>: y
</span><span class='line'>pipeline created!
</span><span class='line'>you can view your pipeline here: http://10.20.30.40:8080/teams/main/pipelines/bash-and-golang
</span><span class='line'>
</span><span class='line'>the pipeline is currently paused. to unpause, either:
</span><span class='line'>  - run the unpause-pipeline <span class="nb">command</span>
</span><span class='line'>  - click play next to the pipeline in the web ui
</span></code></pre></td></tr></table></div></figure>


<h2>Unpause</h2>

<p>Unpause your Pipeline:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>fly -t ci unpause-pipeline -p bash-and-golang
</span><span class='line'>unpaused <span class="s1">&#39;bash-and-golang&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Trigger</h2>

<p>Trigger your first job, which will be the Alpine job:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>fly -t ci trigger-job --job bash-and-golang/my-alpine-job
</span><span class='line'>started bash-and-golang/my-alpine-job <span class="c">#2</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="https://i.snag.gy/x7ksQO.jpg?nocache=1511567544851" alt="" /></p>

<p>Trigger your second job, which will be the Golang job:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>fly -t ci trigger-job --job bash-and-golang/my-golang-job
</span><span class='line'>started bash-and-golang/my-golang-job <span class="c">#2</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="https://i.snag.gy/07nDiZ.jpg" alt="" /></p>

<p>Remember, we can also monitor the output from the shell:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>fly -t ci trigger-job --job bash-and-golang/my-golang-job --watch
</span><span class='line'>started bash-and-golang/my-golang-job <span class="c">#3</span>
</span><span class='line'>
</span><span class='line'>initializing
</span><span class='line'>running /bin/sh -c <span class="nb">echo</span> <span class="s2">&quot;User: `whoami`&quot;</span>
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;Go Version: `go version`&quot;</span>
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;Hostname is: $HOSTNAME&quot;</span>
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;Owner is: $OWNER&quot;</span>
</span><span class='line'><span class="nb">echo </span>bar &gt; /tmp/word.txt
</span><span class='line'><span class="nb">export </span><span class="nv">MAGIC_WORD</span><span class="o">=</span><span class="sb">`</span>cat /tmp/word.txt<span class="sb">`</span>
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;Magic word is $MAGIC_WORD&quot;</span>
</span><span class='line'>cat &gt; app.go <span class="s">&lt;&lt; EOF</span>
</span><span class='line'><span class="s">package main</span>
</span><span class='line'>
</span><span class='line'><span class="s">import &quot;fmt&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="s">func main() {</span>
</span><span class='line'><span class="s">  fmt.Println(&quot;Hello, World!&quot;)</span>
</span><span class='line'><span class="s">}</span>
</span><span class='line'><span class="s">EOF</span>
</span><span class='line'>go build app.go
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;Go App Executing:&quot;</span>
</span><span class='line'>./app
</span><span class='line'>
</span><span class='line'>User: root
</span><span class='line'>Go Version: go version go1.6.4 linux/amd64
</span><span class='line'>Hostname is:
</span><span class='line'>Owner is: james
</span><span class='line'>Magic word is bar
</span><span class='line'>Go App Executing:
</span><span class='line'>Hello, World!
</span><span class='line'>succeeded
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use Docker Secrets With MySQL on Docker Swarm]]></title>
    <link href="http://blog.ruanbekker.com/blog/2017/11/23/use-docker-secrets-with-mysql-on-docker-swarm/"/>
    <updated>2017-11-23T16:55:15-05:00</updated>
    <id>http://blog.ruanbekker.com/blog/2017/11/23/use-docker-secrets-with-mysql-on-docker-swarm</id>
    <content type="html"><![CDATA[<p><img src="http://obj-cache.cloud.ruanbekker.com/docker-logo.png" alt="" /></p>

<p>Today we will use Docker Secrets, more specifically store our MySQL Passwords in Secrets, which will be passed to our containers, so that we don&rsquo;t use clear text passwords in our Compose files.</p>

<h2>What is Docker Secrets:</h2>

<p>In Docker, Docker Secrets are encrypted during transit and at rest in a Docker Swarm Cluster. The great thing about Docker Secrets is that you can manage these secrets from a central place, and the fact that it encrypts the data and transfers the data securely to the containers that needs the secrets. So you authorize which containers needs access to these secrets.</p>

<p>So instead of setting the MySQL Root Passwords in clear text, you will create the secrets, then in your docker-compose file, you will reference the secret name.</p>

<h2>Deploy MySQL with Docker Secrets</h2>

<p>We will deploy a Stack that contains MySQL and Adminer (WebUI for MySQL).</p>

<p>We will make the MySQL Service Persistent by setting a constraint to only run on the Manager node, as we will create the volume path on the host, and then map the host to the container so that the container can have persistent data. We will also create secrets for our MySQL Service so that we dont expose any plaintext passwords in our compose file.</p>

<p>Our Docker Compose file:</p>

<figure class='code'><figcaption><span>docker-compose.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">version</span><span class="p-Indicator">:</span> <span class="s">&#39;3.3&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">services</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">db</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">image</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">mysql</span>
</span><span class='line'>    <span class="l-Scalar-Plain">secrets</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">db_root_password</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">db_dba_password</span>
</span><span class='line'>    <span class="l-Scalar-Plain">deploy</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">replicas</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">1</span>
</span><span class='line'>      <span class="l-Scalar-Plain">placement</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">constraints</span><span class="p-Indicator">:</span> <span class="p-Indicator">[</span><span class="nv">node.role == manager</span><span class="p-Indicator">]</span>
</span><span class='line'>      <span class="l-Scalar-Plain">resources</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">reservations</span><span class="p-Indicator">:</span>
</span><span class='line'>          <span class="l-Scalar-Plain">memory</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">128M</span>
</span><span class='line'>        <span class="l-Scalar-Plain">limits</span><span class="p-Indicator">:</span>
</span><span class='line'>          <span class="l-Scalar-Plain">memory</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">256M</span>
</span><span class='line'>    <span class="l-Scalar-Plain">ports</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">3306:3306</span>
</span><span class='line'>    <span class="l-Scalar-Plain">environment</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">MYSQL_USER</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">dba</span>
</span><span class='line'>      <span class="l-Scalar-Plain">MYSQL_DATABASE</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">mydb</span>
</span><span class='line'>      <span class="l-Scalar-Plain">MYSQL_ROOT_PASSWORD_FILE</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/run/secrets/db_root_password</span>
</span><span class='line'>      <span class="l-Scalar-Plain">MYSQL_PASSWORD_FILE</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/run/secrets/db_dba_password</span>
</span><span class='line'>    <span class="l-Scalar-Plain">networks</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">appnet</span>
</span><span class='line'>    <span class="l-Scalar-Plain">volumes</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">/var/run/docker.sock:/var/run/docker.sock</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">bind</span>
</span><span class='line'>        <span class="l-Scalar-Plain">source</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/opt/docker/volumes/mysql</span>
</span><span class='line'>        <span class="l-Scalar-Plain">target</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/var/lib/mysql</span>
</span><span class='line'>
</span><span class='line'>  <span class="l-Scalar-Plain">adminer</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">image</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">adminer</span>
</span><span class='line'>    <span class="l-Scalar-Plain">ports</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">8080:8080</span>
</span><span class='line'>    <span class="l-Scalar-Plain">networks</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">appnet</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">secrets</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">db_root_password</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">external</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">true</span>
</span><span class='line'>  <span class="l-Scalar-Plain">db_dba_password</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">external</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">true</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">networks</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">appnet</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">external</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">true</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Dependencies:</h2>

<p>As we specified our secrets and networks as external resources, it needs to exist before we deploy our stack. We also need to create the directory for our mysql data, as the data will be mapped from our host to our container.</p>

<p>Create the Overlay Network:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker network create --driver overlay appnet
</span></code></pre></td></tr></table></div></figure>


<p>Create the Secrets:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>openssl rand -base64 <span class="m">12</span> <span class="p">|</span> docker secret create db_root_password -
</span><span class='line'><span class="nv">$ </span>openssl rand -base64 <span class="m">12</span> <span class="p">|</span> docker secret create db_dba_password -
</span></code></pre></td></tr></table></div></figure>


<p>List the Secrets:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker secret ls
</span><span class='line'>ID                          NAME                CREATED             UPDATED
</span><span class='line'>jzhrwyxkiqt8v81ow0xjktqnw   db_root_password    <span class="m">12</span> seconds ago      <span class="m">12</span> seconds ago
</span><span class='line'>plr6rbrqkqy7oplrd21pja3ol   db_dba_password     <span class="m">4</span> seconds ago       <span class="m">4</span> seconds ago
</span></code></pre></td></tr></table></div></figure>


<p>Inspect the secret, so that we can see that theres not value exposed:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker secret inspect db_root_password
</span><span class='line'><span class="o">[</span>
</span><span class='line'>    <span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;ID&quot;</span>: <span class="s2">&quot;jzhrwyxkiqt8v81ow0xjktqnw&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;Version&quot;</span>: <span class="o">{</span>
</span><span class='line'>            <span class="s2">&quot;Index&quot;</span>: 982811
</span><span class='line'>        <span class="o">}</span>,
</span><span class='line'>        <span class="s2">&quot;CreatedAt&quot;</span>: <span class="s2">&quot;2017-11-23T14:33:17.005968748Z&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;UpdatedAt&quot;</span>: <span class="s2">&quot;2017-11-23T14:33:17.005968748Z&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;Spec&quot;</span>: <span class="o">{</span>
</span><span class='line'>            <span class="s2">&quot;Name&quot;</span>: <span class="s2">&quot;db_root_password&quot;</span>,
</span><span class='line'>            <span class="s2">&quot;Labels&quot;</span>: <span class="o">{}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Create the Directory for MySQL:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mkdir -p /opt/docker/volumes/mysql
</span></code></pre></td></tr></table></div></figure>


<h2>Deployment Time!</h2>

<p>Deploy the stack:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker stack deploy -c docker-compose.yml apps
</span><span class='line'>Creating service apps_adminer
</span><span class='line'>Creating service apps_db
</span></code></pre></td></tr></table></div></figure>


<p>As you can see the data of our MySQL container resides on our host, which makes the data persistent for the container:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ls /opt/docker/volumes/mysql/
</span><span class='line'>auto.cnf  ca-key.pem  ca.pem  client-cert.pem  client-key.pem  ib_buffer_pool  ibdata1  ib_logfile0  ib_logfile1  ibtmp1  mydb  mysql  performance_schema  private_key.pem  public_key.pem  server-cert.pem  server-key.pem  sys
</span></code></pre></td></tr></table></div></figure>


<h2>Connect to MySQL</h2>

<p>The value of our secrets will reside under <code>/run/secrets/</code> in our container, as we have mapped it to our mysql container, lets have a look at them:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker <span class="nb">exec</span> -it <span class="k">$(</span>docker ps -f <span class="nv">name</span><span class="o">=</span>apps_db -q<span class="k">)</span> ls /run/secrets/
</span><span class='line'>db_dba_password  db_root_password
</span></code></pre></td></tr></table></div></figure>


<p>View the actual value of the <code>db_root_password</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker <span class="nb">exec</span> -it <span class="k">$(</span>docker ps -f <span class="nv">name</span><span class="o">=</span>apps_db -q<span class="k">)</span> cat /run/secrets/db_root_password
</span><span class='line'>mRpcY1eY2+wimf10
</span></code></pre></td></tr></table></div></figure>


<p>Connecting to MySQL:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker <span class="nb">exec</span> -it <span class="k">$(</span>docker ps -f <span class="nv">name</span><span class="o">=</span>apps_db -q<span class="k">)</span> mysql -u root -p
</span><span class='line'>Enter password:
</span><span class='line'>Welcome to the MySQL monitor.  Commands end with <span class="p">;</span> or <span class="se">\g</span>.
</span><span class='line'>Your MySQL connection id is 8
</span><span class='line'>Server version: 5.7.20 MySQL Community Server <span class="o">(</span>GPL<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>Copyright <span class="o">(</span>c<span class="o">)</span> 2000, 2017, Oracle and/or its affiliates. All rights reserved.
</span><span class='line'>
</span><span class='line'>Oracle is a registered trademark of Oracle Corporation and/or its
</span><span class='line'>affiliates. Other names may be trademarks of their respective
</span><span class='line'>owners.
</span><span class='line'>
</span><span class='line'>Type <span class="s1">&#39;help;&#39;</span> or <span class="s1">&#39;\h&#39;</span> <span class="k">for</span> help. Type <span class="s1">&#39;\c&#39;</span> to clear the current input statement.
</span><span class='line'>
</span><span class='line'>mysql&gt; show databases<span class="p">;</span>
</span><span class='line'>+--------------------+
</span><span class='line'><span class="p">|</span> Database           <span class="p">|</span>
</span><span class='line'>+--------------------+
</span><span class='line'><span class="p">|</span> information_schema <span class="p">|</span>
</span><span class='line'><span class="p">|</span> mydb               <span class="p">|</span>
</span><span class='line'><span class="p">|</span> mysql              <span class="p">|</span>
</span><span class='line'><span class="p">|</span> performance_schema <span class="p">|</span>
</span><span class='line'><span class="p">|</span> sys                <span class="p">|</span>
</span><span class='line'>+--------------------+
</span><span class='line'><span class="m">5</span> rows in <span class="nb">set</span> <span class="o">(</span>0.00 sec<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>As we have deployed adminer, you can access the Adminer WebUI on the Host&rsquo;s IP and the Defined Port.</p>

<h2>Testing Data Persistance:</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker <span class="nb">exec</span> -it <span class="k">$(</span>docker ps -f <span class="nv">name</span><span class="o">=</span>apps_db -q<span class="k">)</span> mysql -u root -p
</span><span class='line'>Enter password:
</span><span class='line'>Welcome to the MySQL monitor.  Commands end with <span class="p">;</span> or <span class="se">\g</span>.
</span><span class='line'>
</span><span class='line'>mysql&gt; create database ruan<span class="p">;</span>
</span><span class='line'>Query OK, <span class="m">1</span> row affected <span class="o">(</span>0.00 sec<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>mysql&gt; show databases<span class="p">;</span>
</span><span class='line'>+--------------------+
</span><span class='line'><span class="p">|</span> Database           <span class="p">|</span>
</span><span class='line'>+--------------------+
</span><span class='line'><span class="p">|</span> information_schema <span class="p">|</span>
</span><span class='line'><span class="p">|</span> mydb               <span class="p">|</span>
</span><span class='line'><span class="p">|</span> mysql              <span class="p">|</span>
</span><span class='line'><span class="p">|</span> performance_schema <span class="p">|</span>
</span><span class='line'><span class="p">|</span> ruan               <span class="p">|</span>
</span><span class='line'><span class="p">|</span> sys                <span class="p">|</span>
</span><span class='line'>+--------------------+
</span><span class='line'><span class="m">6</span> rows in <span class="nb">set</span> <span class="o">(</span>0.00 sec<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>mysql&gt; <span class="nb">exit</span><span class="p">;</span>
</span><span class='line'>Bye
</span></code></pre></td></tr></table></div></figure>


<p>Verify the hostname of our container, before we kill the container:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker <span class="nb">exec</span> -it <span class="k">$(</span>docker ps -f <span class="nv">name</span><span class="o">=</span>apps_db -q<span class="k">)</span> hostname
</span><span class='line'>bdedb54bbc2b
</span></code></pre></td></tr></table></div></figure>


<p>Kill the container:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker <span class="nb">kill</span> <span class="k">$(</span>docker ps -f <span class="nv">name</span><span class="o">=</span>apps_db -q<span class="k">)</span>
</span><span class='line'>bdedb54bbc2b
</span></code></pre></td></tr></table></div></figure>


<p>Verify the status of the MySQL Service, as we can see the service count is 0, so the container was succesfully killed.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker service ls -f <span class="nv">name</span><span class="o">=</span>apps_db
</span><span class='line'>ID                  NAME                MODE                REPLICAS            IMAGE               PORTS
</span><span class='line'>nzf96q05fktm        apps_db             replicated          0/1                 mysql:latest        *:3306-&gt;3306/tcp
</span></code></pre></td></tr></table></div></figure>


<p>After waiting for a couple of seconds, we can see the service is in service again, then check the hostname so that we can confirm that its a new container:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker service ls -f <span class="nv">name</span><span class="o">=</span>apps_db
</span><span class='line'>ID                  NAME                MODE                REPLICAS            IMAGE               PORTS
</span><span class='line'>nzf96q05fktm        apps_db             replicated          1/1                 mysql:latest        *:3306-&gt;3306/tcp
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>docker <span class="nb">exec</span> -it <span class="k">$(</span>docker ps -f <span class="nv">name</span><span class="o">=</span>apps_db -q<span class="k">)</span> hostname
</span><span class='line'>95c15c89f891
</span></code></pre></td></tr></table></div></figure>


<p>Logong to MySQL again and verify if our perviously created database is still there:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker <span class="nb">exec</span> -it <span class="k">$(</span>docker ps -f <span class="nv">name</span><span class="o">=</span>apps_db -q<span class="k">)</span> mysql -u root -p
</span><span class='line'>Enter password:
</span><span class='line'>Welcome to the MySQL monitor.  Commands end with <span class="p">;</span> or <span class="se">\g</span>.
</span><span class='line'>
</span><span class='line'>mysql&gt; show databases<span class="p">;</span>
</span><span class='line'>+--------------------+
</span><span class='line'><span class="p">|</span> Database           <span class="p">|</span>
</span><span class='line'>+--------------------+
</span><span class='line'><span class="p">|</span> information_schema <span class="p">|</span>
</span><span class='line'><span class="p">|</span> mydb               <span class="p">|</span>
</span><span class='line'><span class="p">|</span> mysql              <span class="p">|</span>
</span><span class='line'><span class="p">|</span> performance_schema <span class="p">|</span>
</span><span class='line'><span class="p">|</span> ruan               <span class="p">|</span>
</span><span class='line'><span class="p">|</span> sys                <span class="p">|</span>
</span><span class='line'>+--------------------+
</span><span class='line'><span class="m">6</span> rows in <span class="nb">set</span> <span class="o">(</span>0.01 sec<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>By design docker is stateless, but as we mapped the host&rsquo;s path to the container our data is persistent. As we have set a constraint so that the container must only spin up on this node, the container will always have access to the data path.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup a 3 Node Galera MariaDB Cluster on Ubuntu 16]]></title>
    <link href="http://blog.ruanbekker.com/blog/2017/11/22/setup-a-3-node-galera-mariadb-cluster-on-ubuntu-16/"/>
    <updated>2017-11-22T18:17:14-05:00</updated>
    <id>http://blog.ruanbekker.com/blog/2017/11/22/setup-a-3-node-galera-mariadb-cluster-on-ubuntu-16</id>
    <content type="html"><![CDATA[<p><img src="https://i.snag.gy/lpT6Du.jpg" alt="" /></p>

<p>Today we will setup a 3-Node Galera MariaDB Cluster which is a Multi Master MySQL/MariaDB Cluster on Ubuntu 16.04</p>

<h2>Our Server Details:</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>172.31.11.174     mysql-1
</span><span class='line'>172.31.13.206     mysql-2
</span><span class='line'>172.31.6.93       mysql-3
</span></code></pre></td></tr></table></div></figure>


<h2>Update Repo Index and Upgrade:</h2>

<p>Update the repository indexes and install the needed packages:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo apt update <span class="o">&amp;&amp;</span> sudo apt upgrade -y
</span></code></pre></td></tr></table></div></figure>


<p>Install the needed repository and packages:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>apt install software-properties-common -y
</span><span class='line'><span class="nv">$ </span>apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 0xF1656F24C74CD1D8
</span><span class='line'><span class="nv">$ </span>add-apt-repository <span class="s1">&#39;deb [arch=amd64,i386,ppc64el] http://mirror.lstn.net/mariadb/repo/10.1/ubuntu xenial main&#39;</span>
</span><span class='line'><span class="nv">$ </span>apt update
</span><span class='line'><span class="nv">$ </span>apt install mariadb-server rsync -y
</span></code></pre></td></tr></table></div></figure>


<h2>Configuration:</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>cat &gt; /etc/mysql/conf.d/galera.cnf <span class="s">&lt;&lt; EOF</span>
</span><span class='line'><span class="s">[mysqld]</span>
</span><span class='line'><span class="s">binlog_format=ROW</span>
</span><span class='line'><span class="s">default-storage-engine=innodb</span>
</span><span class='line'><span class="s">innodb_autoinc_lock_mode=2</span>
</span><span class='line'><span class="s">bind-address=0.0.0.0</span>
</span><span class='line'>
</span><span class='line'><span class="s"># Galera Provider Configuration</span>
</span><span class='line'><span class="s">wsrep_on=ON</span>
</span><span class='line'><span class="s">wsrep_provider=/usr/lib/galera/libgalera_smm.so</span>
</span><span class='line'>
</span><span class='line'><span class="s"># Galera Cluster Configuration</span>
</span><span class='line'><span class="s">wsrep_cluster_name=&quot;my-galera-cluster&quot;</span>
</span><span class='line'><span class="s">wsrep_cluster_address=&quot;gcomm://172.31.11.174,172.31.13.206,172.31.6.93&quot;</span>
</span><span class='line'><span class="s"># Galera Synchronization Configuration</span>
</span><span class='line'><span class="s">wsrep_sst_method=rsync</span>
</span><span class='line'>
</span><span class='line'><span class="s"># Galera Node Configuration</span>
</span><span class='line'><span class="s">wsrep_node_address=&quot;172.31.11.174&quot;</span>
</span><span class='line'><span class="s">wsrep_node_name=&quot;mysql-1&quot;</span>
</span><span class='line'><span class="s">EOF</span>
</span></code></pre></td></tr></table></div></figure>


<p>Comment out bind-address, so that MariaDB process is reachable from other nodes, by default it wont be in the config, but just to make sure, if it is uncommented, comment the config:</p>

<figure class='code'><figcaption><span>/etc/mysql/my.cnf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># bind-address = 127.0.0.1</span>
</span></code></pre></td></tr></table></div></figure>


<p>Stop the MariaDB Process:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>systemctl stop mariadb
</span></code></pre></td></tr></table></div></figure>


<p>Note: Repeat the above steps on all 3 nodes.</p>

<h2>Initialize the Cluster:</h2>

<p>On the First Node, Initialize the Galera Cluster:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>/usr/bin/galera_new_cluster
</span><span class='line'><span class="nv">$ </span>systemctl <span class="nb">enable </span>mariadb
</span></code></pre></td></tr></table></div></figure>


<p>Check how many nodes are active in the Cluster:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="err">$</span> <span class="n">mysql</span> <span class="o">-</span><span class="n">u</span> <span class="n">root</span> <span class="o">-</span><span class="n">p</span> <span class="o">-</span><span class="n">e</span> <span class="s2">&quot;SHOW STATUS LIKE &#39;wsrep_cluster_size&#39;;&quot;</span>
</span><span class='line'><span class="n">Enter</span> <span class="n">password</span><span class="p">:</span>
</span><span class='line'><span class="o">+--------------------+-------+</span>
</span><span class='line'><span class="o">|</span> <span class="n">Variable_name</span>      <span class="o">|</span> <span class="n">Value</span> <span class="o">|</span>
</span><span class='line'><span class="o">+--------------------+-------+</span>
</span><span class='line'><span class="o">|</span> <span class="n">wsrep_cluster_size</span> <span class="o">|</span> <span class="mi">1</span>     <span class="o">|</span>
</span><span class='line'><span class="o">+--------------------+-------+</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Node-2: Start and Enable MariaDB</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>systemctl start mariadb
</span><span class='line'><span class="nv">$ </span>systemctl <span class="nb">enable </span>mariadb
</span></code></pre></td></tr></table></div></figure>


<p>Verify that the Node has checked in with the Cluster:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="err">$</span> <span class="n">mysql</span> <span class="o">-</span><span class="n">u</span> <span class="n">root</span> <span class="o">-</span><span class="n">p</span> <span class="o">-</span><span class="n">e</span> <span class="s2">&quot;SHOW STATUS LIKE &#39;wsrep_cluster_size&#39;;&quot;</span>
</span><span class='line'><span class="n">Enter</span> <span class="n">password</span><span class="p">:</span>
</span><span class='line'><span class="o">+--------------------+-------+</span>
</span><span class='line'><span class="o">|</span> <span class="n">Variable_name</span>      <span class="o">|</span> <span class="n">Value</span> <span class="o">|</span>
</span><span class='line'><span class="o">+--------------------+-------+</span>
</span><span class='line'><span class="o">|</span> <span class="n">wsrep_cluster_size</span> <span class="o">|</span> <span class="mi">2</span>     <span class="o">|</span>
</span><span class='line'><span class="o">+--------------------+-------+</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Node-3: Start and Enable MariaDB</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>systemctl start mariadb
</span><span class='line'><span class="nv">$ </span>systemctl <span class="nb">enable </span>mariadb
</span></code></pre></td></tr></table></div></figure>


<p>Verify that the Node has checked in with the Cluster:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="err">$</span> <span class="n">mysql</span> <span class="o">-</span><span class="n">u</span> <span class="n">root</span> <span class="o">-</span><span class="n">p</span> <span class="o">-</span><span class="n">e</span> <span class="s2">&quot;SHOW STATUS LIKE &#39;wsrep_cluster_size&#39;;&quot;</span>
</span><span class='line'><span class="n">Enter</span> <span class="n">password</span><span class="p">:</span>
</span><span class='line'><span class="o">+--------------------+-------+</span>
</span><span class='line'><span class="o">|</span> <span class="n">Variable_name</span>      <span class="o">|</span> <span class="n">Value</span> <span class="o">|</span>
</span><span class='line'><span class="o">+--------------------+-------+</span>
</span><span class='line'><span class="o">|</span> <span class="n">wsrep_cluster_size</span> <span class="o">|</span> <span class="mi">3</span>     <span class="o">|</span>
</span><span class='line'><span class="o">+--------------------+-------+</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Create a Database, Table and Record:</h2>

<p>Write some data to the table, then reboot the node, in this example on node-1, then logon to node-2 check the number of nodes that&rsquo;s active in the cluster, which should be 2, then at the same time, look if the data is replicated:</p>

<h2>Node-1: Writing the Data to Our Galera Cluster</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="n">MariaDB</span> <span class="p">[(</span><span class="n">none</span><span class="p">)]</span><span class="o">&gt;</span> <span class="k">create</span> <span class="k">database</span> <span class="n">test</span><span class="p">;</span>
</span><span class='line'><span class="n">MariaDB</span> <span class="p">[(</span><span class="n">none</span><span class="p">)]</span><span class="o">&gt;</span> <span class="k">use</span> <span class="n">test</span><span class="p">;</span>
</span><span class='line'><span class="n">MariaDB</span> <span class="p">[</span><span class="n">test</span><span class="p">]</span><span class="o">&gt;</span>   <span class="k">create</span> <span class="k">database</span> <span class="n">test</span><span class="p">;</span>
</span><span class='line'><span class="n">MariaDB</span> <span class="p">[</span><span class="n">test</span><span class="p">]</span><span class="o">&gt;</span>   <span class="k">create</span> <span class="k">table</span> <span class="nf">foo</span> <span class="p">(</span><span class="n">name</span> <span class="kt">VARCHAR</span><span class="p">(</span><span class="mi">20</span><span class="p">));</span>
</span><span class='line'><span class="n">MariaDB</span> <span class="p">[</span><span class="n">test</span><span class="p">]</span><span class="o">&gt;</span>   <span class="k">insert</span> <span class="k">into</span> <span class="n">foo</span> <span class="k">values</span><span class="p">(</span><span class="s1">&#39;ruan&#39;</span><span class="p">);</span>
</span><span class='line'><span class="n">MariaDB</span> <span class="p">[</span><span class="n">test</span><span class="p">]</span><span class="o">&gt;</span>   <span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">foo</span><span class="p">;</span>
</span><span class='line'><span class="o">+------+</span>
</span><span class='line'><span class="o">|</span> <span class="n">name</span> <span class="o">|</span>
</span><span class='line'><span class="o">+------+</span>
</span><span class='line'><span class="o">|</span> <span class="n">ruan</span> <span class="o">|</span>
</span><span class='line'><span class="o">+------+</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now that our data is in our database, reboot the node, logon to node-2 and check if the data is replicated:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="err">$</span> <span class="n">mysql</span> <span class="o">-</span><span class="n">u</span> <span class="n">root</span> <span class="o">-</span><span class="n">p</span>
</span><span class='line'><span class="n">MariaDB</span> <span class="p">[(</span><span class="n">none</span><span class="p">)]</span><span class="o">&gt;</span> <span class="k">use</span> <span class="n">test</span><span class="p">;</span>
</span><span class='line'><span class="n">MariaDB</span> <span class="p">[</span><span class="n">test</span><span class="p">]</span><span class="o">&gt;</span>   <span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">foo</span><span class="p">;</span>
</span><span class='line'><span class="o">+------+</span>
</span><span class='line'><span class="o">|</span> <span class="n">name</span> <span class="o">|</span>
</span><span class='line'><span class="o">+------+</span>
</span><span class='line'><span class="o">|</span> <span class="n">ruan</span> <span class="o">|</span>
</span><span class='line'><span class="o">+------+</span>
</span></code></pre></td></tr></table></div></figure>


<p>While the one node is rebooting, check how many nodes are checked into our cluster:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="err">$</span> <span class="n">mysql</span> <span class="o">-</span><span class="n">u</span> <span class="n">root</span> <span class="o">-</span><span class="n">p</span> <span class="o">-</span><span class="n">e</span> <span class="s2">&quot;SHOW STATUS LIKE &#39;wsrep_cluster_size&#39;;&quot;</span>
</span><span class='line'><span class="n">Enter</span> <span class="n">password</span><span class="p">:</span>
</span><span class='line'><span class="o">+--------------------+-------+</span>
</span><span class='line'><span class="o">|</span> <span class="n">Variable_name</span>      <span class="o">|</span> <span class="n">Value</span> <span class="o">|</span>
</span><span class='line'><span class="o">+--------------------+-------+</span>
</span><span class='line'><span class="o">|</span> <span class="n">wsrep_cluster_size</span> <span class="o">|</span> <span class="mi">2</span>     <span class="o">|</span>
</span><span class='line'><span class="o">+--------------------+-------+</span>
</span></code></pre></td></tr></table></div></figure>


<p>Our data is replicated, and after waiting for a couple of seconds, we retry our command to see if the rebooted node checked into the cluster:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="err">$</span> <span class="n">mysql</span> <span class="o">-</span><span class="n">u</span> <span class="n">root</span> <span class="o">-</span><span class="n">p</span> <span class="o">-</span><span class="n">e</span> <span class="s2">&quot;SHOW STATUS LIKE &#39;wsrep_cluster_size&#39;;&quot;</span>
</span><span class='line'><span class="n">Enter</span> <span class="n">password</span><span class="p">:</span>
</span><span class='line'><span class="o">+--------------------+-------+</span>
</span><span class='line'><span class="o">|</span> <span class="n">Variable_name</span>      <span class="o">|</span> <span class="n">Value</span> <span class="o">|</span>
</span><span class='line'><span class="o">+--------------------+-------+</span>
</span><span class='line'><span class="o">|</span> <span class="n">wsrep_cluster_size</span> <span class="o">|</span> <span class="mi">3</span>     <span class="o">|</span>
</span><span class='line'><span class="o">+--------------------+-------+</span>
</span></code></pre></td></tr></table></div></figure>


<p>We can confirm that the node that was rebooted, has checked in with the cluster again.</p>

<h2>Firewall Rules opened while testing:</h2>

<p>TCP: <code>3306, 4567, 4568, 4444</code>
UDP: <code>4567</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Delete Old Items With Amazons DynamoDB TTL Feature]]></title>
    <link href="http://blog.ruanbekker.com/blog/2017/11/22/delete-old-items-with-amazons-dynamodb-ttl-feature/"/>
    <updated>2017-11-22T17:47:31-05:00</updated>
    <id>http://blog.ruanbekker.com/blog/2017/11/22/delete-old-items-with-amazons-dynamodb-ttl-feature</id>
    <content type="html"><![CDATA[<p><img src="http://obj-cache.cloud.ruanbekker.com/dynamodb.png" alt="" /></p>

<p>As you may know a DynamoDB Table&rsquo;s Partition Splits on 2 factors, Read/Write Capacity Units and when Storage goes over 10GB.</p>

<h2>Automatically Deleting Old Data in DynamoDB:</h2>

<p>With the TTL Feature in DynamoDB, we can enable TTL on a Attribute on our Table, the attributes value needs to have an epoc time value, more specifically, when the current time is the same as the value of on of the items attribute value, that item will be expired, which will be deleted.</p>

<h2>What we will be doing:</h2>

<ul>
<li>Use Boto3 in Python</li>
<li>Create DynamoDB Table: &lsquo;session-table&rsquo;</li>
<li>Set TTL Attribute on &lsquo;ExpirationTime&rsquo;, so whenever the epoch time is equals to the AttributeValue it will delete the item</li>
<li>Do one PUT Item with 48 Hours expiry Date from the Write</li>
<li>Do 240 PUT Items with 24 Hours expiry Date from the Write</li>
<li>Verify after 24 hours if only one item is in our table.</li>
</ul>


<h2>Pre-Requisites:</h2>

<p>Install the AWS CLI, Boto3 and configure your credentials, so that boto3 can read from your credential provider:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>pip install awscli
</span><span class='line'><span class="nv">$ </span>pip install boto3
</span><span class='line'><span class="nv">$ </span>aws configure
</span><span class='line'>AWS Access Key ID <span class="o">[</span>****************XYZ<span class="o">]</span>:
</span><span class='line'>AWS Secret Access Key <span class="o">[</span>****************xyz<span class="o">]</span>:
</span><span class='line'>Default region name <span class="o">[</span>eu-west-1<span class="o">]</span>:
</span><span class='line'>Default output format <span class="o">[</span>json<span class="o">]</span>:
</span></code></pre></td></tr></table></div></figure>


<h2>Create the Table:</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="err">$</span> <span class="n">python</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">boto3</span>
</span><span class='line'><span class="n">session</span> <span class="o">=</span> <span class="n">boto3</span><span class="o">.</span><span class="n">Session</span><span class="p">(</span><span class="n">region_name</span><span class="o">=</span><span class="s">&#39;eu-west-1&#39;</span><span class="p">,</span> <span class="n">profile_name</span><span class="o">=</span><span class="s">&#39;default&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">dynamodb</span> <span class="o">=</span> <span class="n">session</span><span class="o">.</span><span class="n">resource</span><span class="p">(</span><span class="s">&#39;dynamodb&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">table</span> <span class="o">=</span> <span class="n">dynamodb</span><span class="o">.</span><span class="n">create_table</span><span class="p">(</span>
</span><span class='line'>    <span class="n">TableName</span><span class="o">=</span><span class="s">&#39;session-table&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">KeySchema</span><span class="o">=</span><span class="p">[</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="s">&#39;AttributeName&#39;</span><span class="p">:</span> <span class="s">&#39;sessionid&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&#39;KeyType&#39;</span><span class="p">:</span> <span class="s">&#39;HASH&#39;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">],</span>
</span><span class='line'>    <span class="n">AttributeDefinitions</span><span class="o">=</span><span class="p">[</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="s">&#39;AttributeName&#39;</span><span class="p">:</span> <span class="s">&#39;sessionid&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&#39;AttributeType&#39;</span><span class="p">:</span> <span class="s">&#39;S&#39;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">],</span>
</span><span class='line'>    <span class="n">ProvisionedThroughput</span><span class="o">=</span><span class="p">{</span>
</span><span class='line'>        <span class="s">&#39;ReadCapacityUnits&#39;</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&#39;WriteCapacityUnits&#39;</span><span class="p">:</span> <span class="mi">2</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>From the Console, enable TTL and set the TTL Attribute on <code>ExpirationTime</code></p>

<h2>Write Data to DynamoDB</h2>

<p>We have 2 functions that will write the current epoch time to the <code>CreationTime</code> attribute and <code>ExpirationTime</code> will have the current time plus the 24 hours in seconds, which will be used for the 240 items that will be written using the for loop and the other function with the 48 hours of seconds, which will be a single write item.</p>

<p>Then we will just write random data to the session data attribute:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">boto3</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">time</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">random</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">uuid</span> <span class="kn">import</span> <span class="n">uuid4</span>
</span><span class='line'>
</span><span class='line'><span class="n">names</span> <span class="o">=</span> <span class="p">[</span><span class="s">&#39;james&#39;</span><span class="p">,</span> <span class="s">&#39;john&#39;</span><span class="p">,</span> <span class="s">&#39;steve&#39;</span><span class="p">,</span> <span class="s">&#39;peter&#39;</span><span class="p">,</span> <span class="s">&#39;frank&#39;</span><span class="p">,</span> <span class="s">&#39;steven&#39;</span><span class="p">,</span> <span class="s">&#39;jonathan&#39;</span><span class="p">,</span> <span class="s">&#39;stephen&#39;</span><span class="p">,</span> <span class="s">&#39;will&#39;</span><span class="p">,</span> <span class="s">&#39;adam&#39;</span><span class="p">,</span> <span class="s">&#39;william&#39;</span><span class="p">]</span>
</span><span class='line'><span class="n">retailer</span> <span class="o">=</span> <span class="p">[</span><span class="s">&#39;shoprite&#39;</span><span class="p">,</span> <span class="s">&#39;edgars&#39;</span><span class="p">,</span> <span class="s">&#39;pnp&#39;</span><span class="p">,</span> <span class="s">&#39;bestbuy&#39;</span><span class="p">,</span> <span class="s">&#39;ok&#39;</span><span class="p">,</span> <span class="s">&#39;grocer-a&#39;</span><span class="p">,</span> <span class="s">&#39;amazon&#39;</span><span class="p">,</span> <span class="s">&#39;seveneleven&#39;</span><span class="p">,</span> <span class="s">&#39;shop-a&#39;</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="n">session</span> <span class="o">=</span> <span class="n">boto3</span><span class="o">.</span><span class="n">Session</span><span class="p">(</span><span class="n">region_name</span><span class="o">=</span><span class="s">&#39;eu-west-1&#39;</span><span class="p">,</span> <span class="n">profile_name</span><span class="o">=</span><span class="s">&#39;dev&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">ddb</span> <span class="o">=</span> <span class="n">session</span><span class="o">.</span><span class="n">resource</span><span class="p">(</span><span class="s">&#39;dynamodb&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">client</span> <span class="o">=</span> <span class="n">ddb</span><span class="o">.</span><span class="n">Table</span><span class="p">(</span><span class="s">&#39;session-table&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">current_time</span><span class="p">():</span>
</span><span class='line'>    <span class="nb">int</span><span class="p">(</span><span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">())</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">current_time</span><span class="p">():</span>
</span><span class='line'>    <span class="k">return</span> <span class="nb">int</span><span class="p">(</span><span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">())</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">expiration_time</span><span class="p">():</span>
</span><span class='line'>    <span class="k">return</span> <span class="nb">int</span><span class="p">(</span><span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">())</span> <span class="o">+</span> <span class="mi">86400</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="err">48</span><span class="nf">h_expiration_time</span><span class="p">():</span>
</span><span class='line'>    <span class="k">return</span> <span class="nb">int</span><span class="p">(</span><span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">())</span> <span class="o">+</span> <span class="mi">172800</span>
</span><span class='line'>
</span><span class='line'><span class="c"># expiry on 48 hours</span>
</span><span class='line'><span class="n">client</span><span class="o">.</span><span class="n">put_item</span><span class="p">(</span>
</span><span class='line'>    <span class="n">Item</span><span class="o">=</span><span class="p">{</span>
</span><span class='line'>        <span class="s">&#39;sessionid&#39;</span><span class="p">:</span> <span class="nb">str</span><span class="p">(</span><span class="n">uuid4</span><span class="p">()),</span>
</span><span class='line'>        <span class="s">&#39;CreationTime&#39;</span><span class="p">:</span> <span class="n">current_time</span><span class="p">(),</span>
</span><span class='line'>        <span class="s">&#39;ExpirationTime&#39;</span><span class="p">:</span> <span class="mi">48</span><span class="n">h_expiration_time</span><span class="p">(),</span>
</span><span class='line'>        <span class="s">&#39;SessionData&#39;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&#39;Name&#39;</span><span class="p">:</span> <span class="n">random</span><span class="o">.</span><span class="n">choice</span><span class="p">(</span><span class="n">names</span><span class="p">),</span>
</span><span class='line'>            <span class="s">&#39;Retailer&#39;</span><span class="p">:</span> <span class="n">random</span><span class="o">.</span><span class="n">choice</span><span class="p">(</span><span class="n">retailer</span><span class="p">),</span>
</span><span class='line'>            <span class="s">&#39;TimeOfTransaction&#39;</span><span class="p">:</span> <span class="n">current_time</span><span class="p">(),</span>
</span><span class='line'>            <span class="s">&#39;Amount&#39;</span><span class="p">:</span> <span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">100</span><span class="p">,</span><span class="mi">9000</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># expiry on 24 hours</span>
</span><span class='line'><span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">xrange</span><span class="p">(</span><span class="mi">240</span><span class="p">):</span>
</span><span class='line'>    <span class="n">time</span><span class="o">.</span><span class="n">sleep</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="n">client</span><span class="o">.</span><span class="n">put_item</span><span class="p">(</span>
</span><span class='line'>        <span class="n">Item</span><span class="o">=</span><span class="p">{</span>
</span><span class='line'>            <span class="s">&#39;sessionid&#39;</span><span class="p">:</span> <span class="nb">str</span><span class="p">(</span><span class="n">uuid4</span><span class="p">()),</span>
</span><span class='line'>            <span class="s">&#39;CreationTime&#39;</span><span class="p">:</span> <span class="n">current_time</span><span class="p">(),</span>
</span><span class='line'>            <span class="s">&#39;ExpirationTime&#39;</span><span class="p">:</span> <span class="n">expiration_time</span><span class="p">(),</span>
</span><span class='line'>            <span class="s">&#39;SessionData&#39;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                <span class="s">&#39;Name&#39;</span><span class="p">:</span> <span class="n">random</span><span class="o">.</span><span class="n">choice</span><span class="p">(</span><span class="n">names</span><span class="p">),</span>
</span><span class='line'>                <span class="s">&#39;Retailer&#39;</span><span class="p">:</span> <span class="n">random</span><span class="o">.</span><span class="n">choice</span><span class="p">(</span><span class="n">retailer</span><span class="p">),</span>
</span><span class='line'>                <span class="s">&#39;TimeOfTransaction&#39;</span><span class="p">:</span> <span class="n">current_time</span><span class="p">(),</span>
</span><span class='line'>                <span class="s">&#39;Amount&#39;</span><span class="p">:</span> <span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">100</span><span class="p">,</span><span class="mi">9000</span><span class="p">)</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Verify:</h2>

<p>Verify after 24 hours if the item with the 48 hour expiration time is still in our table:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">client</span><span class="o">.</span><span class="n">get_item</span><span class="p">(</span> <span class="n">Key</span><span class="o">=</span><span class="p">{</span><span class="s">&#39;sessionid&#39;</span><span class="p">:</span> <span class="s">&#39;69c2a472-f70e-4d72-b25f-e27573696b0c&#39;</span><span class="p">}</span> <span class="p">)[</span><span class="s">&#39;Item&#39;</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">u&#39;ExpirationTime&#39;</span><span class="p">:</span> <span class="n">Decimal</span><span class="p">(</span><span class="s">&#39;1510672221&#39;</span><span class="p">),</span>
</span><span class='line'>    <span class="s">u&#39;CreationTime&#39;</span><span class="p">:</span> <span class="n">Decimal</span><span class="p">(</span><span class="s">&#39;1510585821&#39;</span><span class="p">),</span>
</span><span class='line'>    <span class="s">u&#39;sessionid&#39;</span><span class="p">:</span> <span class="s">u&#39;69c2a472-f70e-4d72-b25f-e27573696b0c&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">u&#39;SessionData&#39;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">u&#39;Amount&#39;</span><span class="p">:</span> <span class="n">Decimal</span><span class="p">(</span><span class="s">&#39;3553&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="s">u&#39;Retailer&#39;</span><span class="p">:</span> <span class="s">u&#39;amazon&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">u&#39;TimeOfTransaction&#39;</span><span class="p">:</span> <span class="n">Decimal</span><span class="p">(</span><span class="s">&#39;1510585821&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="s">u&#39;Name&#39;</span><span class="p">:</span> <span class="s">u&#39;steve&#39;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Which we can see is still there, when doing a GET item on one of our 24 hour expired items, we can see that its no longer there:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">client</span><span class="o">.</span><span class="n">get_item</span><span class="p">(</span> <span class="n">Key</span><span class="o">=</span><span class="p">{</span><span class="s">&#39;sessionid&#39;</span><span class="p">:</span> <span class="s">&#39;70b9fc8c-19c4-49d3-bf63-046e992335af&#39;</span><span class="p">}</span> <span class="p">)[</span><span class="s">&#39;Item&#39;</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="n">Traceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">last</span><span class="p">):</span>
</span><span class='line'>  <span class="n">File</span> <span class="s">&quot;&lt;stdin&gt;&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1</span><span class="p">,</span> <span class="ow">in</span> <span class="o">&lt;</span><span class="n">module</span><span class="o">&gt;</span>
</span><span class='line'><span class="ne">KeyError</span><span class="p">:</span> <span class="s">&#39;Item&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Doing a SCAN operation, we should see one item:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">json</span>
</span><span class='line'><span class="n">r</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="n">TableName</span><span class="o">=</span><span class="s">&#39;session-table&#39;</span><span class="p">,</span> <span class="n">Limit</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span> <span class="n">Select</span><span class="o">=</span><span class="s">&#39;COUNT&#39;</span><span class="p">,</span> <span class="n">ReturnConsumedCapacity</span><span class="o">=</span><span class="s">&#39;TOTAL&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">r</span><span class="p">,</span> <span class="n">indent</span><span class="o">=</span><span class="mi">4</span><span class="p">))</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;Count&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;ScannedCount&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;ConsumedCapacity&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;CapacityUnits&quot;</span><span class="p">:</span> <span class="mf">0.5</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;TableName&quot;</span><span class="p">:</span> <span class="s">&quot;session-table&quot;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="s">&quot;ResponseMetadata&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;RetryAttempts&quot;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;HTTPStatusCode&quot;</span><span class="p">:</span> <span class="mi">200</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;RequestId&quot;</span><span class="p">:</span> <span class="s">&quot;&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;HTTPHeaders&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;x-amzn-requestid&quot;</span><span class="p">:</span> <span class="s">&quot;&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&quot;content-length&quot;</span><span class="p">:</span> <span class="s">&quot;107&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&quot;server&quot;</span><span class="p">:</span> <span class="s">&quot;Server&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&quot;connection&quot;</span><span class="p">:</span> <span class="s">&quot;keep-alive&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&quot;x-amz-crc32&quot;</span><span class="p">:</span> <span class="s">&quot;2228370918&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&quot;date&quot;</span><span class="p">:</span> <span class="s">&quot;Tue, 14 Nov 2017 12:02:31 GMT&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&quot;content-type&quot;</span><span class="p">:</span> <span class="s">&quot;application/x-amz-json-1.0&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>So we can confirm that the TTL feature expires the data based on the epoch value we provide our item.</p>

<h2>Delete the Table:</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">client</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="n">TableName</span><span class="o">=</span><span class="s">&#39;session-table&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Resources:</h2>

<ul>
<li><a href="https://sysadmins.co.za/interfacing-amazon-dynamodb-with-python-using-boto3/">https://sysadmins.co.za/interfacing-amazon-dynamodb-with-python-using-boto3/</a></li>
<li><a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/TTL.html">http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/TTL.html</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Update Your Ghost Blog With the Ghost-CLI]]></title>
    <link href="http://blog.ruanbekker.com/blog/2017/11/22/update-your-ghost-blog-with-the-ghost-cli/"/>
    <updated>2017-11-22T17:36:45-05:00</updated>
    <id>http://blog.ruanbekker.com/blog/2017/11/22/update-your-ghost-blog-with-the-ghost-cli</id>
    <content type="html"><![CDATA[<p>If you installed your Ghost Blog with the <a href="https://docs.ghost.org/docs/install">Ghost-CLI</a>, you can easily upgrade your Ghost version using the CLI.</p>

<h2>Backups</h2>

<p>Backup your blog by exporting the json via the Ghost Admin Interface, and also update your content directory:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo su - ghost
</span><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /var/www/ghost
</span><span class='line'><span class="nv">$ </span>tar -zcf /home/ghost/backups/ghost-content-<span class="k">$(</span>date +%F<span class="k">)</span>.tar.gz content
</span></code></pre></td></tr></table></div></figure>


<h2>Check the Current Version:</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ghost status
</span><span class='line'>
</span><span class='line'>Version:
</span><span class='line'>1.17.0
</span></code></pre></td></tr></table></div></figure>


<h2>Update Ghost:</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>npm i -g ghost-cli
</span><span class='line'><span class="nv">$ </span>ghost update
</span></code></pre></td></tr></table></div></figure>


<h2>Verify Version:</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ghost status
</span><span class='line'>
</span><span class='line'>Version:
</span><span class='line'>1.17.0
</span></code></pre></td></tr></table></div></figure>


<p>No need to restart Ghost as the update function restarted the process already.</p>

<h2>Resources:</h2>

<ul>
<li><a href="https://docs.ghost.org/docs/upgrade">https://docs.ghost.org/docs/upgrade</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use the Reindex API on Elasticsearch to Reindex Your Data]]></title>
    <link href="http://blog.ruanbekker.com/blog/2017/11/22/use-the-reindex-api-on-elasticsearch-to-reindex-your-data/"/>
    <updated>2017-11-22T09:32:00-05:00</updated>
    <id>http://blog.ruanbekker.com/blog/2017/11/22/use-the-reindex-api-on-elasticsearch-to-reindex-your-data</id>
    <content type="html"><![CDATA[<p>A Basic Example of Reindexing Data with the <code>/_reindex</code> API on Elasticsearch:</p>

<h2>Provision Elasticsearch with Docker:</h2>

<p>I will be using Elasticsearch on Docker for this Example:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker run -itd --name elasticsearch --publish 9200:9200 elasticsearch:alpine
</span></code></pre></td></tr></table></div></figure>


<h2>Create Indexes:</h2>

<p>Create 3 Indexes and POST 2 Documents to each Index:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -XPUT http://127.0.0.1:9200/animals-2017.11.20
</span><span class='line'><span class="nv">$ </span>curl -XPUT http://127.0.0.1:9200/animals-2017.11.21
</span><span class='line'><span class="nv">$ </span>curl -XPUT http://127.0.0.1:9200/animals-2017.11.21
</span></code></pre></td></tr></table></div></figure>


<p>Create the Index where we will reindex the data to:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -XPUT http://127.0.0.1:9200/animals-2017.11 -d <span class="s1">&#39;{&quot;settings&quot;: {&quot;number_of_shards&quot;: 5, &quot;number_of_replicas&quot;: 0}}&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>POST 2 documents to each index:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -XPOST http://127.0.0.1:9200/animals-2017.11.20/name/ -d <span class="s1">&#39;{&quot;name&quot;: &quot;max&quot;, &quot;type&quot;: &quot;labrador&quot;}&#39;</span>
</span><span class='line'><span class="nv">$ </span>curl -XPOST http://127.0.0.1:9200/animals-2017.11.20/name/ -d <span class="s1">&#39;{&quot;name&quot;: &quot;sam&quot;, &quot;type&quot;: &quot;pooch&quot;}&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>curl -XPOST http://127.0.0.1:9200/animals-2017.11.21/name/ -d <span class="s1">&#39;{&quot;name&quot;: &quot;doggie&quot;, &quot;type&quot;: &quot;bulldog&quot;}&#39;</span>
</span><span class='line'><span class="nv">$ </span>curl -XPOST http://127.0.0.1:9200/animals-2017.11.21/name/ -d <span class="s1">&#39;{&quot;name&quot;: &quot;james&quot;, &quot;type&quot;: &quot;huskey&quot;}&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>curl -XPOST http://127.0.0.1:9200/animals-2017.11.22/name/ -d <span class="s1">&#39;{&quot;name&quot;: &quot;sarah&quot;, &quot;type&quot;: &quot;poodle&quot;}&#39;</span>
</span><span class='line'><span class="nv">$ </span>curl -XPOST http://127.0.0.1:9200/animals-2017.11.22/name/ -d <span class="s1">&#39;{&quot;name&quot;: &quot;frank&quot;, &quot;type&quot;: &quot;alsation&quot;}&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>View the Indexes:</h2>

<p>As you can see we have 2 documents per index, and a empty index for the data that we would like to reindex to:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -XGET http://127.0.0.1:9200/_cat/indices?v
</span><span class='line'>health status index               uuid                     pri rep docs.count docs.deleted store.size pri.store.size
</span><span class='line'>yellow open   animals-2017.11.20  AxRYUfNpQ5ev2mdZf0bYrw   <span class="m">5</span>   <span class="m">1</span>          <span class="m">2</span>            <span class="m">0</span>      8.9kb          8.9kb
</span><span class='line'>green  open   animals-2017.11     1T6TkYWwRuerIZ5_np1B0w   <span class="m">5</span>   <span class="m">0</span>          <span class="m">0</span>            <span class="m">0</span>      1.5kb          1.5kb
</span><span class='line'>yellow open   animals-2017.11.22  fCdaRyBZRiWyQ3tZLhdBrw   <span class="m">5</span>   <span class="m">1</span>          <span class="m">2</span>            <span class="m">0</span>      8.9kb          8.9kb
</span><span class='line'>yellow open   animals-2017.11.21  4Ei9zMDITHy1dI8lIzfjjA   <span class="m">5</span>   <span class="m">1</span>          <span class="m">2</span>            <span class="m">0</span>      8.9kb          8.9kb
</span></code></pre></td></tr></table></div></figure>


<h2>Reindex the Data to our Monthly Index:</h2>

<p>We will define our query to match all the indexes that has the data and reindex to our new index <code>animals-2017.11</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -XPOST http://127.0.0.1:9200/_reindex -d <span class="s1">&#39;{&quot;source&quot;: {&quot;index&quot;: &quot;animals-2017.11.*&quot;}, &quot;dest&quot;: {&quot;index&quot;: &quot;animals-2017.11&quot;} }&#39;</span>
</span><span class='line'><span class="o">{</span><span class="s2">&quot;took&quot;</span>:219,<span class="s2">&quot;timed_out&quot;</span>:false,<span class="s2">&quot;total&quot;</span>:6,<span class="s2">&quot;updated&quot;</span>:0,<span class="s2">&quot;created&quot;</span>:6,<span class="s2">&quot;deleted&quot;</span>:0,<span class="s2">&quot;batches&quot;</span>:1,<span class="s2">&quot;version_conflicts&quot;</span>:0,<span class="s2">&quot;noops&quot;</span>:0,<span class="s2">&quot;retries&quot;</span>:<span class="o">{</span><span class="s2">&quot;bulk&quot;</span>:0,<span class="s2">&quot;search&quot;</span>:0<span class="o">}</span>,<span class="s2">&quot;throttled_millis&quot;</span>:0,<span class="s2">&quot;requests_per_second&quot;</span>:-1.0,<span class="s2">&quot;throttled_until_millis&quot;</span>:0,<span class="s2">&quot;failures&quot;</span>:<span class="o">[]}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>View the Indexes:</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -XGET http://127.0.0.1:9200/_cat/indices?v
</span><span class='line'>health status index               uuid                     pri rep docs.count docs.deleted store.size pri.store.size
</span><span class='line'>yellow open   animals-2017.11.20  AxRYUfNpQ5ev2mdZf0bYrw   <span class="m">5</span>   <span class="m">1</span>          <span class="m">2</span>            <span class="m">0</span>      8.9kb          8.9kb
</span><span class='line'>green  open   animals-2017.11     1T6TkYWwRuerIZ5_np1B0w   <span class="m">5</span>   <span class="m">0</span>          <span class="m">6</span>            <span class="m">0</span>     20.2kb         20.2kb
</span><span class='line'>yellow open   animals-2017.11.22  fCdaRyBZRiWyQ3tZLhdBrw   <span class="m">5</span>   <span class="m">1</span>          <span class="m">2</span>            <span class="m">0</span>      8.9kb          8.9kb
</span><span class='line'>yellow open   animals-2017.11.21  4Ei9zMDITHy1dI8lIzfjjA   <span class="m">5</span>   <span class="m">1</span>          <span class="m">2</span>            <span class="m">0</span>      8.9kb          8.9kb
</span></code></pre></td></tr></table></div></figure>


<h2>Delete the Old Indexes:</h2>

<p>As your data is now reindexed, we can safely remove our old indexes:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -XDELETE <span class="s1">&#39;http://127.0.0.1:9200/animals-2017.11.*&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>To verify:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -XGET http://127.0.0.1:9200/_cat/indices?v
</span><span class='line'>health status index               uuid                     pri rep docs.count docs.deleted store.size pri.store.size
</span><span class='line'>green  open   animals-2017.11     1T6TkYWwRuerIZ5_np1B0w   <span class="m">5</span>   <span class="m">0</span>          <span class="m">6</span>            <span class="m">0</span>     20.2kb         20.2kb
</span></code></pre></td></tr></table></div></figure>


<h2>Resources:</h2>

<ul>
<li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-reindex.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-reindex.html</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Elasticsearch Curator to Reindex Data]]></title>
    <link href="http://blog.ruanbekker.com/blog/2017/11/22/using-elasticsearch-curator-to-reindex-data/"/>
    <updated>2017-11-22T09:09:28-05:00</updated>
    <id>http://blog.ruanbekker.com/blog/2017/11/22/using-elasticsearch-curator-to-reindex-data</id>
    <content type="html"><![CDATA[<p>Today I was using Elasticsearch Curator to reindex indices that was created on a daily basis, to reindex all the data to one index. I used this route as the old data will not be accessed frequently.</p>

<h2>Install Elasticsearch Curator</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker run -it python:2.7-alpine sh
</span><span class='line'><span class="nv">$ </span>pip install elasticsearch-curator
</span></code></pre></td></tr></table></div></figure>


<h2>Create Configs:</h2>

<p>Create the curator config:</p>

<figure class='code'><figcaption><span>config.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="nn">---</span>
</span><span class='line'><span class="c1"># Remember, leave a key empty if there is no value.  None will be a string,</span>
</span><span class='line'><span class="c1"># not a Python &quot;NoneType&quot;</span>
</span><span class='line'><span class="l-Scalar-Plain">client</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">hosts</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">es.endpoint.com</span>
</span><span class='line'>  <span class="l-Scalar-Plain">port</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">443</span>
</span><span class='line'>  <span class="l-Scalar-Plain">use_ssl</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">True</span>
</span><span class='line'>  <span class="l-Scalar-Plain">ssl_no_validate</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">False</span>
</span><span class='line'>  <span class="l-Scalar-Plain">http_auth</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">admin:pass</span>
</span><span class='line'>  <span class="l-Scalar-Plain">timeout</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">30</span>
</span><span class='line'>  <span class="l-Scalar-Plain">master_only</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">False</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">logging</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">loglevel</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">INFO</span>
</span><span class='line'>  <span class="l-Scalar-Plain">logfile</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">logformat</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">default</span>
</span><span class='line'>  <span class="l-Scalar-Plain">blacklist</span><span class="p-Indicator">:</span> <span class="p-Indicator">[</span><span class="s">&#39;urllib3&#39;</span><span class="p-Indicator">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Create the action config:</p>

<figure class='code'><figcaption><span>action-reindex.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="nn">---</span>
</span><span class='line'><span class="c1"># Remember, leave a key empty if there is no value.  None will be a string,</span>
</span><span class='line'><span class="c1"># not a Python &quot;NoneType&quot;</span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1"># Also remember that all examples have &#39;disable_action&#39; set to True.  If you</span>
</span><span class='line'><span class="c1"># want to use this action as a template, be sure to set this to False after</span>
</span><span class='line'><span class="c1"># copying it.</span>
</span><span class='line'><span class="l-Scalar-Plain">actions</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">1</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">description</span><span class="p-Indicator">:</span> <span class="s">&quot;Reindex</span><span class="nv"> </span><span class="s">index-2017.10.{30,31}</span><span class="nv"> </span><span class="s">into</span><span class="nv"> </span><span class="s">new-index-2017.10&quot;</span>
</span><span class='line'>    <span class="l-Scalar-Plain">action</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">reindex</span>
</span><span class='line'>    <span class="l-Scalar-Plain">options</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">disable_action</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">False</span>
</span><span class='line'>      <span class="l-Scalar-Plain">wait_interval</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">9</span>
</span><span class='line'>      <span class="l-Scalar-Plain">max_wait</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">-1</span>
</span><span class='line'>      <span class="l-Scalar-Plain">request_body</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">source</span><span class="p-Indicator">:</span>
</span><span class='line'>          <span class="l-Scalar-Plain">index</span><span class="p-Indicator">:</span> <span class="p-Indicator">[</span><span class="s">&#39;index-2017.10.*&#39;</span><span class="p-Indicator">]</span>
</span><span class='line'>        <span class="l-Scalar-Plain">dest</span><span class="p-Indicator">:</span>
</span><span class='line'>          <span class="l-Scalar-Plain">index</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">new-index-2017.10</span>
</span><span class='line'>    <span class="l-Scalar-Plain">filters</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">filtertype</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">none</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Create the Elasticsearch Index:</h2>

<p>Create the Index where we will reindex the data to:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -XPUT http://es.endpoint.com/new-index-2017.10 -d <span class="s1">&#39;{&quot;settings&quot;: {&quot;number_of_shards&quot;: 5, &quot;number_of_replicas&quot;: 1}}&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Run the Curator:</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curator --config curator.yml action-reindex.yml
</span><span class='line'>
</span><span class='line'>2017-11-22 14:18:15,138 INFO      Task <span class="s2">&quot;reindex from [index-2017.10.*] to [index-2017.10]&quot;</span> with task_id <span class="s2">&quot;Za-sn0z3Q9-75xCMRwJ3-A:15782886&quot;</span> has been running <span class="k">for</span> 928.948195354 seconds
</span><span class='line'>2017-11-22 14:18:24,152 INFO      GET https://es.endpoint.com:443/_tasks/Za-sn0z3Q9-75xCMRwJ3-A%3A15782886 <span class="o">[</span>status:200 request:0.005s<span class="o">]</span>
</span><span class='line'>2017-11-22 14:18:24,153 INFO      Task <span class="s2">&quot;reindex from [index-2017.10.*] to [new-index-2017.10]&quot;</span> with task_id <span class="s2">&quot;Za-sn0z3Q9-75xCMRwJ3-A:15782886&quot;</span> has been running <span class="k">for</span> 937.962740393 seconds
</span><span class='line'>2017-11-22 14:22:23,171 INFO      Action ID: 1, <span class="s2">&quot;reindex&quot;</span> completed.
</span><span class='line'>2017-11-22 14:22:23,171 INFO      Job completed.
</span></code></pre></td></tr></table></div></figure>


<h2>Resources:</h2>

<ul>
<li><a href="https://www.elastic.co/guide/en/elasticsearch/client/curator/current/index.html">https://www.elastic.co/guide/en/elasticsearch/client/curator/current/index.html</a></li>
<li><a href="https://qbox.io/blog/logstash-elasticsearch-curator-data-retention">https://qbox.io/blog/logstash-elasticsearch-curator-data-retention</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Elasticdump to Backup Elasticsearch Indexes to JSON]]></title>
    <link href="http://blog.ruanbekker.com/blog/2017/11/22/using-elasticdump-to-backup-elasticsearch-indexes-to-json/"/>
    <updated>2017-11-22T08:35:28-05:00</updated>
    <id>http://blog.ruanbekker.com/blog/2017/11/22/using-elasticdump-to-backup-elasticsearch-indexes-to-json</id>
    <content type="html"><![CDATA[<p>We will use Elasticdump to dump data from Elasticsearch to json files on disk, then delete the index, then restore data back to elasticsearch</p>

<h2>Install Elasticdump:</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker run -it node:alpine sh
</span><span class='line'><span class="nv">$ </span>npm install elasticdump -g
</span></code></pre></td></tr></table></div></figure>


<h2>Create a Index:</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -XPUT http://10.79.2.193:9200/test-index
</span><span class='line'><span class="o">{</span><span class="s2">&quot;acknowledged&quot;</span>:true<span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ingest Some Data into the Index:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -XPUT http://10.79.2.193:9200/test-index/docs/doc1 -d <span class="s1">&#39;{&quot;name&quot;: &quot;ruan&quot;, &quot;age&quot;: 30}&#39;</span>
</span><span class='line'><span class="o">{</span><span class="s2">&quot;_index&quot;</span>:<span class="s2">&quot;test-index&quot;</span>,<span class="s2">&quot;_type&quot;</span>:<span class="s2">&quot;docs&quot;</span>,<span class="s2">&quot;_id&quot;</span>:<span class="s2">&quot;doc1&quot;</span>,<span class="s2">&quot;_version&quot;</span>:1,<span class="s2">&quot;_shards&quot;</span>:<span class="o">{</span><span class="s2">&quot;total&quot;</span>:2,<span class="s2">&quot;successful&quot;</span>:1,<span class="s2">&quot;failed&quot;</span>:0<span class="o">}</span>,<span class="s2">&quot;created&quot;</span>:true<span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>curl -XPUT http://10.79.2.193:9200/test-index/docs/doc2 -d <span class="s1">&#39;{&quot;name&quot;: &quot;stefan&quot;, &quot;age&quot;: 29}&#39;</span>
</span><span class='line'><span class="o">{</span><span class="s2">&quot;_index&quot;</span>:<span class="s2">&quot;test-index&quot;</span>,<span class="s2">&quot;_type&quot;</span>:<span class="s2">&quot;docs&quot;</span>,<span class="s2">&quot;_id&quot;</span>:<span class="s2">&quot;doc2&quot;</span>,<span class="s2">&quot;_version&quot;</span>:1,<span class="s2">&quot;_shards&quot;</span>:<span class="o">{</span><span class="s2">&quot;total&quot;</span>:2,<span class="s2">&quot;successful&quot;</span>:1,<span class="s2">&quot;failed&quot;</span>:0<span class="o">}</span>,<span class="s2">&quot;created&quot;</span>:true<span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Elasticdump to dump the ata</h2>

<p>First dump the mappings:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>elasticdump --input<span class="o">=</span>http://10.79.2.193:9200/test-index --output<span class="o">=</span>/opt/backup/elasticsearch/es_test-index_mapping.json --type<span class="o">=</span>mapping
</span><span class='line'>Mon, <span class="m">26</span> Jun <span class="m">2017</span> 14:15:34 GMT <span class="p">|</span> starting dump
</span><span class='line'>Mon, <span class="m">26</span> Jun <span class="m">2017</span> 14:15:34 GMT <span class="p">|</span> got <span class="m">1</span> objects from <span class="nb">source </span>elasticsearch <span class="o">(</span>offset: 0<span class="o">)</span>
</span><span class='line'>Mon, <span class="m">26</span> Jun <span class="m">2017</span> 14:15:34 GMT <span class="p">|</span> sent <span class="m">1</span> objects to destination file, wrote 1
</span><span class='line'>Mon, <span class="m">26</span> Jun <span class="m">2017</span> 14:15:34 GMT <span class="p">|</span> got <span class="m">0</span> objects from <span class="nb">source </span>elasticsearch <span class="o">(</span>offset: 1<span class="o">)</span>
</span><span class='line'>Mon, <span class="m">26</span> Jun <span class="m">2017</span> 14:15:34 GMT <span class="p">|</span> Total Writes: 1
</span><span class='line'>Mon, <span class="m">26</span> Jun <span class="m">2017</span> 14:15:34 GMT <span class="p">|</span> dump <span class="nb">complete</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then dump the data:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>elasticdump --input<span class="o">=</span>http://10.79.2.193:9200/test-index --output<span class="o">=</span>/opt/backup/elasticsearch/es_test-index.json --type<span class="o">=</span>data
</span><span class='line'>Mon, <span class="m">26</span> Jun <span class="m">2017</span> 14:15:43 GMT <span class="p">|</span> starting dump
</span><span class='line'>Mon, <span class="m">26</span> Jun <span class="m">2017</span> 14:15:43 GMT <span class="p">|</span> got <span class="m">2</span> objects from <span class="nb">source </span>elasticsearch <span class="o">(</span>offset: 0<span class="o">)</span>
</span><span class='line'>Mon, <span class="m">26</span> Jun <span class="m">2017</span> 14:15:43 GMT <span class="p">|</span> sent <span class="m">2</span> objects to destination file, wrote 2
</span><span class='line'>Mon, <span class="m">26</span> Jun <span class="m">2017</span> 14:15:43 GMT <span class="p">|</span> got <span class="m">0</span> objects from <span class="nb">source </span>elasticsearch <span class="o">(</span>offset: 2<span class="o">)</span>
</span><span class='line'>Mon, <span class="m">26</span> Jun <span class="m">2017</span> 14:15:43 GMT <span class="p">|</span> Total Writes: 2
</span><span class='line'>Mon, <span class="m">26</span> Jun <span class="m">2017</span> 14:15:43 GMT <span class="p">|</span> dump <span class="nb">complete</span>
</span></code></pre></td></tr></table></div></figure>


<p>Preview the Metadata</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cat /opt/backup/elasticsearch/es_test-index_mapping.json <span class="p">|</span> python -m json.tool
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;test-index&quot;</span>: <span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;mappings&quot;</span>: <span class="o">{</span>
</span><span class='line'>            <span class="s2">&quot;docs&quot;</span>: <span class="o">{</span>
</span><span class='line'>                <span class="s2">&quot;properties&quot;</span>: <span class="o">{</span>
</span><span class='line'>                    <span class="s2">&quot;age&quot;</span>: <span class="o">{</span>
</span><span class='line'>                        <span class="s2">&quot;type&quot;</span>: <span class="s2">&quot;long&quot;</span>
</span><span class='line'>                    <span class="o">}</span>,
</span><span class='line'>                    <span class="s2">&quot;name&quot;</span>: <span class="o">{</span>
</span><span class='line'>                        <span class="s2">&quot;type&quot;</span>: <span class="s2">&quot;string&quot;</span>
</span><span class='line'>                    <span class="o">}</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Preview the Data</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cat /opt/backup/elasticsearch/es_test-index.json <span class="p">|</span> jq
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;_index&quot;</span>: <span class="s2">&quot;test-index&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;_type&quot;</span>: <span class="s2">&quot;docs&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;_id&quot;</span>: <span class="s2">&quot;doc1&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;_score&quot;</span>: 1,
</span><span class='line'>  <span class="s2">&quot;_source&quot;</span>: <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;name&quot;</span>: <span class="s2">&quot;ruan&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;age&quot;</span>: 30
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;_index&quot;</span>: <span class="s2">&quot;test-index&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;_type&quot;</span>: <span class="s2">&quot;docs&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;_id&quot;</span>: <span class="s2">&quot;doc2&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;_score&quot;</span>: 1,
</span><span class='line'>  <span class="s2">&quot;_source&quot;</span>: <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;name&quot;</span>: <span class="s2">&quot;stefan&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;age&quot;</span>: 29
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Restore The Data</h2>

<p>Let&rsquo;s test the restoring part, go ahead and delete The index:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -XDELETE http://10.79.2.193:9200/test-index
</span><span class='line'><span class="o">{</span><span class="s2">&quot;acknowledged&quot;</span>:true<span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Restore the Index by Importing the Mapping:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>elasticdump --input<span class="o">=</span>/opt/backup/elasticsearch/es_test-index_mapping.json --output<span class="o">=</span>http://10.79.2.193:9200/test-index --type<span class="o">=</span>mapping
</span><span class='line'>Mon, <span class="m">26</span> Jun <span class="m">2017</span> 14:51:48 GMT <span class="p">|</span> starting dump
</span><span class='line'>Mon, <span class="m">26</span> Jun <span class="m">2017</span> 14:51:48 GMT <span class="p">|</span> got <span class="m">1</span> objects from <span class="nb">source </span>file <span class="o">(</span>offset: 0<span class="o">)</span>
</span><span class='line'>Mon, <span class="m">26</span> Jun <span class="m">2017</span> 14:51:48 GMT <span class="p">|</span> sent <span class="m">1</span> objects to destination elasticsearch, wrote 1
</span><span class='line'>Mon, <span class="m">26</span> Jun <span class="m">2017</span> 14:51:48 GMT <span class="p">|</span> got <span class="m">0</span> objects from <span class="nb">source </span>file <span class="o">(</span>offset: 1<span class="o">)</span>
</span><span class='line'>Mon, <span class="m">26</span> Jun <span class="m">2017</span> 14:51:48 GMT <span class="p">|</span> Total Writes: 1
</span><span class='line'>Mon, <span class="m">26</span> Jun <span class="m">2017</span> 14:51:48 GMT <span class="p">|</span> dump <span class="nb">complete</span>
</span></code></pre></td></tr></table></div></figure>


<p>Verify to see if the Index Exist:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -s -XGET http://10.79.2.193:9200/_cat/indices?v <span class="p">|</span> grep -E <span class="s1">&#39;(docs.count|test)&#39;</span>
</span><span class='line'>health status index                     pri rep docs.count docs.deleted store.size pri.store.size
</span><span class='line'>yellow open   <span class="nb">test</span>-index                  <span class="m">5</span>   <span class="m">1</span>          <span class="m">0</span>            <span class="m">0</span>       650b           650b
</span></code></pre></td></tr></table></div></figure>


<h2>Restore the Data for the Index:</h2>

<p>Use elasticdump to restore the data from json to elasticsearch:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>elasticdump --input<span class="o">=</span>/opt/backup/elasticsearch/es_test-index.json --output<span class="o">=</span>http://10.79.2.193:9200/test-index --type<span class="o">=</span>data
</span><span class='line'>Mon, <span class="m">26</span> Jun <span class="m">2017</span> 14:53:56 GMT <span class="p">|</span> starting dump
</span><span class='line'>Mon, <span class="m">26</span> Jun <span class="m">2017</span> 14:53:56 GMT <span class="p">|</span> got <span class="m">2</span> objects from <span class="nb">source </span>file <span class="o">(</span>offset: 0<span class="o">)</span>
</span><span class='line'>Mon, <span class="m">26</span> Jun <span class="m">2017</span> 14:53:56 GMT <span class="p">|</span> sent <span class="m">2</span> objects to destination elasticsearch, wrote 2
</span><span class='line'>Mon, <span class="m">26</span> Jun <span class="m">2017</span> 14:53:56 GMT <span class="p">|</span> got <span class="m">0</span> objects from <span class="nb">source </span>file <span class="o">(</span>offset: 2<span class="o">)</span>
</span><span class='line'>Mon, <span class="m">26</span> Jun <span class="m">2017</span> 14:53:56 GMT <span class="p">|</span> Total Writes: 2
</span><span class='line'>Mon, <span class="m">26</span> Jun <span class="m">2017</span> 14:53:56 GMT <span class="p">|</span> dump <span class="nb">complete</span>
</span></code></pre></td></tr></table></div></figure>


<p>Verify to see if the Documents was Ingested:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -s -XGET http://10.79.2.193:9200/_cat/indices?v <span class="p">|</span> grep -E <span class="s1">&#39;(docs.count|test)&#39;</span>
</span><span class='line'>health status index                     pri rep docs.count docs.deleted store.size pri.store.size
</span><span class='line'>yellow open   <span class="nb">test</span>-index                  <span class="m">5</span>   <span class="m">1</span>          <span class="m">2</span>            <span class="m">0</span>       650b           650b
</span></code></pre></td></tr></table></div></figure>


<p>Preview the Data from Elasticsearch:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -s -XGET http://10.79.2.193:9200/test-index/_search?pretty
</span><span class='line'>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;took&quot;</span> : 3,
</span><span class='line'>  <span class="s2">&quot;timed_out&quot;</span> : <span class="nb">false</span>,
</span><span class='line'>  <span class="s2">&quot;_shards&quot;</span> : <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;total&quot;</span> : 5,
</span><span class='line'>    <span class="s2">&quot;successful&quot;</span> : 5,
</span><span class='line'>    <span class="s2">&quot;failed&quot;</span> : 0
</span><span class='line'>  <span class="o">}</span>,
</span><span class='line'>  <span class="s2">&quot;hits&quot;</span> : <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;total&quot;</span> : 2,
</span><span class='line'>    <span class="s2">&quot;max_score&quot;</span> : 1.0,
</span><span class='line'>    <span class="s2">&quot;hits&quot;</span> : <span class="o">[</span> <span class="o">{</span>
</span><span class='line'>      <span class="s2">&quot;_index&quot;</span> : <span class="s2">&quot;test-index&quot;</span>,
</span><span class='line'>      <span class="s2">&quot;_type&quot;</span> : <span class="s2">&quot;docs&quot;</span>,
</span><span class='line'>      <span class="s2">&quot;_id&quot;</span> : <span class="s2">&quot;doc1&quot;</span>,
</span><span class='line'>      <span class="s2">&quot;_score&quot;</span> : 1.0,
</span><span class='line'>      <span class="s2">&quot;_source&quot;</span> : <span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;ruan&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;age&quot;</span> : 30
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>, <span class="o">{</span>
</span><span class='line'>      <span class="s2">&quot;_index&quot;</span> : <span class="s2">&quot;test-index&quot;</span>,
</span><span class='line'>      <span class="s2">&quot;_type&quot;</span> : <span class="s2">&quot;docs&quot;</span>,
</span><span class='line'>      <span class="s2">&quot;_id&quot;</span> : <span class="s2">&quot;doc2&quot;</span>,
</span><span class='line'>      <span class="s2">&quot;_score&quot;</span> : 1.0,
</span><span class='line'>      <span class="s2">&quot;_source&quot;</span> : <span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;stefan&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;age&quot;</span> : 29
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span> <span class="o">]</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Resources:</h2>

<ul>
<li><a href="https://www.npmjs.com/package/elasticdump">https://www.npmjs.com/package/elasticdump</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Routing Web Traffic With a SOCKS Tunnel]]></title>
    <link href="http://blog.ruanbekker.com/blog/2017/11/14/routing-web-traffic-with-a-socks-tunnel/"/>
    <updated>2017-11-14T10:17:07-05:00</updated>
    <id>http://blog.ruanbekker.com/blog/2017/11/14/routing-web-traffic-with-a-socks-tunnel</id>
    <content type="html"><![CDATA[<p>I wanted to access a Non Standard HTTP Port on one of my RaspberryPi Hosts, which was not directly available to the Internet, so I have chosen to establish a SOCKS Tunnel to achieve that.</p>

<h2>Web Application on my LAN</h2>

<p>Getting my RaspberryPi&rsquo;s Private IP Address:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ifconfig eth0 <span class="p">|</span> grep <span class="s1">&#39;inet 192&#39;</span> <span class="p">|</span> awk <span class="s1">&#39;{print $2}&#39;</span>
</span><span class='line'>192.168.1.118
</span></code></pre></td></tr></table></div></figure>


<p>For demonstration purposes, I will use Python&rsquo;s SimpleHTTPServer:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mkdir web
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>web
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s1">&#39;yeehaa&#39;</span> &gt; index.html
</span><span class='line'><span class="nv">$ </span>python -m SimpleHTTPServer 5050
</span><span class='line'>Serving HTTP on 0.0.0.0 port <span class="m">5050</span> ...
</span></code></pre></td></tr></table></div></figure>


<h2>Establish the SOCKS Tunnel</h2>

<p>From my laptop, establishing the SOCKS Tunnel with SSH, you can use <code>-f</code> to fork it in the background:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ssh -D <span class="m">8157</span> -CqN user@home.domain.com
</span></code></pre></td></tr></table></div></figure>


<h2>Configure your Browser:</h2>

<p>Configure your browser to Proxy via:</p>

<ul>
<li>Host: localhost</li>
<li>Port: 8157</li>
</ul>


<p>Now when you access the destined host&rsquo;s private ip, you will get a response:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Browse to http://192.168.1.118:5050/ and in my <span class="k">case</span> my response is:
</span><span class='line'>-&gt; yeehaa
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Local Dev Environment With Docker MySQL and Adminer WebUI With Docker Compose]]></title>
    <link href="http://blog.ruanbekker.com/blog/2017/11/13/local-dev-environment-with-docker-mysql-and-adminer-webui-with-docker-compose/"/>
    <updated>2017-11-13T16:15:34-05:00</updated>
    <id>http://blog.ruanbekker.com/blog/2017/11/13/local-dev-environment-with-docker-mysql-and-adminer-webui-with-docker-compose</id>
    <content type="html"><![CDATA[<p>Let&rsquo;s setup a local development environment with Docker, MySQL and Adminer WebUI using Docker Compose</p>

<h2>Docker Compose File:</h2>

<p>Let&rsquo;s look at our docker-compose file:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">version</span><span class="p-Indicator">:</span> <span class="s">&#39;3.2&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">services</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">mysql-client</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">image</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">alpine:edge</span>
</span><span class='line'>    <span class="l-Scalar-Plain">volumes</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">bind</span>
</span><span class='line'>        <span class="l-Scalar-Plain">source</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">./workspace</span>
</span><span class='line'>        <span class="l-Scalar-Plain">target</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/root/workspace</span>
</span><span class='line'>    <span class="l-Scalar-Plain">networks</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">docknet</span>
</span><span class='line'>    <span class="l-Scalar-Plain">command</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">ping 127.0.0.1</span>
</span><span class='line'>
</span><span class='line'>  <span class="l-Scalar-Plain">db</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">image</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">mysql</span>
</span><span class='line'>    <span class="l-Scalar-Plain">restart</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">always</span>
</span><span class='line'>    <span class="l-Scalar-Plain">environment</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">MYSQL_ROOT_PASSWORD</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">example</span>
</span><span class='line'>    <span class="l-Scalar-Plain">networks</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">docknet</span>
</span><span class='line'>    <span class="l-Scalar-Plain">volumes</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">volume</span>
</span><span class='line'>        <span class="l-Scalar-Plain">source</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">dbdata</span>
</span><span class='line'>        <span class="l-Scalar-Plain">target</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/var/lib/mysql</span>
</span><span class='line'>
</span><span class='line'>  <span class="l-Scalar-Plain">adminer</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">image</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">adminer</span>
</span><span class='line'>    <span class="l-Scalar-Plain">restart</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">always</span>
</span><span class='line'>    <span class="l-Scalar-Plain">ports</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">8080:8080</span>
</span><span class='line'>    <span class="l-Scalar-Plain">networks</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">docknet</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">networks</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">docknet</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">external</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">true</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">volumes</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">dbdata</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">external</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">true</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Pre-Requirements:</h2>

<p>Let&rsquo;s create our pre-requirement:</p>

<ol>
<li>Networks:</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker network create docknet
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>Volumes:</li>
</ol>


<p>Our Volume for MySQL so that we have persistent data:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker volume create dbdata
</span></code></pre></td></tr></table></div></figure>


<p>Our <code>workspace</code> directory that will be persistent in our <code>debug-client</code> alpine container:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mkdir -p workspace/python
</span></code></pre></td></tr></table></div></figure>


<h2>Launching our Services:</h2>

<p>Let&rsquo;s launch our services:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker-compose -f mysql-compose.yml up -d
</span><span class='line'>Creating mysql_db_1 ...
</span><span class='line'>Creating mysql_adminer_1
</span><span class='line'>Creating mysql_debug-client_1
</span></code></pre></td></tr></table></div></figure>


<p>Listing our Containers:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker ps
</span><span class='line'>CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                      NAMES
</span><span class='line'>e05804ab6d64        alpine:edge         <span class="s2">&quot;ping 127.0.0.1&quot;</span>         <span class="m">21</span> seconds ago      Up <span class="m">4</span> seconds                                   mysql_debug-client_1
</span><span class='line'>c052ceeb6d3b        mysql               <span class="s2">&quot;docker-entrypoint...&quot;</span>   <span class="m">21</span> seconds ago      Up <span class="m">5</span> seconds        3306/tcp                   mysql_db_1
</span><span class='line'>2b0446daab4c        adminer             <span class="s2">&quot;entrypoint.sh doc...&quot;</span>   <span class="m">26</span> seconds ago      Up <span class="m">5</span> seconds        0.0.0.0:8080-&gt;8080/tcp     mysql_adminer_1
</span></code></pre></td></tr></table></div></figure>


<h2>Using the Debug Container:</h2>

<p>I will use the debug container as the client to connect to the internal services, for example, the mysql-client:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>apk update
</span><span class='line'><span class="nv">$ </span>apk add mysql-client
</span><span class='line'><span class="nv">$ </span>mysql -h db -u root -ppassword
</span><span class='line'>MySQL <span class="o">[(</span>none<span class="o">)]</span>&gt;
</span></code></pre></td></tr></table></div></figure>


<p>Also, you will find the persistent data directory for our workspace:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ls /root/workspace/
</span><span class='line'>python
</span></code></pre></td></tr></table></div></figure>


<h2>Accessing the MySQL WebUI: Adminer</h2>

<p>Access the service via the exposed endpoint:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>+ http://localhost:8080/
</span></code></pre></td></tr></table></div></figure>


<p>The login view:</p>

<p><img src="https://i.snag.gy/m8dUxe.jpg" alt="" /></p>

<p>Creating the Table:</p>

<p><img src="https://i.snag.gy/tPVbg6.jpg" alt="" /></p>

<h2>Deleting the Environment:</h2>

<p>The External Resources will not be deleted:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker-compose -f mysql-compose.yml down
</span><span class='line'>Removing mysql_debug-client_1 ... <span class="k">done</span>
</span><span class='line'>Removing mysql_db_1           ... <span class="k">done</span>
</span><span class='line'>Removing mysql_adminer_1      ... <span class="k">done</span>
</span><span class='line'>Network docknet is external, skipping
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup a Concourse-CI Server on Ubuntu 16]]></title>
    <link href="http://blog.ruanbekker.com/blog/2017/11/07/setup-a-concourse-ci-server-on-ubuntu-16/"/>
    <updated>2017-11-07T17:55:46-05:00</updated>
    <id>http://blog.ruanbekker.com/blog/2017/11/07/setup-a-concourse-ci-server-on-ubuntu-16</id>
    <content type="html"><![CDATA[<p><img src="https://i.snag.gy/gzkdu9.jpg?nocache=1511644783495" alt="" /></p>

<p>Concourse is a Pipeline Based Continious Integration system written in Go</p>

<h2>Resources:</h2>

<ul>
<li><a href="https://concourse.ci/">https://concourse.ci/</a></li>
<li><a href="https://github.com/concourse/concourse">https://github.com/concourse/concourse</a></li>
<li><a href="https://concourse.ci/hello-world.html">https://concourse.ci/hello-world.html</a></li>
<li><a href="https://github.com/starkandwayne/concourse-tutorial">https://github.com/starkandwayne/concourse-tutorial</a></li>
</ul>


<h2>What is Concourse CI:</h2>

<p>Concourse CI is a Continious Integration Platform. Concourse enables you to construct pipelines with a yaml configuration that can consist out of 3 core concepts, tasks, resources, and jobs that compose them. For more information about this have a look at their <a href="https://concourse.ci/concepts.html">docs</a></p>

<h2>What will we be doing today</h2>

<p>We will setup a Concourse Server on Ubuntu 16.04 and run the traditional <code>Hello, World</code> pipeline</p>

<h2>Setup the Server:</h2>

<p>Concourse needs <code>PostgresSQL 9.3+</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>apt update <span class="o">&amp;&amp;</span> apt upgrade -y
</span><span class='line'><span class="nv">$ </span>apt install postgresql postgresql-contrib -y
</span><span class='line'><span class="nv">$ </span>systemctl <span class="nb">enable </span>postgresql
</span></code></pre></td></tr></table></div></figure>


<p>Create the Database and User for Concourse on Postgres:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo -u postgres createuser concourse
</span><span class='line'><span class="nv">$ </span>sudo -u postgres createdb --owner<span class="o">=</span>concourse atc
</span></code></pre></td></tr></table></div></figure>


<p>Download the Concourse and Fly Cli Binaries:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>wget https://github.com/concourse/concourse/releases/download/v3.6.0/concourse_linux_amd64
</span><span class='line'><span class="nv">$ </span>wget https://github.com/concourse/concourse/releases/download/v3.6.0/fly_linux_amd64
</span><span class='line'><span class="nv">$ </span>chmod +x concourse_linux_amd64 fly_linux_amd64
</span><span class='line'><span class="nv">$ </span>mv concourse_linux_amd64 /usr/bin/concourse
</span><span class='line'><span class="nv">$ </span>mv fly_linux_amd64 /usr/bin/fly
</span></code></pre></td></tr></table></div></figure>


<p>Create the Encryption Keys:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mkdir /etc/concourse
</span><span class='line'><span class="nv">$ </span>ssh-keygen -t rsa -q -N <span class="s1">&#39;&#39;</span> -f /etc/concourse/tsa_host_key
</span><span class='line'><span class="nv">$ </span>ssh-keygen -t rsa -q -N <span class="s1">&#39;&#39;</span> -f /etc/concourse/worker_key
</span><span class='line'><span class="nv">$ </span>ssh-keygen -t rsa -q -N <span class="s1">&#39;&#39;</span> -f /etc/concourse/session_signing_key
</span><span class='line'><span class="nv">$ </span>cp /etc/concourse/worker_key.pub /etc/concourse/authorized_worker_keys
</span></code></pre></td></tr></table></div></figure>


<p>Concourse Web Process Configuration:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cat /etc/concourse/web_environment
</span><span class='line'>
</span><span class='line'><span class="nv">CONCOURSE_SESSION_SIGNING_KEY</span><span class="o">=</span>/etc/concourse/session_signing_key
</span><span class='line'><span class="nv">CONCOURSE_TSA_HOST_KEY</span><span class="o">=</span>/etc/concourse/tsa_host_key
</span><span class='line'><span class="nv">CONCOURSE_TSA_AUTHORIZED_KEYS</span><span class="o">=</span>/etc/concourse/authorized_worker_keys
</span><span class='line'><span class="nv">CONCOURSE_POSTGRES_SOCKET</span><span class="o">=</span>/var/run/postgresql
</span><span class='line'>
</span><span class='line'><span class="nv">CONCOURSE_BASIC_AUTH_USERNAME</span><span class="o">=</span>admin
</span><span class='line'><span class="nv">CONCOURSE_BASIC_AUTH_PASSWORD</span><span class="o">=</span>secret
</span><span class='line'><span class="nv">CONCOURSE_EXTERNAL_URL</span><span class="o">=</span>http://10.20.30.40:8080
</span></code></pre></td></tr></table></div></figure>


<p>Concourse Worker Process Configuration:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cat /etc/concourse/worker_environment
</span><span class='line'>
</span><span class='line'><span class="nv">CONCOURSE_WORK_DIR</span><span class="o">=</span>/var/lib/concourse
</span><span class='line'><span class="nv">CONCOURSE_TSA_WORKER_PRIVATE_KEY</span><span class="o">=</span>/etc/concourse/worker_key
</span><span class='line'><span class="nv">CONCOURSE_TSA_PUBLIC_KEY</span><span class="o">=</span>/etc/concourse/tsa_host_key.pub
</span><span class='line'><span class="nv">CONCOURSE_TSA_HOST</span><span class="o">=</span>127.0.0.1
</span></code></pre></td></tr></table></div></figure>


<p>Create a Concourse user:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo adduser --system --group concourse
</span><span class='line'><span class="nv">$ </span>sudo chown -R concourse:concourse /etc/concourse
</span><span class='line'><span class="nv">$ </span>sudo chmod <span class="m">600</span> /etc/concourse/*_environment
</span></code></pre></td></tr></table></div></figure>


<p>Create SystemD Unit Files, first for the Web Service:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cat /etc/systemd/system/concourse-web.service
</span><span class='line'>
</span><span class='line'><span class="o">[</span>Unit<span class="o">]</span>
</span><span class='line'><span class="nv">Description</span><span class="o">=</span>Concourse CI web process <span class="o">(</span>ATC and TSA<span class="o">)</span>
</span><span class='line'><span class="nv">After</span><span class="o">=</span>postgresql.service
</span><span class='line'>
</span><span class='line'><span class="o">[</span>Service<span class="o">]</span>
</span><span class='line'><span class="nv">User</span><span class="o">=</span>concourse
</span><span class='line'><span class="nv">Restart</span><span class="o">=</span>on-failure
</span><span class='line'><span class="nv">EnvironmentFile</span><span class="o">=</span>/etc/concourse/web_environment
</span><span class='line'><span class="nv">ExecStart</span><span class="o">=</span>/usr/bin/concourse web
</span><span class='line'>
</span><span class='line'><span class="o">[</span>Install<span class="o">]</span>
</span><span class='line'><span class="nv">WantedBy</span><span class="o">=</span>multi-user.target
</span></code></pre></td></tr></table></div></figure>


<p>Then the SystemD Unit File for the Worker Service:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cat /etc/systemd/system/concourse-worker.service
</span><span class='line'>
</span><span class='line'><span class="o">[</span>Unit<span class="o">]</span>
</span><span class='line'><span class="nv">Description</span><span class="o">=</span>Concourse CI worker process
</span><span class='line'><span class="nv">After</span><span class="o">=</span>concourse-web.service
</span><span class='line'>
</span><span class='line'><span class="o">[</span>Service<span class="o">]</span>
</span><span class='line'><span class="nv">User</span><span class="o">=</span>root
</span><span class='line'><span class="nv">Restart</span><span class="o">=</span>on-failure
</span><span class='line'><span class="nv">EnvironmentFile</span><span class="o">=</span>/etc/concourse/worker_environment
</span><span class='line'><span class="nv">ExecStart</span><span class="o">=</span>/usr/bin/concourse worker
</span><span class='line'>
</span><span class='line'><span class="o">[</span>Install<span class="o">]</span>
</span><span class='line'><span class="nv">WantedBy</span><span class="o">=</span>multi-user.target
</span></code></pre></td></tr></table></div></figure>


<p>Start and Enable the Services:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>systemctl start concourse-web concourse-worker
</span><span class='line'><span class="nv">$ </span>systemctl <span class="nb">enable </span>concourse-web concourse-worker
</span><span class='line'><span class="nv">$ </span>systemctl status concourse-web concourse-worker
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>systemctl is-active concourse-worker concourse-web
</span><span class='line'>active
</span><span class='line'>active
</span></code></pre></td></tr></table></div></figure>


<p>The listening ports should more or less look like the following:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>netstat -tulpn
</span><span class='line'>
</span><span class='line'>Active Internet connections <span class="o">(</span>only servers<span class="o">)</span>
</span><span class='line'>Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name
</span><span class='line'>tcp        <span class="m">0</span>      <span class="m">0</span> 127.0.0.1:7777          0.0.0.0:*               LISTEN      4530/concourse
</span><span class='line'>tcp        <span class="m">0</span>      <span class="m">0</span> 127.0.0.1:7788          0.0.0.0:*               LISTEN      4530/concourse
</span><span class='line'>tcp        <span class="m">0</span>      <span class="m">0</span> 127.0.0.1:8079          0.0.0.0:*               LISTEN      4525/concourse
</span><span class='line'>tcp        <span class="m">0</span>      <span class="m">0</span> 0.0.0.0:22              0.0.0.0:*               LISTEN      1283/sshd
</span><span class='line'>tcp        <span class="m">0</span>      <span class="m">0</span> 127.0.0.1:5432          0.0.0.0:*               LISTEN      4047/postgres
</span><span class='line'>tcp6       <span class="m">0</span>      <span class="m">0</span> :::36159                :::*                    LISTEN      4525/concourse
</span><span class='line'>tcp6       <span class="m">0</span>      <span class="m">0</span> :::46829                :::*                    LISTEN      4525/concourse
</span><span class='line'>tcp6       <span class="m">0</span>      <span class="m">0</span> :::2222                 :::*                    LISTEN      4525/concourse
</span><span class='line'>tcp6       <span class="m">0</span>      <span class="m">0</span> :::8080                 :::*                    LISTEN      4525/concourse
</span><span class='line'>tcp6       <span class="m">0</span>      <span class="m">0</span> :::22                   :::*                    LISTEN      1283/sshd
</span><span class='line'>udp        <span class="m">0</span>      <span class="m">0</span> 0.0.0.0:68              0.0.0.0:*                           918/dhclient
</span><span class='line'>udp        <span class="m">0</span>      <span class="m">0</span> 0.0.0.0:42165           0.0.0.0:*                           4530/concourse
</span></code></pre></td></tr></table></div></figure>


<h2>Client Side:</h2>

<p>I will be using a the Fly cli from a Mac, so first we need to download the fly-cli for Mac:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>wget https://github.com/concourse/concourse/releases/download/v3.6.0/fly_darwin_amd64
</span><span class='line'><span class="nv">$ </span>chmod +x fly_darwin_amd64
</span><span class='line'><span class="nv">$ </span><span class="nb">alias </span><span class="nv">fly</span><span class="o">=</span><span class="s1">&#39;./fly_darwin_amd64&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Next, we need to setup our Concourse Target by Authenticating against our Concourse Endpoint, lets setup our target with the name <code>ci</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>fly -t ci login -c http://10.20.30.40:8080
</span><span class='line'>logging in to team <span class="s1">&#39;main&#39;</span>
</span><span class='line'>
</span><span class='line'>username: admin
</span><span class='line'>password:
</span><span class='line'>
</span><span class='line'>target saved
</span></code></pre></td></tr></table></div></figure>


<p>Lets list our targets:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>fly targets
</span><span class='line'>name  url                        team  expiry
</span><span class='line'>ci    http://10.20.30.40:8080    main  Wed, <span class="m">08</span> Nov <span class="m">2017</span> 15:32:59 UTC
</span></code></pre></td></tr></table></div></figure>


<p>Listing Registered Workers:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>fly -t ci workers
</span><span class='line'>name              containers  platform  tags  team  state    version
</span><span class='line'>ip-172-31-12-134  <span class="m">0</span>           linux     none  none  running  1.2
</span></code></pre></td></tr></table></div></figure>


<p>Listing Active Containers:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>fly -t ci containers
</span><span class='line'>handle                                worker            pipeline     job            build <span class="c">#  build id  type   name                  attempt</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Hello World Pipeline:</h2>

<p>Let&rsquo;s create a basic pipeline, that will print out <code>Hello, World!</code>:</p>

<p>Our <code>hello-world.yml</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">jobs</span><span class="p-Indicator">:</span>
</span><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">my-job</span>
</span><span class='line'>  <span class="l-Scalar-Plain">plan</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">task</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">say-hello</span>
</span><span class='line'>    <span class="l-Scalar-Plain">config</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">platform</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">linux</span>
</span><span class='line'>      <span class="l-Scalar-Plain">image_resource</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">docker-image</span>
</span><span class='line'>        <span class="l-Scalar-Plain">source</span><span class="p-Indicator">:</span>
</span><span class='line'>          <span class="l-Scalar-Plain">repository</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">alpine</span>
</span><span class='line'>          <span class="l-Scalar-Plain">tag</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">edge</span>
</span><span class='line'>      <span class="l-Scalar-Plain">run</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">path</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/bin/sh</span>
</span><span class='line'>        <span class="l-Scalar-Plain">args</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">-c</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="p-Indicator">|</span>
</span><span class='line'>          <span class="no">echo &quot;=============&quot;</span>
</span><span class='line'>          <span class="no">echo &quot;Hello, World!&quot;</span>
</span><span class='line'>          <span class="no">echo &quot;=============&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Applying the configuration to our pipeline:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>fly -t ci <span class="nb">set</span>-pipeline -p yeeehaa -c hello-world.yml
</span><span class='line'><span class="nb">jobs</span>:
</span><span class='line'>  job my-job has been added:
</span><span class='line'>    name: my-job
</span><span class='line'>    plan:
</span><span class='line'>    - task: say-hello
</span><span class='line'>      config:
</span><span class='line'>        platform: linux
</span><span class='line'>        image_resource:
</span><span class='line'>          <span class="nb">type</span>: docker-image
</span><span class='line'>          <span class="nb">source</span>:
</span><span class='line'>            repository: alpine
</span><span class='line'>            tag: edge
</span><span class='line'>        run:
</span><span class='line'>          path: /bin/sh
</span><span class='line'>          args:
</span><span class='line'>          - -c
</span><span class='line'>          - <span class="p">|</span>
</span><span class='line'>            <span class="nb">echo</span> <span class="s2">&quot;=============&quot;</span>
</span><span class='line'>            <span class="nb">echo</span> <span class="s2">&quot;Hello, World!&quot;</span>
</span><span class='line'>            <span class="nb">echo</span> <span class="s2">&quot;=============&quot;</span>
</span><span class='line'>
</span><span class='line'>apply configuration? <span class="o">[</span>yN<span class="o">]</span>: y
</span><span class='line'>pipeline created!
</span><span class='line'>you can view your pipeline here: http://10.20.30.40:8080/teams/main/pipelines/yeeehaa
</span><span class='line'>
</span><span class='line'>the pipeline is currently paused. to unpause, either:
</span><span class='line'>  - run the unpause-pipeline <span class="nb">command</span>
</span><span class='line'>  - click play next to the pipeline in the web ui
</span></code></pre></td></tr></table></div></figure>


<p>We can browse to the WebUI to unpause the pipeline, but since I like to do everything on cli as far as possible, I will unpause the pipeline via cli:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>fly -t ci unpause-pipeline -p yeeehaa
</span><span class='line'>unpaused <span class="s1">&#39;yeeehaa&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now our Pipeline is unpaused, but since we did not specify any triggers, we need to manually trigger the pipeline to run, you can either via the WebUI, select your pipeline which in this case will be named <code>yeeehaa</code> and then select the job, which will be <code>my-job</code> then hit the <code>+</code> sign, which will trigger the pipeline.</p>

<p>I will be using the cli:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>fly -t ci trigger-job --job yeeehaa/my-job
</span><span class='line'>started yeeehaa/my-job <span class="c">#1</span>
</span></code></pre></td></tr></table></div></figure>


<p>Via the WebUI on <code>http://10.20.30.40:8080/teams/main/pipelines/yeeehaa/jobs/my-job/builds/1</code> you should see the <code>Hello, World!</code> output, or via the cli, we also have the option to see the output, so let&rsquo;s trigger it again, but this time passing the <code>--watch</code> flag:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>fly -t ci trigger-job --job yeeehaa/my-job --watch
</span><span class='line'>started yeeehaa/my-job <span class="c">#2</span>
</span><span class='line'>
</span><span class='line'>initializing
</span><span class='line'>running /bin/sh -c <span class="nb">echo</span> <span class="s2">&quot;=============&quot;</span>
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;Hello, World!&quot;</span>
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;=============&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="o">=============</span>
</span><span class='line'>Hello, World!
</span><span class='line'><span class="o">=============</span>
</span><span class='line'>succeeded
</span></code></pre></td></tr></table></div></figure>


<p>Listing our Workers and Containers again:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>fly -t ci workers
</span><span class='line'>name              containers  platform  tags  team  state    version
</span><span class='line'>ip-172-31-12-134  <span class="m">2</span>           linux     none  none  running  1.2
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>fly -t ci containers
</span><span class='line'>handle                                worker            pipeline     job         build <span class="c">#  build id  type   name           attempt</span>
</span><span class='line'>36982955-54fd-4c1b-57b8-216486c58db8  ip-172-31-12-134  yeeehaa      my-job      <span class="m">2</span>        <span class="m">729</span>       task   say-hello      n/a
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing Elastalert for Elasticsearch on Amazon Linux]]></title>
    <link href="http://blog.ruanbekker.com/blog/2017/11/07/installing-elastalert-for-elasticsearch-on-amazon-linux/"/>
    <updated>2017-11-07T07:53:33-05:00</updated>
    <id>http://blog.ruanbekker.com/blog/2017/11/07/installing-elastalert-for-elasticsearch-on-amazon-linux</id>
    <content type="html"><![CDATA[<p>Elastalert, a service for Alerting with Elasticsearch:</p>

<ul>
<li><a href="https://github.com/Yelp/elastalert">https://github.com/Yelp/elastalert</a></li>
</ul>


<h2>Setting up Elastalert</h2>

<p>We will setup Elastalert for Elasticsearch on Amazon Linux which is a RHEL Based Distribution.</p>

<p>Setting up dependencies</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo su
</span><span class='line'><span class="c"># yum update -y</span>
</span><span class='line'><span class="c"># yum install git python-devel lib-devel libevent-devel bzip2-devel openssl-devel ncurses-devel zlib zlib-devel xz-devel gcc -y</span>
</span><span class='line'><span class="c"># yum install python-setuptools -y</span>
</span><span class='line'><span class="c"># easy_install pip</span>
</span><span class='line'><span class="c"># pip install virtualenv</span>
</span><span class='line'><span class="c"># virtualenv .venv</span>
</span><span class='line'><span class="c"># source .venv/bin/activate</span>
</span><span class='line'><span class="c"># pip install pip --upgrade</span>
</span><span class='line'><span class="c"># pip install setuptools --upgrade</span>
</span></code></pre></td></tr></table></div></figure>


<p>Clone Elastalert Repository and Install Dependencies:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git clone https://github.com/Yelp/elastalert
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>elastalert/
</span><span class='line'><span class="nv">$ </span>pip install -r requirements.txt
</span></code></pre></td></tr></table></div></figure>


<p>Configs:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cp config.yaml.example config.yaml
</span><span class='line'><span class="nv">$ </span>vim config.yaml
</span><span class='line'><span class="nv">$ </span>vim example_rules/example_frequency.yaml
</span></code></pre></td></tr></table></div></figure>


<p>After opening the config, populate the configuration where needed.</p>

<p>Installation of elastalert:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>python setup.py install
</span><span class='line'><span class="nv">$ </span>elastalert-create-index
</span></code></pre></td></tr></table></div></figure>


<p>Running elastalert:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>python -m elastalert.elastalert --verbose --rule example_frequency.yaml
</span><span class='line'>INFO:elastalert:Starting up
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux Shell Commands With the Python Commands Module]]></title>
    <link href="http://blog.ruanbekker.com/blog/2017/11/06/linux-shell-commands-with-the-python-commands-module/"/>
    <updated>2017-11-06T15:15:23-05:00</updated>
    <id>http://blog.ruanbekker.com/blog/2017/11/06/linux-shell-commands-with-the-python-commands-module</id>
    <content type="html"><![CDATA[<p>Using Python to Execute Shell Commands in Linux</p>

<h2>Status Code and Output:</h2>

<p>Getting the Status Code and the Output:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">commands</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">commands</span><span class="o">.</span><span class="n">getstatusoutput</span><span class="p">(</span><span class="s">&#39;echo foo&#39;</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="s">&#39;foo&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">status</span><span class="p">,</span> <span class="n">output</span> <span class="o">=</span> <span class="n">commands</span><span class="o">.</span><span class="n">getstatusoutput</span><span class="p">(</span><span class="s">&#39;echo foo&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">status</span><span class="p">)</span>
</span><span class='line'><span class="mi">0</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">output</span><span class="p">)</span>
</span><span class='line'><span class="n">foo</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Command Output Only:</h2>

<p>Only getting the Shell Output:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">commands</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">commands</span><span class="o">.</span><span class="n">getoutput</span><span class="p">(</span><span class="s">&#39;echo foo&#39;</span><span class="p">)</span>
</span><span class='line'><span class="s">&#39;foo&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Basic Script</h2>

<p>Test file with a one line of data:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cat file.txt
</span><span class='line'><span class="nb">test</span>-string
</span></code></pre></td></tr></table></div></figure>


<p>Our very basic python script:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">commands</span>
</span><span class='line'>
</span><span class='line'><span class="n">status</span> <span class="o">=</span> <span class="bp">None</span>
</span><span class='line'><span class="n">output</span> <span class="o">=</span> <span class="bp">None</span>
</span><span class='line'>
</span><span class='line'><span class="n">status</span><span class="p">,</span> <span class="n">output</span> <span class="o">=</span> <span class="n">commands</span><span class="o">.</span><span class="n">getstatusoutput</span><span class="p">(</span><span class="s">&#39;cat file.txt&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="s">&quot;Status: {}, Output: {}&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">status</span><span class="p">,</span> <span class="n">output</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<p>Running the script:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>python script.py
</span><span class='line'>Status: 0, Output: <span class="nb">test</span>-string
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Python to Query MySQL Database With MySQLdb Library]]></title>
    <link href="http://blog.ruanbekker.com/blog/2017/10/26/using-python-to-query-mysql-database-with-mysqldb-library/"/>
    <updated>2017-10-26T03:40:11-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2017/10/26/using-python-to-query-mysql-database-with-mysqldb-library</id>
    <content type="html"><![CDATA[<p>a Quick post to demostrate how to use Python to Query data from MySQL. We will use the MySQL Docker Image for the demonstration.</p>

<h2>Provision MySQL</h2>

<p>We will use the latest mysql image, and use the environment variable to pass the root password, and also expose the mysql port:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker run -itd -p 3306:3306 -e <span class="nv">MYSQL_ROOT_PASSWORD</span><span class="o">=</span>password mysql
</span></code></pre></td></tr></table></div></figure>


<h2>Populate some data in MySQL</h2>

<p>Connect to MySQL:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mysql -h 127.0.0.1 -u root -ppasword
</span></code></pre></td></tr></table></div></figure>


<p>Create some test data:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">create</span> <span class="k">database</span> <span class="n">foo</span><span class="p">;</span>
</span><span class='line'><span class="n">mysql</span><span class="o">&gt;</span> <span class="n">use</span> <span class="n">foo</span><span class="p">;</span>
</span><span class='line'><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">create</span> <span class="k">table</span> <span class="n">bar</span> <span class="p">(</span><span class="n">name</span> <span class="nb">VARCHAR</span><span class="p">(</span><span class="mi">20</span><span class="p">),</span> <span class="n">surname</span> <span class="nb">VARCHAR</span><span class="p">(</span><span class="mi">20</span><span class="p">));</span>
</span><span class='line'><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">insert</span> <span class="k">into</span> <span class="n">bar</span> <span class="k">values</span><span class="p">(</span><span class="s1">&#39;ruan&#39;</span><span class="p">,</span> <span class="s1">&#39;bekker&#39;</span><span class="p">);</span>
</span><span class='line'><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">insert</span> <span class="k">into</span> <span class="n">bar</span> <span class="k">values</span><span class="p">(</span><span class="s1">&#39;stefan&#39;</span><span class="p">,</span> <span class="s1">&#39;bester&#39;</span><span class="p">);</span>
</span><span class='line'><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">insert</span> <span class="k">into</span> <span class="n">bar</span> <span class="k">values</span><span class="p">(</span><span class="s1">&#39;peter&#39;</span><span class="p">,</span> <span class="s1">&#39;williams&#39;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Python with MySQL: Setup the Environment</h2>

<p>We will use virtualenv to create a virtual environment to keep our installation isolated from the rest of our system. Install virtualenv:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>pip install virtualenv
</span></code></pre></td></tr></table></div></figure>


<p>Create a virtual environment and install the required dependency:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>virtualenv venv-mysql
</span><span class='line'><span class="nv">$ </span><span class="nb">source </span>venv-mysql/bin/activate
</span><span class='line'><span class="o">(</span>venv-mysql<span class="o">)</span> pip install MySQL-python
</span></code></pre></td></tr></table></div></figure>


<h2>Python with MySQL: Develop the Client</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">MySQLdb</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db</span> <span class="o">=</span> <span class="n">MySQLdb</span><span class="o">.</span><span class="n">connect</span><span class="p">(</span><span class="s">&#39;127.0.0.1&#39;</span><span class="p">,</span> <span class="s">&#39;root&#39;</span><span class="p">,</span> <span class="s">&#39;password&#39;</span><span class="p">,</span> <span class="s">&#39;foo&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">con</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">cursor</span><span class="p">()</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">con</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="s">&quot;SELECT * from bar&quot;</span><span class="p">)</span>
</span><span class='line'><span class="il">4L</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">rows</span> <span class="o">=</span> <span class="n">con</span><span class="o">.</span><span class="n">fetchall</span><span class="p">()</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">for</span> <span class="n">row</span> <span class="ow">in</span> <span class="n">rows</span><span class="p">:</span>
</span><span class='line'><span class="o">...</span>     <span class="k">print</span><span class="p">(</span><span class="n">row</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">row</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'><span class="p">(</span><span class="s">&#39;ruan&#39;</span><span class="p">,</span> <span class="s">&#39;bekker&#39;</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="s">&#39;stefan&#39;</span><span class="p">,</span> <span class="s">&#39;bester&#39;</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="s">&#39;peter&#39;</span><span class="p">,</span> <span class="s">&#39;williams&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="nb">exit</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Your First Hello World App With Golang]]></title>
    <link href="http://blog.ruanbekker.com/blog/2017/10/25/your-first-hello-world-app-with-golang/"/>
    <updated>2017-10-25T17:16:25-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2017/10/25/your-first-hello-world-app-with-golang</id>
    <content type="html"><![CDATA[<p>So everyone has been saying how awesome Golang is, and at this moment, I am quite curious to fiddle with it.</p>

<h2>Golang Environment: Golang Docker Image</h2>

<p>A quick way to get a Golang Environment, will be to use Docker. We will be using the Alpine tag:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker run -it golang:alpine sh
</span></code></pre></td></tr></table></div></figure>


<h2>Our Basic App</h2>

<p>After we are in our container, lets write our first Hello World App:</p>

<figure class='code'><figcaption><span>app.go</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Hello, World!&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Running our App:</h2>

<p>Using golang to run our app:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>go run app.go
</span><span class='line'>Hello, World!
</span></code></pre></td></tr></table></div></figure>


<p>We can also build our app to create a executable binary:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>go build app.go
</span></code></pre></td></tr></table></div></figure>


<p>You will find that there is a executable binary named <code>app</code> placed in the current working directory. Let&rsquo;s execute it:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>./app
</span><span class='line'>Hello, World!
</span></code></pre></td></tr></table></div></figure>


<p>This was a very basic example, but will add more examples as I am learning the language</p>

<h2>Resources:</h2>

<ul>
<li><a href="https://golang.org/">https://golang.org/</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[New Posts on Github Pages With Octopress Not Showing on Your Blog]]></title>
    <link href="http://blog.ruanbekker.com/blog/2017/10/25/new-posts-on-github-pages-with-octopress-not-showing-on-your-blog/"/>
    <updated>2017-10-25T06:54:59-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2017/10/25/new-posts-on-github-pages-with-octopress-not-showing-on-your-blog</id>
    <content type="html"><![CDATA[<p>So today I had the issue where new posts that was generated and pushed to github, not being displayed on my blog.</p>

<p>I was able to see the markdown pages on my github respository, but via the blog itself, getting 404&rsquo;s.</p>

<h2>The Issue:</h2>

<p>When I did a <code>rake generate</code> I found the following error:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>jekyll 2.5.3 <span class="p">|</span> Error: invalid byte sequence in US-ASCII
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h2>Resolving the Issue:</h2>

<p>After running the following, I was able to get rid of the error, and posts showing again:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">export </span><span class="nv">LC_ALL</span><span class="o">=</span><span class="s2">&quot;en_US.UTF-8&quot;</span>
</span><span class='line'><span class="nv">$ </span><span class="nb">export </span><span class="nv">LANG</span><span class="o">=</span><span class="s2">&quot;en_US.UTF-8&quot;</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Running Java Web Applications on Tomcat With Docker Swarm]]></title>
    <link href="http://blog.ruanbekker.com/blog/2017/10/24/running-java-web-applications-on-tomcat-with-docker-swarm/"/>
    <updated>2017-10-24T09:37:38-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2017/10/24/running-java-web-applications-on-tomcat-with-docker-swarm</id>
    <content type="html"><![CDATA[<p>From <a href="https://sysadmins.co.za/running-java-web-applications-on-docker-with-payara-micro/?referral=blog.ruanbekker.com?category=java">this post</a> we used Payara Micro to Setup a Web Application, and a full example was provided on how to create a <code>war</code> file that will be used for the deployment.</p>

<p>Today we will be using Tomcat to deploy the same application. The official repository can be found on <a href="https://hub.docker.com/_/tomcat/">hub.docker.com/_/tomcat</a> .</p>

<h2>Our Dockerfile for our Own Tomcat Image:</h2>

<p>The <code>Dockerfile</code> is modified a bit (CATALINA_OPTS) to be able to pass <code>JVM</code> environment variables, but if you would like to use the standard image you can skip this and just use the image from their repository.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>FROM openjdk:8-jre-alpine
</span><span class='line'>
</span><span class='line'>ENV CATALINA_HOME /usr/local/tomcat
</span><span class='line'>ENV PATH <span class="nv">$CATALINA_HOME</span>/bin:<span class="nv">$PATH</span>
</span><span class='line'>RUN mkdir -p <span class="s2">&quot;$CATALINA_HOME&quot;</span>
</span><span class='line'>WORKDIR <span class="nv">$CATALINA_HOME</span>
</span><span class='line'>ENV CATALINA_OPTS -Xmx768m -Xms512m -XX:PermSize<span class="o">=</span>256m -XX:MaxPermSize<span class="o">=</span>512m -XX:ReservedCodeCacheSize<span class="o">=</span>64m -XX:+UseG1GC -XX:+CMSClassUnloadingEnabled -XX:+PrintHeapAtGC -XX:+PrintGCDetails -XX:+PrintGCTimeStamps
</span><span class='line'><span class="c"># let &quot;Tomcat Native&quot; live somewhere isolated</span>
</span><span class='line'>ENV TOMCAT_NATIVE_LIBDIR <span class="nv">$CATALINA_HOME</span>/native-jni-lib
</span><span class='line'>ENV LD_LIBRARY_PATH <span class="k">${</span><span class="nv">LD_LIBRARY_PATH</span><span class="p">:+</span><span class="nv">$LD_LIBRARY_PATH</span><span class="p">:</span><span class="k">}</span><span class="nv">$TOMCAT_NATIVE_LIBDIR</span>
</span><span class='line'>
</span><span class='line'>RUN apk add --no-cache gnupg
</span><span class='line'>
</span><span class='line'><span class="c"># see https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/KEYS</span>
</span><span class='line'><span class="c"># see also &quot;update.sh&quot; (https://github.com/docker-library/tomcat/blob/master/update.sh)</span>
</span><span class='line'>ENV GPG_KEYS 05AB33110949707C93A279E3D3EFE6B686867BA6 07E48665A34DCAFAE522E5E6266191C37C037D42 47309207D818FFD8DCD3F83F1931D684307A10A5 541FBE7D8F78B25E055DDEE13C370389288584E7 61B832AC2F1C5A90F0F9B00A1C506407564C17A3 713DA88BE50911535FE716F5208B0AB1D63011C7 79F7026C690BAA50B92CD8B66A3AD3F4F22C4FED 9BA44C2621385CB966EBA586F72C284D731FABEE A27677289986DB50844682F8ACB77FC2E86E29AC A9C5DF4D22E99998D9875A5110C01C5A2F6059E7 DCFD35E0BF8CA7344752DE8B6FB21E8933C60243 F3A04C595DB5B6A5F1ECA43E3B7BBB100D811BBE F7DA48BB64BCB84ECBA7EE6935CD23C10D498E23
</span><span class='line'>RUN <span class="nb">set</span> -ex<span class="p">;</span> <span class="se">\</span>
</span><span class='line'>  <span class="k">for</span> key in <span class="nv">$GPG_KEYS</span><span class="p">;</span> <span class="k">do</span> <span class="se">\</span>
</span><span class='line'>      gpg --keyserver ha.pool.sks-keyservers.net --recv-keys <span class="s2">&quot;$key&quot;</span><span class="p">;</span> <span class="se">\</span>
</span><span class='line'>  <span class="k">done</span>
</span><span class='line'>
</span><span class='line'>ENV TOMCAT_MAJOR 8
</span><span class='line'>ENV TOMCAT_VERSION 8.5.23
</span><span class='line'>ENV TOMCAT_SHA1 1ba27c1bb86ab9c8404e98068800f90bd662523c
</span><span class='line'>
</span><span class='line'>ENV TOMCAT_TGZ_URLS <span class="se">\</span>
</span><span class='line'><span class="c"># https://issues.apache.org/jira/browse/INFRA-8753?focusedCommentId=14735394#comment-14735394</span>
</span><span class='line'>  https://www.apache.org/dyn/closer.cgi?action<span class="o">=</span>download<span class="p">&amp;</span><span class="nv">filename</span><span class="o">=</span>tomcat/tomcat-<span class="nv">$TOMCAT_MAJOR</span>/v<span class="nv">$TOMCAT_VERSION</span>/bin/apache-tomcat-<span class="nv">$TOMCAT_VERSION</span>.tar.gz <span class="se">\</span>
</span><span class='line'><span class="c"># if the version is outdated, we might have to pull from the dist/archive :/</span>
</span><span class='line'>  https://www-us.apache.org/dist/tomcat/tomcat-<span class="nv">$TOMCAT_MAJOR</span>/v<span class="nv">$TOMCAT_VERSION</span>/bin/apache-tomcat-<span class="nv">$TOMCAT_VERSION</span>.tar.gz <span class="se">\</span>
</span><span class='line'>  https://www.apache.org/dist/tomcat/tomcat-<span class="nv">$TOMCAT_MAJOR</span>/v<span class="nv">$TOMCAT_VERSION</span>/bin/apache-tomcat-<span class="nv">$TOMCAT_VERSION</span>.tar.gz <span class="se">\</span>
</span><span class='line'>  https://archive.apache.org/dist/tomcat/tomcat-<span class="nv">$TOMCAT_MAJOR</span>/v<span class="nv">$TOMCAT_VERSION</span>/bin/apache-tomcat-<span class="nv">$TOMCAT_VERSION</span>.tar.gz
</span><span class='line'>
</span><span class='line'>ENV TOMCAT_ASC_URLS <span class="se">\</span>
</span><span class='line'>  https://www.apache.org/dyn/closer.cgi?action<span class="o">=</span>download<span class="p">&amp;</span><span class="nv">filename</span><span class="o">=</span>tomcat/tomcat-<span class="nv">$TOMCAT_MAJOR</span>/v<span class="nv">$TOMCAT_VERSION</span>/bin/apache-tomcat-<span class="nv">$TOMCAT_VERSION</span>.tar.gz.asc <span class="se">\</span>
</span><span class='line'><span class="c"># not all the mirrors actually carry the .asc files :&#39;(</span>
</span><span class='line'>  https://www-us.apache.org/dist/tomcat/tomcat-<span class="nv">$TOMCAT_MAJOR</span>/v<span class="nv">$TOMCAT_VERSION</span>/bin/apache-tomcat-<span class="nv">$TOMCAT_VERSION</span>.tar.gz.asc <span class="se">\</span>
</span><span class='line'>  https://www.apache.org/dist/tomcat/tomcat-<span class="nv">$TOMCAT_MAJOR</span>/v<span class="nv">$TOMCAT_VERSION</span>/bin/apache-tomcat-<span class="nv">$TOMCAT_VERSION</span>.tar.gz.asc <span class="se">\</span>
</span><span class='line'>  https://archive.apache.org/dist/tomcat/tomcat-<span class="nv">$TOMCAT_MAJOR</span>/v<span class="nv">$TOMCAT_VERSION</span>/bin/apache-tomcat-<span class="nv">$TOMCAT_VERSION</span>.tar.gz.asc
</span><span class='line'>
</span><span class='line'>RUN <span class="nb">set</span> -eux<span class="p">;</span> <span class="se">\</span>
</span><span class='line'>  <span class="se">\</span>
</span><span class='line'>  apk add --no-cache --virtual .fetch-deps <span class="se">\</span>
</span><span class='line'>      ca-certificates <span class="se">\</span>
</span><span class='line'>      openssl <span class="se">\</span>
</span><span class='line'>  <span class="p">;</span> <span class="se">\</span>
</span><span class='line'>  <span class="se">\</span>
</span><span class='line'>  <span class="nv">success</span><span class="o">=</span><span class="p">;</span> <span class="se">\</span>
</span><span class='line'>  <span class="k">for</span> url in <span class="nv">$TOMCAT_TGZ_URLS</span><span class="p">;</span> <span class="k">do</span> <span class="se">\</span>
</span><span class='line'>      <span class="k">if</span> wget -O tomcat.tar.gz <span class="s2">&quot;$url&quot;</span><span class="p">;</span> <span class="k">then</span> <span class="se">\</span>
</span><span class='line'>          <span class="nv">success</span><span class="o">=</span>1<span class="p">;</span> <span class="se">\</span>
</span><span class='line'>          <span class="nb">break</span><span class="p">;</span> <span class="se">\</span>
</span><span class='line'>      <span class="k">fi</span><span class="p">;</span> <span class="se">\</span>
</span><span class='line'>  <span class="k">done</span><span class="p">;</span> <span class="se">\</span>
</span><span class='line'>  <span class="o">[</span> -n <span class="s2">&quot;$success&quot;</span> <span class="o">]</span><span class="p">;</span> <span class="se">\</span>
</span><span class='line'>  <span class="se">\</span>
</span><span class='line'>  <span class="nb">echo</span> <span class="s2">&quot;$TOMCAT_SHA1 *tomcat.tar.gz&quot;</span> <span class="p">|</span> sha1sum -c -<span class="p">;</span> <span class="se">\</span>
</span><span class='line'>  <span class="se">\</span>
</span><span class='line'>  <span class="nv">success</span><span class="o">=</span><span class="p">;</span> <span class="se">\</span>
</span><span class='line'>  <span class="k">for</span> url in <span class="nv">$TOMCAT_ASC_URLS</span><span class="p">;</span> <span class="k">do</span> <span class="se">\</span>
</span><span class='line'>      <span class="k">if</span> wget -O tomcat.tar.gz.asc <span class="s2">&quot;$url&quot;</span><span class="p">;</span> <span class="k">then</span> <span class="se">\</span>
</span><span class='line'>          <span class="nv">success</span><span class="o">=</span>1<span class="p">;</span> <span class="se">\</span>
</span><span class='line'>          <span class="nb">break</span><span class="p">;</span> <span class="se">\</span>
</span><span class='line'>      <span class="k">fi</span><span class="p">;</span> <span class="se">\</span>
</span><span class='line'>  <span class="k">done</span><span class="p">;</span> <span class="se">\</span>
</span><span class='line'>  <span class="o">[</span> -n <span class="s2">&quot;$success&quot;</span> <span class="o">]</span><span class="p">;</span> <span class="se">\</span>
</span><span class='line'>  <span class="se">\</span>
</span><span class='line'>  gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz<span class="p">;</span> <span class="se">\</span>
</span><span class='line'>  tar -xvf tomcat.tar.gz --strip-components<span class="o">=</span>1<span class="p">;</span> <span class="se">\</span>
</span><span class='line'>  rm bin/*.bat<span class="p">;</span> <span class="se">\</span>
</span><span class='line'>  rm tomcat.tar.gz*<span class="p">;</span> <span class="se">\</span>
</span><span class='line'>  <span class="se">\</span>
</span><span class='line'>  <span class="nv">nativeBuildDir</span><span class="o">=</span><span class="s2">&quot;$(mktemp -d)&quot;</span><span class="p">;</span> <span class="se">\</span>
</span><span class='line'>  tar -xvf bin/tomcat-native.tar.gz -C <span class="s2">&quot;$nativeBuildDir&quot;</span> --strip-components<span class="o">=</span>1<span class="p">;</span> <span class="se">\</span>
</span><span class='line'>  apk add --no-cache --virtual .native-build-deps <span class="se">\</span>
</span><span class='line'>      apr-dev <span class="se">\</span>
</span><span class='line'>      coreutils <span class="se">\</span>
</span><span class='line'>      dpkg-dev dpkg <span class="se">\</span>
</span><span class='line'>      gcc <span class="se">\</span>
</span><span class='line'>      libc-dev <span class="se">\</span>
</span><span class='line'>      make <span class="se">\</span>
</span><span class='line'>      <span class="s2">&quot;openjdk${JAVA_VERSION%%[-~bu]*}&quot;</span><span class="o">=</span><span class="s2">&quot;$JAVA_ALPINE_VERSION&quot;</span> <span class="se">\</span>
</span><span class='line'>      openssl-dev <span class="se">\</span>
</span><span class='line'>  <span class="p">;</span> <span class="se">\</span>
</span><span class='line'>  <span class="o">(</span> <span class="se">\</span>
</span><span class='line'>      <span class="nb">export </span><span class="nv">CATALINA_HOME</span><span class="o">=</span><span class="s2">&quot;$PWD&quot;</span><span class="p">;</span> <span class="se">\</span>
</span><span class='line'>      <span class="nb">cd</span> <span class="s2">&quot;$nativeBuildDir/native&quot;</span><span class="p">;</span> <span class="se">\</span>
</span><span class='line'>      <span class="nv">gnuArch</span><span class="o">=</span><span class="s2">&quot;$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)&quot;</span><span class="p">;</span> <span class="se">\</span>
</span><span class='line'>      ./configure <span class="se">\</span>
</span><span class='line'>          --build<span class="o">=</span><span class="s2">&quot;$gnuArch&quot;</span> <span class="se">\</span>
</span><span class='line'>          --libdir<span class="o">=</span><span class="s2">&quot;$TOMCAT_NATIVE_LIBDIR&quot;</span> <span class="se">\</span>
</span><span class='line'>          --prefix<span class="o">=</span><span class="s2">&quot;$CATALINA_HOME&quot;</span> <span class="se">\</span>
</span><span class='line'>          --with-apr<span class="o">=</span><span class="s2">&quot;$(which apr-1-config)&quot;</span> <span class="se">\</span>
</span><span class='line'>          --with-java-home<span class="o">=</span><span class="s2">&quot;$(docker-java-home)&quot;</span> <span class="se">\</span>
</span><span class='line'>          --with-ssl<span class="o">=</span>yes<span class="p">;</span> <span class="se">\</span>
</span><span class='line'>      make -j <span class="s2">&quot;$(nproc)&quot;</span><span class="p">;</span> <span class="se">\</span>
</span><span class='line'>      make install<span class="p">;</span> <span class="se">\</span>
</span><span class='line'>  <span class="o">)</span><span class="p">;</span> <span class="se">\</span>
</span><span class='line'>  <span class="nv">runDeps</span><span class="o">=</span><span class="s2">&quot;$( \</span>
</span><span class='line'><span class="s2">     scanelf --needed --nobanner --format &#39;%n#p&#39; --recursive &quot;</span><span class="nv">$TOMCAT_NATIVE_LIBDIR</span><span class="s2">&quot; \</span>
</span><span class='line'><span class="s2">         | tr &#39;,&#39; &#39;\n&#39; \</span>
</span><span class='line'><span class="s2">         | sort -u \</span>
</span><span class='line'><span class="s2">         | awk &#39;system(&quot;</span><span class="o">[</span> -e /usr/local/lib/<span class="s2">&quot; $1 &quot;</span> <span class="o">]</span><span class="s2">&quot;) == 0 { next } { print &quot;</span>so:<span class="s2">&quot; $1 }&#39; \</span>
</span><span class='line'><span class="s2"> )&quot;</span><span class="p">;</span> <span class="se">\</span>
</span><span class='line'>  apk add --virtual .tomcat-native-rundeps <span class="nv">$runDeps</span><span class="p">;</span> <span class="se">\</span>
</span><span class='line'>  apk del .fetch-deps .native-build-deps<span class="p">;</span> <span class="se">\</span>
</span><span class='line'>  rm -rf <span class="s2">&quot;$nativeBuildDir&quot;</span><span class="p">;</span> <span class="se">\</span>
</span><span class='line'>  rm bin/tomcat-native.tar.gz<span class="p">;</span> <span class="se">\</span>
</span><span class='line'>  <span class="se">\</span>
</span><span class='line'><span class="c"># sh removes env vars it doesn&#39;t support (ones with periods)</span>
</span><span class='line'><span class="c"># https://github.com/docker-library/tomcat/issues/77</span>
</span><span class='line'>  apk add --no-cache bash<span class="p">;</span> <span class="se">\</span>
</span><span class='line'>  find ./bin/ -name <span class="s1">&#39;*.sh&#39;</span> -exec sed -ri <span class="s1">&#39;s|^#!/bin/sh$|#!/usr/bin/env bash|&#39;</span> <span class="s1">&#39;{}&#39;</span> +
</span><span class='line'>
</span><span class='line'><span class="c"># verify Tomcat Native is working properly</span>
</span><span class='line'>RUN <span class="nb">set</span> -e <span class="se">\</span>
</span><span class='line'>  <span class="o">&amp;&amp;</span> <span class="nv">nativeLines</span><span class="o">=</span><span class="s2">&quot;$(catalina.sh configtest 2&gt;&amp;1)&quot;</span> <span class="se">\</span>
</span><span class='line'>  <span class="o">&amp;&amp;</span> <span class="nv">nativeLines</span><span class="o">=</span><span class="s2">&quot;$(echo &quot;</span><span class="nv">$nativeLines</span><span class="s2">&quot; | grep &#39;Apache Tomcat Native&#39;)&quot;</span> <span class="se">\</span>
</span><span class='line'>  <span class="o">&amp;&amp;</span> <span class="nv">nativeLines</span><span class="o">=</span><span class="s2">&quot;$(echo &quot;</span><span class="nv">$nativeLines</span><span class="s2">&quot; | sort -u)&quot;</span> <span class="se">\</span>
</span><span class='line'>  <span class="o">&amp;&amp;</span> <span class="k">if</span> ! <span class="nb">echo</span> <span class="s2">&quot;$nativeLines&quot;</span> <span class="p">|</span> grep <span class="s1">&#39;INFO: Loaded APR based Apache Tomcat Native library&#39;</span> &gt;<span class="p">&amp;</span>2<span class="p">;</span> <span class="k">then</span> <span class="se">\</span>
</span><span class='line'>      <span class="nb">echo</span> &gt;<span class="p">&amp;</span><span class="m">2</span> <span class="s2">&quot;$nativeLines&quot;</span><span class="p">;</span> <span class="se">\</span>
</span><span class='line'>      <span class="nb">exit </span>1<span class="p">;</span> <span class="se">\</span>
</span><span class='line'>  <span class="k">fi</span>
</span><span class='line'>
</span><span class='line'>EXPOSE 8080
</span><span class='line'>CMD <span class="o">[</span><span class="s2">&quot;catalina.sh&quot;</span>, <span class="s2">&quot;run&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h2>Building our Image and Pusing to our Registry:</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker build -t registry.gitlab.com/&lt;user&gt;/&lt;repo&gt;/&lt;image&gt;:&lt;tag&gt;
</span><span class='line'><span class="nv">$ </span>docker push registry.gitlab.com/&lt;user&gt;/&lt;repo&gt;/&lt;image&gt;:&lt;tag&gt;
</span></code></pre></td></tr></table></div></figure>


<h2>Dockerfile for our Application:</h2>

<p>Now that we have built our image for Tomcat, we can write our <code>Dockerfile</code> for our application, note that the <code>hello.war</code> file also needs to be in the same working directory, unless written otherwise:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='docker'><span class='line'><span class="k">FROM</span> registry.gitlab.com/&lt;user&gt;/&lt;repo&gt;/&lt;image&gt;:&lt;tag&gt;
</span><span class='line'>COPY hello.war /usr/local/tomcat/webapps/hello.war
</span></code></pre></td></tr></table></div></figure>


<h2>Setup the Compose file for our Stack:</h2>

<p>We will use docker stack to deploy our application, note that I have <a href="https://sysadmins.co.za/traefik-a-modern-http-reverse-proxy-and-load-balancer-for-microservices-such-as-docker/">Traefik</a> that acts as my reverse proxy.</p>

<p>Below, our <code>app.yml</code> compose file:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">version</span><span class="p-Indicator">:</span> <span class="s">&#39;3&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">services</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">hello</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">image</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">registry.gitlab.com/&lt;user&gt;/&lt;repo&gt;/&lt;image&gt;:&lt;tag&gt;</span>
</span><span class='line'>    <span class="l-Scalar-Plain">networks</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">appnet</span>
</span><span class='line'>    <span class="l-Scalar-Plain">deploy</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">labels</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="s">&quot;traefik.port=8080&quot;</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="s">&quot;traefik.docker.network=appnet&quot;</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="s">&quot;traefik.frontend.rule=Host:apps.mydomain.com;</span><span class="nv"> </span><span class="s">PathPrefix:</span><span class="nv"> </span><span class="s">/hello/&quot;</span>
</span><span class='line'>      <span class="l-Scalar-Plain">mode</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">replicated</span>
</span><span class='line'>      <span class="l-Scalar-Plain">replicas</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">1</span>
</span><span class='line'>      <span class="l-Scalar-Plain">placement</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">constraints</span><span class="p-Indicator">:</span>
</span><span class='line'>          <span class="p-Indicator">-</span> <span class="s">&#39;node.role==worker&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">networks</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">appnet</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">external</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">true</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Deploy our Application:</h2>

<p>From our compose file we defined that our network is external, so if you are using the same name, and you have not yet setup the overlay network:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker network create --driver overlay appnet
</span></code></pre></td></tr></table></div></figure>


<p>Now deploy the stack:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker stack deploy --compose-file app.yml apps
</span></code></pre></td></tr></table></div></figure>


<h2>Testing our Application:</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl http://apps.mydomain.com/hello/
</span><span class='line'>
</span><span class='line'>&lt;!DOCTYPE html&gt;
</span><span class='line'>&lt;html&gt;
</span><span class='line'>            Hello World!
</span><span class='line'>   Test Page with Docker + Payara Micro&lt;/h3&gt;
</span><span class='line'>
</span><span class='line'>   Serving From ContainerId: d24f8cd982fc
</span><span class='line'>&lt;/html&gt;
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
