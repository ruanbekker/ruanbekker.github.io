<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Ruan Bekker's Blog]]></title>
  <link href="http://blog.ruanbekker.com/atom.xml" rel="self"/>
  <link href="http://blog.ruanbekker.com/"/>
  <updated>2018-04-18T13:36:57-04:00</updated>
  <id>http://blog.ruanbekker.com/</id>
  <author>
    <name><![CDATA[Ruan]]></name>
    <email><![CDATA[ruan@ruanbekker.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Basic Introduction to Use Arguments With Argparse on Python]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/04/18/basic-introduction-to-use-arguments-with-argparse-on-python/"/>
    <updated>2018-04-18T13:35:28-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/04/18/basic-introduction-to-use-arguments-with-argparse-on-python</id>
    <content type="html"><![CDATA[<p>I used to work a lot with <code>sys.argv</code> for using arguments in my applications, until I stumbled upon the <code>argparse</code> module! (Thanks Donovan!)</p>

<p>What I like about argparse, is that it builds up the help menu for you, and you also have a lot of options, as you can set the argument to be required, set the datatypes, addtional help context etc.</p>

<h2>The Basic Demonstration:</h2>

<p>Today we will just run through a very basic example on how to use <code>argparse</code>:</p>

<ul>
<li>Return the generated help menu</li>
<li>Return the required value</li>
<li>Return the additional arguments</li>
<li>Compare arguments with a IF statement</li>
</ul>


<h2>The Python Argparse Tutorial Code:</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">argparse</span>
</span><span class='line'>
</span><span class='line'><span class="n">parser</span> <span class="o">=</span> <span class="n">argparse</span><span class="o">.</span><span class="n">ArgumentParser</span><span class="p">(</span><span class="n">description</span><span class="o">=</span><span class="s">&#39;argparse demo&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">parser</span><span class="o">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s">&#39;-w&#39;</span><span class="p">,</span> <span class="s">&#39;--word&#39;</span><span class="p">,</span> <span class="n">help</span><span class="o">=</span><span class="s">&#39;a word (required)&#39;</span><span class="p">,</span> <span class="n">required</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'><span class="n">parser</span><span class="o">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s">&#39;-s&#39;</span><span class="p">,</span> <span class="s">&#39;--sentence&#39;</span><span class="p">,</span> <span class="n">help</span><span class="o">=</span><span class="s">&#39;a sentence (not required)&#39;</span><span class="p">,</span> <span class="n">required</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
</span><span class='line'><span class="n">parser</span><span class="o">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s">&#39;-c&#39;</span><span class="p">,</span> <span class="s">&#39;--comparison&#39;</span><span class="p">,</span> <span class="n">help</span><span class="o">=</span><span class="s">&#39;a word to compare (not required)&#39;</span><span class="p">,</span> <span class="n">required</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
</span><span class='line'><span class="n">args</span> <span class="o">=</span> <span class="n">parser</span><span class="o">.</span><span class="n">parse_args</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="s">&quot;Word: {}&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">args</span><span class="o">.</span><span class="n">word</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">args</span><span class="o">.</span><span class="n">sentence</span><span class="p">:</span>
</span><span class='line'>  <span class="k">print</span><span class="p">(</span><span class="s">&quot;Sentence: :{}&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">args</span><span class="o">.</span><span class="n">sentence</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">args</span><span class="o">.</span><span class="n">comparison</span><span class="p">:</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">args</span><span class="o">.</span><span class="n">comparison</span> <span class="o">==</span> <span class="n">args</span><span class="o">.</span><span class="n">word</span><span class="p">:</span>
</span><span class='line'>      <span class="k">print</span><span class="p">(</span><span class="s">&quot;Comparison: the provided word argument and provided comparison argument is the same&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">else</span><span class="p">:</span>
</span><span class='line'>      <span class="k">print</span><span class="p">(</span><span class="s">&quot;Comparison: the provided word argument and provided comparison argument is NOT the same&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Seeing it in action:</h2>

<p>To return a usage/help info, run it with the <code>-h</code> or <code>--help</code> argument:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>python foo.py -h
</span><span class='line'>usage: foo.py <span class="o">[</span>-h<span class="o">]</span> -w WORD <span class="o">[</span>-s SENTENCE<span class="o">]</span> <span class="o">[</span>-c COMPARISON<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>argparse demo
</span><span class='line'>
</span><span class='line'>optional arguments:
</span><span class='line'>  -h, --help            show this <span class="nb">help </span>message and <span class="nb">exit</span>
</span><span class='line'>  -w WORD, --word WORD  a word <span class="o">(</span>required<span class="o">)</span>
</span><span class='line'>  -s SENTENCE, --sentence SENTENCE
</span><span class='line'>                        a sentence <span class="o">(</span>not required<span class="o">)</span>
</span><span class='line'>  -c COMPARISON, --comparison COMPARISON
</span><span class='line'>                        a word to compare <span class="o">(</span>not required<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>For this to work, the application is expecting the <code>word</code> argument to run, as we declared it as <code>required=True</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>python foo.py -w hello
</span><span class='line'>Word: hello
</span></code></pre></td></tr></table></div></figure>


<p>Now to use the arguments that is not required, which makes it optional:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>python foo.py -w hello -s <span class="s2">&quot;hello, world&quot;</span>
</span><span class='line'>Word: hello
</span><span class='line'>Sentence: :hello, world
</span></code></pre></td></tr></table></div></figure>


<p>We can also implement some if statements into our application to compare if arguments are the same (as a basic example):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>python foo.py -w hello -s <span class="s2">&quot;hello, world&quot;</span> -c goodbye
</span><span class='line'>Word: hello
</span><span class='line'>Sentence: :hello, world
</span><span class='line'>Comparison: the provided word argument and provided comparison argument is NOT the same
</span></code></pre></td></tr></table></div></figure>


<p>We can see that the word and comparison arguments are not the same. When they match up:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>python foo.py -w hello -s <span class="s2">&quot;hello, world&quot;</span> -c hello
</span><span class='line'>Word: hello
</span><span class='line'>Sentence: :hello, world
</span><span class='line'>Comparison: the provided word argument and provided comparison argument is the same
</span></code></pre></td></tr></table></div></figure>


<p>This was a very basic demonstration on the <code>argparse</code> module.</p>

<h2>Resource:</h2>

<ul>
<li><a href="https://docs.python.org/3/library/argparse.html">Python Docs: Argparse</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Monitor a Amazon Elasticsearch Service Cluster Update Process]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/04/16/how-to-monitor-a-amazon-elasticsearch-service-cluster-update-process/"/>
    <updated>2018-04-16T03:24:09-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/04/16/how-to-monitor-a-amazon-elasticsearch-service-cluster-update-process</id>
    <content type="html"><![CDATA[<p>When you make a configuration change on Amazon&rsquo;s Elasticsearch, it does a blue/green deployment. So new nodes will be allocated to the cluster (which you will notice from CloudWatch when looking at the nodes metrics). Once these nodes are deployed, data gets copied accross to the new nodes, and traffic gets directed to the new nodes, and once its done, the old nodes gets terminated.</p>

<p>Note: While there will be more nodes in the cluster, you will not get billed for the extra nodes.</p>

<p>While this process is going, you can monitor your cluster to see the progress:</p>

<h2>The Shards API:</h2>

<p>Using the <code>/_cat/shards</code> API, you will find that the shards are in a RELOCATING state (keeping in mind, this is when the change is still busy)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl -s -XGET <span class="s1">&#39;https://search-example-elasticsearch-cluster-6-abc123defghijkl5airxticzvjaqy.eu-west-1.es.amazonaws.com/_cat/shards?v&#39;</span> <span class="p">|</span> grep -v <span class="s1">&#39;STARTED&#39;</span>
</span><span class='line'>index                                   shard prirep state         docs    store ip            node
</span><span class='line'>example-app1-2018.02.23                 <span class="m">4</span>     r      RELOCATING  <span class="m">323498</span> 1018.3mb x.x.x.x x2mKoe_ -&gt; x.x.x.x GyNiRJyeSTifN_9JZisGuQ GyNiRJy
</span><span class='line'>example-app1-2018.02.28                 <span class="m">2</span>     p      RELOCATING  <span class="m">477609</span>    1.5gb x.x.x.x x2mKoe_ -&gt; x.x.x.x sOihejw1SrKtag_LO1RGIA sOihejw
</span><span class='line'>example-app1-2018.03.01                 <span class="m">3</span>     r      RELOCATING  <span class="m">463143</span>    1.5gb x.x.x.x  ZZfv-Ha -&gt; x.x.x.x jOchdCZWQq-TAPZNTadNoA jOchdCZ
</span><span class='line'>fortinet-syslog-2018.02                 <span class="m">0</span>     p      RELOCATING <span class="m">1218556</span>  462.2mb x.x.x.x  moQA57Y -&gt; x.x.x.x sOihejw1SrKtag_LO1RGIA sOihejw
</span><span class='line'>example-app1-2018.03.23                 <span class="m">3</span>     r      RELOCATING  <span class="m">821254</span>    2.4gb x.x.x.x  moQA57Y -&gt; x.x.x.x GyNiRJyeSTifN_9JZisGuQ GyNiRJy
</span><span class='line'>example-app1-2018.04.02                 <span class="m">2</span>     p      RELOCATING <span class="m">1085279</span>    3.4gb x.x.x.x x2mKoe_ -&gt; x.x.x.x jOchdCZWQq-TAPZNTadNoA jOchdCZ
</span><span class='line'>example-app1-2018.02.08                 <span class="m">3</span>     p      RELOCATING  <span class="m">136321</span>    125mb x.x.x.x ZUZSFWu -&gt; x.x.x.x tyU_V_KLS5mZXEwnF-YEAQ tyU_V_K
</span><span class='line'>fortinet-syslog-2018.04                 <span class="m">4</span>     r      RELOCATING <span class="m">7513842</span>    2.8gb x.x.x.x  ZZfv-Ha -&gt; x.x.x.x il1WsroNSgGmXJugds_aMQ il1Wsro
</span><span class='line'>example-app1-2018.04.09                 <span class="m">1</span>     r      RELOCATING <span class="m">1074581</span>    3.5gb x.x.x.x  ZRzKGe5 -&gt; x.x.x.x il1WsroNSgGmXJugds_aMQ il1Wsro
</span><span class='line'>example-app1-2018.04.09                 <span class="m">0</span>     p      RELOCATING <span class="m">1074565</span>    3.5gb x.x.x.x  moQA57Y -&gt; x.x.x.x tyU_V_KLS5mZXEwnF-YEAQ tyU_V_K
</span></code></pre></td></tr></table></div></figure>


<h2>The Recovery API:</h2>

<p>We can then use the <code>/_cat/recovery</code> API, which will show the progress of the shards transferring to the other nodes, you will find the following:</p>

<ul>
<li><code>index, shard, time, type, stage, source_host, target_host, files, files_percent, bytes, bytes_percent</code></li>
</ul>


<p>As Amazon masks their node ip addresses, we will find that the ips are not available. To make it more human readable, we will only pass the columns that we are interested in and not to show the shards that has been set to <code>done</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -s -XGET <span class="s1">&#39;https://search-example-elasticsearch-cluster-6-abc123defghijkl5airxticzvjaqy.eu-west-1.es.amazonaws.com/_cat/recovery?v&amp;h=i,s,t,ty,st,shost,thost,f,fp,b,bp&#39;</span> <span class="p">|</span> grep -v <span class="s1">&#39;done&#39;</span>
</span><span class='line'>i                                       s t     ty          st       shost         thost         f   fp     b          bp
</span><span class='line'>example-app1-2018.04.11                 <span class="m">1</span> 2m    peer        index    x.x.x.x x.x.x.x  <span class="m">139</span> 97.1%  <span class="m">3435483673</span> 65.9%
</span><span class='line'>web-syslog-2018.04                 <span class="m">4</span> 7.6m  peer        finalize x.x.x.x x.x.x.x  <span class="m">109</span> 100.0% <span class="m">2854310892</span> 100.0%
</span><span class='line'>example-app1-2018.04.16                 <span class="m">3</span> 2.9m  peer        translog x.x.x.x x.x.x.x  <span class="m">130</span> 100.0% <span class="m">446180036</span>  100.0%
</span><span class='line'>example-app1-2018.03.30                 <span class="m">3</span> 2.1m  peer        index    x.x.x.x  x.x.x.x  <span class="m">127</span> 97.6%  <span class="m">3862498583</span> 62.5%
</span><span class='line'>example-app1-2018.04.01                 <span class="m">0</span> 4.4m  peer        index    x.x.x.x  x.x.x.x  <span class="m">140</span> 99.3%  <span class="m">3410543270</span> 87.9%
</span><span class='line'>example-app1-2018.04.06                 <span class="m">0</span> 5.1m  peer        index    x.x.x.x x.x.x.x  <span class="m">128</span> 97.7%  <span class="m">4291421948</span> 66.3%
</span><span class='line'>example-app1-2018.04.07                 <span class="m">0</span> 52.2s peer        index    x.x.x.x x.x.x.x <span class="m">149</span> 91.9%  <span class="m">3969581277</span> 27.4%
</span><span class='line'>network-capture-2018.04.01               <span class="m">2</span> 11.4s peer        index    x.x.x.x  x.x.x.x <span class="m">107</span> 95.3%  <span class="m">359987163</span>  55.0%
</span><span class='line'>example-app1-2018.03.17                 <span class="m">1</span> 1.7m  peer        index    x.x.x.x  x.x.x.x <span class="m">117</span> 98.3%  <span class="m">2104196548</span> 74.5%
</span><span class='line'>example-app1-2018.02.25                 <span class="m">3</span> 58.4s peer        index    x.x.x.x  x.x.x.x <span class="m">102</span> 98.0%  <span class="m">945437614</span>  74.7%
</span></code></pre></td></tr></table></div></figure>


<p>We can also see the human readable output, which is displayed in json format, with much more detail:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -s -XGET <span class="s1">&#39;https://search-example-elasticsearch-cluster-6-abc123defghijkl5airxticzvjaqy.eu-west-1.es.amazonaws.com/example-app1-2018.04.03/_recovery?human&#39;</span> <span class="p">|</span> python -m json.tool
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;example-app1-2018.04.03&quot;</span>: <span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;shards&quot;</span>: <span class="o">[</span>
</span><span class='line'>            <span class="o">{</span>
</span><span class='line'>                <span class="s2">&quot;id&quot;</span>: 0,
</span><span class='line'>                <span class="s2">&quot;index&quot;</span>: <span class="o">{</span>
</span><span class='line'>                    <span class="s2">&quot;files&quot;</span>: <span class="o">{</span>
</span><span class='line'>                        <span class="s2">&quot;percent&quot;</span>: <span class="s2">&quot;100.0%&quot;</span>,
</span><span class='line'>                        <span class="s2">&quot;recovered&quot;</span>: 103,
</span><span class='line'>                        <span class="s2">&quot;reused&quot;</span>: 0,
</span><span class='line'>                        <span class="s2">&quot;total&quot;</span>: 103
</span><span class='line'>                    <span class="o">}</span>,
</span><span class='line'>                    <span class="s2">&quot;size&quot;</span>: <span class="o">{</span>
</span><span class='line'>                        <span class="s2">&quot;percent&quot;</span>: <span class="s2">&quot;100.0%&quot;</span>,
</span><span class='line'>                        <span class="s2">&quot;recovered&quot;</span>: <span class="s2">&quot;3.6gb&quot;</span>,
</span><span class='line'>                        <span class="s2">&quot;recovered_in_bytes&quot;</span>: 3926167091,
</span><span class='line'>                        <span class="s2">&quot;reused&quot;</span>: <span class="s2">&quot;0b&quot;</span>,
</span><span class='line'>                        <span class="s2">&quot;reused_in_bytes&quot;</span>: 0,
</span><span class='line'>                        <span class="s2">&quot;total&quot;</span>: <span class="s2">&quot;3.6gb&quot;</span>,
</span><span class='line'>                        <span class="s2">&quot;total_in_bytes&quot;</span>: 3926167091
</span><span class='line'>                    <span class="o">}</span>,
</span><span class='line'>                    <span class="s2">&quot;source_throttle_time&quot;</span>: <span class="s2">&quot;2m&quot;</span>,
</span><span class='line'>                    <span class="s2">&quot;source_throttle_time_in_millis&quot;</span>: 121713,
</span><span class='line'>                    <span class="s2">&quot;target_throttle_time&quot;</span>: <span class="s2">&quot;2.1m&quot;</span>,
</span><span class='line'>                    <span class="s2">&quot;target_throttle_time_in_millis&quot;</span>: 126170,
</span><span class='line'>                    <span class="s2">&quot;total_time&quot;</span>: <span class="s2">&quot;7.2m&quot;</span>,
</span><span class='line'>                    <span class="s2">&quot;total_time_in_millis&quot;</span>: 434142
</span><span class='line'>                <span class="o">}</span>,
</span><span class='line'>                <span class="s2">&quot;primary&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>                <span class="s2">&quot;source&quot;</span>: <span class="o">{</span>
</span><span class='line'>                    <span class="s2">&quot;host&quot;</span>: <span class="s2">&quot;x.x.x.x&quot;</span>,
</span><span class='line'>                    <span class="s2">&quot;id&quot;</span>: <span class="s2">&quot;ZRzKGe5WSg2SzilZGb3RbA&quot;</span>,
</span><span class='line'>                    <span class="s2">&quot;ip&quot;</span>: <span class="s2">&quot;x.x.x.x&quot;</span>,
</span><span class='line'>                    <span class="s2">&quot;name&quot;</span>: <span class="s2">&quot;ZRzKGe5&quot;</span>,
</span><span class='line'>                    <span class="s2">&quot;transport_address&quot;</span>: <span class="s2">&quot;x.x.x.x:9300&quot;</span>
</span><span class='line'>                <span class="o">}</span>,
</span><span class='line'>                <span class="s2">&quot;stage&quot;</span>: <span class="s2">&quot;DONE&quot;</span>,
</span><span class='line'>                <span class="s2">&quot;start_time&quot;</span>: <span class="s2">&quot;2018-04-10T19:26:48.668Z&quot;</span>,
</span><span class='line'>                <span class="s2">&quot;start_time_in_millis&quot;</span>: 1523388408668,
</span><span class='line'>                <span class="s2">&quot;stop_time&quot;</span>: <span class="s2">&quot;2018-04-10T19:34:04.980Z&quot;</span>,
</span><span class='line'>                <span class="s2">&quot;stop_time_in_millis&quot;</span>: 1523388844980,
</span><span class='line'>                <span class="s2">&quot;target&quot;</span>: <span class="o">{</span>
</span><span class='line'>                    <span class="s2">&quot;host&quot;</span>: <span class="s2">&quot;x.x.x.x&quot;</span>,
</span><span class='line'>                    <span class="s2">&quot;id&quot;</span>: <span class="s2">&quot;x2mKoe_GTpe3b1CnXOKisA&quot;</span>,
</span><span class='line'>                    <span class="s2">&quot;ip&quot;</span>: <span class="s2">&quot;x.x.x.x&quot;</span>,
</span><span class='line'>                    <span class="s2">&quot;name&quot;</span>: <span class="s2">&quot;x2mKoe_&quot;</span>,
</span><span class='line'>                    <span class="s2">&quot;transport_address&quot;</span>: <span class="s2">&quot;x.x.x.x:9300&quot;</span>
</span><span class='line'>                <span class="o">}</span>,
</span><span class='line'>                <span class="s2">&quot;total_time&quot;</span>: <span class="s2">&quot;7.2m&quot;</span>,
</span><span class='line'>                <span class="s2">&quot;total_time_in_millis&quot;</span>: 436311,
</span><span class='line'>                <span class="s2">&quot;translog&quot;</span>: <span class="o">{</span>
</span><span class='line'>                    <span class="s2">&quot;percent&quot;</span>: <span class="s2">&quot;100.0%&quot;</span>,
</span><span class='line'>                    <span class="s2">&quot;recovered&quot;</span>: 0,
</span><span class='line'>                    <span class="s2">&quot;total&quot;</span>: 0,
</span><span class='line'>                    <span class="s2">&quot;total_on_start&quot;</span>: 0,
</span><span class='line'>                    <span class="s2">&quot;total_time&quot;</span>: <span class="s2">&quot;1.1s&quot;</span>,
</span><span class='line'>                    <span class="s2">&quot;total_time_in_millis&quot;</span>: 1154
</span><span class='line'>                <span class="o">}</span>,
</span><span class='line'>                <span class="s2">&quot;type&quot;</span>: <span class="s2">&quot;PEER&quot;</span>,
</span><span class='line'>                <span class="s2">&quot;verify_index&quot;</span>: <span class="o">{</span>
</span><span class='line'>                    <span class="s2">&quot;check_index_time&quot;</span>: <span class="s2">&quot;0s&quot;</span>,
</span><span class='line'>                    <span class="s2">&quot;check_index_time_in_millis&quot;</span>: 0,
</span><span class='line'>                    <span class="s2">&quot;total_time&quot;</span>: <span class="s2">&quot;0s&quot;</span>,
</span><span class='line'>                    <span class="s2">&quot;total_time_in_millis&quot;</span>: 0
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>,
</span></code></pre></td></tr></table></div></figure>


<h2>The Cluster Health API:</h2>

<p>Amazon restricts most of the <code>/_cluster</code> API actions, but we can however see the health endpoint, where we can see the number of <code>nodes</code>, <code>active_shards</code>, <code>relocating_shards</code>, <code>number_of_pending_tasks</code> etc:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -XGET https://search-example-elasticsearch-cluster-6-abc123defghijkl5airxticzvjaqy.eu-west-1.es.amazonaws.com/_cluster/health?pretty
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;cluster_name&quot;</span> : <span class="s2">&quot;0123456789012:example-elasticsearch-cluster-6&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;status&quot;</span> : <span class="s2">&quot;green&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;timed_out&quot;</span> : <span class="nb">false</span>,
</span><span class='line'>  <span class="s2">&quot;number_of_nodes&quot;</span> : 16,
</span><span class='line'>  <span class="s2">&quot;number_of_data_nodes&quot;</span> : 10,
</span><span class='line'>  <span class="s2">&quot;active_primary_shards&quot;</span> : 803,
</span><span class='line'>  <span class="s2">&quot;active_shards&quot;</span> : 1606,
</span><span class='line'>  <span class="s2">&quot;relocating_shards&quot;</span> : 10,
</span><span class='line'>  <span class="s2">&quot;initializing_shards&quot;</span> : 0,
</span><span class='line'>  <span class="s2">&quot;unassigned_shards&quot;</span> : 0,
</span><span class='line'>  <span class="s2">&quot;delayed_unassigned_shards&quot;</span> : 0,
</span><span class='line'>  <span class="s2">&quot;number_of_pending_tasks&quot;</span> : 0,
</span><span class='line'>  <span class="s2">&quot;number_of_in_flight_fetch&quot;</span> : 0,
</span><span class='line'>  <span class="s2">&quot;task_max_waiting_in_queue_millis&quot;</span> : 0,
</span><span class='line'>  <span class="s2">&quot;active_shards_percent_as_number&quot;</span> : 100.0
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>The Pending Tasks API:</h2>

<p>We also have some insights into the <code>/_cat/pending_tasks</code> API:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -s -XGET <span class="s1">&#39;https://search-example-elasticsearch-cluster-6-abc123defghijkl5airxticzvjaqy.eu-west-1.es.amazonaws.com/_cat/pending_tasks?v&#39;</span>
</span><span class='line'>insertOrder timeInQueue priority <span class="nb">source</span>
</span><span class='line'><span class="m">1757</span>        53ms URGENT   shard-started shard id <span class="o">[[</span>network-metrics-2018.04.13<span class="o">][</span>0<span class="o">]]</span>, allocation id <span class="o">[</span>Qh91o_OGRX-lFnY8KxYgQw<span class="o">]</span>, primary term <span class="o">[</span>0<span class="o">]</span>, message <span class="o">[</span>after peer recovery<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Resources:</h2>

<ul>
<li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/cat-recovery.html#cat-recovery">https://www.elastic.co/guide/en/elasticsearch/reference/current/cat-recovery.html#cat-recovery</a></li>
<li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-recovery.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-recovery.html</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Experimenting With Python and TinyMongo a MongoDB Wrapper for TinyDB]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/04/15/experimenting-with-python-and-tinymongo-a-mongodb-wrapper-for-tinydb/"/>
    <updated>2018-04-15T16:39:22-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/04/15/experimenting-with-python-and-tinymongo-a-mongodb-wrapper-for-tinydb</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/schapman1974/tinymongo">TinyMongo</a> is a wrapper for MongoDB on top of TinyDB.</p>

<p>This is awesome for testing, where you need a local document orientated database which is backed by a flat file. It feels just like using MongoDB, except that its local, lightweight and using TinyDB in the backend.</p>

<h2>Installing Dependencies:</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>pip install tinymongo
</span></code></pre></td></tr></table></div></figure>


<h2>Usage Examples:</h2>

<p>Initialize tinymongo and create the database and collection:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">from</span> <span class="nn">tinymongo</span> <span class="kn">import</span> <span class="n">TinyMongoClient</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">connection</span> <span class="o">=</span> <span class="n">TinyMongoClient</span><span class="p">(</span><span class="s">&#39;foo&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db_init</span> <span class="o">=</span> <span class="n">connection</span><span class="o">.</span><span class="n">mydb</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db</span> <span class="o">=</span> <span class="n">db_init</span><span class="o">.</span><span class="n">users</span>
</span></code></pre></td></tr></table></div></figure>


<p>Insert a Document, catch the document id and search for that document:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">record_id</span> <span class="o">=</span> <span class="n">db</span> <span class="o">.</span><span class="n">insert_one</span><span class="p">({</span><span class="s">&#39;username&#39;</span><span class="p">:</span> <span class="s">&#39;ruanb&#39;</span><span class="p">,</span> <span class="s">&#39;name&#39;</span><span class="p">:</span> <span class="s">&#39;ruan&#39;</span><span class="p">,</span> <span class="s">&#39;age&#39;</span><span class="p">:</span> <span class="mi">31</span><span class="p">,</span> <span class="s">&#39;gender&#39;</span><span class="p">:</span> <span class="s">&#39;male&#39;</span><span class="p">,</span> <span class="s">&#39;location&#39;</span><span class="p">:</span> <span class="s">&#39;south africa&#39;</span><span class="p">})</span><span class="o">.</span><span class="n">inserted_id</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">user_info</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">find_one</span><span class="p">({</span><span class="s">&quot;_id&quot;</span><span class="p">:</span> <span class="n">record_id</span><span class="p">})</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">user_info</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="s">u&#39;username&#39;</span><span class="p">:</span> <span class="s">u&#39;ruanb&#39;</span><span class="p">,</span> <span class="s">u&#39;name&#39;</span><span class="p">:</span> <span class="s">u&#39;ruan&#39;</span><span class="p">,</span> <span class="s">u&#39;gender&#39;</span><span class="p">:</span> <span class="s">u&#39;male&#39;</span><span class="p">,</span> <span class="s">u&#39;age&#39;</span><span class="p">:</span> <span class="mi">31</span><span class="p">,</span> <span class="s">u&#39;_id&#39;</span><span class="p">:</span> <span class="s">u&#39;8d2ce01140ec11e888110242ac110004&#39;</span><span class="p">,</span> <span class="s">u&#39;location&#39;</span><span class="p">:</span> <span class="s">u&#39;south africa&#39;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Update a document: Update the age attribute from 31 to 32</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db</span><span class="o">.</span><span class="n">users</span><span class="o">.</span><span class="n">update_one</span><span class="p">({</span><span class="s">&#39;_id&#39;</span><span class="p">:</span> <span class="s">&#39;8d2ce01140ec11e888110242ac110004&#39;</span><span class="p">},</span> <span class="p">{</span><span class="s">&#39;$set&#39;</span><span class="p">:</span> <span class="p">{</span><span class="s">&#39;age&#39;</span><span class="p">:</span> <span class="mi">32</span> <span class="p">}})</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">user_info</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="s">u&#39;username&#39;</span><span class="p">:</span> <span class="s">u&#39;ruanb&#39;</span><span class="p">,</span> <span class="s">u&#39;name&#39;</span><span class="p">:</span> <span class="s">u&#39;ruan&#39;</span><span class="p">,</span> <span class="s">u&#39;gender&#39;</span><span class="p">:</span> <span class="s">u&#39;male&#39;</span><span class="p">,</span> <span class="s">u&#39;age&#39;</span><span class="p">:</span> <span class="mi">32</span><span class="p">,</span> <span class="s">u&#39;_id&#39;</span><span class="p">:</span> <span class="s">u&#39;8d2ce01140ec11e888110242ac110004&#39;</span><span class="p">,</span> <span class="s">u&#39;location&#39;</span><span class="p">:</span> <span class="s">u&#39;south africa&#39;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Insert some more data:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">record_id</span> <span class="o">=</span> <span class="n">db</span> <span class="o">.</span><span class="n">insert_one</span><span class="p">({</span><span class="s">&#39;username&#39;</span><span class="p">:</span> <span class="s">&#39;stefanb&#39;</span><span class="p">,</span> <span class="s">&#39;name&#39;</span><span class="p">:</span> <span class="s">&#39;stefan&#39;</span><span class="p">,</span> <span class="s">&#39;age&#39;</span><span class="p">:</span> <span class="mi">30</span><span class="p">,</span> <span class="s">&#39;gender&#39;</span><span class="p">:</span> <span class="s">&#39;male&#39;</span><span class="p">,</span> <span class="s">&#39;location&#39;</span><span class="p">:</span> <span class="s">&#39;south africa&#39;</span><span class="p">})</span><span class="o">.</span><span class="n">inserted_id</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">record_id</span> <span class="o">=</span> <span class="n">db</span> <span class="o">.</span><span class="n">insert_one</span><span class="p">({</span><span class="s">&#39;username&#39;</span><span class="p">:</span> <span class="s">&#39;alexa&#39;</span><span class="p">,</span> <span class="s">&#39;name&#39;</span><span class="p">:</span> <span class="s">&#39;alex&#39;</span><span class="p">,</span> <span class="s">&#39;age&#39;</span><span class="p">:</span> <span class="mi">34</span><span class="p">,</span> <span class="s">&#39;gender&#39;</span><span class="p">:</span> <span class="s">&#39;male&#39;</span><span class="p">,</span> <span class="s">&#39;location&#39;</span><span class="p">:</span> <span class="s">&#39;south africa&#39;</span><span class="p">})</span><span class="o">.</span><span class="n">inserted_id</span>
</span></code></pre></td></tr></table></div></figure>


<p>Find all the users, sorted by descending age, oldest to youngest:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">users</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">sort</span><span class="o">=</span><span class="p">[(</span><span class="s">&#39;age&#39;</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">)])</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">for</span> <span class="n">doc</span> <span class="ow">in</span> <span class="n">response</span><span class="p">:</span>
</span><span class='line'><span class="o">...</span>     <span class="k">print</span><span class="p">(</span><span class="n">doc</span><span class="p">)</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'><span class="p">{</span><span class="s">u&#39;username&#39;</span><span class="p">:</span> <span class="s">u&#39;alexa&#39;</span><span class="p">,</span> <span class="s">u&#39;name&#39;</span><span class="p">:</span> <span class="s">u&#39;alex&#39;</span><span class="p">,</span> <span class="s">u&#39;gender&#39;</span><span class="p">:</span> <span class="s">u&#39;male&#39;</span><span class="p">,</span> <span class="s">u&#39;age&#39;</span><span class="p">:</span> <span class="mi">34</span><span class="p">,</span> <span class="s">u&#39;_id&#39;</span><span class="p">:</span> <span class="s">u&#39;66b1cc3d40ee11e892980242ac110004&#39;</span><span class="p">,</span> <span class="s">u&#39;location&#39;</span><span class="p">:</span> <span class="s">u&#39;south africa&#39;</span><span class="p">}</span>
</span><span class='line'><span class="p">{</span><span class="s">u&#39;username&#39;</span><span class="p">:</span> <span class="s">u&#39;ruanb&#39;</span><span class="p">,</span> <span class="s">u&#39;name&#39;</span><span class="p">:</span> <span class="s">u&#39;ruan&#39;</span><span class="p">,</span> <span class="s">u&#39;gender&#39;</span><span class="p">:</span> <span class="s">u&#39;male&#39;</span><span class="p">,</span> <span class="s">u&#39;age&#39;</span><span class="p">:</span> <span class="mi">32</span><span class="p">,</span> <span class="s">u&#39;_id&#39;</span><span class="p">:</span> <span class="s">u&#39;8d2ce01140ec11e888110242ac110004&#39;</span><span class="p">,</span> <span class="s">u&#39;location&#39;</span><span class="p">:</span> <span class="s">u&#39;south africa&#39;</span><span class="p">}</span>
</span><span class='line'><span class="p">{</span><span class="s">u&#39;username&#39;</span><span class="p">:</span> <span class="s">u&#39;stefanb&#39;</span><span class="p">,</span> <span class="s">u&#39;name&#39;</span><span class="p">:</span> <span class="s">u&#39;stefan&#39;</span><span class="p">,</span> <span class="s">u&#39;gender&#39;</span><span class="p">:</span> <span class="s">u&#39;male&#39;</span><span class="p">,</span> <span class="s">u&#39;age&#39;</span><span class="p">:</span> <span class="mi">30</span><span class="p">,</span> <span class="s">u&#39;_id&#39;</span><span class="p">:</span> <span class="s">u&#39;fbe9da8540ed11e88c5e0242ac110004&#39;</span><span class="p">,</span> <span class="s">u&#39;location&#39;</span><span class="p">:</span> <span class="s">u&#39;south africa&#39;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Find the number of documents in the collection:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db</span><span class="o">.</span><span class="n">users</span><span class="o">.</span><span class="n">find</span><span class="p">()</span><span class="o">.</span><span class="n">count</span><span class="p">()</span>
</span><span class='line'><span class="mi">3</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Resources:</h2>

<ul>
<li><a href="https://github.com/schapman1974/tinymongo">TinyMongo</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Experimenting With Python and Flata the Lightweight Document Orientated Database]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/04/15/experimenting-with-python-and-flata-the-lightweight-document-orientated-database/"/>
    <updated>2018-04-15T15:09:25-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/04/15/experimenting-with-python-and-flata-the-lightweight-document-orientated-database</id>
    <content type="html"><![CDATA[<p><img src="https://i.snag.gy/l298Y7.jpg" alt="" /></p>

<p><a href="https://github.com/harryho/flata">Flata</a> is a lightweight document orientated database, which was inspired by <a href="https://github.com/msiemens/tinydb">TinyDB</a> and <a href="https://github.com/typicode/lowdb">LowDB</a>.</p>

<h2>Why Flata?</h2>

<p>Most of the times my mind gets in its curious states and I think about alternative ways on doing things, especially testing lightweight apps and today I wondered if theres any NoSQL-like software out there that is easy to spin up and is backed by a flat file, something like <code>sqlite</code> for SQL-like services, so this time just something for NoSQL-like.</p>

<p>So I stumbled upon TinyDB and Flata which is really easy to use and awesome!</p>

<h2>What will we be doing today:</h2>

<ul>
<li>Create Database / Table</li>
<li>Write to the Table</li>
<li>Update Documents from the Table</li>
<li>Scan the Table</li>
<li>Query the Table</li>
<li>Delete Documents from the Table</li>
<li>Purge the Table</li>
</ul>


<h2>Getting the Dependencies:</h2>

<p>Flata is written in Python, so no external dependencies is needed. To install it:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>pip install flata
</span></code></pre></td></tr></table></div></figure>


<h2>Usage Examples:</h2>

<p>My home working directory:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">pwd</span>
</span><span class='line'>/home/ruan
</span></code></pre></td></tr></table></div></figure>


<p>This will be the directory where we will save our database in <code>.json</code> format.</p>

<p>Import the Dependencies:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">from</span> <span class="nn">flata</span> <span class="kn">import</span> <span class="n">Flata</span><span class="p">,</span> <span class="n">Query</span><span class="p">,</span> <span class="n">where</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">from</span> <span class="nn">flata.storages</span> <span class="kn">import</span> <span class="n">JSONStorage</span>
</span></code></pre></td></tr></table></div></figure>


<p>Create the Database file where all the data will be persisted:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db_init</span> <span class="o">=</span> <span class="n">Flata</span><span class="p">(</span><span class="s">&#39;mydb.json&#39;</span><span class="p">,</span> <span class="n">storage</span><span class="o">=</span><span class="n">JSONStorage</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Create the collection / table, with a custom id field. If the resource already exists a retrieve will be done:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db_init</span><span class="o">.</span><span class="n">table</span><span class="p">(</span><span class="s">&#39;collection1&#39;</span><span class="p">,</span> <span class="n">id_field</span> <span class="o">=</span> <span class="s">&#39;uid&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>List the tables:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db_init</span><span class="o">.</span><span class="n">all</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span><span class="s">u&#39;collection1&#39;</span><span class="p">:</span> <span class="p">{}}</span>
</span></code></pre></td></tr></table></div></figure>


<p>a get method can only be done if the resource exists, and we will assign it to the <code>db</code> object:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db</span> <span class="o">=</span> <span class="n">db_init</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;collection1&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>Insert some data into our table:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db</span><span class="o">.</span><span class="n">insert</span><span class="p">({</span><span class="s">&#39;username&#39;</span><span class="p">:</span> <span class="s">&#39;ruanb&#39;</span><span class="p">,</span> <span class="s">&#39;name&#39;</span><span class="p">:</span> <span class="s">&#39;ruan&#39;</span><span class="p">,</span> <span class="s">&#39;age&#39;</span><span class="p">:</span> <span class="mi">31</span><span class="p">,</span> <span class="s">&#39;gender&#39;</span><span class="p">:</span> <span class="s">&#39;male&#39;</span><span class="p">,</span> <span class="s">&#39;location&#39;</span><span class="p">:</span> <span class="s">&#39;south africa&#39;</span><span class="p">})</span>
</span><span class='line'><span class="p">{</span><span class="s">&#39;username&#39;</span><span class="p">:</span> <span class="s">&#39;ruanb&#39;</span><span class="p">,</span> <span class="s">&#39;uid&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s">&#39;gender&#39;</span><span class="p">:</span> <span class="s">&#39;male&#39;</span><span class="p">,</span> <span class="s">&#39;age&#39;</span><span class="p">:</span> <span class="mi">31</span><span class="p">,</span> <span class="s">&#39;location&#39;</span><span class="p">:</span> <span class="s">&#39;south africa&#39;</span><span class="p">,</span> <span class="s">&#39;name&#39;</span><span class="p">:</span> <span class="s">&#39;ruan&#39;</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db</span><span class="o">.</span><span class="n">insert</span><span class="p">({</span><span class="s">&#39;username&#39;</span><span class="p">:</span> <span class="s">&#39;stefanb&#39;</span><span class="p">,</span> <span class="s">&#39;name&#39;</span><span class="p">:</span> <span class="s">&#39;stefan&#39;</span><span class="p">,</span> <span class="s">&#39;age&#39;</span><span class="p">:</span> <span class="mi">30</span><span class="p">,</span> <span class="s">&#39;gender&#39;</span><span class="p">:</span> <span class="s">&#39;male&#39;</span><span class="p">,</span> <span class="s">&#39;location&#39;</span><span class="p">:</span> <span class="s">&#39;south africa&#39;</span><span class="p">})</span>
</span><span class='line'><span class="p">{</span><span class="s">&#39;username&#39;</span><span class="p">:</span> <span class="s">&#39;stefanb&#39;</span><span class="p">,</span> <span class="s">&#39;uid&#39;</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="s">&#39;gender&#39;</span><span class="p">:</span> <span class="s">&#39;male&#39;</span><span class="p">,</span> <span class="s">&#39;age&#39;</span><span class="p">:</span> <span class="mi">30</span><span class="p">,</span> <span class="s">&#39;location&#39;</span><span class="p">:</span> <span class="s">&#39;south africa&#39;</span><span class="p">,</span> <span class="s">&#39;name&#39;</span><span class="p">:</span> <span class="s">&#39;stefan&#39;</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db</span><span class="o">.</span><span class="n">insert</span><span class="p">({</span><span class="s">&#39;username&#39;</span><span class="p">:</span> <span class="s">&#39;mikec&#39;</span><span class="p">,</span> <span class="s">&#39;name&#39;</span><span class="p">:</span> <span class="s">&#39;mike&#39;</span><span class="p">,</span> <span class="s">&#39;age&#39;</span><span class="p">:</span> <span class="mi">28</span><span class="p">,</span> <span class="s">&#39;gender&#39;</span><span class="p">:</span> <span class="s">&#39;male&#39;</span><span class="p">,</span> <span class="s">&#39;location&#39;</span><span class="p">:</span> <span class="s">&#39;south africa&#39;</span><span class="p">})</span>
</span><span class='line'><span class="p">{</span><span class="s">&#39;username&#39;</span><span class="p">:</span> <span class="s">&#39;mikec&#39;</span><span class="p">,</span> <span class="s">&#39;uid&#39;</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span> <span class="s">&#39;gender&#39;</span><span class="p">:</span> <span class="s">&#39;male&#39;</span><span class="p">,</span> <span class="s">&#39;age&#39;</span><span class="p">:</span> <span class="mi">28</span><span class="p">,</span> <span class="s">&#39;location&#39;</span><span class="p">:</span> <span class="s">&#39;south africa&#39;</span><span class="p">,</span> <span class="s">&#39;name&#39;</span><span class="p">:</span> <span class="s">&#39;mike&#39;</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db</span><span class="o">.</span><span class="n">insert</span><span class="p">({</span><span class="s">&#39;username&#39;</span><span class="p">:</span> <span class="s">&#39;sam&#39;</span><span class="p">,</span> <span class="s">&#39;name&#39;</span><span class="p">:</span> <span class="s">&#39;samantha&#39;</span><span class="p">,</span> <span class="s">&#39;age&#39;</span><span class="p">:</span> <span class="mi">24</span><span class="p">,</span> <span class="s">&#39;gender&#39;</span><span class="p">:</span> <span class="s">&#39;female&#39;</span><span class="p">,</span> <span class="s">&#39;location&#39;</span><span class="p">:</span> <span class="s">&#39;south africa&#39;</span><span class="p">})</span>
</span><span class='line'><span class="p">{</span><span class="s">&#39;username&#39;</span><span class="p">:</span> <span class="s">&#39;sam&#39;</span><span class="p">,</span> <span class="s">&#39;uid&#39;</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span> <span class="s">&#39;gender&#39;</span><span class="p">:</span> <span class="s">&#39;female&#39;</span><span class="p">,</span> <span class="s">&#39;age&#39;</span><span class="p">:</span> <span class="mi">24</span><span class="p">,</span> <span class="s">&#39;location&#39;</span><span class="p">:</span> <span class="s">&#39;south africa&#39;</span><span class="p">,</span> <span class="s">&#39;name&#39;</span><span class="p">:</span> <span class="s">&#39;samantha&#39;</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db</span><span class="o">.</span><span class="n">insert</span><span class="p">({</span><span class="s">&#39;username&#39;</span><span class="p">:</span> <span class="s">&#39;michellek&#39;</span><span class="p">,</span> <span class="s">&#39;name&#39;</span><span class="p">:</span> <span class="s">&#39;michelle&#39;</span><span class="p">,</span> <span class="s">&#39;age&#39;</span><span class="p">:</span> <span class="mi">32</span><span class="p">,</span> <span class="s">&#39;gender&#39;</span><span class="p">:</span> <span class="s">&#39;female&#39;</span><span class="p">,</span> <span class="s">&#39;location&#39;</span><span class="p">:</span> <span class="s">&#39;south africa&#39;</span><span class="p">})</span>
</span><span class='line'><span class="p">{</span><span class="s">&#39;username&#39;</span><span class="p">:</span> <span class="s">&#39;michellek&#39;</span><span class="p">,</span> <span class="s">&#39;uid&#39;</span><span class="p">:</span> <span class="mi">5</span><span class="p">,</span> <span class="s">&#39;gender&#39;</span><span class="p">:</span> <span class="s">&#39;female&#39;</span><span class="p">,</span> <span class="s">&#39;age&#39;</span><span class="p">:</span> <span class="mi">32</span><span class="p">,</span> <span class="s">&#39;location&#39;</span><span class="p">:</span> <span class="s">&#39;south africa&#39;</span><span class="p">,</span> <span class="s">&#39;name&#39;</span><span class="p">:</span> <span class="s">&#39;michelle&#39;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Scan the whole table:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db</span><span class="o">.</span><span class="n">all</span><span class="p">()</span>
</span><span class='line'><span class="p">[{</span><span class="s">u&#39;username&#39;</span><span class="p">:</span> <span class="s">u&#39;ruanb&#39;</span><span class="p">,</span> <span class="s">u&#39;uid&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s">u&#39;name&#39;</span><span class="p">:</span> <span class="s">u&#39;ruan&#39;</span><span class="p">,</span> <span class="s">u&#39;gender&#39;</span><span class="p">:</span> <span class="s">u&#39;male&#39;</span><span class="p">,</span> <span class="s">u&#39;age&#39;</span><span class="p">:</span> <span class="mi">31</span><span class="p">,</span> <span class="s">u&#39;location&#39;</span><span class="p">:</span> <span class="s">u&#39;south africa&#39;</span><span class="p">},</span> <span class="p">{</span><span class="s">u&#39;username&#39;</span><span class="p">:</span> <span class="s">u&#39;stefanb&#39;</span><span class="p">,</span> <span class="s">u&#39;uid&#39;</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="s">u&#39;name&#39;</span><span class="p">:</span> <span class="s">u&#39;stefan&#39;</span><span class="p">,</span> <span class="s">u&#39;gender&#39;</span><span class="p">:</span> <span class="s">u&#39;male&#39;</span><span class="p">,</span> <span class="s">u&#39;age&#39;</span><span class="p">:</span> <span class="mi">30</span><span class="p">,</span> <span class="s">u&#39;location&#39;</span><span class="p">:</span> <span class="s">u&#39;south africa&#39;</span><span class="p">},</span> <span class="p">{</span><span class="s">u&#39;username&#39;</span><span class="p">:</span> <span class="s">u&#39;mikec&#39;</span><span class="p">,</span> <span class="s">u&#39;uid&#39;</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span> <span class="s">u&#39;name&#39;</span><span class="p">:</span> <span class="s">u&#39;mike&#39;</span><span class="p">,</span> <span class="s">u&#39;gender&#39;</span><span class="p">:</span> <span class="s">u&#39;male&#39;</span><span class="p">,</span> <span class="s">u&#39;age&#39;</span><span class="p">:</span> <span class="mi">28</span><span class="p">,</span> <span class="s">u&#39;location&#39;</span><span class="p">:</span> <span class="s">u&#39;south africa&#39;</span><span class="p">},</span> <span class="p">{</span><span class="s">u&#39;username&#39;</span><span class="p">:</span> <span class="s">u&#39;sam&#39;</span><span class="p">,</span> <span class="s">u&#39;uid&#39;</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span> <span class="s">u&#39;name&#39;</span><span class="p">:</span> <span class="s">u&#39;samantha&#39;</span><span class="p">,</span> <span class="s">u&#39;gender&#39;</span><span class="p">:</span> <span class="s">u&#39;female&#39;</span><span class="p">,</span> <span class="s">u&#39;age&#39;</span><span class="p">:</span> <span class="mi">24</span><span class="p">,</span> <span class="s">u&#39;location&#39;</span><span class="p">:</span> <span class="s">u&#39;south africa&#39;</span><span class="p">},</span> <span class="p">{</span><span class="s">u&#39;username&#39;</span><span class="p">:</span> <span class="s">u&#39;michellek&#39;</span><span class="p">,</span> <span class="s">u&#39;uid&#39;</span><span class="p">:</span> <span class="mi">5</span><span class="p">,</span> <span class="s">u&#39;name&#39;</span><span class="p">:</span> <span class="s">u&#39;michelle&#39;</span><span class="p">,</span> <span class="s">u&#39;gender&#39;</span><span class="p">:</span> <span class="s">u&#39;female&#39;</span><span class="p">,</span> <span class="s">u&#39;age&#39;</span><span class="p">:</span> <span class="mi">32</span><span class="p">,</span> <span class="s">u&#39;location&#39;</span><span class="p">:</span> <span class="s">u&#39;south africa&#39;</span><span class="p">}]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Query data from the table.</p>

<p>Query the table for the <code>username =&gt; ruanb</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">json</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">q</span> <span class="o">=</span> <span class="n">Query</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="n">q</span><span class="o">.</span><span class="n">username</span> <span class="o">==</span> <span class="s">&#39;ruanb&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">response</span><span class="p">,</span> <span class="n">indent</span><span class="o">=</span><span class="mi">2</span><span class="p">))</span>
</span><span class='line'><span class="p">[</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="s">u&#39;username&#39;</span><span class="p">:</span> <span class="s">u&#39;ruanb&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">u&#39;uid&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>    <span class="s">u&#39;name&#39;</span><span class="p">:</span> <span class="s">u&#39;ruan&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">u&#39;gender&#39;</span><span class="p">:</span> <span class="s">u&#39;male&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">u&#39;age&#39;</span><span class="p">:</span> <span class="mi">31</span><span class="p">,</span>
</span><span class='line'>    <span class="s">u&#39;location&#39;</span><span class="p">:</span> <span class="s">u&#39;south africa&#39;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Query the table for everyone that is older than <code>29</code> and only <code>male</code> genders:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db</span><span class="o">.</span><span class="n">search</span><span class="p">((</span> <span class="n">q</span><span class="o">.</span><span class="n">gender</span> <span class="o">==</span> <span class="s">&#39;male&#39;</span> <span class="p">)</span> <span class="o">&amp;</span> <span class="p">(</span><span class="n">q</span><span class="o">.</span><span class="n">age</span> <span class="o">&gt;=</span> <span class="mi">29</span> <span class="p">))</span>
</span><span class='line'><span class="p">[</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="s">u&#39;username&#39;</span><span class="p">:</span> <span class="s">u&#39;ruanb&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">u&#39;uid&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>    <span class="s">u&#39;name&#39;</span><span class="p">:</span> <span class="s">u&#39;ruan&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">u&#39;gender&#39;</span><span class="p">:</span> <span class="s">u&#39;male&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">u&#39;age&#39;</span><span class="p">:</span> <span class="mi">31</span><span class="p">,</span>
</span><span class='line'>    <span class="s">u&#39;location&#39;</span><span class="p">:</span> <span class="s">u&#39;south africa&#39;</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="s">u&#39;username&#39;</span><span class="p">:</span> <span class="s">u&#39;stefanb&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">u&#39;uid&#39;</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
</span><span class='line'>    <span class="s">u&#39;name&#39;</span><span class="p">:</span> <span class="s">u&#39;stefan&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">u&#39;gender&#39;</span><span class="p">:</span> <span class="s">u&#39;male&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">u&#39;age&#39;</span><span class="p">:</span> <span class="mi">30</span><span class="p">,</span>
</span><span class='line'>    <span class="s">u&#39;location&#39;</span><span class="p">:</span> <span class="s">u&#39;south africa&#39;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Query the table for everyone that is younger than 25 or males:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db</span><span class="o">.</span><span class="n">search</span><span class="p">((</span> <span class="n">q</span><span class="o">.</span><span class="n">age</span> <span class="o">&lt;</span> <span class="mi">25</span> <span class="p">)</span> <span class="o">|</span> <span class="p">(</span><span class="n">q</span><span class="o">.</span><span class="n">gender</span> <span class="o">==</span> <span class="s">&#39;male&#39;</span> <span class="p">)</span> <span class="p">)</span>
</span><span class='line'><span class="p">[</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;username&quot;</span><span class="p">:</span> <span class="s">&quot;ruanb&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;uid&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;name&quot;</span><span class="p">:</span> <span class="s">&quot;ruan&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;gender&quot;</span><span class="p">:</span> <span class="s">&quot;male&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;age&quot;</span><span class="p">:</span> <span class="mi">31</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;location&quot;</span><span class="p">:</span> <span class="s">&quot;south africa&quot;</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;username&quot;</span><span class="p">:</span> <span class="s">&quot;stefanb&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;uid&quot;</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;name&quot;</span><span class="p">:</span> <span class="s">&quot;stefan&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;gender&quot;</span><span class="p">:</span> <span class="s">&quot;male&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;age&quot;</span><span class="p">:</span> <span class="mi">30</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;location&quot;</span><span class="p">:</span> <span class="s">&quot;south africa&quot;</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;username&quot;</span><span class="p">:</span> <span class="s">&quot;mikec&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;uid&quot;</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;name&quot;</span><span class="p">:</span> <span class="s">&quot;mike&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;gender&quot;</span><span class="p">:</span> <span class="s">&quot;male&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;age&quot;</span><span class="p">:</span> <span class="mi">28</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;location&quot;</span><span class="p">:</span> <span class="s">&quot;south africa&quot;</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;username&quot;</span><span class="p">:</span> <span class="s">&quot;sam&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;uid&quot;</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;name&quot;</span><span class="p">:</span> <span class="s">&quot;samantha&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;gender&quot;</span><span class="p">:</span> <span class="s">&quot;female&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;age&quot;</span><span class="p">:</span> <span class="mi">24</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;location&quot;</span><span class="p">:</span> <span class="s">&quot;south africa&quot;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Update the location value: Lets say Samantha relocated to New Zealand, and we need to update her location from <code>South Africa</code> to <code>New Zealand</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db</span><span class="o">.</span><span class="n">update</span><span class="p">({</span><span class="s">&#39;location&#39;</span><span class="p">:</span> <span class="s">&#39;new zealand&#39;</span><span class="p">},</span> <span class="n">where</span><span class="p">(</span><span class="s">&#39;username&#39;</span><span class="p">)</span> <span class="o">==</span> <span class="s">&#39;sam&#39;</span> <span class="p">)</span>
</span><span class='line'><span class="p">([</span><span class="mi">4</span><span class="p">],</span> <span class="p">[{</span><span class="s">u&#39;username&#39;</span><span class="p">:</span> <span class="s">u&#39;sam&#39;</span><span class="p">,</span> <span class="s">u&#39;uid&#39;</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span> <span class="s">u&#39;name&#39;</span><span class="p">:</span> <span class="s">u&#39;samantha&#39;</span><span class="p">,</span> <span class="s">u&#39;gender&#39;</span><span class="p">:</span> <span class="s">u&#39;female&#39;</span><span class="p">,</span> <span class="s">u&#39;age&#39;</span><span class="p">:</span> <span class="mi">24</span><span class="p">,</span> <span class="s">u&#39;location&#39;</span><span class="p">:</span> <span class="s">&#39;new zealand&#39;</span><span class="p">}])</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="n">q</span><span class="o">.</span><span class="n">username</span> <span class="o">==</span> <span class="s">&#39;sam&#39;</span><span class="p">)</span>
</span><span class='line'><span class="p">[{</span><span class="s">u&#39;username&#39;</span><span class="p">:</span> <span class="s">u&#39;sam&#39;</span><span class="p">,</span> <span class="s">u&#39;uid&#39;</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span> <span class="s">u&#39;name&#39;</span><span class="p">:</span> <span class="s">u&#39;samantha&#39;</span><span class="p">,</span> <span class="s">u&#39;gender&#39;</span><span class="p">:</span> <span class="s">u&#39;female&#39;</span><span class="p">,</span> <span class="s">u&#39;age&#39;</span><span class="p">:</span> <span class="mi">24</span><span class="p">,</span> <span class="s">u&#39;location&#39;</span><span class="p">:</span> <span class="s">u&#39;new zealand&#39;</span><span class="p">}]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Delete a document by its id:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="n">ids</span><span class="o">=</span><span class="p">[</span><span class="mi">4</span><span class="p">])</span>
</span><span class='line'><span class="p">([</span><span class="mi">4</span><span class="p">],</span> <span class="p">[])</span>
</span></code></pre></td></tr></table></div></figure>


<p>Delete all documents matching a query, for this example, all people with the gender: <code>male</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="n">q</span><span class="o">.</span><span class="n">gender</span> <span class="o">==</span> <span class="s">&#39;male&#39;</span><span class="p">)</span>
</span><span class='line'><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span> <span class="p">[])</span>
</span></code></pre></td></tr></table></div></figure>


<p>Delete all the data in the table:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db</span><span class="o">.</span><span class="n">purge</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>When we exit, you will find the database file, which we created:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ls
</span><span class='line'>mydb.json
</span></code></pre></td></tr></table></div></figure>


<h2>Resources:</h2>

<ul>
<li><a href="https://github.com/harryho/flata">Flata</a></li>
<li><a href="https://github.com/msiemens/tinydb">TinyDB</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Set Docker Environment Variables During Build Time]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/04/07/set-docker-environment-variables-during-build-time/"/>
    <updated>2018-04-07T09:51:35-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/04/07/set-docker-environment-variables-during-build-time</id>
    <content type="html"><![CDATA[<p>When using that <code>ARG</code> option in your Dockerfile, you can specify the <code>--build-args</code> option to define the value for the key that you specify in your Dockerfile to use for a environment variable as an example.</p>

<p>Today we will use the <code>arg</code> and <code>env</code> to set environment variables at build time.</p>

<h2>The Dockerfile:</h2>

<p>Our Dockerfile</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='dockerfile'><span class='line'><span class="k">FROM</span> alpine:edge
</span><span class='line'>ARG NAME
</span><span class='line'><span class="k">ENV</span> <span class="nv">OWNER</span><span class="o">=</span><span class="k">${</span><span class="nv">NAME</span><span class="k">:-</span><span class="nv">NOT_DEFINED</span><span class="k">}</span>
</span><span class='line'><span class="k">CMD</span> <span class="o">[</span><span class="s2">&quot;sh&quot;</span>, <span class="s2">&quot;-c&quot;</span>, <span class="s2">&quot;echo env var: ${OWNER}&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Building our Image, we will pass the value to our NAME argument:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker build --build-arg <span class="nv">NAME</span><span class="o">=</span>james -t ruan:test .
</span></code></pre></td></tr></table></div></figure>


<p>Now when we run our container, we will notice that the build time argument has passed through to our environment variable from the running container:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker run -it ruan:test
</span><span class='line'>env var: james
</span></code></pre></td></tr></table></div></figure>


<p>When we build the image without specifying build arguments, and running the container:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker build -t ruan:test .
</span><span class='line'><span class="nv">$ </span>docker run -it ruan:test
</span><span class='line'>env var: NOT_DEFINED
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Docker Environment Substitution With Dockerfile]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/04/07/docker-environment-substitution-with-dockerfile/"/>
    <updated>2018-04-07T09:18:20-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/04/07/docker-environment-substitution-with-dockerfile</id>
    <content type="html"><![CDATA[<p>The <a href="https://12factor.net/">12 Factor</a> way, is a general guideline that provides best practices when building applications. One of them is using environment variables to store application configuration.</p>

<h2>What will we be doing:</h2>

<p>In this post we will build a simple docker application that returns the environment variable&rsquo;s value to standard out. We are using environment substitution, so if the environment variable is not provided, we will set a default value of <code>NOT_DEFINED</code>.</p>

<p>We will have the environment variable <code>OWNER</code> and when no value is set for that Environment Variable, the <code>NOT_DEFINED</code> value will be returned.</p>

<h2>The Dockerfile</h2>

<p>Our Dockerfile:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='dockerfile'><span class='line'><span class="k">FROM</span> alpine:edge
</span><span class='line'><span class="k">ENV</span> <span class="nv">OWNER</span><span class="o">=</span><span class="k">${</span><span class="nv">OWNER</span><span class="k">:-</span><span class="nv">NOT_DEFINED</span><span class="k">}</span>
</span><span class='line'><span class="k">CMD</span> <span class="o">[</span><span class="s2">&quot;sh&quot;</span>, <span class="s2">&quot;-c&quot;</span>, <span class="s2">&quot;echo env var: ${OWNER}&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Building the image:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker build -t <span class="nb">test</span>:envs .
</span></code></pre></td></tr></table></div></figure>


<h2>Putting it to action:</h2>

<p>Now we will run a container and pass the <code>OWNER</code> environment variable as an option:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker run -it -e <span class="nv">OWNER</span><span class="o">=</span>ruan <span class="nb">test</span>:envs .
</span><span class='line'>env var: ruan
</span></code></pre></td></tr></table></div></figure>


<p>When we run a container without specifying the environment variable:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker run -it ruan:test
</span><span class='line'>env var: NOT_DEFINED
</span></code></pre></td></tr></table></div></figure>


<h2>Resources:</h2>

<ul>
<li><a href="https://stackify.com/config-values-docker-containers-environment-variables/">https://stackify.com/config-values-docker-containers-environment-variables/</a></li>
<li><a href="https://tryolabs.com/blog/2015/03/26/configurable-docker-containers-for-multiple-environments/">https://tryolabs.com/blog/2015/03/26/configurable-docker-containers-for-multiple-environments/</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using AWS SSM Parameter Store to Retrieve Secrets Encrypted by KMS Using Python]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/04/04/using-aws-ssm-parameter-store-to-retrieve-secrets-encrypted-by-kms-using-python/"/>
    <updated>2018-04-04T16:47:16-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/04/04/using-aws-ssm-parameter-store-to-retrieve-secrets-encrypted-by-kms-using-python</id>
    <content type="html"><![CDATA[<p><img src="https://i.snag.gy/4ytE3W.jpg" alt="" /></p>

<p>Today we will use Amazon Web Services SSM Service to store secrets in their Parameter Store which we will encyrpt using KMS.</p>

<p>Then we will read the data from SSM and decrypt using our KMS key. We will then end it off by writing a Python Script that reads the AWS credentials, authenticates with SSM and then read the secret values that we stored.</p>

<h2>The Do List:</h2>

<p>We will break up this post in the following topics:</p>

<ul>
<li>Create a KMS Key which will use to Encrypt/Decrypt the Parameter in SSM</li>
<li>Create the IAM Policy which will be used to authorize the Encrypt/Decrypt by the KMS ID</li>
<li>Create the KMS Alias</li>
<li>Create the Parameter using PutParameter as a SecureString to use Encryption with KMS</li>
<li>Describe the Parameters</li>
<li>Read the Parameter with and without Decryption to determine the difference using GetParameter</li>
<li>Read the Parameters using GetParameters</li>
<li>Environment Variable Example</li>
</ul>


<h2>Create the KMS Key:</h2>

<p>As the administrator, or root account, create the KMS Key:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">boto3</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">session</span> <span class="o">=</span> <span class="n">boto3</span><span class="o">.</span><span class="n">Session</span><span class="p">(</span><span class="n">region_name</span><span class="o">=</span><span class="s">&#39;eu-west-1&#39;</span><span class="p">,</span> <span class="n">profile_name</span><span class="o">=</span><span class="s">&#39;personal&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">iam</span> <span class="o">=</span> <span class="n">session</span><span class="o">.</span><span class="n">client</span><span class="p">(</span><span class="s">&#39;iam&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">kms</span> <span class="o">=</span> <span class="n">session</span><span class="o">.</span><span class="n">client</span><span class="p">(</span><span class="s">&#39;kms&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="n">kms</span><span class="o">.</span><span class="n">create_key</span><span class="p">(</span>
</span><span class='line'>    <span class="n">Description</span><span class="o">=</span><span class="s">&#39;Ruan Test Key&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">KeyUsage</span><span class="o">=</span><span class="s">&#39;ENCRYPT_DECRYPT&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">Origin</span><span class="o">=</span><span class="s">&#39;AWS_KMS&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">BypassPolicyLockoutSafetyCheck</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span>
</span><span class='line'>    <span class="n">Tags</span><span class="o">=</span><span class="p">[{</span><span class="s">&#39;TagKey&#39;</span><span class="p">:</span> <span class="s">&#39;Name&#39;</span><span class="p">,</span> <span class="s">&#39;TagValue&#39;</span><span class="p">:</span> <span class="s">&#39;RuanTestKey&#39;</span><span class="p">}]</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">response</span><span class="p">[</span><span class="s">&#39;KeyMetadata&#39;</span><span class="p">][</span><span class="s">&#39;KeyId&#39;</span><span class="p">])</span>
</span><span class='line'><span class="n">foobar</span><span class="o">-</span><span class="mi">2162</span><span class="o">-</span><span class="mi">4363</span><span class="o">-</span><span class="n">ba02</span><span class="o">-</span><span class="n">a953729e5ce6</span>
</span></code></pre></td></tr></table></div></figure>


<p>Create the IAM Policy:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="n">iam</span><span class="o">.</span><span class="n">create_policy</span><span class="p">(</span>
</span><span class='line'>    <span class="n">PolicyName</span><span class="o">=</span><span class="s">&#39;ruan-kms-test-policy&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">PolicyDocument</span><span class="o">=</span><span class="s">&#39;{</span>
</span><span class='line'>        <span class="s">&quot;Version&quot;</span><span class="p">:</span> <span class="s">&quot;2012-10-17&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;Statement&quot;</span><span class="p">:</span> <span class="p">[{</span>
</span><span class='line'>            <span class="s">&quot;Sid&quot;</span><span class="p">:</span> <span class="s">&quot;Stmt1517212478199&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&quot;Action&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>                <span class="s">&quot;kms:Decrypt&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="s">&quot;kms:Encrypt&quot;</span>
</span><span class='line'>            <span class="p">],</span>
</span><span class='line'>            <span class="s">&quot;Effect&quot;</span><span class="p">:</span> <span class="s">&quot;Allow&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&quot;Resource&quot;</span><span class="p">:</span> <span class="s">&quot;arn:aws:kms:eu-west-1:0123456789012:key/foobar-2162-4363-ba02-a953729e5ce6&quot;</span>
</span><span class='line'>        <span class="p">}]</span>
</span><span class='line'>    <span class="p">}</span><span class="s">&#39;, </span>
</span><span class='line'>    <span class="n">Description</span><span class="o">=</span><span class="s">&#39;Ruan KMS Test Policy&#39;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">response</span><span class="p">[</span><span class="s">&#39;Policy&#39;</span><span class="p">][</span><span class="s">&#39;Arn&#39;</span><span class="p">])</span>
</span><span class='line'><span class="n">arn</span><span class="p">:</span><span class="n">aws</span><span class="p">:</span><span class="n">iam</span><span class="p">::</span><span class="mo">01234567</span><span class="mi">89012</span><span class="p">:</span><span class="n">policy</span><span class="o">/</span><span class="n">ruan</span><span class="o">-</span><span class="n">kms</span><span class="o">-</span><span class="n">test</span><span class="o">-</span><span class="n">policy</span>
</span></code></pre></td></tr></table></div></figure>


<p>Create the KMS Alias:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="n">kms</span><span class="o">.</span><span class="n">create_alias</span><span class="p">(</span><span class="n">AliasName</span><span class="o">=</span><span class="s">&#39;alias/ruan-test-kms&#39;</span><span class="p">,</span> <span class="n">TargetKeyId</span><span class="o">=</span><span class="s">&#39;foobar-2162-4363-ba02-a953729e5ce6&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Publish the Secrets to SSM:</h2>

<p>As the administrator, write the secret values to the parameter store in SSM. We will publish a secret with the Parameter: <code>/test/ruan/mysql/db01/mysql_hostname</code> and the Value: <code>db01.eu-west-1.mycompany.com</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">from</span> <span class="nn">getpass</span> <span class="kn">import</span> <span class="n">getpass</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">secretvalue</span> <span class="o">=</span> <span class="n">getpass</span><span class="p">()</span>
</span><span class='line'><span class="n">Password</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">secretvalue</span><span class="p">)</span>
</span><span class='line'><span class="n">db01</span><span class="o">.</span><span class="n">eu</span><span class="o">-</span><span class="n">west</span><span class="o">-</span><span class="mf">1.</span><span class="n">mycompany</span><span class="o">.</span><span class="n">com</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="n">ssm</span><span class="o">.</span><span class="n">put_parameter</span><span class="p">(</span>
</span><span class='line'>    <span class="n">Name</span><span class="o">=</span><span class="s">&#39;/test/ruan/mysql/db01/mysql_hostname&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">Description</span><span class="o">=</span><span class="s">&#39;RuanTest MySQL Hostname&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">Value</span><span class="o">=</span><span class="n">secretvalue</span><span class="p">,</span>
</span><span class='line'>    <span class="n">Type</span><span class="o">=</span><span class="s">&#39;SecureString&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">KeyId</span><span class="o">=</span><span class="s">&#39;foobar-2162-4363-ba02-a953729e5ce6&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">Overwrite</span><span class="o">=</span><span class="bp">False</span>
</span><span class='line'><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Describe Parameters</h2>

<p>Describe the Parameter that we written to SSM:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="n">ssm</span><span class="o">.</span><span class="n">describe_parameters</span><span class="p">(</span>
</span><span class='line'>    <span class="n">Filters</span><span class="o">=</span><span class="p">[{</span><span class="s">&#39;Key&#39;</span><span class="p">:</span> <span class="s">&#39;Name&#39;</span><span class="p">,</span> <span class="s">&#39;Values&#39;</span><span class="p">:</span> <span class="p">[</span><span class="s">&#39;/test/ruan/mysql/db01/mysql_hostname&#39;</span><span class="p">]}]</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">response</span><span class="p">[</span><span class="s">&#39;ResponseMetadata&#39;</span><span class="p">][</span><span class="s">&#39;Parameters&#39;</span><span class="p">][</span><span class="mi">0</span><span class="p">][</span><span class="s">&#39;Name&#39;</span><span class="p">])</span>
</span><span class='line'><span class="s">&#39;/test/ruan/mysql/db01/mysql_hostname&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Reading from SSM:</h2>

<p>Read the Parameter value from SSM without using decryption via KMS:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="n">ssm</span><span class="o">.</span><span class="n">get_parameter</span><span class="p">(</span><span class="n">Name</span><span class="o">=</span><span class="s">&#39;/test/ruan/mysql/db01/mysql_hostname&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">response</span><span class="p">[</span><span class="s">&#39;Parameter&#39;</span><span class="p">][</span><span class="s">&#39;Value&#39;</span><span class="p">])</span>
</span><span class='line'><span class="n">AQICAHh7jazUUBgNxMQbYFeve2</span><span class="o">/</span><span class="n">p</span><span class="o">+</span><span class="n">UWTuyAd5F3ZJkZkf9</span><span class="o">+</span><span class="n">hwgF</span><span class="o">+</span><span class="n">H</span><span class="o">+</span><span class="n">kSABfPCTEarjXqYBaJAAAAejB4BgkqhkiG9w0BBwagazBpAgEAMGQGCSqGSIb3DQEHATAeBglghkgBZQMEAS4wEQQMJUEuT8wDGCQ3zRBmAgEQgDc8LhLgFe</span><span class="o">+</span><span class="n">Rutgi0hOKnjTEVQa2lKTy3MmTDZEeLy3Tlr5VUl6AVJNBpd4IWJTbj5YuqrrAAWWJ</span>
</span></code></pre></td></tr></table></div></figure>


<p>As you can see the value is encrypted, this time read the parameter value with specifying decryption via KMS:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="n">ssm</span><span class="o">.</span><span class="n">get_parameter</span><span class="p">(</span><span class="n">Name</span><span class="o">=</span><span class="s">&#39;/test/ruan/mysql/db01/mysql_hostname&#39;</span><span class="p">,</span> <span class="n">WithDecryption</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">response</span><span class="p">[</span><span class="s">&#39;Parameter&#39;</span><span class="p">][</span><span class="s">&#39;Value&#39;</span><span class="p">])</span>
</span><span class='line'><span class="n">db01</span><span class="o">.</span><span class="n">eu</span><span class="o">-</span><span class="n">west</span><span class="o">-</span><span class="mf">1.</span><span class="n">mycompany</span><span class="o">.</span><span class="n">com</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Grant Permissions to Instance Profile:</h2>

<p>Now we will create a policy that can only decrypt and read values from SSM that matches the path: <code>/test/ruan/mysql/db01/mysql_*</code>. This policy will be associated to a instance profile role, which will be used by EC2, where our application will read the values from.</p>

<p>Our policy will look like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="nt">&quot;Version&quot;</span><span class="p">:</span> <span class="s2">&quot;2012-10-17&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;Statement&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Sid&quot;</span><span class="p">:</span> <span class="s2">&quot;Stmt1517398919242&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Action&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>        <span class="s2">&quot;kms:Decrypt&quot;</span>
</span><span class='line'>      <span class="p">],</span>
</span><span class='line'>      <span class="nt">&quot;Effect&quot;</span><span class="p">:</span> <span class="s2">&quot;Allow&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Resource&quot;</span><span class="p">:</span> <span class="s2">&quot;arn:aws:kms:eu-west-1:0123456789012:key/foobar-2162-4363-ba02-a953729e5ce6&quot;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Sid&quot;</span><span class="p">:</span> <span class="s2">&quot;Stmt1517399021096&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Action&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>        <span class="s2">&quot;ssm:GetParameter&quot;</span>
</span><span class='line'>      <span class="p">],</span>
</span><span class='line'>      <span class="nt">&quot;Effect&quot;</span><span class="p">:</span> <span class="s2">&quot;Allow&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Resource&quot;</span><span class="p">:</span> <span class="s2">&quot;arn:aws:ssm:eu-west-1:0123456789012:parameter/test/ruan/mysql/db01/mysql_*&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Create the Policy:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">pol</span> <span class="o">=</span> <span class="s">&#39;{&quot;Version&quot;: &quot;2012-10-17&quot;,&quot;Statement&quot;: [{&quot;Sid&quot;: &quot;Stmt1517398919242&quot;,&quot;Action&quot;: [&quot;kms:Decrypt&quot;],&quot;Effect&quot;: &quot;Allow&quot;,&quot;Resource&quot;: &quot;arn:aws:kms:eu-west-1:0123456789012:key/foobar-2162-4363-ba02-a953729e5ce6&quot;},{&quot;Sid&quot;: &quot;Stmt1517399021096&quot;,&quot;Action&quot;: [&quot;ssm:GetParameter&quot;],&quot;Effect&quot;: &quot;Allow&quot;,&quot;Resource&quot;: &quot;arn:aws:ssm:eu-west-1:0123456789012:parameter/test/ruan/mysql/db01/mysql_*&quot;}]}&#39;</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="n">iam</span><span class="o">.</span><span class="n">create_policy</span><span class="p">(</span><span class="n">PolicyName</span><span class="o">=</span><span class="s">&#39;RuanGetSSM-Policy&#39;</span><span class="p">,</span> <span class="n">PolicyDocument</span><span class="o">=</span><span class="n">pol</span><span class="p">,</span> <span class="n">Description</span><span class="o">=</span><span class="s">&#39;Test Policy to Get SSM Parameters&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Create the instance profile:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="n">iam</span><span class="o">.</span><span class="n">create_instance_profile</span><span class="p">(</span><span class="n">InstanceProfileName</span><span class="o">=</span><span class="s">&#39;RuanTestSSMInstanceProfile&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Create the Role:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="n">iam</span><span class="o">.</span><span class="n">create_role</span><span class="p">(</span><span class="n">RoleName</span><span class="o">=</span><span class="s">&#39;RuanTestGetSSM-Role&#39;</span><span class="p">,</span> <span class="n">AssumeRolePolicyDocument</span><span class="o">=</span><span class="s">&#39;{&quot;Version&quot;: &quot;2012-10-17&quot;,&quot;Statement&quot;: [{&quot;Sid&quot;: &quot;&quot;,&quot;Effect&quot;: &quot;Allow&quot;,&quot;Principal&quot;: {&quot;Service&quot;: &quot;ec2.amazonaws.com&quot;},&quot;Action&quot;: &quot;sts:AssumeRole&quot;}]}&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Associate the Role and Instance Profile:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="n">iam</span><span class="o">.</span><span class="n">add_role_to_instance_profile</span><span class="p">(</span><span class="n">InstanceProfileName</span><span class="o">=</span><span class="s">&#39;RuanTestSSMInstanceProfile&#39;</span><span class="p">,</span> <span class="n">RoleName</span><span class="o">=</span><span class="s">&#39;RuanTestGetSSM-Role&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Attach the Policy to the Role:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="n">iam</span><span class="o">.</span><span class="n">put_role_policy</span><span class="p">(</span><span class="n">RoleName</span><span class="o">=</span><span class="s">&#39;RuanTestGetSSM-Role&#39;</span><span class="p">,</span> <span class="n">PolicyName</span><span class="o">=</span><span class="s">&#39;RuanTestGetSSMPolicy1&#39;</span><span class="p">,</span> <span class="n">PolicyDocument</span><span class="o">=</span><span class="n">pol</span><span class="s">&#39;)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Launch the EC2 instance with the above mentioned Role. Create the <code>get_ssm.py</code> and run it to decrypt and read the value from SSM:</p>

<figure class='code'><figcaption><span>get_ssm.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">boto3</span>
</span><span class='line'><span class="n">session</span> <span class="o">=</span> <span class="n">boto3</span><span class="o">.</span><span class="n">Session</span><span class="p">(</span><span class="n">region_name</span><span class="o">=</span><span class="s">&#39;eu-west-1&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">ssm</span> <span class="o">=</span> <span class="n">session</span><span class="o">.</span><span class="n">client</span><span class="p">(</span><span class="s">&#39;ssm&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">hostname</span> <span class="o">=</span> <span class="n">ssm</span><span class="o">.</span><span class="n">get_parameter</span><span class="p">(</span><span class="n">Name</span><span class="o">=</span><span class="s">&#39;/test/ruan/mysql/db01/mysql_hostname&#39;</span><span class="p">,</span> <span class="n">WithDecryption</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="n">hostname</span><span class="p">[</span><span class="s">&#39;Parameter&#39;</span><span class="p">][</span><span class="s">&#39;Value&#39;</span><span class="p">])</span>
</span></code></pre></td></tr></table></div></figure>


<p>Run it:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>python get_ssm.py
</span><span class='line'>db01.eu-west-1.mycompany.com
</span></code></pre></td></tr></table></div></figure>


<h2>Reading with GetParameters:</h2>

<p>So say that we created more than one parameter in the path that we allowed, lets use <code>GetParameters</code> to read more than one Parameter:</p>

<figure class='code'><figcaption><span>get_parameters.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">boto3</span>
</span><span class='line'><span class="n">session</span> <span class="o">=</span> <span class="n">boto3</span><span class="o">.</span><span class="n">Session</span><span class="p">(</span><span class="n">region_name</span><span class="o">=</span><span class="s">&#39;eu-west-1&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">ssm</span> <span class="o">=</span> <span class="n">session</span><span class="o">.</span><span class="n">client</span><span class="p">(</span><span class="s">&#39;ssm&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">response</span> <span class="o">=</span> <span class="n">ssm</span><span class="o">.</span><span class="n">get_parameters</span><span class="p">(</span>
</span><span class='line'>    <span class="n">Names</span><span class="o">=</span><span class="p">[</span>
</span><span class='line'>        <span class="s">&#39;/test/ruan/mysql/db01/mysql_hostname&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&#39;/test/ruan/mysql/db01/mysql_user&#39;</span>
</span><span class='line'>    <span class="p">],</span>
</span><span class='line'>    <span class="n">WithDecryption</span><span class="o">=</span><span class="bp">True</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="n">secrets</span> <span class="ow">in</span> <span class="n">response</span><span class="p">[</span><span class="s">&#39;Parameters&#39;</span><span class="p">]:</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">secrets</span><span class="p">[</span><span class="s">&#39;Name&#39;</span><span class="p">]</span> <span class="o">==</span> <span class="s">&#39;/test/ruan/mysql/db01/mysql_hostname&#39;</span><span class="p">:</span>
</span><span class='line'>        <span class="k">print</span><span class="p">(</span><span class="s">&quot;Hostname: {}&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">secrets</span><span class="p">[</span><span class="s">&#39;Value&#39;</span><span class="p">]))</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">secrets</span><span class="p">[</span><span class="s">&#39;Name&#39;</span><span class="p">]</span> <span class="o">==</span> <span class="s">&#39;/test/ruan/mysql/db01/mysql_user&#39;</span><span class="p">:</span>
</span><span class='line'>        <span class="k">print</span><span class="p">(</span><span class="s">&quot;Username: {}&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">secrets</span><span class="p">[</span><span class="s">&#39;Value&#39;</span><span class="p">]))</span>
</span></code></pre></td></tr></table></div></figure>


<p>Run it:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>python get_parameters.py
</span><span class='line'>Hostname: db01.eu-west-1.mycompany.com
</span><span class='line'>Username: super_dba
</span></code></pre></td></tr></table></div></figure>


<h2>Environment Variable Example from an Application:</h2>

<p>Set the Environment Variable value to the SSM key:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">export </span><span class="nv">MYSQL_HOSTNAME</span><span class="o">=</span><span class="s2">&quot;/test/ruan/mysql/db01/mysql_hostname&quot;</span>
</span><span class='line'><span class="nv">$ </span><span class="nb">export </span><span class="nv">MYSQL_USERNAME</span><span class="o">=</span><span class="s2">&quot;/test/ruan/mysql/db01/mysql_user&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>The application code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">os</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">boto3</span>
</span><span class='line'>
</span><span class='line'><span class="n">session</span> <span class="o">=</span> <span class="n">boto3</span><span class="o">.</span><span class="n">Session</span><span class="p">(</span><span class="n">region_name</span><span class="o">=</span><span class="s">&#39;eu-west-1&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">ssm</span> <span class="o">=</span> <span class="n">session</span><span class="o">.</span><span class="n">client</span><span class="p">(</span><span class="s">&#39;ssm&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">MYSQL_HOSTNAME</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">environ</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;MYSQL_HOSTNAME&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">MYSQL_USERNAME</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">environ</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;MYSQL_USERNAME&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">hostname</span> <span class="o">=</span> <span class="n">ssm</span><span class="o">.</span><span class="n">get_parameter</span><span class="p">(</span><span class="n">Name</span><span class="o">=</span><span class="n">MYSQL_HOSTNAME</span><span class="p">,</span> <span class="n">WithDecryption</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'><span class="n">username</span> <span class="o">=</span> <span class="n">ssm</span><span class="o">.</span><span class="n">get_parameter</span><span class="p">(</span><span class="n">Name</span><span class="o">=</span><span class="n">MYSQL_USERNAME</span><span class="p">,</span> <span class="n">WithDecryption</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="s">&quot;Hostname: {}&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">hostname</span><span class="p">[</span><span class="s">&#39;Parameter&#39;</span><span class="p">][</span><span class="s">&#39;Value&#39;</span><span class="p">]))</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="s">&quot;Username: {}&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">username</span><span class="p">[</span><span class="s">&#39;Parameter&#39;</span><span class="p">][</span><span class="s">&#39;Value&#39;</span><span class="p">]))</span>
</span></code></pre></td></tr></table></div></figure>


<p>Let the application transform the key to the SSM Value:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>python app.py
</span><span class='line'>Hostname: db01.eu-west-1.mycompany.com
</span><span class='line'>Username: super_dba
</span></code></pre></td></tr></table></div></figure>


<h2>Resources:</h2>

<p>Great thanks to the following resources:</p>

<ul>
<li><a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-paramstore-su-organize.html">https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-paramstore-su-organize.html</a></li>
<li><a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-roles.html">https://docs.aws.amazon.com/cli/latest/userguide/cli-roles.html</a></li>
<li><a href="https://github.com/iMilnb/awstools/blob/master/platforms/roles/mkrole.py">https://github.com/iMilnb/awstools/blob/master/platforms/roles/mkrole.py</a></li>
<li><a href="https://github.com/ktruckenmiller/ssm-get-parameter-by-path/blob/master/python.py">https://github.com/ktruckenmiller/ssm-get-parameter-by-path/blob/master/python.py</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Python Boto3 and DreamHosts DreamObjects to Interact With Their Object Storage Offering]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/04/03/using-python-boto3-and-dreamhosts-dreamobjects-to-interact-with-their-object-storage-offering/"/>
    <updated>2018-04-03T07:19:27-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/04/03/using-python-boto3-and-dreamhosts-dreamobjects-to-interact-with-their-object-storage-offering</id>
    <content type="html"><![CDATA[<p><img src="https://i.snag.gy/uxK5qy.jpg" alt="" /></p>

<p>In this post I will demonstrate how to interact with Dreamhost&rsquo;s Object Storage Service Offering called DreamObjects using Python Boto3 library. Dreamhost offers Object Storage at great pricing, for more information have a look at their <a href="https://goo.gl/N7Xws8">Documentation</a></p>

<h2>Whats on the Menu:</h2>

<p>We will do the following:</p>

<ul>
<li>List Buckets</li>
<li>List Objects</li>
<li>Put Object</li>
<li>Get Object</li>
<li>Upload Object</li>
<li>Download Object</li>
<li>Delete Object(s)</li>
</ul>


<h2>Configuration</h2>

<p>First we need to configure credentials, by providing the access key and access secret key, that is provided by DreamHost:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>pip install awscli
</span><span class='line'><span class="nv">$ </span>aws configure --profile dreamhost
</span></code></pre></td></tr></table></div></figure>


<p>After your credentials is set to your profile, we will need to import boto3 and instantiate the s3 client with our profile name, region name and endpoint url:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">boto3</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">session</span> <span class="o">=</span> <span class="n">boto3</span><span class="o">.</span><span class="n">Session</span><span class="p">(</span><span class="n">region_name</span><span class="o">=</span><span class="s">&#39;us-west-2&#39;</span><span class="p">,</span> <span class="n">profile_name</span><span class="o">=</span><span class="s">&#39;dreamhost&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">s3</span> <span class="o">=</span> <span class="n">session</span><span class="o">.</span><span class="n">client</span><span class="p">(</span><span class="s">&#39;s3&#39;</span><span class="p">,</span> <span class="n">endpoint_url</span><span class="o">=</span><span class="s">&#39;https://objects-us-west-1.dream.io&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>List Buckets:</h2>

<p>To list our Buckets:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="n">s3</span><span class="o">.</span><span class="n">list_buckets</span><span class="p">()</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">response</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="s">u&#39;Owner&#39;</span><span class="p">:</span> <span class="p">{</span><span class="s">u&#39;DisplayName&#39;</span><span class="p">:</span> <span class="s">&#39;foobar&#39;</span><span class="p">,</span> <span class="s">u&#39;ID&#39;</span><span class="p">:</span> <span class="s">&#39;foobar&#39;</span><span class="p">},</span> <span class="s">u&#39;Buckets&#39;</span><span class="p">:</span> <span class="p">[{</span><span class="s">u&#39;CreationDate&#39;</span><span class="p">:</span> <span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="p">(</span><span class="mi">2017</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">21</span><span class="p">,</span> <span class="mi">51</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">921000</span><span class="p">,</span> <span class="n">tzinfo</span><span class="o">=</span><span class="n">tzutc</span><span class="p">()),</span> <span class="s">u&#39;Name&#39;</span><span class="p">:</span> <span class="s">&#39;ruanbucket&#39;</span><span class="p">}],</span> <span class="s">&#39;ResponseMetadata&#39;</span><span class="p">:</span> <span class="p">{</span><span class="s">&#39;HTTPStatusCode&#39;</span><span class="p">:</span> <span class="mi">200</span><span class="p">,</span> <span class="s">&#39;RetryAttempts&#39;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="s">&#39;HostId&#39;</span><span class="p">:</span> <span class="s">&#39;&#39;</span><span class="p">,</span> <span class="s">&#39;RequestId&#39;</span><span class="p">:</span> <span class="s">&#39;tx00000000000000003cd88-005ac361f5-foobar-default&#39;</span><span class="p">,</span> <span class="s">&#39;HTTPHeaders&#39;</span><span class="p">:</span> <span class="p">{</span><span class="s">&#39;date&#39;</span><span class="p">:</span> <span class="s">&#39;Tue, 03 Apr 2018 11:13:57 GMT&#39;</span><span class="p">,</span> <span class="s">&#39;content-length&#39;</span><span class="p">:</span> <span class="s">&#39;306&#39;</span><span class="p">,</span> <span class="s">&#39;x-amz-request-id&#39;</span><span class="p">:</span> <span class="s">&#39;tx00000000000000003cd88-005ac361f5-foobar-default&#39;</span><span class="p">,</span> <span class="s">&#39;content-type&#39;</span><span class="p">:</span> <span class="s">&#39;application/xml&#39;</span><span class="p">}}}</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">for</span> <span class="n">bucket</span> <span class="ow">in</span> <span class="n">response</span><span class="p">[</span><span class="s">&#39;Buckets&#39;</span><span class="p">]:</span>
</span><span class='line'><span class="o">...</span>     <span class="k">print</span><span class="p">(</span><span class="n">bucket</span><span class="p">[</span><span class="s">&#39;Name&#39;</span><span class="p">])</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'><span class="n">ruanbucket</span>
</span></code></pre></td></tr></table></div></figure>


<h2>List Objects:</h2>

<p>List all the Objects, after the given prefix:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="n">s3</span><span class="o">.</span><span class="n">list_objects</span><span class="p">(</span><span class="n">Bucket</span><span class="o">=</span><span class="s">&#39;ruanbucket&#39;</span><span class="p">,</span> <span class="n">Prefix</span><span class="o">=</span><span class="s">&#39;logs/sysadmins.co.za/access/&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">for</span> <span class="n">obj</span> <span class="ow">in</span> <span class="n">response</span><span class="p">[</span><span class="s">&#39;Contents&#39;</span><span class="p">]:</span>
</span><span class='line'><span class="o">...</span>     <span class="k">print</span> <span class="n">obj</span><span class="p">[</span><span class="s">&#39;Key&#39;</span><span class="p">]</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'><span class="n">logs</span><span class="o">/</span><span class="n">sysadmins</span><span class="o">.</span><span class="n">co</span><span class="o">.</span><span class="n">za</span><span class="o">/</span><span class="n">access</span><span class="o">/</span><span class="n">access</span><span class="o">.</span><span class="n">log</span><span class="o">-</span><span class="mi">2017</span><span class="o">-</span><span class="mi">10</span><span class="o">-</span><span class="mf">10.</span><span class="n">gz</span>
</span><span class='line'><span class="n">logs</span><span class="o">/</span><span class="n">sysadmins</span><span class="o">.</span><span class="n">co</span><span class="o">.</span><span class="n">za</span><span class="o">/</span><span class="n">access</span><span class="o">/</span><span class="n">access</span><span class="o">.</span><span class="n">log</span><span class="o">-</span><span class="mi">2017</span><span class="o">-</span><span class="mi">10</span><span class="o">-</span><span class="mf">11.</span><span class="n">gz</span>
</span><span class='line'><span class="n">logs</span><span class="o">/</span><span class="n">sysadmins</span><span class="o">.</span><span class="n">co</span><span class="o">.</span><span class="n">za</span><span class="o">/</span><span class="n">access</span><span class="o">/</span><span class="n">access</span><span class="o">.</span><span class="n">log</span><span class="o">-</span><span class="mi">2017</span><span class="o">-</span><span class="mi">10</span><span class="o">-</span><span class="mf">12.</span><span class="n">gz</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Put Object:</h2>

<p>Write text as the body to the destination key on the Bucket:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="n">s3</span><span class="o">.</span><span class="n">put_object</span><span class="p">(</span><span class="n">Bucket</span><span class="o">=</span><span class="s">&#39;ruanbucket&#39;</span><span class="p">,</span> <span class="n">Body</span><span class="o">=</span><span class="s">&#39;My Name is Ruan</span><span class="se">\n</span><span class="s">&#39;</span><span class="p">,</span> <span class="n">Key</span><span class="o">=</span><span class="s">&#39;uploads/docs/file.txt&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">response</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="s">u&#39;Body&#39;</span><span class="p">:</span> <span class="o">&lt;</span><span class="n">botocore</span><span class="o">.</span><span class="n">response</span><span class="o">.</span><span class="n">StreamingBody</span> <span class="nb">object</span> <span class="n">at</span> <span class="mh">0x13cde10</span><span class="o">&gt;</span><span class="p">,</span> <span class="s">u&#39;AcceptRanges&#39;</span><span class="p">:</span> <span class="s">&#39;bytes&#39;</span><span class="p">,</span> <span class="s">u&#39;ContentType&#39;</span><span class="p">:</span> <span class="s">&#39;binary/octet-stream&#39;</span><span class="p">,</span> <span class="s">&#39;ResponseMetadata&#39;</span><span class="p">:</span> <span class="p">{</span><span class="s">&#39;HTTPStatusCode&#39;</span><span class="p">:</span> <span class="mi">200</span><span class="p">,</span> <span class="s">&#39;RetryAttempts&#39;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="s">&#39;HostId&#39;</span><span class="p">:</span> <span class="s">&#39;&#39;</span><span class="p">,</span> <span class="s">&#39;RequestId&#39;</span><span class="p">:</span> <span class="s">&#39;tx0000000000000000053f2-005ac3e0db-foobar-default&#39;</span><span class="p">,</span> <span class="s">&#39;HTTPHeaders&#39;</span><span class="p">:</span> <span class="p">{</span><span class="s">&#39;content-length&#39;</span><span class="p">:</span> <span class="s">&#39;16&#39;</span><span class="p">,</span> <span class="s">&#39;accept-ranges&#39;</span><span class="p">:</span> <span class="s">&#39;bytes&#39;</span><span class="p">,</span> <span class="s">&#39;last-modified&#39;</span><span class="p">:</span> <span class="s">&#39;Tue, 03 Apr 2018 20:14:54 GMT&#39;</span><span class="p">,</span> <span class="s">&#39;etag&#39;</span><span class="p">:</span> <span class="s">&#39;&quot;292edceea84d1234465f725c3921fc2a&quot;&#39;</span><span class="p">,</span> <span class="s">&#39;x-amz-request-id&#39;</span><span class="p">:</span> <span class="s">&#39;tx0000000000000000053f2-005ac3e0db-foobar-default&#39;</span><span class="p">,</span> <span class="s">&#39;date&#39;</span><span class="p">:</span> <span class="s">&#39;Tue, 03 Apr 2018 20:15:23 GMT&#39;</span><span class="p">,</span> <span class="s">&#39;content-type&#39;</span><span class="p">:</span> <span class="s">&#39;binary/octet-stream&#39;</span><span class="p">}},</span> <span class="s">u&#39;LastModified&#39;</span><span class="p">:</span> <span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="p">(</span><span class="mi">2018</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="mi">54</span><span class="p">,</span> <span class="n">tzinfo</span><span class="o">=</span><span class="n">tzutc</span><span class="p">()),</span> <span class="s">u&#39;ContentLength&#39;</span><span class="p">:</span> <span class="mi">16</span><span class="p">,</span> <span class="s">u&#39;ETag&#39;</span><span class="p">:</span> <span class="s">&#39;&quot;292edceea84d1234465f725c3921fc2a&quot;&#39;</span><span class="p">,</span> <span class="s">u&#39;Metadata&#39;</span><span class="p">:</span> <span class="p">{}}</span>
</span></code></pre></td></tr></table></div></figure>


<p>List the Object that we have created in the Bucket::</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="n">s3</span><span class="o">.</span><span class="n">list_objects</span><span class="p">(</span><span class="n">Bucket</span><span class="o">=</span><span class="s">&#39;ruanbucket&#39;</span><span class="p">,</span> <span class="n">Prefix</span><span class="o">=</span><span class="s">&#39;uploads/&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">for</span> <span class="n">obj</span> <span class="ow">in</span> <span class="n">response</span><span class="p">[</span><span class="s">&#39;Contents&#39;</span><span class="p">]:</span>
</span><span class='line'><span class="o">...</span>     <span class="k">print</span> <span class="n">obj</span><span class="p">[</span><span class="s">&#39;Key&#39;</span><span class="p">]</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'><span class="n">uploads</span><span class="o">/</span><span class="n">docs</span><span class="o">/</span><span class="nb">file</span><span class="o">.</span><span class="n">txt</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Get Object:</h2>

<p>Read the value from the key that was uploaded:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="n">s3</span><span class="o">.</span><span class="n">get_object</span><span class="p">(</span><span class="n">Bucket</span><span class="o">=</span><span class="s">&#39;ruanbucket&#39;</span><span class="p">,</span> <span class="n">Key</span><span class="o">=</span><span class="s">&#39;uploads/docs/file.txt&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">response</span><span class="p">[</span><span class="s">&#39;Body&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">read</span><span class="p">())</span>
</span><span class='line'><span class="n">My</span> <span class="n">Name</span> <span class="ow">is</span> <span class="n">Ruan</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Upload Files:</h2>

<p>Upload the file from disk to the Bucket:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">&#39;myfile.txt&#39;</span><span class="p">,</span> <span class="s">&#39;rb&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">data</span><span class="p">:</span>
</span><span class='line'><span class="o">...</span>     <span class="n">s3</span><span class="o">.</span><span class="n">upload_fileobj</span><span class="p">(</span><span class="n">Fileobj</span><span class="o">=</span><span class="n">data</span><span class="p">,</span> <span class="n">Bucket</span><span class="o">=</span><span class="s">&#39;ruanbucket&#39;</span><span class="p">,</span> <span class="n">Key</span><span class="o">=</span><span class="s">&#39;uploads/docs/uploadobj.txt&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">...</span>
</span></code></pre></td></tr></table></div></figure>


<p>Read the contents from the uploaded file:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="n">s3</span><span class="o">.</span><span class="n">get_object</span><span class="p">(</span><span class="n">Bucket</span><span class="o">=</span><span class="s">&#39;ruanbucket&#39;</span><span class="p">,</span> <span class="n">Key</span><span class="o">=</span><span class="s">&#39;uploads/docs/uploadobj.txt&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">response</span><span class="p">[</span><span class="s">&#39;Body&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">read</span><span class="p">())</span>
</span><span class='line'><span class="n">This</span> <span class="ow">is</span> <span class="n">some</span> <span class="n">text</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Download File:</h2>

<p>Download the file from the Bucket to the local disk:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">&#39;downloaded.txt&#39;</span><span class="p">,</span> <span class="s">&#39;wb&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">data</span><span class="p">:</span>
</span><span class='line'><span class="o">...</span>     <span class="n">s3</span><span class="o">.</span><span class="n">download_fileobj</span><span class="p">(</span><span class="n">Bucket</span><span class="o">=</span><span class="s">&#39;ruanbucket&#39;</span><span class="p">,</span> <span class="n">Key</span><span class="o">=</span><span class="s">&#39;uploads/docs/uploadobj.txt&#39;</span><span class="p">,</span> <span class="n">Fileobj</span><span class="o">=</span><span class="n">data</span><span class="p">)</span>
</span><span class='line'><span class="o">...</span>
</span></code></pre></td></tr></table></div></figure>


<p>Read the file&rsquo;s content from disk:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="nb">open</span><span class="p">(</span><span class="s">&#39;downloaded.txt&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">())</span>
</span><span class='line'><span class="n">This</span> <span class="ow">is</span> <span class="n">some</span> <span class="n">text</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Delete Object:</h2>

<p>Delete one object:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="n">s3</span><span class="o">.</span><span class="n">delete_object</span><span class="p">(</span><span class="n">Bucket</span><span class="o">=</span><span class="s">&#39;ruanbucket&#39;</span><span class="p">,</span> <span class="n">Key</span><span class="o">=</span><span class="s">&#39;uploads/docs/uploadobj.txt&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">response</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="s">&#39;ResponseMetadata&#39;</span><span class="p">:</span> <span class="p">{</span><span class="s">&#39;HTTPStatusCode&#39;</span><span class="p">:</span> <span class="mi">204</span><span class="p">,</span> <span class="s">&#39;RetryAttempts&#39;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="s">&#39;HostId&#39;</span><span class="p">:</span> <span class="s">&#39;&#39;</span><span class="p">,</span> <span class="s">&#39;RequestId&#39;</span><span class="p">:</span> <span class="s">&#39;tx00000000000000000be5a-005ac3e61a-foobar-default&#39;</span><span class="p">,</span> <span class="s">&#39;HTTPHeaders&#39;</span><span class="p">:</span> <span class="p">{</span><span class="s">&#39;date&#39;</span><span class="p">:</span> <span class="s">&#39;Tue, 03 Apr 2018 20:37:46 GMT&#39;</span><span class="p">,</span> <span class="s">&#39;x-amz-request-id&#39;</span><span class="p">:</span> <span class="s">&#39;tx00000000000000000be5a-005ac3e61a-foobar-default&#39;</span><span class="p">}}}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Delete Objects:</h2>

<p>Delete more than one object with a single API call:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="n">s3</span><span class="o">.</span><span class="n">delete_objects</span><span class="p">(</span><span class="n">Bucket</span><span class="o">=</span><span class="s">&#39;ruanbucket&#39;</span><span class="p">,</span> <span class="n">Delete</span><span class="o">=</span><span class="p">{</span><span class="s">&#39;Objects&#39;</span><span class="p">:</span> <span class="p">[{</span><span class="s">&#39;Key&#39;</span><span class="p">:</span> <span class="s">&#39;uploads/docs/file.txt&#39;</span><span class="p">},</span> <span class="p">{</span><span class="s">&#39;Key&#39;</span><span class="p">:</span> <span class="s">&#39;uploads/docs/file2.txt&#39;</span><span class="p">},</span> <span class="p">{</span><span class="s">&#39;Key&#39;</span><span class="p">:</span> <span class="s">&#39;uploads/docs/file3.txt&#39;</span><span class="p">}]})</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">response</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="s">u&#39;Deleted&#39;</span><span class="p">:</span> <span class="p">[{</span><span class="s">u&#39;Key&#39;</span><span class="p">:</span> <span class="s">&#39;uploads/docs/file.txt&#39;</span><span class="p">},</span> <span class="p">{</span><span class="s">u&#39;Key&#39;</span><span class="p">:</span> <span class="s">&#39;uploads/docs/file2.txt&#39;</span><span class="p">},</span> <span class="p">{</span><span class="s">u&#39;Key&#39;</span><span class="p">:</span> <span class="s">&#39;uploads/docs/file3.txt&#39;</span><span class="p">}],</span> <span class="s">&#39;ResponseMetadata&#39;</span><span class="p">:</span> <span class="p">{</span><span class="s">&#39;HTTPStatusCode&#39;</span><span class="p">:</span> <span class="mi">200</span><span class="p">,</span> <span class="s">&#39;RetryAttempts&#39;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="s">&#39;HostId&#39;</span><span class="p">:</span> <span class="s">&#39;&#39;</span><span class="p">,</span> <span class="s">&#39;RequestId&#39;</span><span class="p">:</span> <span class="s">&#39;tx000000000000000011008-005ac3e951-foobar-default&#39;</span><span class="p">,</span> <span class="s">&#39;HTTPHeaders&#39;</span><span class="p">:</span> <span class="p">{</span><span class="s">&#39;date&#39;</span><span class="p">:</span> <span class="s">&#39;Tue, 03 Apr 2018 20:51:29 GMT&#39;</span><span class="p">,</span> <span class="s">&#39;content-length&#39;</span><span class="p">:</span> <span class="s">&#39;270&#39;</span><span class="p">,</span> <span class="s">&#39;x-amz-request-id&#39;</span><span class="p">:</span> <span class="s">&#39;tx000000000000000011008-005ac3e951-217c0ac5-default&#39;</span><span class="p">,</span> <span class="s">&#39;content-type&#39;</span><span class="p">:</span> <span class="s">&#39;application/xml&#39;</span><span class="p">}}}</span>
</span></code></pre></td></tr></table></div></figure>


<p>For more information on the above, have a look at <a href="http://boto3.readthedocs.io/en/latest/guide/quickstart.html">Boto&rsquo;s Documentation</a> and <a href="https://www.dreamhost.com/">DreamHost&rsquo;s Website</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup MongoDB Server on ARM64 Using Scaleway]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/04/01/setup-mongodb-server-on-arm64-using-scaleway/"/>
    <updated>2018-04-01T18:46:27-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/04/01/setup-mongodb-server-on-arm64-using-scaleway</id>
    <content type="html"><![CDATA[<p><img src="https://preview.ibb.co/bBRhn7/scw.png" alt="" /></p>

<p>I&rsquo;ve been using Scaleway for the past 18 months and I must admit, I love hosting my Applications on their Infrastructure. They have expanded rapidly recently, and currently deploying more infrstructure due to the high demand.</p>

<p>Scaleway is a Cloud Division of Online.net. They provide Baremetal and Cloud SSD Virtual Servers. Im currently hosting a Docker Swarm Cluster, Blogs, Payara Java Application Servers, Elasticsearch and MongoDB Clusters with them and really happy with the performance and stability of their services.</p>

<h2>What will we be doing today:</h2>

<p>Today I will be deploying MongoDB Server on a ARM64-2GB Instance, which costs you 2.99 Euros per month, absolutely awesome pricing! After we install MongoDB we will setup authentication, and then just a few basic examples on writing and reading from MongoDB.</p>

<h2>Getting Started:</h2>

<p>Logon to <a href="cloud.scaleway.com">cloud.scaleway.com</a> then launch an instance, which will look like the following:</p>

<p><img src="https://image.ibb.co/e7T9jn/scw_launch.png" alt="" /></p>

<p>After you deployed your instance, SSH to your instance, and it should look like this:</p>

<p><img src="https://preview.ibb.co/k16C4n/scw_ssh.png" alt="" /></p>

<h2>Dependencies:</h2>

<p>Get the repository and install MongoDB:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>apt update
</span><span class='line'><span class="nv">$ </span>apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2930ADAE8CAF5059EE73BB4B58712A2291FA4AD5
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s2">&quot;deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.6 multiverse&quot;</span> <span class="p">|</span> sudo tee /etc/apt/sources.list.d/mongodb-org-3.6.list
</span><span class='line'><span class="nv">$ </span>apt update <span class="o">&amp;&amp;</span> apt upgrade -y
</span><span class='line'><span class="nv">$ </span>apt install mongodb-org -y
</span></code></pre></td></tr></table></div></figure>


<p>Enable MongoDB on Boot:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>systemctl <span class="nb">enable </span>mongod
</span></code></pre></td></tr></table></div></figure>


<h2>Configuration:</h2>

<p>Your configuration might look different from mine, so I recommend to backup your config first, as the following command will overwrite the config to the configuration that I will be using for this demonstration:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cat &gt; /etc/mongod.conf <span class="s">&lt;&lt; EOF</span>
</span><span class='line'><span class="s">storage:</span>
</span><span class='line'><span class="s">  dbPath: /var/lib/mongodb</span>
</span><span class='line'><span class="s">  journal:</span>
</span><span class='line'><span class="s">    enabled: false</span>
</span><span class='line'>
</span><span class='line'><span class="s">storage:</span>
</span><span class='line'><span class="s">  mmapv1:</span>
</span><span class='line'><span class="s">    smallFiles: true</span>
</span><span class='line'>
</span><span class='line'><span class="s">systemLog:</span>
</span><span class='line'><span class="s">  destination: file</span>
</span><span class='line'><span class="s">  logAppend: true</span>
</span><span class='line'><span class="s">  path: /var/log/mongodb/mongod.log</span>
</span><span class='line'>
</span><span class='line'><span class="s">net:</span>
</span><span class='line'><span class="s">  port: 27017</span>
</span><span class='line'><span class="s">  bindIp: 0.0.0.0</span>
</span><span class='line'>
</span><span class='line'><span class="s">processManagement:</span>
</span><span class='line'><span class="s">  timeZoneInfo: /usr/share/zoneinfo</span>
</span><span class='line'>
</span><span class='line'><span class="s">security:</span>
</span><span class='line'><span class="s">  authorization: enabled</span>
</span><span class='line'><span class="s">EOF</span>
</span></code></pre></td></tr></table></div></figure>


<p>Restart MongoDB for the config changes to take affect:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>systemctl restart mongod
</span></code></pre></td></tr></table></div></figure>


<h2>Authentication:</h2>

<p>Create the Authentication:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mongo
</span><span class='line'>MongoDB shell version v3.6.3
</span><span class='line'>connecting to: mongodb://127.0.0.1:27017
</span><span class='line'>MongoDB server version: 3.6.3
</span><span class='line'>Welcome to the MongoDB shell.
</span><span class='line'>
</span><span class='line'>&gt; use admin
</span><span class='line'>&gt; db.createUser<span class="o">({</span>user: <span class="s2">&quot;ruan&quot;</span>, <span class="nb">pwd</span>: <span class="s2">&quot;pass123&quot;</span>, roles:<span class="o">[{</span>role: <span class="s2">&quot;root&quot;</span>, db: <span class="s2">&quot;admin&quot;</span><span class="o">}]})</span>
</span><span class='line'>Successfully added user: <span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;user&quot;</span> : <span class="s2">&quot;ruan&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;roles&quot;</span> : <span class="o">[</span>
</span><span class='line'>                <span class="o">{</span>
</span><span class='line'>                        <span class="s2">&quot;role&quot;</span> : <span class="s2">&quot;root&quot;</span>,
</span><span class='line'>                        <span class="s2">&quot;db&quot;</span> : <span class="s2">&quot;admin&quot;</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>        <span class="o">]</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>&gt; <span class="nb">exit</span>
</span></code></pre></td></tr></table></div></figure>


<p>Restart MongoDB and logon with your credentials:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>systemctl restart mongod
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>mongo --authenticationDatabase admin --host localhost --port <span class="m">27017</span> -u ruan -p
</span><span class='line'>MongoDB shell version v3.6.3
</span><span class='line'>Enter password:
</span><span class='line'>connecting to: mongodb://localhost:27017/
</span><span class='line'>MongoDB server version: 3.6.3
</span><span class='line'>&gt;
</span></code></pre></td></tr></table></div></figure>


<h2>Write and Read from MongoDB</h2>

<p>While you are on the MongoDB Shell, we will insert a couple of documents, first drop in to the database that you would like to write to:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; use testdb
</span><span class='line'>switched to db testdb
</span></code></pre></td></tr></table></div></figure>


<p>Now we will write to the collection: <code>collection1</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; db.collection1.insert<span class="o">({</span><span class="s2">&quot;name&quot;</span>: <span class="s2">&quot;ruan&quot;</span>, <span class="s2">&quot;surname&quot;</span>: <span class="s2">&quot;bekker&quot;</span>, <span class="s2">&quot;age&quot;</span>: 31, <span class="s2">&quot;country&quot;</span>: <span class="s2">&quot;south africa&quot;</span><span class="o">})</span>
</span><span class='line'>WriteResult<span class="o">({</span> <span class="s2">&quot;nInserted&quot;</span> : <span class="m">1</span> <span class="o">})</span>
</span><span class='line'>
</span><span class='line'>&gt; db.collection1.insert<span class="o">({</span><span class="s2">&quot;name&quot;</span>: <span class="s2">&quot;stefan&quot;</span>, <span class="s2">&quot;surname&quot;</span>: <span class="s2">&quot;bester&quot;</span>, <span class="s2">&quot;age&quot;</span>: 30, <span class="s2">&quot;country&quot;</span>: <span class="s2">&quot;south africa&quot;</span><span class="o">})</span>
</span><span class='line'>WriteResult<span class="o">({</span> <span class="s2">&quot;nInserted&quot;</span> : <span class="m">1</span> <span class="o">})</span>
</span></code></pre></td></tr></table></div></figure>


<p>To find all the documents in our collection:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; db.collection1.find<span class="o">()</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;5ac15ff0f4a5500484defd23&quot;</span><span class="o">)</span>, <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;ruan&quot;</span>, <span class="s2">&quot;surname&quot;</span> : <span class="s2">&quot;bekker&quot;</span>, <span class="s2">&quot;age&quot;</span> : 31, <span class="s2">&quot;country&quot;</span> : <span class="s2">&quot;south africa&quot;</span> <span class="o">}</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;5ac16003f4a5500484defd24&quot;</span><span class="o">)</span>, <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;stefan&quot;</span>, <span class="s2">&quot;surname&quot;</span> : <span class="s2">&quot;bester&quot;</span>, <span class="s2">&quot;age&quot;</span> : 30, <span class="s2">&quot;country&quot;</span> : <span class="s2">&quot;south africa&quot;</span> <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>To prettify the output:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; db.collection1.find<span class="o">()</span>.pretty<span class="o">()</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;5ac15ff0f4a5500484defd23&quot;</span><span class="o">)</span>,
</span><span class='line'>        <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;ruan&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;surname&quot;</span> : <span class="s2">&quot;bekker&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;age&quot;</span> : 31,
</span><span class='line'>        <span class="s2">&quot;country&quot;</span> : <span class="s2">&quot;south africa&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;5ac16003f4a5500484defd24&quot;</span><span class="o">)</span>,
</span><span class='line'>        <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;stefan&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;surname&quot;</span> : <span class="s2">&quot;bester&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;age&quot;</span> : 30,
</span><span class='line'>        <span class="s2">&quot;country&quot;</span> : <span class="s2">&quot;south africa&quot;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>To find a document with the key/value of <code>name: ruan</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; db.collection1.find<span class="o">({</span><span class="s2">&quot;name&quot;</span>: <span class="s2">&quot;ruan&quot;</span><span class="o">})</span>.pretty<span class="o">()</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;5ac15ff0f4a5500484defd23&quot;</span><span class="o">)</span>,
</span><span class='line'>        <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;ruan&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;surname&quot;</span> : <span class="s2">&quot;bekker&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;age&quot;</span> : 31,
</span><span class='line'>        <span class="s2">&quot;country&quot;</span> : <span class="s2">&quot;south africa&quot;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>To view the database that you are currently switched to:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; db
</span><span class='line'>testdb
</span></code></pre></td></tr></table></div></figure>


<p>To view all the databases:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; show dbs
</span><span class='line'>admin   0.000GB
</span><span class='line'>config  0.000GB
</span><span class='line'><span class="nb">local   </span>0.000GB
</span><span class='line'>testdb  0.000GB
</span></code></pre></td></tr></table></div></figure>


<p>To view the collections in the database:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; show collections
</span><span class='line'>collection1
</span><span class='line'>
</span><span class='line'>&gt; <span class="nb">exit</span>
</span></code></pre></td></tr></table></div></figure>


<p>That was just a quick post on installing MongoDB on ARM64 using Scaleway. Try them out, and they are also hiring: <a href="https://careers.scaleway.com/">careers.scaleway.com</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Create a Logical Volume Using LVM on Ubuntu]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/03/30/create-a-logical-volume-using-lvm-on-ubuntu/"/>
    <updated>2018-03-30T20:38:18-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/03/30/create-a-logical-volume-using-lvm-on-ubuntu</id>
    <content type="html"><![CDATA[<p>Logical Volume Manager (LVM) - adds an extra layer between the physical disks and the file system, which allows you to resize your storage on the fly, use multiple disks, instead of one, etc.</p>

<h2>Concepts:</h2>

<p>Physical Volume:
- Physical Volume represents the actual disk / block device.</p>

<p>Volume Group:
- Volume Groups combines the collection of Logical Volumes and Physical Volumes into one administrative unit.</p>

<p>Logical Volume:
- A Logical Volume is the conceptual equivalent of a disk partition in a non-LVM system.</p>

<p>File Systems:
- File systems are built on top of logical volumes.</p>

<h2>What we are doing today:</h2>

<p>We have a disk installed on our server which is 150GB that is located on <code>/dev/vdb</code>, which we will manage via LVM and will be mounted under <code>/mnt</code></p>

<h2>Dependencies:</h2>

<p>Update and Install LVM:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ apt update && apt upgrade -y
</span><span class='line'>$ apt install lvm2 -y
</span><span class='line'>$ systemctl enable lvm2-lvmetad
</span><span class='line'>$ systemctl start lvm2-lvmetad</span></code></pre></td></tr></table></div></figure>


<h2>Create the Logical Volume:</h2>

<p>Initialize the Physical Volume to be managed by LVM, then create the Volume Group, then go ahead to create the Logical Volume:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ pvcreate /dev/vdb
</span><span class='line'>$ vgcreate vg1 /dev/vdb
</span><span class='line'>$ lvcreate -l 100%FREE -n vol1 vg1</span></code></pre></td></tr></table></div></figure>


<p>Build the Linux Filesystem with ext4 and mount the volume to the <code>/mnt</code> partition:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ mkfs.ext4 /dev/vg1/vol1
</span><span class='line'>$ mount /dev/vg1/vol1 /mnt
</span><span class='line'>$ echo '/dev/mapper/vg1-vol1 /mnt ext4 defaults,nofail 0 0' &gt;&gt; /etc/fstab</span></code></pre></td></tr></table></div></figure>


<h2>Other useful commands:</h2>

<p>To list Physical Volume Info:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ pvs
</span><span class='line'>PV         VG   Fmt  Attr PSize   PFree
</span><span class='line'>/dev/vdb   vg1  lvm2 a--  139.70g    0
</span></code></pre></td></tr></table></div></figure>


<p>To list Volume Group Info:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vgs
</span><span class='line'>VG   #PV #LV #SN Attr   VSize   VFree
</span><span class='line'>vg1    1   1   0 wz--n- 139.70g    0
</span></code></pre></td></tr></table></div></figure>


<p>And viewing the logical volume size from the volume group:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vgs -o +lv_size,lv_name
</span><span class='line'>VG   #PV #LV #SN Attr   VSize   VFree LSize   LV
</span><span class='line'>vg1    1   1   0 wz--n- 139.70g    0  139.70g vol1</span></code></pre></td></tr></table></div></figure>


<p>Information about Logical Volumes:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ lvs
</span><span class='line'>LV   VG   Attr       LSize   Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert
</span><span class='line'>vol1 vg1  -wi-ao---- 139.70g</span></code></pre></td></tr></table></div></figure>


<h2>Resources:</h2>

<ul>
<li><a href="https://www.thegeekdiary.com/redhat-centos-a-beginners-guide-to-lvm-logical-volume-manager/">1</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup Payara Application Server on Ubuntu 16.04]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/03/29/setup-payara-application-server-on-ubuntu-16-dot-04/"/>
    <updated>2018-03-29T19:57:40-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/03/29/setup-payara-application-server-on-ubuntu-16-dot-04</id>
    <content type="html"><![CDATA[<p><img src="https://i.snag.gy/CJMlTj.jpg" alt="" /></p>

<p>Today we will setup Payara 5 on Ubuntu 16.04</p>

<h2>About:</h2>

<p>Payara is an Open Source Java Application Server.</p>

<h2>Pre-Requirements:</h2>

<p>Update and Install Java 8:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>apt update <span class="o">&amp;&amp;</span> apt upgrade -y
</span><span class='line'><span class="nv">$ </span>apt-get install wget curl unzip software-properties-common python-software-properties -y
</span><span class='line'><span class="nv">$ </span>add-apt-repository ppa:webupd8team/java
</span><span class='line'><span class="nv">$ </span>apt-get update
</span><span class='line'><span class="nv">$ </span>apt-get install oracle-java8-installer -y
</span><span class='line'><span class="nv">$ </span><span class="nb">source</span> /etc/profile.d/jdk.sh
</span></code></pre></td></tr></table></div></figure>


<h2>Install Payara:</h2>

<p>Download and Install Payara 5:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /usr/local
</span><span class='line'><span class="nv">$ </span>wget --content-disposition <span class="s1">&#39;https://info.payara.fish/cs/c/?cta_guid=b9609f35-f630-492f-b3c0-238fc55f489b&amp;placement_guid=7cca6202-06a3-4c29-aee0-ca58af60528a&amp;portal_id=334594&amp;redirect_url=APefjpGt1aFvHUflpzz7Lec8jDz7CbeIIHZmgORmDSpteTCT2XjiMvjEzeY8yte3kiHi7Ph9mWDB7qUDEr96P0JS8Ev2ZFqahif2huSBfQV6lt4S6YUQpzPMrpHgf_n4VPV62NjKe8vLZBLnYkUALyR2mkrU3vWe7ME9XjHJqYPsHtxkHn-W7bYPFgY2LjEzKIYrdUsCviMgGrUh_LIbLxCESBa0N90vzaWKjK5EwZT021VaPP0jgfgvt0gF2UdtBQGcsTHrAlrb&amp;hsutk=c279766888b67917a591ec4e209cb29a&amp;canon=https%3A%2F%2Fwww.payara.fish%2Fall_downloads&amp;click=5bad781c-f4f5-422d-ba2b-5e0c2bff7098&amp;utm_referrer=https%3A%2F%2Fwww.google.co.za%2F&amp;__hstc=229474563.c279766888b67917a591ec4e209cb29a.1519832301251.1521408251653.1521485598794.4&amp;__hssc=229474563.7.1521485598794&amp;__hsfp=2442083907&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>unzip payara-5.181.zip
</span><span class='line'><span class="nv">$ </span>mv payara5 payara
</span><span class='line'><span class="nv">$ </span>rm -rf payara-5.181.zip
</span></code></pre></td></tr></table></div></figure>


<h2>Permissions:</h2>

<p>Create the Payara user and Grant Permissions:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s1">&#39;export PATH=/usr/local/payara/glassfish/bin:$PATH&#39;</span> &gt; /etc/profile.d/payara.sh
</span><span class='line'><span class="nv">$ </span>addgroup --system payara
</span><span class='line'><span class="nv">$ </span>adduser --system --shell /bin/bash --ingroup payara payara
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s1">&#39;payara soft nofile 32768&#39;</span> &gt;&gt; /etc/security/limits.conf
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s1">&#39;payara hard nofile 65536&#39;</span> &gt;&gt; /etc/security/limits.conf
</span><span class='line'><span class="nv">$ </span>chown -R payara:payara /usr/local/payara
</span></code></pre></td></tr></table></div></figure>


<h2>Setup the Payara Domain:</h2>

<p>Switch to the Payara user, delete the default domain and start the production domain. It is useful to configure the JVM Options under the domains config directory according to your servers resources.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>su - payara
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>asadmin delete-domain domain1
</span><span class='line'><span class="nv">$ </span>asadmin change-admin-password --domain_name production <span class="c"># default blank pass for admin</span>
</span><span class='line'><span class="nv">$ </span>asadmin --port <span class="m">4848</span> <span class="nb">enable</span>-secure-admin production
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>asadmin start-domain production
</span><span class='line'><span class="nv">$ </span>asadmin stop-domain production
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span><span class="nb">exit</span>
</span></code></pre></td></tr></table></div></figure>


<h2>SystemD Unit File:</h2>

<p>Create the SystemD Unit File to be able to manage the state of the Payara Server via SystemD:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cat &gt; /etc/systemd/system/payara.service <span class="s">&lt;&lt; EOF</span>
</span><span class='line'><span class="s">[Unit]</span>
</span><span class='line'><span class="s">Description=Payara Server</span>
</span><span class='line'><span class="s">After=network.target remote-fs.target</span>
</span><span class='line'><span class="s"> </span>
</span><span class='line'><span class="s">[Service]</span>
</span><span class='line'><span class="s">User=payara</span>
</span><span class='line'><span class="s">WorkingDirectory=/usr/local/payara/glassfish</span>
</span><span class='line'><span class="s">Environment=PATH=/usr/local/payara/glassfish/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/jvm/java-8-oracle/bin:/usr/lib/jvm/java-8-oracle/db/bin:/usr/lib/jvm/java-8-oracle/jre/bin</span>
</span><span class='line'><span class="s">Type=oneshot</span>
</span><span class='line'><span class="s">RemainAfterExit=yes</span>
</span><span class='line'><span class="s">ExecStart=/usr/local/payara/glassfish/bin/asadmin start-domain production</span>
</span><span class='line'><span class="s">ExecReload=/usr/local/payara/glassfish/bin/asadmin restart-domain production</span>
</span><span class='line'><span class="s">ExecStop=/usr/local/payara/glassfish/bin/asadmin stop-domain production</span>
</span><span class='line'><span class="s">TimeoutStartSec=300</span>
</span><span class='line'><span class="s">TimeoutStopSec=30</span>
</span><span class='line'><span class="s"> </span>
</span><span class='line'><span class="s">[Install]</span>
</span><span class='line'><span class="s">WantedBy = multi-user.target</span>
</span><span class='line'><span class="s">EOF</span>
</span></code></pre></td></tr></table></div></figure>


<p>Reload the systemd daemon:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>systemctl daemon-reload
</span></code></pre></td></tr></table></div></figure>


<p>Start the Payara Service:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>systemctl <span class="nb">enable </span>payara
</span><span class='line'><span class="nv">$ </span>systemctl start payara
</span></code></pre></td></tr></table></div></figure>


<p>Verify that port 4848, 8080 and 8181 is running:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>netstat -tulpn <span class="p">|</span> grep java
</span><span class='line'>tcp        <span class="m">0</span>      <span class="m">0</span> :::8080                     :::*                        LISTEN      24542/java
</span><span class='line'>tcp        <span class="m">0</span>      <span class="m">0</span> :::4848                     :::*                        LISTEN      24542/java
</span><span class='line'>tcp        <span class="m">0</span>      <span class="m">0</span> :::8181                     :::*                        LISTEN      24542/java
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<h2>Access Payara Admin UI:</h2>

<p>Access the Payara DAS via <code>https://ip-of-payara-server:4848</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Expanding the Size of Your EBS Volume on AWS EC2 for Linux]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/03/28/expanding-the-size-of-your-ebs-volume-on-aws-ec2-for-linux/"/>
    <updated>2018-03-28T01:45:07-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/03/28/expanding-the-size-of-your-ebs-volume-on-aws-ec2-for-linux</id>
    <content type="html"><![CDATA[<p><img src="https://i.snag.gy/BJLbwQ.jpg" alt="" /></p>

<p>Resizing your EBS Volume on the fly, that is attached to your EC2 Linux instance, on Amazon Web Services.</p>

<p>We want to resize our EBS Volume from 100GB to 1000GB and at the moment my EBS Volume is 100GB, as you can see:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>df -h
</span><span class='line'>Filesystem      Size  Used Avail Use% Mounted on
</span><span class='line'>devtmpfs        7.9G   60K  7.9G   1% /dev
</span><span class='line'>tmpfs           7.9G     <span class="m">0</span>  7.9G   0% /dev/shm
</span><span class='line'>/dev/xvda1       99G   32G   67G  32% /
</span></code></pre></td></tr></table></div></figure>


<p>Now we want to resize the volume to 1000GB, without shutting down our EC2 instance.</p>

<p>Go to your EC2 Management Console, Select your EC2 Instance, scroll down to the EBS Volume, click on it and click the EBS Volume ID, from there select Actions, modify and resize the disk to the needed size. As you can see the disk is now 1000GB:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>lsblk
</span><span class='line'>NAME    MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
</span><span class='line'>xvda    202:0    <span class="m">0</span> 1000G  <span class="m">0</span> disk
</span><span class='line'>xvda1 202:1    <span class="m">0</span> 1000G  <span class="m">0</span> part /
</span></code></pre></td></tr></table></div></figure>


<p>But our partition is still 100GB:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>df -h
</span><span class='line'>Filesystem      Size  Used Avail Use% Mounted on
</span><span class='line'>devtmpfs        7.9G   60K  7.9G   1% /dev
</span><span class='line'>tmpfs           7.9G     <span class="m">0</span>  7.9G   0% /dev/shm
</span><span class='line'>/dev/xvda1       99G   32G   67G  32% /
</span></code></pre></td></tr></table></div></figure>


<p>We need to use <code>growpart</code> and <code>resize2fs</code> to resize our partition:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo growpart /dev/xvda 1
</span><span class='line'>CHANGED: <span class="nv">disk</span><span class="o">=</span>/dev/xvda <span class="nv">partition</span><span class="o">=</span>1: <span class="nv">start</span><span class="o">=</span><span class="m">4096</span> old: <span class="nv">size</span><span class="o">=</span>209711070,end<span class="o">=</span><span class="m">209715166</span> new: <span class="nv">size</span><span class="o">=</span>2097147870,end<span class="o">=</span>2097151966
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>sudo resize2fs /dev/xvda1
</span><span class='line'>resize2fs 1.42.12 <span class="o">(</span>29-Aug-2014<span class="o">)</span>
</span><span class='line'>Filesystem at /dev/xvda1 is mounted on /<span class="p">;</span> on-line resizing required
</span><span class='line'><span class="nv">old_desc_blocks</span> <span class="o">=</span> 7, <span class="nv">new_desc_blocks</span> <span class="o">=</span> 63
</span><span class='line'>The filesystem on /dev/xvda1 is now <span class="m">262143483</span> <span class="o">(</span>4k<span class="o">)</span> blocks long.
</span></code></pre></td></tr></table></div></figure>


<p>Now we will have a resized partition to 100GB:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>df -h
</span><span class='line'>Filesystem      Size  Used Avail Use% Mounted on
</span><span class='line'>devtmpfs        7.9G   60K  7.9G   1% /dev
</span><span class='line'>tmpfs           7.9G     <span class="m">0</span>  7.9G   0% /dev/shm
</span><span class='line'>/dev/xvda1      985G   33G  952G   4% /
</span></code></pre></td></tr></table></div></figure>


<p>Resources:</p>

<ul>
<li><a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/recognize-expanded-volume-linux.html">https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/recognize-expanded-volume-linux.html</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nginx Basic Authentication With Source IP Whitelisting]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/03/19/nginx-basic-authentication-with-source-ip-whitelisting/"/>
    <updated>2018-03-19T10:57:36-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/03/19/nginx-basic-authentication-with-source-ip-whitelisting</id>
    <content type="html"><![CDATA[<p>Quick post on how to setup HTTP Basic Authentication and whitelist IP Based Sources to not get prompted for Authentication.</p>

<p>This could be useful for systems interacting with Nginx, so that they don&rsquo;t have to provide authentication.</p>

<h2>Dependencies:</h2>

<p>Install nginx and the package required to create the auth file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ apt install nginx apache2-utils -y</span></code></pre></td></tr></table></div></figure>


<p>Create the Password file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ htpasswd -c /etc/ngins/secrets admin</span></code></pre></td></tr></table></div></figure>


<h2>Configuration:</h2>

<p>Create the site config:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rm -rf /etc/nginx/conf.d/*.conf
</span><span class='line'>$ vim /etc/nginx/conf.d/default.conf</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>server {
</span><span class='line'>    listen       80;
</span><span class='line'>    server_name  localhost;
</span><span class='line'>
</span><span class='line'>    location / {
</span><span class='line'>        satisfy any;
</span><span class='line'>        allow 127.0.0.1;
</span><span class='line'>        deny all;
</span><span class='line'>
</span><span class='line'>        auth_basic "restricted";
</span><span class='line'>        auth_basic_user_file /etc/nginx/secrets;
</span><span class='line'>        root   /usr/share/nginx/html;
</span><span class='line'>        index  index.html index.htm;
</span><span class='line'>    }
</span><span class='line'>
</span><span class='line'>    error_page   500 502 503 504  /50x.html;
</span><span class='line'>    location = /50x.html {
</span><span class='line'>        root   /usr/share/nginx/html;
</span><span class='line'>    }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>Reload the Changes:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ nginx -s reload</span></code></pre></td></tr></table></div></figure>


<h2>Testing:</h2>

<p>Testing from our Whitelisted location (localhost):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>curl -i http://127.0.0.1 
</span><span class='line'>HTTP/1.1 200 OK</span></code></pre></td></tr></table></div></figure>


<p>Testing from remote location:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ curl -i http://localhost
</span><span class='line'>HTTP/1.1 401 Unauthorized
</span><span class='line'>
</span><span class='line'>$ curl -i http://admin:password@localhost
</span><span class='line'>HTTP/1.1 200 OK</span></code></pre></td></tr></table></div></figure>


<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Populate Environment Variables From Docker Secrets With a Flask Demo App]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/03/12/populate-environment-variables-from-docker-secrets-with-a-flask-demo-app/"/>
    <updated>2018-03-12T18:16:42-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/03/12/populate-environment-variables-from-docker-secrets-with-a-flask-demo-app</id>
    <content type="html"><![CDATA[<p><img src="http://obj-cache.cloud.ruanbekker.com/docker-logo.png" alt="" /></p>

<p>In this post we will create a basic Python Flask WebApp on Docker Swarm, but we will read our Flask Host, and Flask Port from Environment Variables, which will be populated from Docker Secrets, which we will read in from a python script.</p>

<h2>Our Directory Setup:</h2>

<p>This can be retrieved from <a href="https://github.com/ruanbekker/docker-swarm-apps/tree/master/tools-secrets-env-exporter">github.com/ruanbekker/docker-swarm-apps/tool-secrets-env-exporter</a>, but I will place the code in here as well.</p>

<figure class='code'><figcaption><span>Dockerfile:</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>FROM alpine:edge
</span><span class='line'>RUN apk add --no-cache python2 py2-pip <span class="o">&amp;&amp;</span> pip install flask
</span><span class='line'>ADD exporter.py /exporter.py
</span><span class='line'>ADD boot.sh /boot.sh
</span><span class='line'>ADD app.py /app.py
</span><span class='line'>CMD <span class="o">[</span><span class="s2">&quot;/bin/sh&quot;</span>, <span class="s2">&quot;/boot.sh&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>exporter.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">os</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">glob</span> <span class="kn">import</span> <span class="n">glob</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="n">var</span> <span class="ow">in</span> <span class="n">glob</span><span class="p">(</span><span class="s">&#39;/run/secrets/*&#39;</span><span class="p">):</span>
</span><span class='line'>    <span class="n">k</span><span class="o">=</span><span class="n">var</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&#39;/&#39;</span><span class="p">)[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
</span><span class='line'>    <span class="n">v</span><span class="o">=</span><span class="nb">open</span><span class="p">(</span><span class="n">var</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">()</span><span class="o">.</span><span class="n">rstrip</span><span class="p">(</span><span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">os</span><span class="o">.</span><span class="n">environ</span><span class="p">[</span><span class="n">k</span><span class="p">]</span> <span class="o">=</span> <span class="n">v</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="s">&quot;export {key}={value}&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">key</span><span class="o">=</span><span class="n">k</span><span class="p">,</span><span class="n">value</span><span class="o">=</span><span class="n">v</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>app.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">os</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">Flask</span>
</span><span class='line'>
</span><span class='line'><span class="n">flask_host</span> <span class="o">=</span> <span class="nb">str</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">environ</span><span class="p">[</span><span class="s">&#39;flask_host&#39;</span><span class="p">])</span>
</span><span class='line'><span class="n">flask_port</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">environ</span><span class="p">[</span><span class="s">&#39;flask_port&#39;</span><span class="p">])</span>
</span><span class='line'>
</span><span class='line'><span class="n">app</span> <span class="o">=</span> <span class="n">Flask</span><span class="p">(</span><span class="n">__name__</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@app.route</span><span class="p">(</span><span class="s">&#39;/&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">index</span><span class="p">():</span>
</span><span class='line'>    <span class="k">return</span> <span class="s">&#39;ok</span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
</span><span class='line'>    <span class="n">app</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="n">host</span><span class="o">=</span><span class="n">flask_host</span><span class="p">,</span> <span class="n">port</span><span class="o">=</span><span class="n">flask_port</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>boot.sh</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/sh</span>
</span><span class='line'><span class="nb">set</span> -e
</span><span class='line'><span class="nb">eval</span> <span class="k">$(</span>python /exporter.py<span class="k">)</span>
</span><span class='line'>python /app.py
</span></code></pre></td></tr></table></div></figure>


<h2>Flow Information:</h2>

<p>The exporter script checks all the secrets that is mounted to the container, then formats the secrets to a key/value pair, which then exports the environment variables to the current shell, which thereafter gets read by the flask application.</p>

<h2>Usage:</h2>

<p>Create Docker Secrets:</p>

<figure class='code'><figcaption><span>boot.sh</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">echo </span><span class="m">5001</span> <span class="p">|</span> docker secret create flask_port -
</span><span class='line'><span class="nv">$ </span><span class="nb">echo </span>0.0.0.0 <span class="p">|</span> docker secret create flask_host -
</span></code></pre></td></tr></table></div></figure>


<p>Build and Push the Image:</p>

<figure class='code'><figcaption><span>boot.sh</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker build -t registry.gitlab.com/&lt;user&gt;/&lt;repo&gt;/&lt;image&gt;:&lt;tag&gt;
</span><span class='line'><span class="nv">$ </span>docker push registry.gitlab.com/&lt;user&gt;/&lt;repo&gt;/&lt;image&gt;:&lt;tag&gt;
</span></code></pre></td></tr></table></div></figure>


<p>Create the Service, and specify the secrets that we created earlier:</p>

<figure class='code'><figcaption><span>boot.sh</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker service create --name webapp <span class="se">\</span>
</span><span class='line'>--secret <span class="nb">source</span><span class="o">=</span>flask_host,target<span class="o">=</span>flask_host <span class="se">\</span>
</span><span class='line'>--secret <span class="nb">source</span><span class="o">=</span>flask_port,target<span class="o">=</span>flask_port <span class="se">\</span>
</span><span class='line'>registry.gitlab.com/&lt;user&gt;/&lt;repo&gt;/&lt;image&gt;:&lt;tag&gt;
</span></code></pre></td></tr></table></div></figure>


<p>Exec into the container, list to see where the secrets got populated:</p>

<figure class='code'><figcaption><span>boot.sh</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ls /run/secrets/
</span><span class='line'>flask_host  flask_port
</span></code></pre></td></tr></table></div></figure>


<p>Do a netstat, to see that the value from the created secret is listening:</p>

<figure class='code'><figcaption><span>boot.sh</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>netstat -tulpn
</span><span class='line'>Active Internet connections <span class="o">(</span>only servers<span class="o">)</span>
</span><span class='line'>Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name
</span><span class='line'>tcp        <span class="m">0</span>      <span class="m">0</span> 0.0.0.0:5001            0.0.0.0:*               LISTEN      7/python
</span></code></pre></td></tr></table></div></figure>


<p>Do a GET request on the Flask Application:</p>

<figure class='code'><figcaption><span>boot.sh</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl http://0.0.0.0:5001/
</span><span class='line'>ok
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Send SMS Messages With Python and Twilio via Their API]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/03/02/send-sms-messages-with-python-and-twilio-via-their-api/"/>
    <updated>2018-03-02T17:09:56-05:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/03/02/send-sms-messages-with-python-and-twilio-via-their-api</id>
    <content type="html"><![CDATA[<p>This post will guide you through the steps on how to send SMS messages with Python and Twilio. We will use <code>talaikis.com</code> API to get a random quote that we will include in the body of the sms.</p>

<h2>Signup for a Trail Account:</h2>

<p>Sign up for a trail account at <a href="https://www.twilio.com">Twilio</a> then create a number, which I will refer to as the <code>sender number</code>, take note of your accountid and token.</p>

<h2>Create the Config:</h2>

<p>Create the config, that will keep the accountid, token, sender number and recipient number:</p>

<figure class='code'><figcaption><span>config.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">secrets</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&#39;account&#39;</span><span class="p">:</span> <span class="s">&#39;xxxxxxxx&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;token&#39;</span><span class="p">:</span> <span class="s">&#39;xxxxxxx&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;sender&#39;</span><span class="p">:</span> <span class="s">&#39;+1234567890&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;receiver&#39;</span><span class="p">:</span> <span class="s">&#39;+0987654321&#39;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Create the Client:</h2>

<p>We will get a random quote via talaikis.com&rsquo;s API which we will be using for the body of our text message, and then use twilio&rsquo;s API to send the text message:</p>

<figure class='code'><figcaption><span>sms_client.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">config</span> <span class="kn">import</span> <span class="n">secrets</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">twilio.rest</span> <span class="kn">import</span> <span class="n">Client</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">requests</span>
</span><span class='line'>
</span><span class='line'><span class="n">twilio_acountid</span> <span class="o">=</span> <span class="n">secrets</span><span class="p">[</span><span class="s">&#39;account&#39;</span><span class="p">]</span>
</span><span class='line'><span class="n">twilio_token</span> <span class="o">=</span> <span class="n">secrets</span><span class="p">[</span><span class="s">&#39;token&#39;</span><span class="p">]</span>
</span><span class='line'><span class="n">twilio_receiver</span> <span class="o">=</span> <span class="n">secrets</span><span class="p">[</span><span class="s">&#39;receiver&#39;</span><span class="p">]</span>
</span><span class='line'><span class="n">twilio_sender</span> <span class="o">=</span> <span class="n">secrets</span><span class="p">[</span><span class="s">&#39;sender&#39;</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="n">quote_response</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;https://talaikis.com/api/quotes/random&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">json</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="n">client</span> <span class="o">=</span> <span class="n">Client</span><span class="p">(</span>
</span><span class='line'>    <span class="n">twilio_acountid</span><span class="p">,</span>
</span><span class='line'>    <span class="n">twilio_token</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">message</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="n">messages</span><span class="o">.</span><span class="n">create</span><span class="p">(</span>
</span><span class='line'>    <span class="n">to</span><span class="o">=</span><span class="n">twilio_receiver</span><span class="p">,</span>
</span><span class='line'>    <span class="n">from_</span><span class="o">=</span><span class="n">twilio_sender</span><span class="p">,</span>
</span><span class='line'>    <span class="n">body</span><span class="o">=</span><span class="n">quote_response</span><span class="p">[</span><span class="s">&#39;quote&#39;</span><span class="p">]</span>
</span><span class='line'><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Message Preview:</h2>

<p>Then within a couple of seconds your message should look something more or less like this:</p>

<p><img src="https://i.snag.gy/Oqj2cP.jpg" alt="" /></p>

<p>For more info, have a look at their docs:
- <a href="https://www.twilio.com/docs/">https://www.twilio.com/docs/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Golang: Reading From Files and Writing to Disk With Arguments]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/03/02/golang-reading-from-files-and-writing-to-disk-with-arguments/"/>
    <updated>2018-03-02T07:11:13-05:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/03/02/golang-reading-from-files-and-writing-to-disk-with-arguments</id>
    <content type="html"><![CDATA[<p><img src="https://i.snag.gy/VJmUZz.jpg" alt="" /></p>

<p>From our <a href="https://goo.gl/ih43uv">Previous Post</a> we wrote a basic golang app that reads the contents of a file and writes it back to disk, but in a static way as we defined the source and destination filenames in the code.</p>

<p>Today we will use arguments to specify what the source and destination filenames should be instead of hardcoding it.</p>

<h2>Our Golang Application:</h2>

<p>We will be using if statements to determine if the number of arguments provided is as expected, if not, then a usage string should be returned to stdout. Then we will loop through the list of arguments to determine what the values for our source and destination file should be.</p>

<p>Once it completes, it prints out the coice of filenames that was used:</p>

<figure class='code'><figcaption><span>app.go</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>    <span class="s">&quot;io/ioutil&quot;</span>
</span><span class='line'>    <span class="s">&quot;os&quot;</span>
</span><span class='line'>    <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="p">(</span>
</span><span class='line'>    <span class="nx">input_filename</span> <span class="kt">string</span>
</span><span class='line'>    <span class="nx">output_filename</span> <span class="kt">string</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="nx">os</span><span class="p">.</span><span class="nx">Args</span><span class="p">)</span> <span class="p">&lt;</span> <span class="mi">5</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;Usage: (-i/--input) &#39;input_filename&#39; (-o/--output) &#39;output_filename&#39; \n&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="nx">os</span><span class="p">.</span><span class="nx">Exit</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">for</span> <span class="nx">i</span><span class="p">,</span> <span class="nx">arg</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">os</span><span class="p">.</span><span class="nx">Args</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="nx">arg</span> <span class="o">==</span> <span class="s">&quot;-i&quot;</span> <span class="o">||</span> <span class="nx">arg</span> <span class="o">==</span> <span class="s">&quot;--input&quot;</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">input_filename</span> <span class="p">=</span> <span class="nx">os</span><span class="p">.</span><span class="nx">Args</span><span class="p">[</span><span class="nx">i</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="k">if</span> <span class="nx">arg</span> <span class="o">==</span> <span class="s">&quot;-o&quot;</span> <span class="o">||</span> <span class="nx">arg</span> <span class="o">==</span> <span class="s">&quot;--output&quot;</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">output_filename</span> <span class="p">=</span> <span class="nx">os</span><span class="p">.</span><span class="nx">Args</span><span class="p">[</span><span class="nx">i</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">input_file_content</span><span class="p">,</span> <span class="kt">error</span> <span class="o">:=</span> <span class="nx">ioutil</span><span class="p">.</span><span class="nx">ReadFile</span><span class="p">(</span><span class="nx">input_filename</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="kt">error</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>        <span class="nb">panic</span><span class="p">(</span><span class="kt">error</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;File used for reading:&quot;</span><span class="p">,</span> <span class="nx">input_filename</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">ioutil</span><span class="p">.</span><span class="nx">WriteFile</span><span class="p">(</span><span class="nx">output_filename</span><span class="p">,</span> <span class="nx">input_file_content</span><span class="p">,</span> <span class="mo">0644</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;File used for writing:&quot;</span><span class="p">,</span> <span class="nx">output_filename</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Build your application:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>go build app.go
</span></code></pre></td></tr></table></div></figure>


<p>Run your application with no additional arguments to determine the expected behaviour:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>./app
</span><span class='line'>Usage: <span class="o">(</span>-i/--input<span class="o">)</span> <span class="s1">&#39;input_filename&#39;</span> <span class="o">(</span>-o/--output<span class="o">)</span> <span class="s1">&#39;output_file-to-write&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>It works as expected, now create a source file, then run the application:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="nv">$RANDOM</span> &gt; myfile.txt
</span></code></pre></td></tr></table></div></figure>


<p>Run the application, and in this run, we will set the destination file as newfile.txt:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>./app -i myfile.txt -o newfile.txt
</span><span class='line'>File used <span class="k">for</span> reading: myfile.txt
</span><span class='line'>File used <span class="k">for</span> writing: newfile.txt
</span></code></pre></td></tr></table></div></figure>


<p>Checking out the new file:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cat newfile.txt
</span><span class='line'>8568
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Golang: Reading From Files and Writing to Disk With Golang]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/03/02/golang-reading-from-files-and-writing-to-disk-with-golang/"/>
    <updated>2018-03-02T06:44:59-05:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/03/02/golang-reading-from-files-and-writing-to-disk-with-golang</id>
    <content type="html"><![CDATA[<p><img src="![](https://i.snag.gy/VJmUZz.jpg" alt="" />)</p>

<p>Today we will create a very basic application to read content from a file, and write the content from the file back to disk, but to another filename.</p>

<p>Basically, doing a copy of the file to another filename.</p>

<h2>Golang Environment: Golang Docker Image</h2>

<p>Dropping into a Golang Environment using Docker:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker run -it golang:alpine sh
</span></code></pre></td></tr></table></div></figure>


<h2>Our Golang Application</h2>

<p>After we are in our container, lets write our app:</p>

<figure class='code'><figcaption><span>app.go</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>    <span class="s">&quot;io/ioutil&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">content</span><span class="p">,</span> <span class="kt">error</span> <span class="o">:=</span> <span class="nx">ioutil</span><span class="p">.</span><span class="nx">ReadFile</span><span class="p">(</span><span class="s">&quot;source-data.txt&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="kt">error</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>        <span class="nb">panic</span><span class="p">(</span><span class="kt">error</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kt">error</span> <span class="p">=</span> <span class="nx">ioutil</span><span class="p">.</span><span class="nx">WriteFile</span><span class="p">(</span><span class="s">&quot;destination-data.txt&quot;</span><span class="p">,</span> <span class="nx">content</span><span class="p">,</span> <span class="mo">0644</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="kt">error</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>        <span class="nb">panic</span><span class="p">(</span><span class="kt">error</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Building our application to a binary:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>go build app.go
</span></code></pre></td></tr></table></div></figure>


<p>Creating our <code>source-data.txt</code> :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s2">&quot;foo&quot;</span> &gt; <span class="nb">source</span>-data.txt
</span></code></pre></td></tr></table></div></figure>


<h2>Running the Golang App:</h2>

<p>When we run this app, it will read the content of <code>source-data.txt</code> and write it to <code>destination-data.txt</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>./app.go
</span></code></pre></td></tr></table></div></figure>


<p>We can see that the file has been written to disk:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ls <span class="p">|</span> grep data
</span><span class='line'>destination-data.txt
</span><span class='line'><span class="nb">source</span>-data.txt
</span></code></pre></td></tr></table></div></figure>


<p>Making sure the data is the same, we can do a <code>md5sum hash</code> function on them:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>md5sum <span class="nb">source</span>-data.txt
</span><span class='line'>d3b07384d113edec49eaa6238ad5ff00  <span class="nb">source</span>-data.txt
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>md5sum destination-data.txt
</span><span class='line'>d3b07384d113edec49eaa6238ad5ff00  destination-data.txt
</span></code></pre></td></tr></table></div></figure>


<h2>Next:</h2>

<p>This was a very static way of doing it, as you need to hardcode the filenames. In the <a href="https://goo.gl/t8fasN">next post</a> I will show how to use arguments to make it more dynamic.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup a KVM Hypervisor on Ubuntu to Host Virtual Machines]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/02/20/setup-a-kvm-hypervisor-on-ubuntu-to-host-virtual-machines/"/>
    <updated>2018-02-20T06:21:56-05:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/02/20/setup-a-kvm-hypervisor-on-ubuntu-to-host-virtual-machines</id>
    <content type="html"><![CDATA[<p>Today we will setup a KVM (Kernel Virtual Machine) Hypervisor, where we can host Virtual Machines. In order to do so, your host needs to Support Hardware Virtualization.</p>

<h2>What we will be doing today:</h2>

<ul>
<li>Check if your host supports Hardware Virtualization</li>
<li>Setup the KVM Hypervisor</li>
<li>Setup a Alpine VM</li>
</ul>


<h2>Check for Hardware Virtualization Support:</h2>

<p>We will install the package required to do the check:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo apt update <span class="o">&amp;&amp;</span> sudo apt install cpu-checker -y
</span></code></pre></td></tr></table></div></figure>


<p>Once that is installed, run <code>kvm-ok</code> and if its supported, your output should look something like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>kvm-ok
</span><span class='line'>INFO: /dev/kvm exists
</span><span class='line'>KVM acceleration can be used
</span></code></pre></td></tr></table></div></figure>


<h2>Installing KVM</h2>

<p>Update your System and get the Packages required to Setup KVM:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo apt update <span class="o">&amp;&amp;</span> sudo apt upgrade -y
</span><span class='line'><span class="nv">$ </span>apt install bridge-utils qemu-kvm libvirt-bin virtinst -y
</span></code></pre></td></tr></table></div></figure>


<p>Add your user to the libvirtd group:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo usermod -G libvirtd <span class="nv">$USER</span>
</span></code></pre></td></tr></table></div></figure>


<p>Check that the libvirtd service is running:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo systemctl is-active libvirtd
</span><span class='line'>active
</span></code></pre></td></tr></table></div></figure>


<p>You will also find that there is a new interface configured called <code>virbr0</code> in my case.</p>

<h2>Provision the Alpine VM and Setup OpenSSH:</h2>

<p>Get the ISO:</p>

<ul>
<li><a href="https://alpinelinux.org/downloads/">https://alpinelinux.org/downloads/</a></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>wget http://dl-cdn.alpinelinux.org/alpine/v3.7/releases/x86_64/alpine-virt-3.7.0-x86_64.iso
</span></code></pre></td></tr></table></div></figure>


<p>Provision the VM:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>virt-install <span class="se">\</span>
</span><span class='line'>--name alpine1 <span class="se">\</span>
</span><span class='line'>--ram <span class="m">256</span> <span class="se">\</span>
</span><span class='line'>--disk <span class="nv">path</span><span class="o">=</span>/var/lib/libvirt/images/alpine1.img,size<span class="o">=</span><span class="m">8</span> <span class="se">\</span>
</span><span class='line'>--vcpus <span class="m">1</span> <span class="se">\</span>
</span><span class='line'>--os-type linux <span class="se">\</span>
</span><span class='line'>--os-variant generic <span class="se">\</span>
</span><span class='line'>--network bridge:virbr0,model<span class="o">=</span>virtio <span class="se">\</span>
</span><span class='line'>--graphics none <span class="se">\</span>
</span><span class='line'>--console pty,target_type<span class="o">=</span>serial <span class="se">\</span>
</span><span class='line'>--cdrom ./alpine-virt-3.7.0-x86_64.iso
</span></code></pre></td></tr></table></div></figure>


<p>After this, you will be dropped into the console:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Starting install...
</span><span class='line'>Allocating <span class="s1">&#39;alpine1.img&#39;</span>                                                                                                           <span class="p">|</span>   <span class="m">8</span> GB  00:00:01
</span><span class='line'>Creating domain...                                                                                                                 <span class="p">|</span>    <span class="m">0</span> B  00:00:00
</span><span class='line'>Connected to domain alpine1
</span><span class='line'>Escape character is ^<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>ISOLINUX 6.04 6.04-pre1  Copyright <span class="o">(</span>C<span class="o">)</span> 1994-2015 H. Peter Anvin et al
</span><span class='line'>boot:
</span><span class='line'>
</span><span class='line'>   OpenRC 0.24.1.a941ee4a0b is starting up Linux 4.9.65-1-virthardened <span class="o">(</span>x86_64<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>Welcome to Alpine Linux 3.7
</span><span class='line'>Kernel 4.9.65-1-virthardened on an x86_64 <span class="o">(</span>/dev/ttyS0<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>localhost login:
</span></code></pre></td></tr></table></div></figure>


<p>Login with the <code>root</code> user and no password, then setup the VM by running <code>setup-alpine</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>localhost login: root
</span><span class='line'>Welcome to Alpine!
</span><span class='line'>
</span><span class='line'>localhost:~# setup-alpine
</span></code></pre></td></tr></table></div></figure>


<p>After completing the prompts reboot the VM by running <code>reboot</code>, then you will be dropped out of the console. Check the status of the reboot:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>virsh list
</span><span class='line'> Id    Name                           State
</span><span class='line'>----------------------------------------------------
</span><span class='line'> <span class="m">2</span>     alpine1                        running
</span></code></pre></td></tr></table></div></figure>


<p>As we can see our guest is running, lets console to our guest, provide the root user and password that you provided during the setup phase:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>virsh console 2
</span><span class='line'>Connected to domain alpine1
</span><span class='line'>Escape character is ^<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>alpine1 login: root
</span><span class='line'>Password:
</span><span class='line'>Welcome to Alpine!
</span></code></pre></td></tr></table></div></figure>


<p>Setup OpenSSH so that we can SSH to our guest over the network:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>apk update
</span><span class='line'><span class="nv">$ </span>apk add openssh
</span></code></pre></td></tr></table></div></figure>


<p>Configure SSH to accept Root Passwords, this is not advisable for production environments, but for testing this is okay. For Production servers, we will rather look at Key Based Authentication etc.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sed -i <span class="s1">&#39;s/#PermitRootLogin prohibit-password/PermitRootLogin yes/g&#39;</span> /etc/ssh/sshd_config
</span><span class='line'><span class="nv">$ </span>/etc/init.d/sshd restart
</span></code></pre></td></tr></table></div></figure>


<p>Get the IP Address:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ifconfig
</span><span class='line'>eth0      Link encap:Ethernet  HWaddr 52:54:00:D0:48:0C
</span><span class='line'>          inet addr:192.168.122.176  Bcast:192.168.122.255  Mask:255.255.255.0
</span><span class='line'>          inet6 addr: fe80::5054:ff:fed0:480c/64 Scope:Link
</span><span class='line'>          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
</span><span class='line'>          RX packets:55 errors:0 dropped:28 overruns:0 frame:0
</span><span class='line'>          TX packets:34 errors:0 dropped:0 overruns:0 carrier:0
</span><span class='line'>          collisions:0 txqueuelen:1000
</span><span class='line'>          RX bytes:4545 <span class="o">(</span>4.4 KiB<span class="o">)</span>  TX bytes:3345 <span class="o">(</span>3.2 KiB<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Exit the guest by running <code>exit</code> and <code>Ctrl + ]</code> to exit the console session.</p>

<p>Now SSH to your Alpine VM:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ssh root@192.168.122.176
</span><span class='line'>root@192.168.122.176<span class="err">&#39;</span>s password:
</span><span class='line'>Welcome to Alpine!
</span></code></pre></td></tr></table></div></figure>


<h2>Some Useful Commands:</h2>

<p>List Running VMs:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>virsh list
</span><span class='line'> Id    Name                           State
</span><span class='line'>----------------------------------------------------
</span><span class='line'> <span class="m">3</span>     alpine1                        running
</span></code></pre></td></tr></table></div></figure>


<p>Shutdown a VM:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>virsh shutdown alpine1
</span><span class='line'>Domain alpine1 is being shutdown
</span></code></pre></td></tr></table></div></figure>


<p>List all VMs:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>virsh list --all
</span><span class='line'> Id    Name                           State
</span><span class='line'>----------------------------------------------------
</span><span class='line'> -     alpine1                        shut off
</span></code></pre></td></tr></table></div></figure>


<p>Delete a VM:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>virsh shutdown alpine1 <span class="c">#or to force shutdown:</span>
</span><span class='line'><span class="nv">$ </span>virsh destroy alpine1
</span><span class='line'><span class="nv">$ </span>virsh undefine alpine1
</span></code></pre></td></tr></table></div></figure>


<p>Any future KVM posts will be tagged under <a href="http://blog.ruanbekker.com/blog/categories/kvm?source_site=blog.ruanbekker.com?source_category=kvm">KVM</a> and Alpine posts will be available under the <a href="http://blog.ruanbekker.com/blog/categories/alpine?source_site=blog.ruanbekker.com?source_category=kvm">Alpine</a> tag.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Guide to Setup Docker Convoy Volume Driver for Docker Swarm With NFS]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/02/16/guide-to-setup-docker-convoy-volume-driver-for-docker-swarm-with-nfs/"/>
    <updated>2018-02-16T08:51:59-05:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/02/16/guide-to-setup-docker-convoy-volume-driver-for-docker-swarm-with-nfs</id>
    <content type="html"><![CDATA[<p><img src="http://obj-cache.cloud.ruanbekker.com/docker-logo.png" alt="" /></p>

<p>In this post we will setup <a href="https://github.com/rancher/convoy">Rancher&rsquo;s Convoy Storage Plugin</a> with NFS, to provide data persistence in Docker Swarm.</p>

<h2>The Overview:</h2>

<p>This essentially means that we will have a NFS Volume, when the service gets created on Docker Swarm, the cluster creates these volumes with path mapping, so when a container gets spawned, restarted, scaled etc, the container that gets started on the new node will be aware of the volume, and will get the data that its expecting.</p>

<p>Its also good to note that our NFS Server will be a single point of failure, therefore its also good to look at a Distributed Volume like <a href="https://sysadmins.co.za/tag/glusterfs">GlusterFS</a>, <a href="https://sysadmins.co.za/tag/xtreemfs/">XtreemFS</a>, <a href="">Ceph</a>, etc.</p>

<ul>
<li>NFS Server (10.8.133.83)</li>
<li>Rancher Convoy Plugin on Each Docker Node in the Swarm (10.8.133.83, 10.8.166.19, 10.8.142.195)</li>
</ul>


<h2>Setup NFS:</h2>

<p>Setup the NFS Server</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo apt-get install nfs-kernel-server nfs-common -y
</span><span class='line'><span class="nv">$ </span>mkdir /vol
</span><span class='line'><span class="nv">$ </span>chown -R nobody:nogroup /vol
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s1">&#39;/vol 10.8.133.83(rw,sync,no_subtree_check) 10.8.166.19(rw,sync,no_subtree_check) 10.8.142.195(rw,sync,no_subtree_check)&#39;</span> &gt;&gt; /etc/exports
</span><span class='line'><span class="nv">$ </span>sudo systemctl restart nfs-kernel-server
</span><span class='line'><span class="nv">$ </span>sudo systemctl <span class="nb">enable </span>nfs-kernel-server
</span></code></pre></td></tr></table></div></figure>


<p>Setup the NFS Clients on each Docker Node:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo apt-get install nfs-common -y
</span><span class='line'><span class="nv">$ </span>mount 10.8.133.83:/vol /mnt
</span><span class='line'><span class="nv">$ </span>umount /mnt
</span><span class='line'><span class="nv">$ </span>df -h
</span></code></pre></td></tr></table></div></figure>


<p>If you can see tht the volume is mounted, unmount it and add it to the <code>fstab</code> so the volume can be mounted on boot:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo bash -c <span class="s2">&quot;echo &#39;10.8.133.83:/vol /mnt nfs auto,nofail,noatime,nolock,intr,tcp,actimeo=1800 0 0&#39; &gt;&gt; /etc/fstab&quot;</span>
</span><span class='line'><span class="nv">$ </span>sudo mount -a
</span></code></pre></td></tr></table></div></figure>


<h2>Install Rancher Convoy Plugin:</h2>

<p>The Plugin needs to be installed on each docker node that will be part of the swarm:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /tmp
</span><span class='line'><span class="nv">$ </span>wget https://github.com/rancher/convoy/releases/download/v0.5.0/convoy.tar.gz
</span><span class='line'><span class="nv">$ </span>tar xzf convoy.tar.gz
</span><span class='line'><span class="nv">$ </span>sudo cp convoy/convoy convoy/convoy-pdata_tools /usr/local/bin/
</span><span class='line'><span class="nv">$ </span>sudo mkdir -p /etc/docker/plugins/
</span><span class='line'><span class="nv">$ </span>sudo bash -c <span class="s1">&#39;echo &quot;unix:///var/run/convoy/convoy.sock&quot; &gt; /etc/docker/plugins/convoy.spec&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Create the init script:</h2>

<p>Thanks to <a href="https://gist.github.com/deviantony/557984d62e867e6f505577b207db6ffc">deviantony</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/sh</span>
</span><span class='line'><span class="c">### BEGIN INIT INFO</span>
</span><span class='line'><span class="c"># Provides:</span>
</span><span class='line'><span class="c"># Required-Start:    $remote_fs $syslog</span>
</span><span class='line'><span class="c"># Required-Stop:     $remote_fs $syslog</span>
</span><span class='line'><span class="c"># Default-Start:     2 3 4 5</span>
</span><span class='line'><span class="c"># Default-Stop:      0 1 6</span>
</span><span class='line'><span class="c"># Short-Description: Start daemon at boot time</span>
</span><span class='line'><span class="c"># Description:       Enable service provided by daemon.</span>
</span><span class='line'><span class="c">### END INIT INFO</span>
</span><span class='line'>
</span><span class='line'><span class="nv">dir</span><span class="o">=</span><span class="s2">&quot;/usr/local/bin&quot;</span>
</span><span class='line'><span class="nv">cmd</span><span class="o">=</span><span class="s2">&quot;convoy daemon --drivers vfs --driver-opts vfs.path=/mnt/docker/volumes&quot;</span>
</span><span class='line'><span class="nv">user</span><span class="o">=</span><span class="s2">&quot;root&quot;</span>
</span><span class='line'><span class="nv">name</span><span class="o">=</span><span class="s2">&quot;convoy&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">pid_file</span><span class="o">=</span><span class="s2">&quot;/var/run/$name.pid&quot;</span>
</span><span class='line'><span class="nv">stdout_log</span><span class="o">=</span><span class="s2">&quot;/var/log/$name.log&quot;</span>
</span><span class='line'><span class="nv">stderr_log</span><span class="o">=</span><span class="s2">&quot;/var/log/$name.err&quot;</span>
</span><span class='line'>
</span><span class='line'>get_pid<span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    cat <span class="s2">&quot;$pid_file&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>is_running<span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="o">[</span> -f <span class="s2">&quot;$pid_file&quot;</span> <span class="o">]</span> <span class="o">&amp;&amp;</span> ps <span class="sb">`</span>get_pid<span class="sb">`</span> &gt; /dev/null 2&gt;<span class="p">&amp;</span>1
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">case</span> <span class="s2">&quot;$1&quot;</span> in
</span><span class='line'>    start<span class="o">)</span>
</span><span class='line'>    <span class="k">if</span> is_running<span class="p">;</span> <span class="k">then</span>
</span><span class='line'>        <span class="nb">echo</span> <span class="s2">&quot;Already started&quot;</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>        <span class="nb">echo</span> <span class="s2">&quot;Starting $name&quot;</span>
</span><span class='line'>        <span class="nb">cd</span> <span class="s2">&quot;$dir&quot;</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">[</span> -z <span class="s2">&quot;$user&quot;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
</span><span class='line'>            sudo <span class="nv">$cmd</span> &gt;&gt; <span class="s2">&quot;$stdout_log&quot;</span> 2&gt;&gt; <span class="s2">&quot;$stderr_log&quot;</span> <span class="p">&amp;</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>            sudo -u <span class="s2">&quot;$user&quot;</span> <span class="nv">$cmd</span> &gt;&gt; <span class="s2">&quot;$stdout_log&quot;</span> 2&gt;&gt; <span class="s2">&quot;$stderr_log&quot;</span> <span class="p">&amp;</span>
</span><span class='line'>        <span class="k">fi</span>
</span><span class='line'>        <span class="nb">echo</span> <span class="nv">$!</span> &gt; <span class="s2">&quot;$pid_file&quot;</span>
</span><span class='line'>        <span class="k">if</span> ! is_running<span class="p">;</span> <span class="k">then</span>
</span><span class='line'>            <span class="nb">echo</span> <span class="s2">&quot;Unable to start, see $stdout_log and $stderr_log&quot;</span>
</span><span class='line'>            <span class="nb">exit </span>1
</span><span class='line'>        <span class="k">fi</span>
</span><span class='line'>    <span class="k">fi</span>
</span><span class='line'>    <span class="p">;;</span>
</span><span class='line'>    stop<span class="o">)</span>
</span><span class='line'>    <span class="k">if</span> is_running<span class="p">;</span> <span class="k">then</span>
</span><span class='line'>        <span class="nb">echo</span> -n <span class="s2">&quot;Stopping $name..&quot;</span>
</span><span class='line'>        <span class="nb">kill</span> <span class="sb">`</span>get_pid<span class="sb">`</span>
</span><span class='line'>        <span class="k">for</span> i in <span class="o">{</span>1..10<span class="o">}</span>
</span><span class='line'>        <span class="k">do</span>
</span><span class='line'>            <span class="k">if</span> ! is_running<span class="p">;</span> <span class="k">then</span>
</span><span class='line'>                <span class="nb">break</span>
</span><span class='line'><span class="nb">            </span><span class="k">fi</span>
</span><span class='line'>
</span><span class='line'>            <span class="nb">echo</span> -n <span class="s2">&quot;.&quot;</span>
</span><span class='line'>            sleep 1
</span><span class='line'>        <span class="k">done</span>
</span><span class='line'>        <span class="nb">echo</span>
</span><span class='line'>
</span><span class='line'><span class="nb">        </span><span class="k">if</span> is_running<span class="p">;</span> <span class="k">then</span>
</span><span class='line'>            <span class="nb">echo</span> <span class="s2">&quot;Not stopped; may still be shutting down or shutdown may have failed&quot;</span>
</span><span class='line'>            <span class="nb">exit </span>1
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>            <span class="nb">echo</span> <span class="s2">&quot;Stopped&quot;</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">[</span> -f <span class="s2">&quot;$pid_file&quot;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
</span><span class='line'>                rm <span class="s2">&quot;$pid_file&quot;</span>
</span><span class='line'>            <span class="k">fi</span>
</span><span class='line'>        <span class="k">fi</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>        <span class="nb">echo</span> <span class="s2">&quot;Not running&quot;</span>
</span><span class='line'>    <span class="k">fi</span>
</span><span class='line'>    <span class="p">;;</span>
</span><span class='line'>    restart<span class="o">)</span>
</span><span class='line'>    <span class="nv">$0</span> stop
</span><span class='line'>    <span class="k">if</span> is_running<span class="p">;</span> <span class="k">then</span>
</span><span class='line'>        <span class="nb">echo</span> <span class="s2">&quot;Unable to stop, will not attempt to start&quot;</span>
</span><span class='line'>        <span class="nb">exit </span>1
</span><span class='line'>    <span class="k">fi</span>
</span><span class='line'>    <span class="nv">$0</span> start
</span><span class='line'>    <span class="p">;;</span>
</span><span class='line'>    status<span class="o">)</span>
</span><span class='line'>    <span class="k">if</span> is_running<span class="p">;</span> <span class="k">then</span>
</span><span class='line'>        <span class="nb">echo</span> <span class="s2">&quot;Running&quot;</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>        <span class="nb">echo</span> <span class="s2">&quot;Stopped&quot;</span>
</span><span class='line'>        <span class="nb">exit </span>1
</span><span class='line'>    <span class="k">fi</span>
</span><span class='line'>    <span class="p">;;</span>
</span><span class='line'>    *<span class="o">)</span>
</span><span class='line'>    <span class="nb">echo</span> <span class="s2">&quot;Usage: $0 {start|stop|restart|status}&quot;</span>
</span><span class='line'>    <span class="nb">exit </span>1
</span><span class='line'>    <span class="p">;;</span>
</span><span class='line'><span class="k">esac</span>
</span><span class='line'>
</span><span class='line'><span class="nb">exit </span>0
</span></code></pre></td></tr></table></div></figure>


<p>Make the script executable:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>chmod +x /etc/init.d/convoy
</span></code></pre></td></tr></table></div></figure>


<p>Enable the service on boot:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo systemctl <span class="nb">enable </span>convoy
</span></code></pre></td></tr></table></div></figure>


<p>Start the service:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo /etc/init.d/convoy start
</span></code></pre></td></tr></table></div></figure>


<p>This should be done on all the nodes.</p>

<h2>Externally Managed Convoy Volumes</h2>

<p>One thing to note is that, after your delete a volume, you will still need to delete the directory from the path where its hosted, as the application does not do that by itself.</p>

<p>Creating the Volume Before hand:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>convoy create test1
</span><span class='line'>test1
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>docker volume ls
</span><span class='line'>DRIVER              VOLUME NAME
</span><span class='line'>convoy              test1
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>cat /mnt/docker/volumes/config/vfs_volume_test1.json
</span><span class='line'><span class="o">{</span><span class="s2">&quot;Name&quot;</span>:<span class="s2">&quot;test1&quot;</span>,<span class="s2">&quot;Size&quot;</span>:0,<span class="s2">&quot;Path&quot;</span>:<span class="s2">&quot;/mnt/docker/volumes/test1&quot;</span>,<span class="s2">&quot;MountPoint&quot;</span>:<span class="s2">&quot;&quot;</span>,<span class="s2">&quot;PrepareForVM&quot;</span>:false,<span class="s2">&quot;CreatedTime&quot;</span>:<span class="s2">&quot;Mon Feb 05 13:07:05 +0000 2018&quot;</span>,<span class="s2">&quot;Snapshots&quot;</span>:<span class="o">{}}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Viewing the volume from another node:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker volume ls
</span><span class='line'>DRIVER              VOLUME NAME
</span><span class='line'>convoy              test1
</span></code></pre></td></tr></table></div></figure>


<h2>Creating a Test Service:</h2>

<p>Create a test service to test the data persistence, our docker-compose.yml:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>version: <span class="s1">&#39;3.4&#39;</span>
</span><span class='line'>
</span><span class='line'>volumes:
</span><span class='line'>  test1:
</span><span class='line'>    external: <span class="nb">true</span>
</span><span class='line'>
</span><span class='line'>networks:
</span><span class='line'>  appnet:
</span><span class='line'>    external: <span class="nb">true</span>
</span><span class='line'>
</span><span class='line'>services:
</span><span class='line'>  <span class="nb">test</span>:
</span><span class='line'>    image: alpine:edge
</span><span class='line'>    <span class="nb">command</span>: sh -c <span class="s2">&quot;ping 127.0.0.1&quot;</span>
</span><span class='line'>    volumes:
</span><span class='line'>      - test1:/data
</span><span class='line'>    networks:
</span><span class='line'>      - appnet
</span></code></pre></td></tr></table></div></figure>


<p>Creating the Overlay Network and Deploying the Stack:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker network create -d overlay appnet
</span><span class='line'><span class="nv">$ </span>docker stack deploy -c docker-compose.yml apps
</span><span class='line'>Creating service apps_test
</span></code></pre></td></tr></table></div></figure>


<p>Write data to the volume in the container:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker <span class="nb">exec</span> -it apps_test.1.iojo7fpw8jirqjs3iu8qr7qpe sh
</span><span class='line'>/ <span class="c"># echo &quot;ok&quot; &gt; /data/file.txt</span>
</span><span class='line'>/ <span class="c"># cat /data/file.txt</span>
</span><span class='line'>ok
</span></code></pre></td></tr></table></div></figure>


<p>Scale the service:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker service scale <span class="nv">apps_test</span><span class="o">=</span>2
</span><span class='line'>apps_test scaled to 2
</span></code></pre></td></tr></table></div></figure>


<p>Inspect to see if the new replica is on another node:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker service ps apps_test
</span><span class='line'>ID                  NAME                IMAGE               NODE                DESIRED STATE       CURRENT STATE               ERROR                         PORTS
</span><span class='line'>myrq2pc3z26z        apps_test.1         alpine:edge         scw-docker-1        Running             Running <span class="m">45</span> seconds ago
</span><span class='line'>ny8t97l2q00c         <span class="se">\_</span> apps_test.1     alpine:edge         scw-docker-1        Shutdown            Failed <span class="m">51</span> seconds ago       <span class="s2">&quot;task: non-zero exit (137)&quot;</span>
</span><span class='line'>iojo7fpw8jir         <span class="se">\_</span> apps_test.1     alpine:edge         scw-docker-1        Shutdown            Failed about a minute ago   <span class="s2">&quot;task: non-zero exit (137)&quot;</span>
</span><span class='line'>tt0nuusvgeki        apps_test.2         alpine:edge         scw-docker-2        Running             Running <span class="m">15</span> seconds ago
</span></code></pre></td></tr></table></div></figure>


<p>Logon to the new container and test if the data is persisted:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker <span class="nb">exec</span> -it apps_test.2.tt0nuusvgekirw1c5myu720ga sh
</span><span class='line'>/ <span class="c"># cat /data/file.txt</span>
</span><span class='line'>ok
</span></code></pre></td></tr></table></div></figure>


<p>Delete the Stack and Redeploy and have a look at the data we created earlier, and you will notice the data is persisted:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker stack rm apps
</span><span class='line'><span class="nv">$ </span>docker stack deploy -c docker-compose.yml apps
</span><span class='line'><span class="nv">$ </span>docker <span class="nb">exec</span> -it apps_test.1.la4w2sbuu8cmv6xamwxl7n0ip cat /data/file.txt
</span><span class='line'>ok
</span><span class='line'><span class="nv">$ </span>docker stack rm apps
</span></code></pre></td></tr></table></div></figure>


<h2>Create Volume via Compose:</h2>

<p>You can also create the volume on service/stack creation level, so you dont need to create the volume before hand, the compose file:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">version</span><span class="p-Indicator">:</span> <span class="s">&#39;3.4&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">volumes</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">test2</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">driver</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">convoy</span>
</span><span class='line'>    <span class="l-Scalar-Plain">driver_opts</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">size</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">10</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">networks</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">appnet</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">external</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">true</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">services</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">test</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">image</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">alpine:edge</span>
</span><span class='line'>    <span class="l-Scalar-Plain">command</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">sh -c &quot;ping 127.0.0.1&quot;</span>
</span><span class='line'>    <span class="l-Scalar-Plain">volumes</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">test2:/data</span>
</span><span class='line'>    <span class="l-Scalar-Plain">networks</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">appnet</span>
</span></code></pre></td></tr></table></div></figure>


<p>Deploy the Stack:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker stack deploy -c docker-compose-new.yml apps
</span><span class='line'>Creating service apps_test
</span></code></pre></td></tr></table></div></figure>


<p>List the volumes and you will notice that the volume was created:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker volume ls
</span><span class='line'>DRIVER              VOLUME NAME
</span><span class='line'>convoy              apps_test2
</span><span class='line'>convoy              test1
</span></code></pre></td></tr></table></div></figure>


<p>Lets inspect the volume, to see more details about it:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>docker volume inspect apps_test2
</span><span class='line'><span class="o">[</span>
</span><span class='line'>    <span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;CreatedAt&quot;</span>: <span class="s2">&quot;0001-01-01T00:00:00Z&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;Driver&quot;</span>: <span class="s2">&quot;convoy&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;Labels&quot;</span>: <span class="o">{</span>
</span><span class='line'>            <span class="s2">&quot;com.docker.stack.namespace&quot;</span>: <span class="s2">&quot;apps&quot;</span>
</span><span class='line'>        <span class="o">}</span>,
</span><span class='line'>        <span class="s2">&quot;Mountpoint&quot;</span>: <span class="s2">&quot;/mnt/docker/volumes/apps_test2&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;Name&quot;</span>: <span class="s2">&quot;apps_test2&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;Options&quot;</span>: <span class="o">{</span>
</span><span class='line'>            <span class="s2">&quot;size&quot;</span>: <span class="s2">&quot;10&quot;</span>
</span><span class='line'>        <span class="o">}</span>,
</span><span class='line'>        <span class="s2">&quot;Scope&quot;</span>: <span class="s2">&quot;local&quot;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>As mentioned earlier, if you delete the volume, you need to delete the data directories as well</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker volume rm test1
</span><span class='line'>test1
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>ls /mnt/docker/volumes/
</span><span class='line'>apps_test2  config  test1
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>rm -rf /mnt/docker/volumes/test1
</span></code></pre></td></tr></table></div></figure>


<p>More info about the project:
- <a href="https://github.com/rancher/convoy">https://github.com/rancher/convoy</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup a NFS Server on Ubuntu]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/02/11/setup-a-nfs-server-on-ubuntu/"/>
    <updated>2018-02-11T17:26:56-05:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/02/11/setup-a-nfs-server-on-ubuntu</id>
    <content type="html"><![CDATA[<p><img src="https://i.snag.gy/3sUALo.jpg" alt="" /></p>

<p>Quick post on how to setup a NFS Server on Ubuntu and how to setup the client to interact with the NFS Server.</p>

<h2>Setup the Dependencies:</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>apt update <span class="o">&amp;&amp;</span> sudo apt upgrade -y
</span><span class='line'><span class="nv">$ </span>sudo apt-get install nfs-kernel-server nfs-common -y
</span></code></pre></td></tr></table></div></figure>


<p>Create the Directory for NFS and set permissions:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir /vol
</span><span class='line'>chown -R nobody:nogroup /vol
</span></code></pre></td></tr></table></div></figure>


<h2>Allow the Clients:</h2>

<p>We need to set in the <code>exports</code> file, the clients we would like to allow:</p>

<ul>
<li><code>rw</code>: Allows Client R/W Access to the Volume.</li>
<li><code>sync</code>: This option forces NFS to write changes to disk before replying. More stable and Consistent. Note, it does reduce the speed of file operations.</li>
<li><code>no_subtree_check</code>: This prevents subtree checking, which is a process where the host must check whether the file is actually still available in the exported tree for every request. This can cause many problems when a file is renamed while the client has it opened. In almost all cases, it is better to disable subtree checking.</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s1">&#39;/vol 10.8.133.83(rw,sync,no_subtree_check) 10.8.166.19(rw,sync,no_subtree_check) 10.8.142.195(rw,sync,no_subtree_check)&#39;</span> &gt;&gt; /etc/exports
</span></code></pre></td></tr></table></div></figure>


<h2>Start the NFS Server:</h2>

<p>Restart the service and enable the service on boot:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo systemctl restart nfs-kernel-server
</span><span class='line'><span class="nv">$ </span>sudo systemctl <span class="nb">enable </span>nfs-kernel-server
</span></code></pre></td></tr></table></div></figure>


<h2>Client Side:</h2>

<p>We will mount the NFS Volume to our Clients <code>/mnt</code> partition.</p>

<p>Install the dependencies:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo apt-get install nfs-common -y
</span></code></pre></td></tr></table></div></figure>


<p>Test if we can mount the volume, then unmount it, as we will set the config in our <code>fstab</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo mount 10.8.133.83:/vol /mnt
</span><span class='line'><span class="nv">$ </span>sudo umount /mnt
</span><span class='line'><span class="nv">$ </span>df -h
</span></code></pre></td></tr></table></div></figure>


<p>Set the config in your <code>fstab</code>, then mount it from there:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo bash -c <span class="s2">&quot;echo &#39;10.8.133.83:/vol /mnt nfs auto,nofail,noatime,nolock,intr,tcp,actimeo=1800 0 0&#39; &gt;&gt; /etc/fstab&quot;</span>
</span><span class='line'><span class="nv">$ </span>sudo mount -a
</span><span class='line'><span class="nv">$ </span>df -h
</span></code></pre></td></tr></table></div></figure>


<p>Now you shoule be able to write to your NFS Volume from your client.</p>

<p>Sources:
- <a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-an-nfs-mount-on-ubuntu-16-04">1</a> <a href="https://gist.github.com/deviantony/557984d62e867e6f505577b207db6ffc%">2</a></p>
]]></content>
  </entry>
  
</feed>
