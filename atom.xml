<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Ruan Bekker's Blog]]></title>
  <link href="http://blog.ruanbekker.com/atom.xml" rel="self"/>
  <link href="http://blog.ruanbekker.com/"/>
  <updated>2018-05-23T07:32:23-04:00</updated>
  <id>http://blog.ruanbekker.com/</id>
  <author>
    <name><![CDATA[Ruan]]></name>
    <email><![CDATA[ruan@ruanbekker.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Generate Random Characters With Python Using Random and String Modules]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/05/23/generate-random-characters-with-python-using-random-and-string-modules/"/>
    <updated>2018-05-23T06:29:06-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/05/23/generate-random-characters-with-python-using-random-and-string-modules</id>
    <content type="html"><![CDATA[<p>When generating random characters for whatever reason, passwords, secrets-keys etc, you could use the <code>uuid</code> module, which looks like this:</p>

<figure class='code'><figcaption><span>Random String with UUID</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">from</span> <span class="nn">uuid</span> <span class="kn">import</span> <span class="n">uuid4</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="s">&quot;Your string is: {0}&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">uuid4</span><span class="p">())</span> <span class="p">)</span>
</span><span class='line'><span class="n">Your</span> <span class="n">string</span> <span class="ow">is</span><span class="p">:</span> <span class="mi">53</span><span class="n">a6e1a7</span><span class="o">-</span><span class="n">a2c7</span><span class="o">-</span><span class="mi">488</span><span class="n">e</span><span class="o">-</span><span class="n">bed9</span><span class="o">-</span><span class="n">d76662de9c5f</span>
</span></code></pre></td></tr></table></div></figure>


<p>But if you want to be more specific, like digits, letters, capitalization etc, you can use the <code>string</code> and <code>random</code> modules to do so. First we will generate a random string containing only letters:</p>

<figure class='code'><figcaption><span>Random String with letters</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">from</span> <span class="nn">string</span> <span class="kn">import</span> <span class="n">ascii_letters</span><span class="p">,</span> <span class="n">punctuation</span><span class="p">,</span> <span class="n">digits</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">from</span> <span class="nn">random</span> <span class="kn">import</span> <span class="n">choice</span><span class="p">,</span> <span class="n">randint</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="nb">min</span> <span class="o">=</span> <span class="mi">12</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="nb">max</span> <span class="o">=</span> <span class="mi">15</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">string_format</span> <span class="o">=</span> <span class="n">ascii_letters</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">generated_string</span> <span class="o">=</span> <span class="s">&quot;&quot;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">choice</span><span class="p">(</span><span class="n">string_format</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">randint</span><span class="p">(</span><span class="nb">min</span><span class="p">,</span> <span class="nb">max</span><span class="p">)))</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="s">&quot;Your String is: {0}&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">generated_string</span><span class="p">))</span>
</span><span class='line'><span class="n">Your</span> <span class="n">String</span> <span class="ow">is</span><span class="p">:</span> <span class="n">zNeUFluvZwED</span>
</span></code></pre></td></tr></table></div></figure>


<p>As you can see, you have a randomized string which will be always at least 12 characters and max 15 characters, which is lower and upper case. You can also use the <code>lower</code> and <code>upper</code> functions if you want to capitalize or lower case your string:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">generated_string</span><span class="o">.</span><span class="n">lower</span><span class="p">()</span>
</span><span class='line'><span class="s">&#39;zneufluvzwed&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">generated_string</span><span class="o">.</span><span class="n">upper</span><span class="p">()</span>
</span><span class='line'><span class="s">&#39;ZNEUFLUVZWED&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Let&rsquo;s add some logic so that we can have a more randomized characters with digits, punctuations etc:</p>

<figure class='code'><figcaption><span>Random String with Letters, Punctuations and Digits</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">from</span> <span class="nn">string</span> <span class="kn">import</span> <span class="n">ascii_letters</span><span class="p">,</span> <span class="n">punctuation</span><span class="p">,</span> <span class="n">digits</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">from</span> <span class="nn">random</span> <span class="kn">import</span> <span class="n">choice</span><span class="p">,</span> <span class="n">randint</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="nb">min</span> <span class="o">=</span> <span class="mi">12</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="nb">max</span> <span class="o">=</span> <span class="mi">15</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">string_format</span> <span class="o">=</span> <span class="n">ascii_letters</span> <span class="o">+</span> <span class="n">punctuation</span> <span class="o">+</span> <span class="n">digits</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">generated_string</span> <span class="o">=</span> <span class="s">&quot;&quot;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">choice</span><span class="p">(</span><span class="n">string_format</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">randint</span><span class="p">(</span><span class="nb">min</span><span class="p">,</span> <span class="nb">max</span><span class="p">)))</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="s">&quot;Your String is: {0}&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">generated_string</span><span class="p">))</span>
</span><span class='line'><span class="n">Your</span> <span class="n">String</span> <span class="ow">is</span><span class="p">:</span> <span class="n">Bu</span><span class="o">&gt;</span><span class="p">}</span><span class="n">x_</span><span class="o">/-</span><span class="n">H5</span><span class="p">)</span><span class="n">fLAr</span>
</span></code></pre></td></tr></table></div></figure>


<p>More <a href="https://goo.gl/G9VRpe">Python</a> related blog posts.</p>

<center>
  <script type='text/javascript' src='https://ko-fi.com/widgets/widget_2.js'></script>
  <script type='text/javascript'>kofiwidget2.init('Buy Me a Coffee', '#46b798', 'A6423ZIQ');kofiwidget2.draw();</script>
</center>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Manage Scaleway Instances via Their API Like a Boss With Their Command Line Tool Scw]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/05/09/manage-scaleway-instances-via-their-api-like-a-boss-with-their-command-line-tool-scw/"/>
    <updated>2018-05-09T12:31:11-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/05/09/manage-scaleway-instances-via-their-api-like-a-boss-with-their-command-line-tool-scw</id>
    <content type="html"><![CDATA[<p><img src="https://preview.ibb.co/bBRhn7/scw.png" alt="" /></p>

<p>Let&rsquo;s set things straight: I am a command line fan boy, If I can do the things I have to do with a command line interface, i&rsquo;m happy! And that means automation ftw! :D</p>

<h2>Scaleway Command Line Interface:</h2>

<p>I have been using Scaleway for about 2 years now, and absolutely loving their services! So I recently found their <a href="https://github.com/scaleway/scaleway-cli">command line interface utility: scw</a>, which is written in golang and has a very similar feel to docker.</p>

<h2>Install the SCW CLI Tool:</h2>

<p>A golang environment is needed and I will be using docker to drop myself into a golang environment and then install the scw utility:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker run -it golang:alpine sh
</span><span class='line'><span class="nv">$ </span>apk update
</span><span class='line'><span class="nv">$ </span>apk add openssl git openssh curl
</span><span class='line'><span class="nv">$ </span>go get -u github.com/scaleway/scaleway-cli/cmd/scw
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>Verify that it was installed:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>scw --version
</span><span class='line'>scw version v1.16+dev, build
</span></code></pre></td></tr></table></div></figure>


<p>Awesome sauce!</p>

<h2>Authentication:</h2>

<p>When we authenticate to Scaleway, it will prompt you to upload your public ssh key, as I am doing this in a container I have no ssh keys, so therefore will generate one before I authenticate.</p>

<p>Generate the SSH Key:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ssh-keygen -t rsa
</span><span class='line'>Generating public/private rsa key pair.
</span><span class='line'>Enter file in which to save the key <span class="o">(</span>/root/.ssh/id_rsa<span class="o">)</span>:
</span><span class='line'>Enter passphrase <span class="o">(</span>empty <span class="k">for</span> no passphrase<span class="o">)</span>:
</span><span class='line'>Enter same passphrase again:
</span><span class='line'>Your identification has been saved in /root/.ssh/id_rsa.
</span><span class='line'>Your public key has been saved in /root/.ssh/id_rsa.pub.
</span></code></pre></td></tr></table></div></figure>


<p>Now loging to Scaleway using the cli tools:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>scw login
</span><span class='line'>Login <span class="o">(</span>cloud.scaleway.com<span class="o">)</span>: &lt;youremail@domain.com&gt;
</span><span class='line'>Password:
</span><span class='line'>Do you want to upload an SSH key ?
</span><span class='line'><span class="o">[</span>0<span class="o">]</span> I don<span class="err">&#39;</span>t want to upload a key !
</span><span class='line'><span class="o">[</span>1<span class="o">]</span> id_rsa.pub
</span><span class='line'>Which <span class="o">[</span>id<span class="o">]</span>: 1
</span><span class='line'>
</span><span class='line'>You are now authenticated on Scaleway.com as Ruan.
</span><span class='line'>You can list your existing servers using <span class="sb">`</span>scw ps<span class="sb">`</span> or create a new one using <span class="sb">`</span>scw run ubuntu-xenial<span class="sb">`</span>.
</span><span class='line'>You can get a list of all available commands using <span class="sb">`</span>scw -h<span class="sb">`</span> and get more usage examples on github.com/scaleway/scaleway-cli.
</span><span class='line'>Happy cloud riding.
</span></code></pre></td></tr></table></div></figure>


<p>Sweeet!</p>

<p><img src="https://pics.me.me/hacker-voice-im-in-24303160.png" alt="" /></p>

<h2>Getting Info from Scaleway</h2>

<p>List Instance Types:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>scw products servers
</span><span class='line'>COMMERCIAL TYPE     ARCH     CPUs      RAM  BAREMETAL
</span><span class='line'>ARM64-128GB        arm64       <span class="m">64</span>   <span class="m">137</span> GB      <span class="nb">false</span>
</span><span class='line'>ARM64-16GB         arm64       <span class="m">16</span>    <span class="m">17</span> GB      <span class="nb">false</span>
</span><span class='line'>ARM64-2GB          arm64        <span class="m">4</span>   2.1 GB      <span class="nb">false</span>
</span><span class='line'>ARM64-32GB         arm64       <span class="m">32</span>    <span class="m">34</span> GB      <span class="nb">false</span>
</span><span class='line'>ARM64-4GB          arm64        <span class="m">6</span>   4.3 GB      <span class="nb">false</span>
</span><span class='line'>ARM64-64GB         arm64       <span class="m">48</span>    <span class="m">69</span> GB      <span class="nb">false</span>
</span><span class='line'>ARM64-8GB          arm64        <span class="m">8</span>   8.6 GB      <span class="nb">false</span>
</span><span class='line'>C1                   arm        <span class="m">4</span>   2.1 GB       <span class="nb">true</span>
</span><span class='line'>C2L               x86_64        <span class="m">8</span>    <span class="m">34</span> GB       <span class="nb">true</span>
</span><span class='line'>C2M               x86_64        <span class="m">8</span>    <span class="m">17</span> GB       <span class="nb">true</span>
</span><span class='line'>C2S               x86_64        <span class="m">4</span>   8.6 GB       <span class="nb">true</span>
</span><span class='line'>START1-L          x86_64        <span class="m">8</span>   8.6 GB      <span class="nb">false</span>
</span><span class='line'>START1-M          x86_64        <span class="m">4</span>   4.3 GB      <span class="nb">false</span>
</span><span class='line'>START1-S          x86_64        <span class="m">2</span>   2.1 GB      <span class="nb">false</span>
</span><span class='line'>START1-XS         x86_64        <span class="m">1</span>   1.1 GB      <span class="nb">false</span>
</span><span class='line'>VC1L              x86_64        <span class="m">6</span>   8.6 GB      <span class="nb">false</span>
</span><span class='line'>VC1M              x86_64        <span class="m">4</span>   4.3 GB      <span class="nb">false</span>
</span><span class='line'>VC1S              x86_64        <span class="m">2</span>   2.1 GB      <span class="nb">false</span>
</span><span class='line'>X64-120GB         x86_64       <span class="m">12</span>   <span class="m">129</span> GB      <span class="nb">false</span>
</span><span class='line'>X64-15GB          x86_64        <span class="m">6</span>    <span class="m">16</span> GB      <span class="nb">false</span>
</span><span class='line'>X64-30GB          x86_64        <span class="m">8</span>    <span class="m">32</span> GB      <span class="nb">false</span>
</span><span class='line'>X64-60GB          x86_64       <span class="m">10</span>    <span class="m">64</span> GB      <span class="nb">false</span>
</span></code></pre></td></tr></table></div></figure>


<p>Get a list of available Images, in my case I am just looking for Ubuntu:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>scw images <span class="p">|</span> grep -i ubuntu
</span><span class='line'>Ubuntu_Bionic               latest              a21bb700            <span class="m">11</span> days             <span class="o">[</span>ams1 par1<span class="o">]</span>         <span class="o">[</span>x86_64<span class="o">]</span>
</span><span class='line'>Ubuntu_Mini_Xenial_25G      latest              bc75c00b            <span class="m">13</span> days             <span class="o">[</span>ams1 par1<span class="o">]</span>         <span class="o">[</span>x86_64<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>List Running Instances:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>scw ps
</span><span class='line'>SERVER ID           IMAGE                       ZONE                CREATED             STATUS              PORTS               NAME                  COMMERCIAL TYPE
</span><span class='line'>abc123de            Ubuntu_Xenial_16_04_lates   ams1                <span class="m">5</span> weeks             running             xx.xx.xx.xx         scw-elasticsearch-01  ARM64-4GB
</span><span class='line'>abc456de            ruan-docker-swarm-17_03     par1                <span class="m">10</span> months           running             xx.xx.xxx.xxx       scw-swarm-manager-01  VC1M
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<p>List All Instances (Running, Stopped, Started, etc):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>scw ps -a
</span><span class='line'>SERVER ID           IMAGE                       ZONE                CREATED             STATUS              PORTS               NAME                  COMMERCIAL TYPE
</span><span class='line'>abc123df            Ubuntu_Xenial_16_04_lates   ams1                <span class="m">5</span> weeks             stopped             xx.xx.xx.xx         scw-elasticsearch-02  ARM64-4GB
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<p>List Instances with a filter based on its name:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>scw ps -f <span class="nv">name</span><span class="o">=</span>scw-swarm-worker-02
</span><span class='line'>SERVER ID           IMAGE               ZONE                CREATED             STATUS              PORTS               NAME                COMMERCIAL TYPE
</span><span class='line'>1234abcd            Ubuntu_Xenial       par1                <span class="m">8</span> minutes           running             xx.xx.xxx.xxx       scw-swarm-worker-2  START1-XS
</span></code></pre></td></tr></table></div></figure>


<p>List the Latest Instance that was created:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>scw ps -l
</span><span class='line'>SERVER ID           IMAGE               ZONE                CREATED             STATUS              PORTS               NAME                COMMERCIAL TYPE
</span><span class='line'>1234abce            Ubuntu_Xenial       par1                <span class="m">6</span> minutes           running             xx.xx.xxx.xxx       scw-swarm-worker-3  START1-XS
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h2>Create Instances:</h2>

<p>In my scenario, I would like to create a instance named <code>docker-swarm-worker-4</code> with the instance type <code>START1-XS</code> in the Paris datacenter, and I will be using my key that I have uploaded, also the image id that I passed, was retrieved when listing for images:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>scw --region<span class="o">=</span>par1 create --commercial-type<span class="o">=</span>START1-XS --ip-address<span class="o">=</span>dynamic --ipv6<span class="o">=</span><span class="nb">false</span> --name<span class="o">=</span><span class="s2">&quot;docker-swarm-worker-4&quot;</span> --tmp-ssh-key<span class="o">=</span><span class="nb">false  </span>bc75c00b
</span><span class='line'>&lt;response: random uuid string&gt;
</span></code></pre></td></tr></table></div></figure>


<p>Now that the instance is created, we can start it by calling either the name or the id:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>scw start docker-swarm-worker-4
</span></code></pre></td></tr></table></div></figure>


<p>To verify the status of the instance, we can do:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>scw ps -l
</span><span class='line'>SERVER ID           IMAGE               ZONE                CREATED             STATUS              PORTS               NAME                   COMMERCIAL TYPE
</span><span class='line'>102abc34            Ubuntu_Xenial                           <span class="m">28</span> seconds          starting                                docker-swarm-worker-4  START1-XS
</span></code></pre></td></tr></table></div></figure>


<p>At this moment it is still starting, after waiting a minute or so, run it again:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>scw ps -l
</span><span class='line'>SERVER ID           IMAGE               ZONE                CREATED             STATUS              PORTS               NAME                   COMMERCIAL TYPE
</span><span class='line'>102abc34            Ubuntu_Xenial       par1                About a minute      running             xx.xx.xx.xx         docker-swarm-worker-4  START1-XS
</span></code></pre></td></tr></table></div></figure>


<p>As we can see its in a running state, so we are good to access our instance. You have 2 options to access your server, via exec and ssh.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>scw <span class="nb">exec </span>docker-swarm-worker-4 /bin/bash
</span><span class='line'>root@docker-swarm-worker-4:~
</span></code></pre></td></tr></table></div></figure>


<p>or via SSH:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ssh root@xx.xx.xx.xx
</span><span class='line'>root@docker-swarm-worker-4:~
</span></code></pre></td></tr></table></div></figure>


<p>If you would like to access your server without uploading your SSH key to your account, you can pass <code>--tmp-ssh-key=true</code> as in:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>scw --region<span class="o">=</span>par1 create --commercial-type<span class="o">=</span>START1-XS --ip-address<span class="o">=</span>dynamic --ipv6<span class="o">=</span><span class="nb">false</span> --name<span class="o">=</span><span class="s2">&quot;scw-temp-instance&quot;</span> --tmp-ssh-key<span class="o">=</span><span class="nb">true  </span>bc75c00b
</span></code></pre></td></tr></table></div></figure>


<h2>Terminating Resources:</h2>

<p>This wil stop, terminate the instance with the associated volumes and reserved ip</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>scw stop --terminate<span class="o">=</span><span class="nb">true </span>scw-temp-instance
</span><span class='line'>scw-temp-instance
</span></code></pre></td></tr></table></div></figure>


<p>If you had to remove a volume that is not needed, or unused:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>scw rmi <span class="nb">test</span>-1-snapshot-&lt;long-string&gt;--2018-04-26_12:42
</span></code></pre></td></tr></table></div></figure>


<p>To logout:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>scw <span class="nb">logout</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Resources:</h2>

<p>Have a look at <a href="https://github.com/scaleway/scaleway-cli">Scaleway-CLI Documentation</a> and their <a href="https://www.scaleway.com/">Website</a> for more info, and have a look at their new <code>START1-XS</code> instance types, that is only 1.99 Euro&rsquo;s, that is insane!</p>

<p>Personally love what they are doing, feel free to head over to their <a href="https://www.scaleway.com/pricing/">pricing page</a> to see some sweet deals!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Temporary IAM Credentials From EC2 Instance Metadata Using Python]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/05/09/temporary-iam-credentials-from-ec2-instance-metadata-using-python/"/>
    <updated>2018-05-09T12:14:11-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/05/09/temporary-iam-credentials-from-ec2-instance-metadata-using-python</id>
    <content type="html"><![CDATA[<p>From a Best Practice Perspective its good not having to pass sensitive information around, and especially not hard coding them.</p>

<h2>Best Practice: Security</h2>

<p>One good way is to use SSM with KMS to Encrypt/Decrypt them, but since EC2 has a <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp.html">Metadata Service</a> available, we can make use of that to retrieve <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp.html">temporary credentials</a>. One requirement though, is that the instance will require an IAM Role where the code will be executed on. The IAM Role also needs to have sufficient privileges to be able to execute, whatever you need to do.</p>

<p>The <a href="https://12factor.net/">12 Factor</a> Methodology however states to use config in your environment variables, but from the application logic, its easy to save it in our environment.</p>

<h2>Scenario: Applications on AWS EC2</h2>

<p>When you run applications on Amazon EC2 the nodes has access to the EC2 Metadata Service, so in this case our IAM Role has a Policy that authorizes GetItem on our DynamoDB table, therefore we can define our code with no sensitive information, as the code will do all the work to get the credentials and use the credentials to access DynamoDB.</p>

<h2>Use Temporary Credentials to Read from DynamoDB</h2>

<p>In this example we will get the temporary credentials from the metadata service, then define the temporary credentials in our session to authorize our request against dynamodb to read from our table:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">boto3</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">from</span> <span class="nn">botocore.utils</span> <span class="kn">import</span> <span class="n">InstanceMetadataFetcher</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">from</span> <span class="nn">botocore.credentials</span> <span class="kn">import</span> <span class="n">InstanceMetadataProvider</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">provider</span> <span class="o">=</span> <span class="n">InstanceMetadataProvider</span><span class="p">(</span><span class="n">iam_role_fetcher</span><span class="o">=</span><span class="n">InstanceMetadataFetcher</span><span class="p">(</span><span class="n">timeout</span><span class="o">=</span><span class="mi">1000</span><span class="p">,</span> <span class="n">num_attempts</span><span class="o">=</span><span class="mi">2</span><span class="p">))</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">creds</span> <span class="o">=</span> <span class="n">provider</span><span class="o">.</span><span class="n">load</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">session</span> <span class="o">=</span> <span class="n">boto3</span><span class="o">.</span><span class="n">Session</span><span class="p">(</span>
</span><span class='line'>    <span class="n">aws_access_key_id</span><span class="o">=</span><span class="n">creds</span><span class="o">.</span><span class="n">access_key</span><span class="p">,</span>
</span><span class='line'>    <span class="n">aws_secret_access_key</span><span class="o">=</span><span class="n">creds</span><span class="o">.</span><span class="n">secret_key</span><span class="p">,</span>
</span><span class='line'>    <span class="n">aws_session_token</span><span class="o">=</span><span class="n">creds</span><span class="o">.</span><span class="n">token</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">ddb</span> <span class="o">=</span> <span class="n">session</span><span class="o">.</span><span class="n">client</span><span class="p">(</span><span class="s">&#39;dynamodb&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="n">ddb</span><span class="o">.</span><span class="n">get_item</span><span class="p">(</span>
</span><span class='line'>    <span class="n">TableName</span><span class="o">=</span><span class="s">&#39;my-dynamodb-table&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">Key</span><span class="o">=</span><span class="p">{</span>
</span><span class='line'>        <span class="s">&#39;node_type&#39;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&#39;S&#39;</span><span class="p">:</span> <span class="s">&#39;primary_manager&#39;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">response</span><span class="p">[</span><span class="s">&#39;Item&#39;</span><span class="p">][</span><span class="s">&#39;ip&#39;</span><span class="p">][</span><span class="s">&#39;S&#39;</span><span class="p">])</span>
</span><span class='line'><span class="s">&#39;10.0.0.32</span>
</span></code></pre></td></tr></table></div></figure>


<p>Also, when you are logged onto the EC2 instance, you can use curl to see the temporary credentials information:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ iam_role_name</span><span class="o">=</span><span class="k">$(</span>curl -s http://169.254.169.254/latest/meta-data/iam/security-credentials/<span class="k">)</span>
</span><span class='line'><span class="nv">$ </span>curl -s http://169.254.169.254/latest/meta-data/iam/security-credentials/<span class="k">${</span><span class="nv">iam_role_name</span><span class="k">}</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;Code&quot;</span> : <span class="s2">&quot;Success&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;LastUpdated&quot;</span> : <span class="s2">&quot;2018-05-09T14:25:48Z&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;Type&quot;</span> : <span class="s2">&quot;AWS-HMAC&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;AccessKeyId&quot;</span> : <span class="s2">&quot;&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;SecretAccessKey&quot;</span> : <span class="s2">&quot;&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;Token&quot;</span> : <span class="s2">&quot;&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;Expiration&quot;</span> : <span class="s2">&quot;2018-05-09T20:46:55Z&quot;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use Python Requests to Interact With the iTunes API to Search for Music Info]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/05/08/use-python-requests-to-interact-with-the-itunes-api-to-search-for-music-info/"/>
    <updated>2018-05-08T17:01:11-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/05/08/use-python-requests-to-interact-with-the-itunes-api-to-search-for-music-info</id>
    <content type="html"><![CDATA[<p>Tutorial on using Python Requests and using Apple iTunes Music API, where we will be doing the following:</p>

<ul>
<li>Basics of using the Requests module</li>
<li>Query iTunes API on Songs by Artist</li>
<li>Query iTunes API on Artists Info</li>
<li>Query iTunes API on All Albums by Artist</li>
<li>Query iTunes API on Top 5 Albums</li>
<li>Query iTunes API on Multipe Artists</li>
</ul>


<h2>Resources:</h2>

<ul>
<li><a href="http://docs.python-requests.org/en/master/">Python Requests</a></li>
<li><a href="https://affiliate.itunes.apple.com/resources/documentation/itunes-store-web-service-search-api/">iTunes API</a></li>
</ul>


<h2>Install the Request Module:</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ virtualenv -p /usr/bin/python .venv
</span><span class='line'>$ source .venv/bin/activate
</span><span class='line'>$ pip install requests</span></code></pre></td></tr></table></div></figure>


<h2>Basic Usage of Requests:</h2>

<p>In this demonstration we will only use the GET HTTP Method.</p>

<p>Make the GET Request to the endpoint:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">requests</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;https://itunes.apple.com/search?term=guns+and+roses&amp;limit=1&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>View the HTTP Status Code of the Response:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span><span class="o">.</span><span class="n">status_code</span>
</span><span class='line'><span class="mi">200</span>
</span></code></pre></td></tr></table></div></figure>


<p>To view some of the status codes of the request library:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">requests</span><span class="o">.</span><span class="n">codes</span><span class="o">.</span><span class="n">ok</span>
</span><span class='line'><span class="mi">200</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">requests</span><span class="o">.</span><span class="n">codes</span><span class="o">.</span><span class="n">no_content</span>
</span><span class='line'><span class="mi">204</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">requests</span><span class="o">.</span><span class="n">codes</span><span class="o">.</span><span class="n">temporary_redirect</span>
</span><span class='line'><span class="mi">307</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">requests</span><span class="o">.</span><span class="n">codes</span><span class="o">.</span><span class="n">permanent_redirect</span>
</span><span class='line'><span class="mi">308</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">requests</span><span class="o">.</span><span class="n">codes</span><span class="o">.</span><span class="n">bad</span>
</span><span class='line'><span class="mi">400</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">requests</span><span class="o">.</span><span class="n">codes</span><span class="o">.</span><span class="n">not_found</span>
</span><span class='line'><span class="mi">404</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">requests</span><span class="o">.</span><span class="n">codes</span><span class="o">.</span><span class="n">bad_gateway</span>
</span><span class='line'><span class="mi">502</span>
</span></code></pre></td></tr></table></div></figure>


<p>Call <code>.ok</code> for the status lookup, the boolean answer will indicate if it responded with a <code>200 OK</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span><span class="o">.</span><span class="n">ok</span>
</span><span class='line'><span class="bp">True</span>
</span></code></pre></td></tr></table></div></figure>


<p>Measure the amount of time the request took:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span><span class="o">.</span><span class="n">elapsed</span><span class="o">.</span><span class="n">total_seconds</span><span class="p">()</span>
</span><span class='line'><span class="mf">0.706043</span>
</span></code></pre></td></tr></table></div></figure>


<p>View the content of the response:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span><span class="o">.</span><span class="n">content</span>
</span><span class='line'><span class="s">&#39;</span><span class="se">\n\n\n</span><span class="s">{</span><span class="se">\n</span><span class="s"> &quot;resultCount&quot;:1,</span><span class="se">\n</span><span class="s"> &quot;results&quot;: [</span><span class="se">\n</span><span class="s">{&quot;wrapperType&quot;:&quot;track&quot;, &quot;kind&quot;:&quot;song&quot;, &quot;artistId&quot;:106621, &quot;collectionId&quot;:5669937, &quot;trackId&quot;:5669911, &quot;artistName&quot;:&quot;Guns N</span><span class="se">\&#39;</span><span class="s"> Roses&quot;, &quot;collectionName&quot;:&quot;Greatest Hits&quot;, &quot;trackName&quot;:&quot;Sweet Child O</span><span class="se">\&#39;</span><span class="s"> Mine&quot;, &quot;collectionCensoredName&quot;:&quot;Greatest Hits&quot;, &quot;trackCensoredName&quot;:&quot;Sweet Child O</span><span class="se">\&#39;</span><span class="s"> Mine&quot;, &quot;artistViewUrl&quot;:&quot;https://itunes.apple.com/us/artist/guns-n-roses/106621?uo=4&quot;, &quot;collectionViewUrl&quot;:&quot;https://itunes.apple.com/us/album/sweet-child-o-mine/5669937?i=5669911&amp;uo=4&quot;, &quot;trackViewUrl&quot;:&quot;https://itunes.apple.com/us/album/sweet-child-o-mine/5669937?i=5669911&amp;uo=4&quot;, </span><span class="se">\n</span><span class="s">&quot;previewUrl&quot;:&quot;https://audio-ssl.itunes.apple.com/apple-assets-us-std-000001/Music6/v4/f2/7d/73/f27d7346-de92-bdc6-e148-56a3da406005/mzaf_2747902348777129728.plus.aac.p.m4a&quot;, &quot;artworkUrl30&quot;:&quot;https://is3-ssl.mzstatic.com/image/thumb/Music/v4/3c/18/87/3c188735-e462-3c99-92eb-50fb06afa73f/source/30x30bb.jpg&quot;, &quot;artworkUrl60&quot;:&quot;https://is3-ssl.mzstatic.com/image/thumb/Music/v4/3c/18/87/3c188735-e462-3c99-92eb-50fb06afa73f/source/60x60bb.jpg&quot;, &quot;artworkUrl100&quot;:&quot;https://is3-ssl.mzstatic.com/image/thumb/Music/v4/3c/18/87/3c188735-e462-3c99-92eb-50fb06afa73f/source/100x100bb.jpg&quot;, &quot;collectionPrice&quot;:9.99, &quot;trackPrice&quot;:1.29, &quot;releaseDate&quot;:&quot;1987-07-21T07:00:00Z&quot;, &quot;collectionExplicitness&quot;:&quot;notExplicit&quot;, &quot;trackExplicitness&quot;:&quot;notExplicit&quot;, &quot;discCount&quot;:1, &quot;discNumber&quot;:1, &quot;trackCount&quot;:14, &quot;trackNumber&quot;:2, &quot;trackTimeMillis&quot;:355267, &quot;country&quot;:&quot;USA&quot;, &quot;currency&quot;:&quot;USD&quot;, &quot;primaryGenreName&quot;:&quot;Rock&quot;, &quot;isStreamable&quot;:true}]</span><span class="se">\n</span><span class="s">}</span><span class="se">\n\n\n</span><span class="s">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>View the content in json format:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span><span class="o">.</span><span class="n">json</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span><span class="s">u&#39;resultCount&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s">u&#39;results&#39;</span><span class="p">:</span> <span class="p">[{</span><span class="s">u&#39;collectionExplicitness&#39;</span><span class="p">:</span> <span class="s">u&#39;notExplicit&#39;</span><span class="p">,</span> <span class="s">u&#39;releaseDate&#39;</span><span class="p">:</span> <span class="s">u&#39;1987-07-21T07:00:00Z&#39;</span><span class="p">,</span> <span class="s">u&#39;currency&#39;</span><span class="p">:</span> <span class="s">u&#39;USD&#39;</span><span class="p">,</span> <span class="s">u&#39;artistId&#39;</span><span class="p">:</span> <span class="mi">106621</span><span class="p">,</span> <span class="s">u&#39;previewUrl&#39;</span><span class="p">:</span> <span class="s">u&#39;https://audio-ssl.itunes.apple.com/apple-assets-us-std-000001/Music6/v4/f2/7d/73/f27d7346-de92-bdc6-e148-56a3da406005/mzaf_2747902348777129728.plus.aac.p.m4a&#39;</span><span class="p">,</span> <span class="s">u&#39;trackPrice&#39;</span><span class="p">:</span> <span class="mf">1.29</span><span class="p">,</span> <span class="s">u&#39;isStreamable&#39;</span><span class="p">:</span> <span class="bp">True</span><span class="p">,</span> <span class="s">u&#39;trackViewUrl&#39;</span><span class="p">:</span> <span class="s">u&#39;https://itunes.apple.com/us/album/sweet-child-o-mine/5669937?i=5669911&amp;uo=4&#39;</span><span class="p">,</span> <span class="s">u&#39;collectionName&#39;</span><span class="p">:</span> <span class="s">u&#39;Greatest Hits&#39;</span><span class="p">,</span> <span class="s">u&#39;collectionId&#39;</span><span class="p">:</span> <span class="mi">5669937</span><span class="p">,</span> <span class="s">u&#39;trackId&#39;</span><span class="p">:</span> <span class="mi">5669911</span><span class="p">,</span> <span class="s">u&#39;collectionViewUrl&#39;</span><span class="p">:</span> <span class="s">u&#39;https://itunes.apple.com/us/album/sweet-child-o-mine/5669937?i=5669911&amp;uo=4&#39;</span><span class="p">,</span> <span class="s">u&#39;trackCount&#39;</span><span class="p">:</span> <span class="mi">14</span><span class="p">,</span> <span class="s">u&#39;trackNumber&#39;</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="s">u&#39;discNumber&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s">u&#39;collectionPrice&#39;</span><span class="p">:</span> <span class="mf">9.99</span><span class="p">,</span> <span class="s">u&#39;trackCensoredName&#39;</span><span class="p">:</span> <span class="s">u&quot;Sweet Child O&#39; Mine&quot;</span><span class="p">,</span> <span class="s">u&#39;trackName&#39;</span><span class="p">:</span> <span class="s">u&quot;Sweet Child O&#39; Mine&quot;</span><span class="p">,</span> <span class="s">u&#39;trackTimeMillis&#39;</span><span class="p">:</span> <span class="mi">355267</span><span class="p">,</span> <span class="s">u&#39;primaryGenreName&#39;</span><span class="p">:</span> <span class="s">u&#39;Rock&#39;</span><span class="p">,</span> <span class="s">u&#39;artistViewUrl&#39;</span><span class="p">:</span> <span class="s">u&#39;https://itunes.apple.com/us/artist/guns-n-roses/106621?uo=4&#39;</span><span class="p">,</span> <span class="s">u&#39;kind&#39;</span><span class="p">:</span> <span class="s">u&#39;song&#39;</span><span class="p">,</span> <span class="s">u&#39;country&#39;</span><span class="p">:</span> <span class="s">u&#39;USA&#39;</span><span class="p">,</span> <span class="s">u&#39;wrapperType&#39;</span><span class="p">:</span> <span class="s">u&#39;track&#39;</span><span class="p">,</span> <span class="s">u&#39;artworkUrl100&#39;</span><span class="p">:</span> <span class="s">u&#39;https://is3-ssl.mzstatic.com/image/thumb/Music/v4/3c/18/87/3c188735-e462-3c99-92eb-50fb06afa73f/source/100x100bb.jpg&#39;</span><span class="p">,</span> <span class="s">u&#39;collectionCensoredName&#39;</span><span class="p">:</span> <span class="s">u&#39;Greatest Hits&#39;</span><span class="p">,</span> <span class="s">u&#39;artistName&#39;</span><span class="p">:</span> <span class="s">u&quot;Guns N&#39; Roses&quot;</span><span class="p">,</span> <span class="s">u&#39;artworkUrl60&#39;</span><span class="p">:</span> <span class="s">u&#39;https://is3-ssl.mzstatic.com/image/thumb/Music/v4/3c/18/87/3c188735-e462-3c99-92eb-50fb06afa73f/source/60x60bb.jpg&#39;</span><span class="p">,</span> <span class="s">u&#39;trackExplicitness&#39;</span><span class="p">:</span> <span class="s">u&#39;notExplicit&#39;</span><span class="p">,</span> <span class="s">u&#39;artworkUrl30&#39;</span><span class="p">:</span> <span class="s">u&#39;https://is3-ssl.mzstatic.com/image/thumb/Music/v4/3c/18/87/3c188735-e462-3c99-92eb-50fb06afa73f/source/30x30bb.jpg&#39;</span><span class="p">,</span> <span class="s">u&#39;discCount&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">}]}</span>
</span></code></pre></td></tr></table></div></figure>


<p>View the request headers:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span><span class="o">.</span><span class="n">headers</span>
</span><span class='line'><span class="p">{</span><span class="s">&#39;Content-Length&#39;</span><span class="p">:</span> <span class="s">&#39;650&#39;</span><span class="p">,</span> <span class="s">&#39;x-apple-translated-wo-url&#39;</span><span class="p">:</span> <span class="s">&#39;/WebObjects/MZStoreServices.woa/ws/wsSearch?term=guns+and+roses&amp;limit=1&amp;urlDesc=&#39;</span><span class="p">,</span> <span class="s">&#39;Access-Control-Allow-Origin&#39;</span><span class="p">:</span> <span class="s">&#39;*&#39;</span><span class="p">,</span> <span class="s">&#39;x-webobjects-loadaverage&#39;</span><span class="p">:</span> <span class="s">&#39;0&#39;</span><span class="p">,</span> <span class="s">&#39;X-Cache&#39;</span><span class="p">:</span> <span class="s">&#39;TCP_MISS from a2-21-98-60.deploy.akamaitechnologies.com (AkamaiGHost/9.3.0.3-22245996) (-)&#39;</span><span class="p">,</span> <span class="s">&#39;x-content-type-options&#39;</span><span class="p">:</span> <span class="s">&#39;nosniff&#39;</span><span class="p">,</span> <span class="s">&#39;x-apple-orig-url&#39;</span><span class="p">:</span> <span class="s">&#39;https://itunes.apple.com/search?term=guns+and+roses&amp;limit=1&#39;</span><span class="p">,</span> <span class="s">&#39;x-apple-jingle-correlation-key&#39;</span><span class="p">:</span> <span class="s">&#39;GUOFR25MGUUK5J7LUKI6UUFUWM&#39;</span><span class="p">,</span> <span class="s">&#39;x-apple-application-site&#39;</span><span class="p">:</span> <span class="s">&#39;ST11&#39;</span><span class="p">,</span> <span class="s">&#39;Date&#39;</span><span class="p">:</span> <span class="s">&#39;Tue, 08 May 2018 20:50:39 GMT&#39;</span><span class="p">,</span> <span class="s">&#39;apple-tk&#39;</span><span class="p">:</span> <span class="s">&#39;false&#39;</span><span class="p">,</span> <span class="s">&#39;content-disposition&#39;</span><span class="p">:</span> <span class="s">&#39;attachment; filename=1.txt&#39;</span><span class="p">,</span> <span class="s">&#39;Connection&#39;</span><span class="p">:</span> <span class="s">&#39;keep-alive&#39;</span><span class="p">,</span> <span class="s">&#39;apple-seq&#39;</span><span class="p">:</span> <span class="s">&#39;0&#39;</span><span class="p">,</span> <span class="s">&#39;x-apple-application-instance&#39;</span><span class="p">:</span> <span class="s">&#39;2001318&#39;</span><span class="p">,</span> <span class="s">&#39;X-Apple-Partner&#39;</span><span class="p">:</span> <span class="s">&#39;origin.0&#39;</span><span class="p">,</span> <span class="s">&#39;Content-Encoding&#39;</span><span class="p">:</span> <span class="s">&#39;gzip&#39;</span><span class="p">,</span> <span class="s">&#39;strict-transport-security&#39;</span><span class="p">:</span> <span class="s">&#39;max-age=31536000&#39;</span><span class="p">,</span> <span class="s">&#39;Vary&#39;</span><span class="p">:</span> <span class="s">&#39;Accept-Encoding&#39;</span><span class="p">,</span> <span class="s">&#39;apple-timing-app&#39;</span><span class="p">:</span> <span class="s">&#39;109 ms&#39;</span><span class="p">,</span> <span class="s">&#39;X-True-Cache-Key&#39;</span><span class="p">:</span> <span class="s">&#39;/L/itunes.apple.com/search ci2=limit=1&amp;term=guns+and+roses__&#39;</span><span class="p">,</span> <span class="s">&#39;X-Cache-Remote&#39;</span><span class="p">:</span> <span class="s">&#39;TCP_MISS from a23-57-75-64.deploy.akamaitechnologies.com (AkamaiGHost/9.3.0.3-22245996) (-)&#39;</span><span class="p">,</span> <span class="s">&#39;Cache-Control&#39;</span><span class="p">:</span> <span class="s">&#39;max-age=86400&#39;</span><span class="p">,</span> <span class="s">&#39;x-apple-request-uuid&#39;</span><span class="p">:</span> <span class="s">&#39;351c58eb-ac35-28ae-a7eb-a291ea50b4b3&#39;</span><span class="p">,</span> <span class="s">&#39;Content-Type&#39;</span><span class="p">:</span> <span class="s">&#39;text/javascript; charset=utf-8&#39;</span><span class="p">,</span> <span class="s">&#39;apple-originating-system&#39;</span><span class="p">:</span> <span class="s">&#39;MZStoreServices&#39;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Python Requests and the iTunes API:</h2>

<p>Search for the Artist Guns and Roses and limit the output to 1 Song:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">requests</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">json</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="s">&#39;https://itunes.apple.com/search?term=guns+and+roses&amp;limit=1&#39;</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">b</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">a</span><span class="p">)</span><span class="o">.</span><span class="n">json</span><span class="p">()</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="n">indent</span><span class="o">=</span><span class="mi">2</span><span class="p">))</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;resultCount&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;results&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;collectionExplicitness&quot;</span><span class="p">:</span> <span class="s">&quot;notExplicit&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;releaseDate&quot;</span><span class="p">:</span> <span class="s">&quot;1987-07-21T07:00:00Z&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;currency&quot;</span><span class="p">:</span> <span class="s">&quot;USD&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artistId&quot;</span><span class="p">:</span> <span class="mi">106621</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;previewUrl&quot;</span><span class="p">:</span> <span class="s">&quot;https://audio-ssl.itunes.apple.com/apple-assets-us-std-000001/Music6/v4/f2/7d/73/f27d7346-de92-bdc6-e148-56a3da406005/mzaf_2747902348777129728.plus.aac.p.m4a&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;trackPrice&quot;</span><span class="p">:</span> <span class="mf">1.29</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;isStreamable&quot;</span><span class="p">:</span> <span class="n">true</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;trackViewUrl&quot;</span><span class="p">:</span> <span class="s">&quot;https://itunes.apple.com/us/album/sweet-child-o-mine/5669937?i=5669911&amp;uo=4&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;collectionName&quot;</span><span class="p">:</span> <span class="s">&quot;Greatest Hits&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;collectionId&quot;</span><span class="p">:</span> <span class="mi">5669937</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;trackId&quot;</span><span class="p">:</span> <span class="mi">5669911</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;collectionViewUrl&quot;</span><span class="p">:</span> <span class="s">&quot;https://itunes.apple.com/us/album/sweet-child-o-mine/5669937?i=5669911&amp;uo=4&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;trackCount&quot;</span><span class="p">:</span> <span class="mi">14</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;trackNumber&quot;</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;discNumber&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;collectionPrice&quot;</span><span class="p">:</span> <span class="mf">9.99</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;trackCensoredName&quot;</span><span class="p">:</span> <span class="s">&quot;Sweet Child O&#39; Mine&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;trackName&quot;</span><span class="p">:</span> <span class="s">&quot;Sweet Child O&#39; Mine&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;trackTimeMillis&quot;</span><span class="p">:</span> <span class="mi">355267</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;primaryGenreName&quot;</span><span class="p">:</span> <span class="s">&quot;Rock&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artistViewUrl&quot;</span><span class="p">:</span> <span class="s">&quot;https://itunes.apple.com/us/artist/guns-n-roses/106621?uo=4&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;kind&quot;</span><span class="p">:</span> <span class="s">&quot;song&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;country&quot;</span><span class="p">:</span> <span class="s">&quot;USA&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;wrapperType&quot;</span><span class="p">:</span> <span class="s">&quot;track&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artworkUrl100&quot;</span><span class="p">:</span> <span class="s">&quot;https://is3-ssl.mzstatic.com/image/thumb/Music/v4/3c/18/87/3c188735-e462-3c99-92eb-50fb06afa73f/source/100x100bb.jpg&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;collectionCensoredName&quot;</span><span class="p">:</span> <span class="s">&quot;Greatest Hits&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artistName&quot;</span><span class="p">:</span> <span class="s">&quot;Guns N&#39; Roses&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artworkUrl60&quot;</span><span class="p">:</span> <span class="s">&quot;https://is3-ssl.mzstatic.com/image/thumb/Music/v4/3c/18/87/3c188735-e462-3c99-92eb-50fb06afa73f/source/60x60bb.jpg&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;trackExplicitness&quot;</span><span class="p">:</span> <span class="s">&quot;notExplicit&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artworkUrl30&quot;</span><span class="p">:</span> <span class="s">&quot;https://is3-ssl.mzstatic.com/image/thumb/Music/v4/3c/18/87/3c188735-e462-3c99-92eb-50fb06afa73f/source/30x30bb.jpg&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;discCount&quot;</span><span class="p">:</span> <span class="mi">1</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>From the response we got a <code>"artistId": 106621</code>, lets query the API on the ArtistId, to get info of the Artist:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="s">&#39;https://itunes.apple.com/lookup?id=106621&#39;</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">b</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">a</span><span class="p">)</span><span class="o">.</span><span class="n">json</span><span class="p">()</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="n">indent</span><span class="o">=</span><span class="mi">2</span><span class="p">))</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;resultCount&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;results&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;artistType&quot;</span><span class="p">:</span> <span class="s">&quot;Artist&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;amgArtistId&quot;</span><span class="p">:</span> <span class="mi">4416</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;wrapperType&quot;</span><span class="p">:</span> <span class="s">&quot;artist&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artistId&quot;</span><span class="p">:</span> <span class="mi">106621</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artistLinkUrl&quot;</span><span class="p">:</span> <span class="s">&quot;https://itunes.apple.com/us/artist/guns-n-roses/106621?uo=4&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artistName&quot;</span><span class="p">:</span> <span class="s">&quot;Guns N&#39; Roses&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;primaryGenreId&quot;</span><span class="p">:</span> <span class="mi">21</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;primaryGenreName&quot;</span><span class="p">:</span> <span class="s">&quot;Rock&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Query all the Albums by Artist by using the ArtistId and Entity for Album:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="s">&#39;https://itunes.apple.com/lookup?id=106621&amp;entity=album&#39;</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">b</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">a</span><span class="p">)</span><span class="o">.</span><span class="n">json</span><span class="p">()</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="n">indent</span><span class="o">=</span><span class="mi">2</span><span class="p">))</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;resultCount&quot;</span><span class="p">:</span> <span class="mi">13</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;results&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;artistType&quot;</span><span class="p">:</span> <span class="s">&quot;Artist&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;amgArtistId&quot;</span><span class="p">:</span> <span class="mi">4416</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;wrapperType&quot;</span><span class="p">:</span> <span class="s">&quot;artist&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artistId&quot;</span><span class="p">:</span> <span class="mi">106621</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artistLinkUrl&quot;</span><span class="p">:</span> <span class="s">&quot;https://itunes.apple.com/us/artist/guns-n-roses/106621?uo=4&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artistName&quot;</span><span class="p">:</span> <span class="s">&quot;Guns N&#39; Roses&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;primaryGenreId&quot;</span><span class="p">:</span> <span class="mi">21</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;primaryGenreName&quot;</span><span class="p">:</span> <span class="s">&quot;Rock&quot;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;artistViewUrl&quot;</span><span class="p">:</span> <span class="s">&quot;https://itunes.apple.com/us/artist/guns-n-roses/106621?uo=4&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;releaseDate&quot;</span><span class="p">:</span> <span class="s">&quot;2004-01-01T08:00:00Z&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;collectionType&quot;</span><span class="p">:</span> <span class="s">&quot;Compilation&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;collectionName&quot;</span><span class="p">:</span> <span class="s">&quot;Greatest Hits&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;amgArtistId&quot;</span><span class="p">:</span> <span class="mi">4416</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;copyright&quot;</span><span class="p">:</span> <span class="s">&quot;</span><span class="se">\u2117</span><span class="s"> 2004 Geffen Records&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;collectionId&quot;</span><span class="p">:</span> <span class="mi">5669937</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artworkUrl60&quot;</span><span class="p">:</span> <span class="s">&quot;https://is3-ssl.mzstatic.com/image/thumb/Music/v4/3c/18/87/3c188735-e462-3c99-92eb-50fb06afa73f/source/60x60bb.jpg&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;wrapperType&quot;</span><span class="p">:</span> <span class="s">&quot;collection&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;collectionViewUrl&quot;</span><span class="p">:</span> <span class="s">&quot;https://itunes.apple.com/us/album/greatest-hits/5669937?uo=4&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artistId&quot;</span><span class="p">:</span> <span class="mi">106621</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;collectionCensoredName&quot;</span><span class="p">:</span> <span class="s">&quot;Greatest Hits&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artworkUrl100&quot;</span><span class="p">:</span> <span class="s">&quot;https://is3-ssl.mzstatic.com/image/thumb/Music/v4/3c/18/87/3c188735-e462-3c99-92eb-50fb06afa73f/source/100x100bb.jpg&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;trackCount&quot;</span><span class="p">:</span> <span class="mi">14</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;currency&quot;</span><span class="p">:</span> <span class="s">&quot;USD&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artistName&quot;</span><span class="p">:</span> <span class="s">&quot;Guns N&#39; Roses&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;country&quot;</span><span class="p">:</span> <span class="s">&quot;USA&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;primaryGenreName&quot;</span><span class="p">:</span> <span class="s">&quot;Rock&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;collectionExplicitness&quot;</span><span class="p">:</span> <span class="s">&quot;notExplicit&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;collectionPrice&quot;</span><span class="p">:</span> <span class="mf">9.99</span>
</span><span class='line'>    <span class="p">},</span>
</span></code></pre></td></tr></table></div></figure>


<p>Get the Top 5 Albums by the Artist:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="s">&#39;https://itunes.apple.com/lookup?id=106621&amp;entity=album&amp;limit=5&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>How to get AMG ID (all music id):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="s">&#39;https://itunes.apple.com/search?term=jack+johnson&amp;limit=2&#39;</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">b</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">a</span><span class="p">)</span><span class="o">.</span><span class="n">json</span><span class="p">()</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="n">indent</span><span class="o">=</span><span class="mi">2</span><span class="p">))</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;resultCount&quot;</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;results&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;collectionExplicitness&quot;</span><span class="p">:</span> <span class="s">&quot;notExplicit&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;releaseDate&quot;</span><span class="p">:</span> <span class="s">&quot;2005-03-01T08:00:00Z&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;currency&quot;</span><span class="p">:</span> <span class="s">&quot;USD&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artistId&quot;</span><span class="p">:</span> <span class="mi">909253</span><span class="p">,</span>
</span></code></pre></td></tr></table></div></figure>


<p>Query Multiple Artists by using the amgId&rsquo;s:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="s">&#39;https://itunes.apple.com/lookup?amgArtistId=468749,5723&#39;</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">b</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">a</span><span class="p">)</span><span class="o">.</span><span class="n">json</span><span class="p">()</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="n">indent</span><span class="o">=</span><span class="mi">2</span><span class="p">))</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;resultCount&quot;</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;results&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;artistType&quot;</span><span class="p">:</span> <span class="s">&quot;Artist&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;amgArtistId&quot;</span><span class="p">:</span> <span class="mi">468749</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;wrapperType&quot;</span><span class="p">:</span> <span class="s">&quot;artist&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artistId&quot;</span><span class="p">:</span> <span class="mi">909253</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artistLinkUrl&quot;</span><span class="p">:</span> <span class="s">&quot;https://itunes.apple.com/us/artist/jack-johnson/909253?uo=4&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artistName&quot;</span><span class="p">:</span> <span class="s">&quot;Jack Johnson&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;primaryGenreId&quot;</span><span class="p">:</span> <span class="mi">21</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;primaryGenreName&quot;</span><span class="p">:</span> <span class="s">&quot;Rock&quot;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;artistType&quot;</span><span class="p">:</span> <span class="s">&quot;Artist&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;amgArtistId&quot;</span><span class="p">:</span> <span class="mi">5723</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;wrapperType&quot;</span><span class="p">:</span> <span class="s">&quot;artist&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artistId&quot;</span><span class="p">:</span> <span class="mi">78500</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artistLinkUrl&quot;</span><span class="p">:</span> <span class="s">&quot;https://itunes.apple.com/us/artist/u2/78500?uo=4&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artistName&quot;</span><span class="p">:</span> <span class="s">&quot;U2&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;primaryGenreId&quot;</span><span class="p">:</span> <span class="mi">21</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;primaryGenreName&quot;</span><span class="p">:</span> <span class="s">&quot;Rock&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>If we Query the ArtistId from the previous response we will get the same artist:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="s">&#39;https://itunes.apple.com/lookup?id=909253&#39;</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">b</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">a</span><span class="p">)</span><span class="o">.</span><span class="n">json</span><span class="p">()</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="n">indent</span><span class="o">=</span><span class="mi">2</span><span class="p">))</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;resultCount&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;results&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;artistType&quot;</span><span class="p">:</span> <span class="s">&quot;Artist&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;amgArtistId&quot;</span><span class="p">:</span> <span class="mi">468749</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;wrapperType&quot;</span><span class="p">:</span> <span class="s">&quot;artist&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artistId&quot;</span><span class="p">:</span> <span class="mi">909253</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artistLinkUrl&quot;</span><span class="p">:</span> <span class="s">&quot;https://itunes.apple.com/us/artist/jack-johnson/909253?uo=4&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artistName&quot;</span><span class="p">:</span> <span class="s">&quot;Jack Johnson&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;primaryGenreId&quot;</span><span class="p">:</span> <span class="mi">21</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;primaryGenreName&quot;</span><span class="p">:</span> <span class="s">&quot;Rock&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Only get the Artist Name:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;</span> <span class="n">b</span>
</span><span class='line'><span class="p">{</span><span class="s">u&#39;resultCount&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s">u&#39;results&#39;</span><span class="p">:</span> <span class="p">[{</span><span class="s">u&#39;artistType&#39;</span><span class="p">:</span> <span class="s">u&#39;Artist&#39;</span><span class="p">,</span> <span class="s">u&#39;amgArtistId&#39;</span><span class="p">:</span> <span class="mi">468749</span><span class="p">,</span> <span class="s">u&#39;wrapperType&#39;</span><span class="p">:</span> <span class="s">u&#39;artist&#39;</span><span class="p">,</span> <span class="s">u&#39;artistId&#39;</span><span class="p">:</span> <span class="mi">909253</span><span class="p">,</span> <span class="s">u&#39;artistLinkUrl&#39;</span><span class="p">:</span> <span class="s">u&#39;https://itunes.apple.com/us/artist/jack-johnson/909253?uo=4&#39;</span><span class="p">,</span> <span class="s">u&#39;artistName&#39;</span><span class="p">:</span> <span class="s">u&#39;Jack Johnson&#39;</span><span class="p">,</span> <span class="s">u&#39;primaryGenreId&#39;</span><span class="p">:</span> <span class="mi">21</span><span class="p">,</span> <span class="s">u&#39;primaryGenreName&#39;</span><span class="p">:</span> <span class="s">u&#39;Rock&#39;</span><span class="p">}]}</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">b</span><span class="p">[</span><span class="s">&#39;results&#39;</span><span class="p">][</span><span class="mi">0</span><span class="p">][</span><span class="s">&#39;artistName&#39;</span><span class="p">]</span>
</span><span class='line'><span class="s">u&#39;Jack Johnson&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Printing out the Artist Name and Genre with String Formatting:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="s">&#39;Artist: {artist_name}, Genre: {genre_name}&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">artist_name</span><span class="o">=</span><span class="n">b</span><span class="p">[</span><span class="s">&#39;results&#39;</span><span class="p">][</span><span class="mi">0</span><span class="p">][</span><span class="s">&#39;artistName&#39;</span><span class="p">],</span> <span class="n">genre_name</span><span class="o">=</span><span class="n">b</span><span class="p">[</span><span class="s">&#39;results&#39;</span><span class="p">][</span><span class="mi">0</span><span class="p">][</span><span class="s">&#39;primaryGenreName&#39;</span><span class="p">]))</span>
</span><span class='line'><span class="n">Artist</span><span class="p">:</span> <span class="n">Jack</span> <span class="n">Johnson</span><span class="p">,</span> <span class="n">Genre</span><span class="p">:</span> <span class="n">Rock</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup the Elasticsearch Log Driver on Docker Swarm]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/05/02/setup-the-elasticsearch-log-driver-on-docker-swarm/"/>
    <updated>2018-05-02T15:10:30-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/05/02/setup-the-elasticsearch-log-driver-on-docker-swarm</id>
    <content type="html"><![CDATA[<p>Today we will look at a Elasticsearch logging driver for Docker.</p>

<h2>Why a Log Driver?</h2>

<p>By default the log output can be retrieved when using the <code>docker service logs -f service_name</code>, where log output of that service is shown via stdout. When having a lot of services in your swarm, it becomes useful logging all of your log output to a database service.</p>

<p>This is not just for Swarm but Docker stand alone as well.</p>

<p>In this tutorial we will use the Elasticsearch Log Driver, to log our logs for all our docker swarm services to Elasticsearch.</p>

<h2>Installing to Elasticsearch Log Driver:</h2>

<p>If you are running Docker Swarm, run this on all the nodes:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker plugin install rchicoli/docker-log-elasticsearch:latest --alias elasticsearch_latest
</span></code></pre></td></tr></table></div></figure>


<p>Verify that the log driver has been installed:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker plugin ls
</span><span class='line'>ID                  NAME                          DESCRIPTION                          ENABLED
</span><span class='line'>eadf06ad3d2a        elasticsearch_latest:latest   Send log messages to elasticsearch   <span class="nb">true</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Test the Log Driver:</h2>

<p>Run a container of Alpine and echo a string of text:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker run --rm -ti <span class="se">\</span>
</span><span class='line'>    --log-driver elasticsearch_latest <span class="se">\</span>
</span><span class='line'>    --log-opt elasticsearch-url<span class="o">=</span>http://192.168.0.235:9200 <span class="se">\</span>
</span><span class='line'>    --log-opt elasticsearch-insecure<span class="o">=</span><span class="nb">false</span> <span class="se">\</span>
</span><span class='line'>    --log-opt elasticsearch-sniff<span class="o">=</span><span class="nb">false</span> <span class="se">\</span>
</span><span class='line'>    --log-opt elasticsearch-index<span class="o">=</span>docker-%F <span class="se">\</span>
</span><span class='line'>    --log-opt elasticsearch-type<span class="o">=</span>log <span class="se">\</span>
</span><span class='line'>    --log-opt elasticsearch-timeout<span class="o">=</span><span class="m">10</span> <span class="se">\</span>
</span><span class='line'>    --log-opt elasticsearch-version<span class="o">=</span><span class="m">5</span> <span class="se">\</span>
</span><span class='line'>    --log-opt elasticsearch-fields<span class="o">=</span>containerID,containerName,containerImageID,containerImageName,containerCreated <span class="se">\</span>
</span><span class='line'>    --log-opt elasticsearch-bulk-workers<span class="o">=</span><span class="m">1</span> <span class="se">\</span>
</span><span class='line'>    --log-opt elasticsearch-bulk-actions<span class="o">=</span><span class="m">1000</span> <span class="se">\</span>
</span><span class='line'>    --log-opt elasticsearch-bulk-size<span class="o">=</span><span class="m">1024</span> <span class="se">\</span>
</span><span class='line'>    --log-opt elasticsearch-bulk-flush-interval<span class="o">=</span>1s <span class="se">\</span>
</span><span class='line'>    --log-opt elasticsearch-bulk-stats<span class="o">=</span><span class="nb">false</span> <span class="se">\</span>
</span><span class='line'>        alpine <span class="nb">echo</span> -n <span class="s2">&quot;this is a test logging message&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Have a look at your Elasticsearch indexes, and you will find the index which was specified in the log-options:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl http://192.168.0.235:9200/_cat/indices?v
</span><span class='line'>health status index             uuid                   pri rep docs.count docs.deleted store.size pri.store.size
</span><span class='line'>yellow open   docker-2018.05.01 8FTqWq6nQlSGpYjD9M5qSg   <span class="m">5</span>   <span class="m">1</span>          <span class="m">1</span>            <span class="m">0</span>      8.9kb          8.9kb
</span></code></pre></td></tr></table></div></figure>


<p>Lets have a look at the Elasticsearch Document which holds the data of the log entry:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl http://192.168.0.235:9200/docker-2018.05.01/_search?pretty
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;took&quot;</span> : 5,
</span><span class='line'>  <span class="s2">&quot;timed_out&quot;</span> : <span class="nb">false</span>,
</span><span class='line'>  <span class="s2">&quot;_shards&quot;</span> : <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;total&quot;</span> : 5,
</span><span class='line'>    <span class="s2">&quot;successful&quot;</span> : 5,
</span><span class='line'>    <span class="s2">&quot;skipped&quot;</span> : 0,
</span><span class='line'>    <span class="s2">&quot;failed&quot;</span> : 0
</span><span class='line'>  <span class="o">}</span>,
</span><span class='line'>  <span class="s2">&quot;hits&quot;</span> : <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;total&quot;</span> : 1,
</span><span class='line'>    <span class="s2">&quot;max_score&quot;</span> : 1.0,
</span><span class='line'>    <span class="s2">&quot;hits&quot;</span> : <span class="o">[</span>
</span><span class='line'>      <span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;_index&quot;</span> : <span class="s2">&quot;docker-2018.05.01&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;_type&quot;</span> : <span class="s2">&quot;log&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;_id&quot;</span> : <span class="s2">&quot;hMTUG2MBIFc8kAgSNkYo&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;_score&quot;</span> : 1.0,
</span><span class='line'>        <span class="s2">&quot;_source&quot;</span> : <span class="o">{</span>
</span><span class='line'>          <span class="s2">&quot;containerID&quot;</span> : <span class="s2">&quot;cee0dc758528&quot;</span>,
</span><span class='line'>          <span class="s2">&quot;containerName&quot;</span> : <span class="s2">&quot;jolly_goodall&quot;</span>,
</span><span class='line'>          <span class="s2">&quot;containerImageID&quot;</span> : <span class="s2">&quot;sha256:3fd9065eaf02feaf94d68376da52541925650b81698c53c6824d92ff63f98353&quot;</span>,
</span><span class='line'>          <span class="s2">&quot;containerImageName&quot;</span> : <span class="s2">&quot;alpine&quot;</span>,
</span><span class='line'>          <span class="s2">&quot;containerCreated&quot;</span> : <span class="s2">&quot;2018-05-01T13:11:20.819447101Z&quot;</span>,
</span><span class='line'>          <span class="s2">&quot;message&quot;</span> : <span class="s2">&quot;this is a test logging message&quot;</span>,
</span><span class='line'>          <span class="s2">&quot;source&quot;</span> : <span class="s2">&quot;stdout&quot;</span>,
</span><span class='line'>          <span class="s2">&quot;timestamp&quot;</span> : <span class="s2">&quot;2018-05-01T13:11:21.119861767Z&quot;</span>,
</span><span class='line'>          <span class="s2">&quot;partial&quot;</span> : <span class="nb">true</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>    <span class="o">]</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Using Swarm and Docker Compose:</h2>

<p>We will deploy a stack with a whoami golang web app, which will use the elasticsearch log driver:</p>

<figure class='code'><figcaption><span>docker-compose.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>version: <span class="s1">&#39;3.4&#39;</span>
</span><span class='line'>
</span><span class='line'>services:
</span><span class='line'>  whoami:
</span><span class='line'>    image: rbekker87/golang-whoami:latest
</span><span class='line'>    networks:
</span><span class='line'>      - appnet
</span><span class='line'>    deploy:
</span><span class='line'>      labels:
</span><span class='line'>        - <span class="s2">&quot;traefik.port=80&quot;</span>
</span><span class='line'>        - <span class="s2">&quot;traefik.backend.loadbalancer.swarm=true&quot;</span>
</span><span class='line'>        - <span class="s2">&quot;traefik.docker.network=appnet&quot;</span>
</span><span class='line'>        - <span class="s2">&quot;traefik.frontend.rule=Host:whoami.homecloud.mydomain.com&quot;</span>
</span><span class='line'>      mode: replicated
</span><span class='line'>      replicas: 10
</span><span class='line'>      restart_policy:
</span><span class='line'>        condition: any
</span><span class='line'>      update_config:
</span><span class='line'>        parallelism: 1
</span><span class='line'>        delay: 70s
</span><span class='line'>        order: start-first
</span><span class='line'>        failure_action: rollback
</span><span class='line'>      placement:
</span><span class='line'>        constraints:
</span><span class='line'>          - <span class="s1">&#39;node.role==worker&#39;</span>
</span><span class='line'>      resources:
</span><span class='line'>        limits:
</span><span class='line'>          cpus: <span class="s1">&#39;0.01&#39;</span>
</span><span class='line'>          memory: 128M
</span><span class='line'>        reservations:
</span><span class='line'>          cpus: <span class="s1">&#39;0.001&#39;</span>
</span><span class='line'>          memory: 64M
</span><span class='line'>    logging:
</span><span class='line'>      driver: elasticsearch_latest
</span><span class='line'>      options:
</span><span class='line'>        elasticsearch-url: <span class="s2">&quot;http://192.168.0.235:9200&quot;</span>
</span><span class='line'>        elasticsearch-sniff: <span class="s2">&quot;false&quot;</span>
</span><span class='line'>        elasticsearch-index: <span class="s2">&quot;docker-whoami-%F&quot;</span>
</span><span class='line'>        elasticsearch-type: <span class="s2">&quot;log&quot;</span>
</span><span class='line'>        elasticsearch-timeout: <span class="s2">&quot;10&quot;</span>
</span><span class='line'>        elasticsearch-version: <span class="s2">&quot;6&quot;</span>
</span><span class='line'>        elasticsearch-fields: <span class="s2">&quot;containerID,containerName,containerImageID,containerImageName,containerCreated&quot;</span>
</span><span class='line'>        elasticsearch-bulk-workers: <span class="s2">&quot;1&quot;</span>
</span><span class='line'>        elasticsearch-bulk-actions: <span class="s2">&quot;1000&quot;</span>
</span><span class='line'>        elasticsearch-bulk-size: <span class="s2">&quot;1024&quot;</span>
</span><span class='line'>        elasticsearch-bulk-flush-interval: <span class="s2">&quot;1s&quot;</span>
</span><span class='line'>        elasticsearch-bulk-stats: <span class="s2">&quot;false&quot;</span>
</span><span class='line'>networks:
</span><span class='line'>  appnet:
</span><span class='line'>    external: <span class="nb">true</span>
</span></code></pre></td></tr></table></div></figure>


<p>Deploy the Stack:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker stack deploy -c docker-compose.yml web
</span></code></pre></td></tr></table></div></figure>


<p>Give it some time to launch and have a look at your indexes, and you will find the index which it wrote to:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl http://192.168.0.235:9200/_cat/indices?v
</span><span class='line'>health status index                     uuid                   pri rep docs.count docs.deleted store.size pri.store.size
</span><span class='line'>yellow open   docker-2018.05.01         8FTqWq6nQlSGpYjD9M5qSg   <span class="m">5</span>   <span class="m">1</span>          <span class="m">1</span>            <span class="m">0</span>      8.9kb          8.9kb
</span><span class='line'>yellow open   docker-whoami-2018.05.01  YebUtKa1RnCy86iP5_ylgg   <span class="m">5</span>   <span class="m">1</span>         <span class="m">11</span>            <span class="m">0</span>     54.4kb         54.4kb
</span></code></pre></td></tr></table></div></figure>


<p>Having a look at the data:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl <span class="s1">&#39;http://192.168.0.235:9200/docker-whoami-2018.05.01/_search?pretty&amp;size=1&#39;</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;took&quot;</span> : 18,
</span><span class='line'>  <span class="s2">&quot;timed_out&quot;</span> : <span class="nb">false</span>,
</span><span class='line'>  <span class="s2">&quot;_shards&quot;</span> : <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;total&quot;</span> : 5,
</span><span class='line'>    <span class="s2">&quot;successful&quot;</span> : 5,
</span><span class='line'>    <span class="s2">&quot;skipped&quot;</span> : 0,
</span><span class='line'>    <span class="s2">&quot;failed&quot;</span> : 0
</span><span class='line'>  <span class="o">}</span>,
</span><span class='line'>  <span class="s2">&quot;hits&quot;</span> : <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;total&quot;</span> : 11,
</span><span class='line'>    <span class="s2">&quot;max_score&quot;</span> : 1.0,
</span><span class='line'>    <span class="s2">&quot;hits&quot;</span> : <span class="o">[</span>
</span><span class='line'>      <span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;_index&quot;</span> : <span class="s2">&quot;docker-whoami-2018.05.01&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;_type&quot;</span> : <span class="s2">&quot;log&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;_id&quot;</span> : <span class="s2">&quot;acbgG2MBIFc8kAgShQa7&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;_score&quot;</span> : 1.0,
</span><span class='line'>        <span class="s2">&quot;_source&quot;</span> : <span class="o">{</span>
</span><span class='line'>          <span class="s2">&quot;containerID&quot;</span> : <span class="s2">&quot;97c3b337735f&quot;</span>,
</span><span class='line'>          <span class="s2">&quot;containerName&quot;</span> : <span class="s2">&quot;web_whoami.6.t2prjiexkym14isbx3yfxa99w&quot;</span>,
</span><span class='line'>          <span class="s2">&quot;containerImageID&quot;</span> : <span class="s2">&quot;sha256:0f7762d2ce569fc2ccf95fbc4c7191dde727551a180253fac046daecc580c7e9&quot;</span>,
</span><span class='line'>          <span class="s2">&quot;containerImageName&quot;</span> : <span class="s2">&quot;rbekker87/golang-whoami:latest@sha256:5a55c5de9cc16fbdda376791c90efb7c704c81b8dba949dce21199945c14cc88&quot;</span>,
</span><span class='line'>          <span class="s2">&quot;containerCreated&quot;</span> : <span class="s2">&quot;2018-05-01T13:24:43.089365528Z&quot;</span>,
</span><span class='line'>          <span class="s2">&quot;message&quot;</span> : <span class="s2">&quot;Starting up on port 80&quot;</span>,
</span><span class='line'>          <span class="s2">&quot;source&quot;</span> : <span class="s2">&quot;stdout&quot;</span>,
</span><span class='line'>          <span class="s2">&quot;timestamp&quot;</span> : <span class="s2">&quot;2018-05-01T13:24:48.636773709Z&quot;</span>,
</span><span class='line'>          <span class="s2">&quot;partial&quot;</span> : <span class="nb">false</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>    <span class="o">]</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>For more info about this, have a look at the referenced documentation below.</p>

<h2>Resources:</h2>

<ul>
<li><a href="https://github.com/rchicoli/docker-log-elasticsearch">https://github.com/rchicoli/docker-log-elasticsearch</a></li>
<li><a href="https://github.com/moby/moby/issues/25694">https://github.com/moby/moby/issues/25694</a></li>
<li><a href="https://docs.docker.com/v17.09/engine/admin/logging/view_container_logs/">https://docs.docker.com/v17.09/engine/admin/logging/view_container_logs/</a></li>
<li><a href="https://sysadmins.co.za/how-to-setup-a-2-node-elasticsearch-cluster-on-centos-7-with-some-example-usage/">https://sysadmins.co.za/how-to-setup-a-2-node-elasticsearch-cluster-on-centos-7-with-some-example-usage/</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Forwarding the Docker Socket via a SSH Tunnel to Execute Docker Commands Locally]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/04/30/forwarding-the-docker-socket-via-a-ssh-tunnel-to-execute-docker-commands-locally/"/>
    <updated>2018-04-30T08:30:23-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/04/30/forwarding-the-docker-socket-via-a-ssh-tunnel-to-execute-docker-commands-locally</id>
    <content type="html"><![CDATA[<p>With automation in mind, when you want to execute docker commands remotely, you want to do it in a secure manner, as you don&rsquo;t want to expose your Docker port to the whole world.</p>

<p>One way in doing that, is forwarding the remote docker socket via a local port over a SSH Tunnel. With this way, you can execute docker commands locally on your workstation, as if the swarm is running on your workstation/laptop/node/bastion host etc.</p>

<p>Without the tunnel, I have a swarm on my laptop with no running services:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker service ls
</span><span class='line'>ID                  NAME                   MODE                REPLICAS            IMAGE                                                               PORTS
</span></code></pre></td></tr></table></div></figure>


<p>As you can see, we have no services running, but the remote swarm has a couple, so after forwarding the connection, we should see our remote services.</p>

<h2>Setting up the SSH Tunnel:</h2>

<p>Here we will forward the remote docker socket: <code>/var/run/docker.sock</code> to a local port bound to localhost: <code>localhost:2377</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>screen -S docker
</span><span class='line'><span class="nv">$ </span>ssh -oStrictHostKeyChecking<span class="o">=</span>no -oUserKnownHostsFile<span class="o">=</span>/dev/null -i ~/path/to/key.pem -NL localhost:2377:/var/run/docker.sock root@docker-managers.mydomain.com
</span></code></pre></td></tr></table></div></figure>


<p>Now the SSH Tunnel will be established, and you can detach your screen session, or open a new shell session. To detach your screen session: <code>'ctrl + a' then d</code></p>

<h2>Verifying that the tunnel is established:</h2>

<p>You can use netstat to verify that the port is listening:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>netstat -ant <span class="p">|</span> grep 2377
</span><span class='line'>tcp4       <span class="m">0</span>      <span class="m">0</span>  127.0.0.1.2377         *.*                    LISTEN
</span></code></pre></td></tr></table></div></figure>


<h2>Inform the Docker Client to use the Port:</h2>

<p>Now we need to inform the docker client, to use the new port to talk to the docker daemon. We do that by setting the <code>DOCKER_HOST</code> environment variable to point to <code>localhost:2377</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">export </span><span class="nv">DOCKER_HOST</span><span class="o">=</span><span class="s2">&quot;localhost:2377&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>This will remain for the lifetime of the shell session.</p>

<h2>Testing it Out:</h2>

<p>Now we can run our commands locally, and we should see the output of our remote swarm:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker service ls
</span><span class='line'>ID                  NAME                   MODE                REPLICAS            IMAGE                                                               PORTS
</span><span class='line'>xjta8e3ek2u2        apps_flask_reminders   replicated          3/3                 rbekker87/flask-reminders:debian
</span><span class='line'>0l7ruktbqj99        apps_kibana            replicated          1/1                 kibana:latest
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<h2>Terminating our SSH Tunnel:</h2>

<p>To terminate our SSH Tunnel, reconnect to your shell session, and hit <code>ctrl + c</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>screen -ls
</span><span class='line'>There is a screen on:
</span><span class='line'>  50413.docker    <span class="o">(</span>Detached<span class="o">)</span>
</span><span class='line'><span class="nv">$ </span>screen -r 50413
</span></code></pre></td></tr></table></div></figure>


<p>Hit <code>ctrl + c</code> :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>CKilled by signal 2.
</span></code></pre></td></tr></table></div></figure>


<p>And exit the screen session:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">exit</span>
</span></code></pre></td></tr></table></div></figure>


<p>With this way, you can do lots of automation with docker swarm, not limited to swarm, but one of them.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Encryption and Decryption With the PyCrypto Module Using the AES Cipher in Python]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/04/30/encryption-and-decryption-with-the-pycrypto-module-using-the-aes-cipher-in-python/"/>
    <updated>2018-04-30T01:43:26-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/04/30/encryption-and-decryption-with-the-pycrypto-module-using-the-aes-cipher-in-python</id>
    <content type="html"><![CDATA[<p><img src="https://i.snag.gy/0MaLsx.jpg" alt="" /></p>

<p>While I&rsquo;m learning a lot about encryption at the moment, I wanted to test out encryption with the PyCrypto module in Python using the <a href="https://en.wikipedia.org/wiki/Advanced_Encryption_Standard">Advanced Encryption Standard (AES)</a> Symmetric Block Cipher.</p>

<h2>Installing PyCrypto:</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>pip install pycrypto --user
</span></code></pre></td></tr></table></div></figure>


<h2>PyCrypto Example:</h2>

<p>Our AES Key needs to be either 16, 24 or 32 bytes long and our Initialization Vector needs to be 16 Bytes long. That will be generated using the random and string modules.</p>

<p>Encrypting:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">from</span> <span class="nn">Crypto.Cipher</span> <span class="kn">import</span> <span class="n">AES</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">random</span><span class="o">,</span> <span class="nn">string</span><span class="o">,</span> <span class="nn">base64</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">key</span> <span class="o">=</span> <span class="s">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">random</span><span class="o">.</span><span class="n">choice</span><span class="p">(</span><span class="n">string</span><span class="o">.</span><span class="n">ascii_uppercase</span> <span class="o">+</span> <span class="n">string</span><span class="o">.</span><span class="n">ascii_lowercase</span> <span class="o">+</span> <span class="n">string</span><span class="o">.</span><span class="n">digits</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">32</span><span class="p">))</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">iv</span> <span class="o">=</span> <span class="s">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">random</span><span class="o">.</span><span class="n">choice</span><span class="p">(</span><span class="n">string</span><span class="o">.</span><span class="n">ascii_uppercase</span> <span class="o">+</span> <span class="n">string</span><span class="o">.</span><span class="n">ascii_lowercase</span> <span class="o">+</span> <span class="n">string</span><span class="o">.</span><span class="n">digits</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">16</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">key</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">key</span><span class="p">))</span>
</span><span class='line'><span class="p">(</span><span class="s">&#39;BLhgpCL81fdLBk23HkZp8BgbT913cqt0&#39;</span><span class="p">,</span> <span class="mi">32</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">iv</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">iv</span><span class="p">))</span>
</span><span class='line'><span class="p">(</span><span class="s">&#39;OWFJATh1Zowac2xr&#39;</span><span class="p">,</span> <span class="mi">16</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">enc_s</span> <span class="o">=</span> <span class="n">AES</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">key</span><span class="p">,</span> <span class="n">AES</span><span class="o">.</span><span class="n">MODE_CFB</span><span class="p">,</span> <span class="n">iv</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">cipher_text</span> <span class="o">=</span> <span class="n">enc_s</span><span class="o">.</span><span class="n">encrypt</span><span class="p">(</span><span class="s">&#39;this is a super important message&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">encoded_cipher_text</span> <span class="o">=</span> <span class="n">base64</span><span class="o">.</span><span class="n">b64encode</span><span class="p">(</span><span class="n">cipher_text</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">encoded_cipher_text</span><span class="p">)</span>
</span><span class='line'><span class="s">&#39;AtBa6zVB0UQ3U/50ogOb6g09FlyPdpmJB7UzoCqxhsQ6&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Decrypting:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">from</span> <span class="nn">Crypto.Cipher</span> <span class="kn">import</span> <span class="n">AES</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">base64</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">key</span> <span class="o">=</span> <span class="s">&#39;BLhgpCL81fdLBk23HkZp8BgbT913cqt0&#39;</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">iv</span> <span class="o">=</span> <span class="s">&#39;OWFJATh1Zowac2xr&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">decryption_suite</span> <span class="o">=</span> <span class="n">AES</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">key</span><span class="p">,</span> <span class="n">AES</span><span class="o">.</span><span class="n">MODE_CFB</span><span class="p">,</span> <span class="n">iv</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">plain_text</span> <span class="o">=</span> <span class="n">decryption_suite</span><span class="o">.</span><span class="n">decrypt</span><span class="p">(</span><span class="n">base64</span><span class="o">.</span><span class="n">b64decode</span><span class="p">(</span><span class="n">encoded_cipher_text</span><span class="p">))</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">plain_text</span><span class="p">)</span>
</span><span class='line'><span class="n">this</span> <span class="ow">is</span> <span class="n">a</span> <span class="nb">super</span> <span class="n">important</span> <span class="n">message</span>
</span></code></pre></td></tr></table></div></figure>


<p>It&rsquo;s not needed to use base64, but to have the ability to stay away from strange characters I decided to encode them with base64 :D</p>

<h2>References:</h2>

<ul>
<li><a href="http://docs.python-guide.org/en/latest/scenarios/crypto/">PyCrypto</a></li>
<li><a href="https://en.wikipedia.org/wiki/Advanced_Encryption_Standard">Wiki - AES</a></li>
<li><a href="https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Feedback_(CFB">Wiki - CFB Mode</a>)</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Running a 3 Node Elasticsearch Cluster With Docker Compose on Your Laptop for Testing]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/04/29/running-a-3-node-elasticsearch-cluster-with-docker-compose-on-your-laptop-for-testing/"/>
    <updated>2018-04-29T13:43:35-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/04/29/running-a-3-node-elasticsearch-cluster-with-docker-compose-on-your-laptop-for-testing</id>
    <content type="html"><![CDATA[<p>Having a Elasticsearch cluster on your laptop with Docker for testing is great. And in this post I will show you how quick and easy it is, to have a 3 node elasticsearch cluster running on docker for testing.</p>

<h2>Pre-Requisites</h2>

<p>We need to set the <code>vm.max_map_count</code> kernel parameter:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo sysctl -w vm.max_map_count<span class="o">=</span>262144
</span></code></pre></td></tr></table></div></figure>


<p>To set this permanently, add it to <code>/etc/sysctl.conf</code> and reload with <code>sudo sysctl -p</code></p>

<h2>Docker Compose:</h2>

<p>The docker compose file that we will reference:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">version</span><span class="p-Indicator">:</span> <span class="s">&#39;2.2&#39;</span>
</span><span class='line'><span class="l-Scalar-Plain">services</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">elasticsearch</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">image</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">docker.elastic.co/elasticsearch/elasticsearch:6.2.4</span>
</span><span class='line'>    <span class="l-Scalar-Plain">container_name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">elasticsearch</span>
</span><span class='line'>    <span class="l-Scalar-Plain">environment</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">cluster.name=docker-cluster</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">bootstrap.memory_lock=true</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="s">&quot;ES_JAVA_OPTS=-Xms512m</span><span class="nv"> </span><span class="s">-Xmx512m&quot;</span>
</span><span class='line'>    <span class="l-Scalar-Plain">ulimits</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">memlock</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">soft</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">-1</span>
</span><span class='line'>        <span class="l-Scalar-Plain">hard</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">-1</span>
</span><span class='line'>    <span class="l-Scalar-Plain">volumes</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">esdata1:/home/ruan/workspace/docker/elasticsearch/data</span>
</span><span class='line'>    <span class="l-Scalar-Plain">ports</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">9200:9200</span>
</span><span class='line'>    <span class="l-Scalar-Plain">networks</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">esnet</span>
</span><span class='line'>  <span class="l-Scalar-Plain">elasticsearch2</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">image</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">docker.elastic.co/elasticsearch/elasticsearch:6.2.4</span>
</span><span class='line'>    <span class="l-Scalar-Plain">container_name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">elasticsearch2</span>
</span><span class='line'>    <span class="l-Scalar-Plain">environment</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">cluster.name=docker-cluster</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">bootstrap.memory_lock=true</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="s">&quot;ES_JAVA_OPTS=-Xms512m</span><span class="nv"> </span><span class="s">-Xmx512m&quot;</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="s">&quot;discovery.zen.ping.unicast.hosts=elasticsearch&quot;</span>
</span><span class='line'>    <span class="l-Scalar-Plain">ulimits</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">memlock</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">soft</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">-1</span>
</span><span class='line'>        <span class="l-Scalar-Plain">hard</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">-1</span>
</span><span class='line'>    <span class="l-Scalar-Plain">volumes</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">esdata2:/home/ruan/workspace/docker/elasticsearch/data</span>
</span><span class='line'>    <span class="l-Scalar-Plain">networks</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">esnet</span>
</span><span class='line'>  <span class="l-Scalar-Plain">elasticsearch3</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">image</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">docker.elastic.co/elasticsearch/elasticsearch:6.2.4</span>
</span><span class='line'>    <span class="l-Scalar-Plain">container_name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">elasticsearch3</span>
</span><span class='line'>    <span class="l-Scalar-Plain">environment</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">cluster.name=docker-cluster</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">bootstrap.memory_lock=true</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="s">&quot;ES_JAVA_OPTS=-Xms512m</span><span class="nv"> </span><span class="s">-Xmx512m&quot;</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="s">&quot;discovery.zen.ping.unicast.hosts=elasticsearch&quot;</span>
</span><span class='line'>    <span class="l-Scalar-Plain">ulimits</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">memlock</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">soft</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">-1</span>
</span><span class='line'>        <span class="l-Scalar-Plain">hard</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">-1</span>
</span><span class='line'>    <span class="l-Scalar-Plain">volumes</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">esdata3:/home/ruan/workspace/docker/elasticsearch/data</span>
</span><span class='line'>    <span class="l-Scalar-Plain">networks</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">esnet</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">volumes</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">esdata1</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">driver</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">local</span>
</span><span class='line'>  <span class="l-Scalar-Plain">esdata2</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">driver</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">local</span>
</span><span class='line'>  <span class="l-Scalar-Plain">esdata3</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">driver</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">local</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">networks</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">esnet</span><span class="p-Indicator">:</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now make sure the paths exist that we referenced in the compose file, in my case <code>/home/ruan/workspace/docker/elasticsearch/data</code></p>

<h2>Deploy</h2>

<p>Deploy your elasticsearch cluster with docker compose:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker-compose up
</span></code></pre></td></tr></table></div></figure>


<p>This will run in the foreground, and you should see console output.</p>

<h2>Testing Elasticsearch</h2>

<p>Let&rsquo;s run a couple of queries, first up, check the cluster health api:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl http://127.0.0.1:9200/_cluster/health?pretty
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;cluster_name&quot;</span> : <span class="s2">&quot;docker-cluster&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;status&quot;</span> : <span class="s2">&quot;green&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;timed_out&quot;</span> : <span class="nb">false</span>,
</span><span class='line'>  <span class="s2">&quot;number_of_nodes&quot;</span> : 3,
</span><span class='line'>  <span class="s2">&quot;number_of_data_nodes&quot;</span> : 3,
</span><span class='line'>  <span class="s2">&quot;active_primary_shards&quot;</span> : 1,
</span><span class='line'>  <span class="s2">&quot;active_shards&quot;</span> : 2,
</span><span class='line'>  <span class="s2">&quot;relocating_shards&quot;</span> : 0,
</span><span class='line'>  <span class="s2">&quot;initializing_shards&quot;</span> : 0,
</span><span class='line'>  <span class="s2">&quot;unassigned_shards&quot;</span> : 0,
</span><span class='line'>  <span class="s2">&quot;delayed_unassigned_shards&quot;</span> : 0,
</span><span class='line'>  <span class="s2">&quot;number_of_pending_tasks&quot;</span> : 0,
</span><span class='line'>  <span class="s2">&quot;number_of_in_flight_fetch&quot;</span> : 0,
</span><span class='line'>  <span class="s2">&quot;task_max_waiting_in_queue_millis&quot;</span> : 0,
</span><span class='line'>  <span class="s2">&quot;active_shards_percent_as_number&quot;</span> : 100.0
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Create a index with replication count of 2:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -H <span class="s2">&quot;Content-Type: application/json&quot;</span> -XPUT http://127.0.0.1:9200/test -d <span class="s1">&#39;{&quot;number_of_replicas&quot;: 2}&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ingest a document to elasticsearch:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -H <span class="s2">&quot;Content-Type: application/json&quot;</span> -XPUT http://127.0.0.1:9200/test/docs/1 -d <span class="s1">&#39;{&quot;name&quot;: &quot;ruan&quot;}&#39;</span>
</span><span class='line'><span class="o">{</span><span class="s2">&quot;_index&quot;</span>:<span class="s2">&quot;test&quot;</span>,<span class="s2">&quot;_type&quot;</span>:<span class="s2">&quot;docs&quot;</span>,<span class="s2">&quot;_id&quot;</span>:<span class="s2">&quot;1&quot;</span>,<span class="s2">&quot;_version&quot;</span>:1,<span class="s2">&quot;result&quot;</span>:<span class="s2">&quot;created&quot;</span>,<span class="s2">&quot;_shards&quot;</span>:<span class="o">{</span><span class="s2">&quot;total&quot;</span>:3,<span class="s2">&quot;successful&quot;</span>:3,<span class="s2">&quot;failed&quot;</span>:0<span class="o">}</span>,<span class="s2">&quot;_seq_no&quot;</span>:0,<span class="s2">&quot;_primary_term&quot;</span>:1<span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>View the indices:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl http://127.0.0.1:9200/_cat/indices?v
</span><span class='line'>health status index                       uuid                   pri rep docs.count docs.deleted store.size pri.store.size
</span><span class='line'>green  open   <span class="nb">test                        </span>w4p2Q3fTR4uMSYBfpNVPqw   <span class="m">5</span>   <span class="m">2</span>          <span class="m">1</span>            <span class="m">0</span>      3.3kb          1.1kb
</span><span class='line'>green  open   .monitoring-es-6-2018.04.29 W69lql-rSbORVfHZrj4vug   <span class="m">1</span>   <span class="m">1</span>       <span class="m">1601</span>           <span class="m">38</span>        4mb            2mb
</span></code></pre></td></tr></table></div></figure>


<h2>Deleting the Cluster:</h2>

<p>As its running in the foreground, you can just hit ctrl + c and as we persisted data in our compose, when you spin up the cluster again, the data will still be there.</p>

<h2>Resources:</h2>

<ul>
<li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using the Bulk API With Elasticsearch]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/04/29/using-the-bulk-api-with-elasticsearch/"/>
    <updated>2018-04-29T13:32:21-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/04/29/using-the-bulk-api-with-elasticsearch</id>
    <content type="html"><![CDATA[<p>This tutorial will guide you how to use the Bulk API with Elasticsearch, this is great for when having a dataset that contains a lot of documents, where you want to insert them into elasticsearch in bulk uploads.</p>

<h2>The Dataset</h2>

<p>We will be using a dataset from elastic that contains 1000 documents that holds account data.</p>

<p>Getting the Dataset:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>wget -O accounts.json https://github.com/elastic/elasticsearch/blob/master/docs/src/test/resources/accounts.json?raw<span class="o">=</span><span class="nb">true</span>
</span></code></pre></td></tr></table></div></figure>


<p>Preview the data:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>head -10  accounts.json
</span><span class='line'><span class="o">{</span><span class="s2">&quot;index&quot;</span>:<span class="o">{</span><span class="s2">&quot;_id&quot;</span>:<span class="s2">&quot;1&quot;</span><span class="o">}}</span>
</span><span class='line'><span class="o">{</span><span class="s2">&quot;account_number&quot;</span>:1,<span class="s2">&quot;balance&quot;</span>:39225,<span class="s2">&quot;firstname&quot;</span>:<span class="s2">&quot;Amber&quot;</span>,<span class="s2">&quot;lastname&quot;</span>:<span class="s2">&quot;Duke&quot;</span>,<span class="s2">&quot;age&quot;</span>:32,<span class="s2">&quot;gender&quot;</span>:<span class="s2">&quot;M&quot;</span>,<span class="s2">&quot;address&quot;</span>:<span class="s2">&quot;880 Holmes Lane&quot;</span>,<span class="s2">&quot;employer&quot;</span>:<span class="s2">&quot;Pyrami&quot;</span>,<span class="s2">&quot;email&quot;</span>:<span class="s2">&quot;amberduke@pyrami.com&quot;</span>,<span class="s2">&quot;city&quot;</span>:<span class="s2">&quot;Brogan&quot;</span>,<span class="s2">&quot;state&quot;</span>:<span class="s2">&quot;IL&quot;</span><span class="o">}</span>
</span><span class='line'><span class="o">{</span><span class="s2">&quot;index&quot;</span>:<span class="o">{</span><span class="s2">&quot;_id&quot;</span>:<span class="s2">&quot;6&quot;</span><span class="o">}}</span>
</span><span class='line'><span class="o">{</span><span class="s2">&quot;account_number&quot;</span>:6,<span class="s2">&quot;balance&quot;</span>:5686,<span class="s2">&quot;firstname&quot;</span>:<span class="s2">&quot;Hattie&quot;</span>,<span class="s2">&quot;lastname&quot;</span>:<span class="s2">&quot;Bond&quot;</span>,<span class="s2">&quot;age&quot;</span>:36,<span class="s2">&quot;gender&quot;</span>:<span class="s2">&quot;M&quot;</span>,<span class="s2">&quot;address&quot;</span>:<span class="s2">&quot;671 Bristol Street&quot;</span>,<span class="s2">&quot;employer&quot;</span>:<span class="s2">&quot;Netagy&quot;</span>,<span class="s2">&quot;email&quot;</span>:<span class="s2">&quot;hattiebond@netagy.com&quot;</span>,<span class="s2">&quot;city&quot;</span>:<span class="s2">&quot;Dante&quot;</span>,<span class="s2">&quot;state&quot;</span>:<span class="s2">&quot;TN&quot;</span><span class="o">}</span>
</span><span class='line'><span class="o">{</span><span class="s2">&quot;index&quot;</span>:<span class="o">{</span><span class="s2">&quot;_id&quot;</span>:<span class="s2">&quot;13&quot;</span><span class="o">}}</span>
</span><span class='line'><span class="o">{</span><span class="s2">&quot;account_number&quot;</span>:13,<span class="s2">&quot;balance&quot;</span>:32838,<span class="s2">&quot;firstname&quot;</span>:<span class="s2">&quot;Nanette&quot;</span>,<span class="s2">&quot;lastname&quot;</span>:<span class="s2">&quot;Bates&quot;</span>,<span class="s2">&quot;age&quot;</span>:28,<span class="s2">&quot;gender&quot;</span>:<span class="s2">&quot;F&quot;</span>,<span class="s2">&quot;address&quot;</span>:<span class="s2">&quot;789 Madison Street&quot;</span>,<span class="s2">&quot;employer&quot;</span>:<span class="s2">&quot;Quility&quot;</span>,<span class="s2">&quot;email&quot;</span>:<span class="s2">&quot;nanettebates@quility.com&quot;</span>,<span class="s2">&quot;city&quot;</span>:<span class="s2">&quot;Nogal&quot;</span>,<span class="s2">&quot;state&quot;</span>:<span class="s2">&quot;VA&quot;</span><span class="o">}</span>
</span><span class='line'><span class="o">{</span><span class="s2">&quot;index&quot;</span>:<span class="o">{</span><span class="s2">&quot;_id&quot;</span>:<span class="s2">&quot;18&quot;</span><span class="o">}}</span>
</span><span class='line'><span class="o">{</span><span class="s2">&quot;account_number&quot;</span>:18,<span class="s2">&quot;balance&quot;</span>:4180,<span class="s2">&quot;firstname&quot;</span>:<span class="s2">&quot;Dale&quot;</span>,<span class="s2">&quot;lastname&quot;</span>:<span class="s2">&quot;Adams&quot;</span>,<span class="s2">&quot;age&quot;</span>:33,<span class="s2">&quot;gender&quot;</span>:<span class="s2">&quot;M&quot;</span>,<span class="s2">&quot;address&quot;</span>:<span class="s2">&quot;467 Hutchinson Court&quot;</span>,<span class="s2">&quot;employer&quot;</span>:<span class="s2">&quot;Boink&quot;</span>,<span class="s2">&quot;email&quot;</span>:<span class="s2">&quot;daleadams@boink.com&quot;</span>,<span class="s2">&quot;city&quot;</span>:<span class="s2">&quot;Orick&quot;</span>,<span class="s2">&quot;state&quot;</span>:<span class="s2">&quot;MD&quot;</span><span class="o">}</span>
</span><span class='line'><span class="o">{</span><span class="s2">&quot;index&quot;</span>:<span class="o">{</span><span class="s2">&quot;_id&quot;</span>:<span class="s2">&quot;20&quot;</span><span class="o">}}</span>
</span><span class='line'><span class="o">{</span><span class="s2">&quot;account_number&quot;</span>:20,<span class="s2">&quot;balance&quot;</span>:16418,<span class="s2">&quot;firstname&quot;</span>:<span class="s2">&quot;Elinor&quot;</span>,<span class="s2">&quot;lastname&quot;</span>:<span class="s2">&quot;Ratliff&quot;</span>,<span class="s2">&quot;age&quot;</span>:36,<span class="s2">&quot;gender&quot;</span>:<span class="s2">&quot;M&quot;</span>,<span class="s2">&quot;address&quot;</span>:<span class="s2">&quot;282 Kings Place&quot;</span>,<span class="s2">&quot;employer&quot;</span>:<span class="s2">&quot;Scentric&quot;</span>,<span class="s2">&quot;email&quot;</span>:<span class="s2">&quot;elinorratliff@scentric.com&quot;</span>,<span class="s2">&quot;city&quot;</span>:<span class="s2">&quot;Ribera&quot;</span>,<span class="s2">&quot;state&quot;</span>:<span class="s2">&quot;WA&quot;</span><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Using the Bulk API:</h2>

<p>We will ingest the data to our <code>bank_accounts</code> index, and to the <code>account</code> type:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -s -H <span class="s2">&quot;Content-Type: application/json&quot;</span> -XPOST localhost:9200/accounts/docs/_bulk --data-binary <span class="s2">&quot;@accounts.json&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>When it&rsquo;s done, have a look at the indices:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl http://127.0.0.1:9200/_cat/indices/bank_accounts?v
</span><span class='line'>health status index         uuid                   pri rep docs.count docs.deleted store.size pri.store.size
</span><span class='line'>green  open   bank_accounts BK_OJYOFTD67tqsQBUWSuQ   <span class="m">5</span>   <span class="m">1</span>       <span class="m">1000</span>            <span class="m">0</span>    950.3kb        475.1kb
</span></code></pre></td></tr></table></div></figure>


<p>Doing a search and display one document:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -XGET <span class="s1">&#39;http://127.0.0.1:9200/bank_accounts/_search?pretty&amp;size=1&#39;</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;took&quot;</span> : 3,
</span><span class='line'>  <span class="s2">&quot;timed_out&quot;</span> : <span class="nb">false</span>,
</span><span class='line'>  <span class="s2">&quot;_shards&quot;</span> : <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;total&quot;</span> : 5,
</span><span class='line'>    <span class="s2">&quot;successful&quot;</span> : 5,
</span><span class='line'>    <span class="s2">&quot;skipped&quot;</span> : 0,
</span><span class='line'>    <span class="s2">&quot;failed&quot;</span> : 0
</span><span class='line'>  <span class="o">}</span>,
</span><span class='line'>  <span class="s2">&quot;hits&quot;</span> : <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;total&quot;</span> : 1000,
</span><span class='line'>    <span class="s2">&quot;max_score&quot;</span> : 1.0,
</span><span class='line'>    <span class="s2">&quot;hits&quot;</span> : <span class="o">[</span>
</span><span class='line'>      <span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;_index&quot;</span> : <span class="s2">&quot;bank_accounts&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;_type&quot;</span> : <span class="s2">&quot;account&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;_id&quot;</span> : <span class="s2">&quot;25&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;_score&quot;</span> : 1.0,
</span><span class='line'>        <span class="s2">&quot;_source&quot;</span> : <span class="o">{</span>
</span><span class='line'>          <span class="s2">&quot;account_number&quot;</span> : 25,
</span><span class='line'>          <span class="s2">&quot;balance&quot;</span> : 40540,
</span><span class='line'>          <span class="s2">&quot;firstname&quot;</span> : <span class="s2">&quot;Virginia&quot;</span>,
</span><span class='line'>          <span class="s2">&quot;lastname&quot;</span> : <span class="s2">&quot;Ayala&quot;</span>,
</span><span class='line'>          <span class="s2">&quot;age&quot;</span> : 39,
</span><span class='line'>          <span class="s2">&quot;gender&quot;</span> : <span class="s2">&quot;F&quot;</span>,
</span><span class='line'>          <span class="s2">&quot;address&quot;</span> : <span class="s2">&quot;171 Putnam Avenue&quot;</span>,
</span><span class='line'>          <span class="s2">&quot;employer&quot;</span> : <span class="s2">&quot;Filodyne&quot;</span>,
</span><span class='line'>          <span class="s2">&quot;email&quot;</span> : <span class="s2">&quot;virginiaayala@filodyne.com&quot;</span>,
</span><span class='line'>          <span class="s2">&quot;city&quot;</span> : <span class="s2">&quot;Nicholson&quot;</span>,
</span><span class='line'>          <span class="s2">&quot;state&quot;</span> : <span class="s2">&quot;PA&quot;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>    <span class="o">]</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Demo Recording:</h2>

<p>This has also been reccored, which can be viewed here:</p>

<ul>
<li><a href="https://asciinema.org/a/BYmZQ0pBiyI8ogVF9t0smczRu">https://asciinema.org/a/BYmZQ0pBiyI8ogVF9t0smczRu</a></li>
</ul>


<h2>Using Bulk with Auto Generated ID&rsquo;s</h2>

<p>As you might know when you do a POST request to the type, the <code>_id</code> field gets auto populated. Timo, one of my friends had the requirement to use the Bulk API to post auto generated Id&rsquo;s and not the static id&rsquo;s that is given in the example dataset.</p>

<p>I have answered this on Elastic&rsquo;s discuss page: <a href="https://discuss.elastic.co/t/looking-for-working-example-data-set-to-bulk-index-into-es6/128678/3">https://discuss.elastic.co/t/looking-for-working-example-data-set-to-bulk-index-into-es6/128678/3</a></p>

<p>I will provide the steps below as well:</p>

<figure class='code'><figcaption><span>convert.py </span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/env python</span>
</span><span class='line'>
</span><span class='line'><span class="n">src_file</span> <span class="o">=</span> <span class="s">&#39;src_file.json&#39;</span>
</span><span class='line'><span class="n">dest_file</span> <span class="o">=</span> <span class="s">&#39;dest_file.json&#39;</span>
</span><span class='line'><span class="n">metadata</span> <span class="o">=</span> <span class="s">&#39;{&quot;index&quot;: {&quot;_index&quot;: &quot;bank_accounts&quot;, &quot;_type&quot;: &quot;account&quot;}}&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">src_file</span><span class="p">)</span> <span class="k">as</span> <span class="n">open_file</span><span class="p">:</span>
</span><span class='line'>    <span class="n">lines</span> <span class="o">=</span> <span class="n">open_file</span><span class="o">.</span><span class="n">readlines</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="n">lines</span> <span class="o">=</span> <span class="p">[</span><span class="n">line</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s">&#39; &#39;</span><span class="p">,</span> <span class="s">&#39;&#39;</span><span class="p">)</span> <span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">lines</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">dest_file</span><span class="p">,</span> <span class="s">&#39;w&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">each_line</span> <span class="ow">in</span> <span class="n">lines</span><span class="p">:</span>
</span><span class='line'>        <span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">metadata</span> <span class="o">+</span> <span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="n">f</span><span class="o">.</span><span class="n">writelines</span><span class="p">(</span><span class="n">each_line</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>The original file:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>head -4 file.json
</span><span class='line'><span class="o">{</span><span class="s2">&quot;index&quot;</span>:<span class="o">{</span><span class="s2">&quot;_id&quot;</span>:<span class="s2">&quot;1&quot;</span><span class="o">}}</span>
</span><span class='line'><span class="o">{</span><span class="s2">&quot;account_number&quot;</span>:1,<span class="s2">&quot;balance&quot;</span>:39225,<span class="s2">&quot;firstname&quot;</span>:<span class="s2">&quot;Amber&quot;</span>,<span class="s2">&quot;lastname&quot;</span>:<span class="s2">&quot;Duke&quot;</span>,<span class="s2">&quot;age&quot;</span>:32,<span class="s2">&quot;gender&quot;</span>:<span class="s2">&quot;M&quot;</span>,<span class="s2">&quot;address&quot;</span>:<span class="s2">&quot;880 Holmes Lane&quot;</span>,<span class="s2">&quot;employer&quot;</span>:<span class="s2">&quot;Pyrami&quot;</span>,<span class="s2">&quot;email&quot;</span>:<span class="s2">&quot;amberduke@pyrami.com&quot;</span>,<span class="s2">&quot;city&quot;</span>:<span class="s2">&quot;Brogan&quot;</span>,<span class="s2">&quot;state&quot;</span>:<span class="s2">&quot;IL&quot;</span><span class="o">}</span>
</span><span class='line'><span class="o">{</span><span class="s2">&quot;index&quot;</span>:<span class="o">{</span><span class="s2">&quot;_id&quot;</span>:<span class="s2">&quot;6&quot;</span><span class="o">}}</span>
</span><span class='line'><span class="o">{</span><span class="s2">&quot;account_number&quot;</span>:6,<span class="s2">&quot;balance&quot;</span>:5686,<span class="s2">&quot;firstname&quot;</span>:<span class="s2">&quot;Hattie&quot;</span>,<span class="s2">&quot;lastname&quot;</span>:<span class="s2">&quot;Bond&quot;</span>,<span class="s2">&quot;age&quot;</span>:36,<span class="s2">&quot;gender&quot;</span>:<span class="s2">&quot;M&quot;</span>,<span class="s2">&quot;address&quot;</span>:<span class="s2">&quot;671 Bristol Street&quot;</span>,<span class="s2">&quot;employer&quot;</span>:<span class="s2">&quot;Netagy&quot;</span>,<span class="s2">&quot;email&quot;</span>:<span class="s2">&quot;hattiebond@netagy.com&quot;</span>,<span class="s2">&quot;city&quot;</span>:<span class="s2">&quot;Dante&quot;</span>,<span class="s2">&quot;state&quot;</span>:<span class="s2">&quot;TN&quot;</span><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Removing the initial metadata:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cat file.json <span class="p">|</span> grep account_number &gt;&gt; src_file.json
</span><span class='line'><span class="nv">$ </span>./convert.py
</span></code></pre></td></tr></table></div></figure>


<p>Previewing the destination file:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>head -4 dest_file.json
</span><span class='line'><span class="o">{</span><span class="s2">&quot;index&quot;</span>: <span class="o">{</span><span class="s2">&quot;_index&quot;</span>: <span class="s2">&quot;bank_accounts&quot;</span>, <span class="s2">&quot;_type&quot;</span>: <span class="s2">&quot;account&quot;</span><span class="o">}}</span>
</span><span class='line'><span class="o">{</span><span class="s2">&quot;account_number&quot;</span>:1,<span class="s2">&quot;balance&quot;</span>:39225,<span class="s2">&quot;firstname&quot;</span>:<span class="s2">&quot;Amber&quot;</span>,<span class="s2">&quot;lastname&quot;</span>:<span class="s2">&quot;Duke&quot;</span>,<span class="s2">&quot;age&quot;</span>:32,<span class="s2">&quot;gender&quot;</span>:<span class="s2">&quot;M&quot;</span>,<span class="s2">&quot;address&quot;</span>:<span class="s2">&quot;880HolmesLane&quot;</span>,<span class="s2">&quot;employer&quot;</span>:<span class="s2">&quot;Pyrami&quot;</span>,<span class="s2">&quot;email&quot;</span>:<span class="s2">&quot;amberduke@pyrami.com&quot;</span>,<span class="s2">&quot;city&quot;</span>:<span class="s2">&quot;Brogan&quot;</span>,<span class="s2">&quot;state&quot;</span>:<span class="s2">&quot;IL&quot;</span><span class="o">}</span>
</span><span class='line'><span class="o">{</span><span class="s2">&quot;index&quot;</span>: <span class="o">{</span><span class="s2">&quot;_index&quot;</span>: <span class="s2">&quot;bank_accounts&quot;</span>, <span class="s2">&quot;_type&quot;</span>: <span class="s2">&quot;account&quot;</span><span class="o">}}</span>
</span><span class='line'><span class="o">{</span><span class="s2">&quot;account_number&quot;</span>:6,<span class="s2">&quot;balance&quot;</span>:5686,<span class="s2">&quot;firstname&quot;</span>:<span class="s2">&quot;Hattie&quot;</span>,<span class="s2">&quot;lastname&quot;</span>:<span class="s2">&quot;Bond&quot;</span>,<span class="s2">&quot;age&quot;</span>:36,<span class="s2">&quot;gender&quot;</span>:<span class="s2">&quot;M&quot;</span>,<span class="s2">&quot;address&quot;</span>:<span class="s2">&quot;671BristolStreet&quot;</span>,<span class="s2">&quot;employer&quot;</span>:<span class="s2">&quot;Netagy&quot;</span>,<span class="s2">&quot;email&quot;</span>:<span class="s2">&quot;hattiebond@netagy.com&quot;</span>,<span class="s2">&quot;city&quot;</span>:<span class="s2">&quot;Dante&quot;</span>,<span class="s2">&quot;state&quot;</span>:<span class="s2">&quot;TN&quot;</span><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Looking at my current indices:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl http://localhost:9200/_cat/indices?v
</span><span class='line'>health status index                       uuid                   pri rep docs.count docs.deleted store.size pri.store.size
</span><span class='line'>green  open   .monitoring-es-6-2018.05.06 3OgdIbDWQWCR8WJlQTXr9Q   <span class="m">1</span>   <span class="m">1</span>     <span class="m">114715</span>            <span class="m">6</span>      104mb           50mb
</span></code></pre></td></tr></table></div></figure>


<p>Ingesting the data via Bulk API:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -s -H <span class="s1">&#39;Content-Type: application/json&#39;</span> -XPOST localhost:9200/_bulk --data-binary @dest_file.json
</span></code></pre></td></tr></table></div></figure>


<p>Looking at my indices to verify that the index exist:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl http://localhost:9200/_cat/indices?v
</span><span class='line'>health status index                       uuid                   pri rep docs.count docs.deleted store.size pri.store.size
</span><span class='line'>green  open   bank_accounts               u37MQvzhSPe97BJzp1u49Q   <span class="m">5</span>   <span class="m">1</span>       <span class="m">1000</span>            <span class="m">0</span>    296.4kb           690b
</span><span class='line'>green  open   .monitoring-es-6-2018.05.06 3OgdIbDWQWCR8WJlQTXr9Q   <span class="m">1</span>   <span class="m">1</span>     <span class="m">114750</span>            <span class="m">6</span>    103.9mb         49.9mb
</span></code></pre></td></tr></table></div></figure>


<p>Looking at one document: :smiley:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl <span class="s1">&#39;http://localhost:9200/bank_accounts/_search?pretty&amp;size=1&#39;</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;took&quot;</span> : 641,
</span><span class='line'>  <span class="s2">&quot;timed_out&quot;</span> : <span class="nb">false</span>,
</span><span class='line'>  <span class="s2">&quot;_shards&quot;</span> : <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;total&quot;</span> : 5,
</span><span class='line'>    <span class="s2">&quot;successful&quot;</span> : 5,
</span><span class='line'>    <span class="s2">&quot;skipped&quot;</span> : 0,
</span><span class='line'>    <span class="s2">&quot;failed&quot;</span> : 0
</span><span class='line'>  <span class="o">}</span>,
</span><span class='line'>  <span class="s2">&quot;hits&quot;</span> : <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;total&quot;</span> : 1000,
</span><span class='line'>    <span class="s2">&quot;max_score&quot;</span> : 1.0,
</span><span class='line'>    <span class="s2">&quot;hits&quot;</span> : <span class="o">[</span>
</span><span class='line'>      <span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;_index&quot;</span> : <span class="s2">&quot;bank_accounts&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;_type&quot;</span> : <span class="s2">&quot;account&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;_id&quot;</span> : <span class="s2">&quot;cohJN2MBCa89A-FEmiJs&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;_score&quot;</span> : 1.0,
</span><span class='line'>        <span class="s2">&quot;_source&quot;</span> : <span class="o">{</span>
</span><span class='line'>          <span class="s2">&quot;account_number&quot;</span> : 6,
</span><span class='line'>          <span class="s2">&quot;balance&quot;</span> : 5686,
</span><span class='line'>          <span class="s2">&quot;firstname&quot;</span> : <span class="s2">&quot;Hattie&quot;</span>,
</span><span class='line'>          <span class="s2">&quot;lastname&quot;</span> : <span class="s2">&quot;Bond&quot;</span>,
</span><span class='line'>          <span class="s2">&quot;age&quot;</span> : 36,
</span><span class='line'>          <span class="s2">&quot;gender&quot;</span> : <span class="s2">&quot;M&quot;</span>,
</span><span class='line'>          <span class="s2">&quot;address&quot;</span> : <span class="s2">&quot;671BristolStreet&quot;</span>,
</span><span class='line'>          <span class="s2">&quot;employer&quot;</span> : <span class="s2">&quot;Netagy&quot;</span>,
</span><span class='line'>          <span class="s2">&quot;email&quot;</span> : <span class="s2">&quot;hattiebond@netagy.com&quot;</span>,
</span><span class='line'>          <span class="s2">&quot;city&quot;</span> : <span class="s2">&quot;Dante&quot;</span>,
</span><span class='line'>          <span class="s2">&quot;state&quot;</span> : <span class="s2">&quot;TN&quot;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>    <span class="o">]</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Resources:</h2>

<ul>
<li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-bulk.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-bulk.html</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Encryption and Decryption With Simple Crypt Using Python]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/04/29/encryption-and-decryption-with-simple-crypt-using-python/"/>
    <updated>2018-04-29T10:50:46-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/04/29/encryption-and-decryption-with-simple-crypt-using-python</id>
    <content type="html"><![CDATA[<p>Today I wanted to encrypt sensitive information to not expose passwords, hostnames etc. I wanted to have a way to encrypt my strings with a master password and stumbled upon Simple Crypt.</p>

<h2>Simple Crypt</h2>

<p>Why simple-crypt? Referenced from their <a href="https://pypi.org/project/simple-crypt/">docs</a>:</p>

<ul>
<li>Simple Crypt uses standard, well-known algorithms following the recommendations from <a href="http://www.daemonology.net/blog/2009-06-11-cryptographic-right-answers.html">this</a> link.</li>
<li>The PyCrypto library provides the algorithm implementation, where AES256 cipher is used.</li>
<li>It includes a check (an HMAC with SHA256) to warn when ciphertext data are modified.</li>
<li>It tries to make things as secure as possible when poor quality passwords are used (PBKDF2 with SHA256, a 256 bit random salt, and 100,000 rounds).</li>
<li>Using a library, rather than writing your own code, means that we have less solutions to the same problem.</li>
</ul>


<h2>Installing Simple-Crypt:</h2>

<p>From a base alpine image:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>apk update
</span><span class='line'><span class="nv">$ </span>apk add python python-dev py2-pip
</span><span class='line'><span class="nv">$ </span>apk add gcc g++ make libffi-dev openssl-dev
</span><span class='line'><span class="nv">$ </span>pip install simple-crypt
</span></code></pre></td></tr></table></div></figure>


<h2>Simple Examples:</h2>

<p>Two simple examples to encrypt and decrypt data with simple-crypt. We will use a password <code>sekret</code> and we will encrypt the string: <code>this is a secure message</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">from</span> <span class="nn">simplecrypt</span> <span class="kn">import</span> <span class="n">encrypt</span><span class="p">,</span> <span class="n">decrypt</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">password</span> <span class="o">=</span> <span class="s">&#39;sekret&#39;</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">message</span> <span class="o">=</span> <span class="s">&#39;this is a secret message&#39;</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">ciphertext</span> <span class="o">=</span> <span class="n">encrypt</span><span class="p">(</span><span class="n">password</span><span class="p">,</span> <span class="n">message</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">ciphertext</span><span class="p">)</span>
</span><span class='line'><span class="n">sc</span><span class="c">#$%^&amp;*(..........</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now that we have our encrypted string, lets decrypt it. First we will use the wrong password, so that you will see how the expected output should look when using a different password, than was used when it was encrypted:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">decrypt</span><span class="p">(</span><span class="s">&#39;badpass&#39;</span><span class="p">,</span> <span class="n">ciphertext</span><span class="p">))</span>
</span><span class='line'><span class="n">Traceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">last</span><span class="p">):</span>
</span><span class='line'>  <span class="n">File</span> <span class="s">&quot;&lt;stdin&gt;&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1</span><span class="p">,</span> <span class="ow">in</span> <span class="o">&lt;</span><span class="n">module</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="n">File</span> <span class="s">&quot;/usr/lib/python2.7/site-packages/simplecrypt/__init__.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">72</span><span class="p">,</span> <span class="ow">in</span> <span class="n">decrypt</span>
</span><span class='line'>    <span class="n">_assert_hmac</span><span class="p">(</span><span class="n">hmac_key</span><span class="p">,</span> <span class="n">hmac</span><span class="p">,</span> <span class="n">hmac2</span><span class="p">)</span>
</span><span class='line'>  <span class="n">File</span> <span class="s">&quot;/usr/lib/python2.7/site-packages/simplecrypt/__init__.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">116</span><span class="p">,</span> <span class="ow">in</span> <span class="n">_assert_hmac</span>
</span><span class='line'>    <span class="k">raise</span> <span class="n">DecryptionException</span><span class="p">(</span><span class="s">&#39;Bad password or corrupt / modified data.&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">simplecrypt</span><span class="o">.</span><span class="n">DecryptionException</span><span class="p">:</span> <span class="n">Bad</span> <span class="n">password</span> <span class="ow">or</span> <span class="n">corrupt</span> <span class="o">/</span> <span class="n">modified</span> <span class="n">data</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now using the correct password to decrypt:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">decrypt</span><span class="p">(</span><span class="s">&#39;sekret&#39;</span><span class="p">,</span> <span class="n">ciphertext</span><span class="p">))</span>
</span><span class='line'><span class="n">this</span> <span class="ow">is</span> <span class="n">a</span> <span class="n">secret</span> <span class="n">message</span>
</span></code></pre></td></tr></table></div></figure>


<h2>SimpleCrypt Base64 and Getpass</h2>

<p>I wanted to store the encrypted string in a database, but the ciphertext has a combination of random special characters, so I decided to encode the ciphertext with base64. And the password input will be used with the getpass module.</p>

<p>Our encryption app:</p>

<figure class='code'><figcaption><span>encrypt.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">sys</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">simplecrypt</span> <span class="kn">import</span> <span class="n">encrypt</span><span class="p">,</span> <span class="n">decrypt</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">base64</span> <span class="kn">import</span> <span class="n">b64encode</span><span class="p">,</span> <span class="n">b64decode</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">getpass</span> <span class="kn">import</span> <span class="n">getpass</span>
</span><span class='line'>
</span><span class='line'><span class="n">password</span> <span class="o">=</span> <span class="n">getpass</span><span class="p">()</span>
</span><span class='line'><span class="n">message</span> <span class="o">=</span> <span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="n">cipher</span> <span class="o">=</span> <span class="n">encrypt</span><span class="p">(</span><span class="n">password</span><span class="p">,</span> <span class="n">message</span><span class="p">)</span>
</span><span class='line'><span class="n">encoded_cipher</span> <span class="o">=</span> <span class="n">b64encode</span><span class="p">(</span><span class="n">cipher</span><span class="p">)</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="n">encoded_cipher</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Our decryption app:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">sys</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">simplecrypt</span> <span class="kn">import</span> <span class="n">encrypt</span><span class="p">,</span> <span class="n">decrypt</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">base64</span> <span class="kn">import</span> <span class="n">b64encode</span><span class="p">,</span> <span class="n">b64decode</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">getpass</span> <span class="kn">import</span> <span class="n">getpass</span>
</span><span class='line'>
</span><span class='line'><span class="n">password</span> <span class="o">=</span> <span class="n">getpass</span><span class="p">()</span>
</span><span class='line'><span class="n">encoded_cipher</span> <span class="o">=</span> <span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="n">cipher</span> <span class="o">=</span> <span class="n">b64decode</span><span class="p">(</span><span class="n">encoded_cipher</span><span class="p">)</span>
</span><span class='line'><span class="n">plaintext</span> <span class="o">=</span> <span class="n">decrypt</span><span class="p">(</span><span class="n">password</span><span class="p">,</span> <span class="n">cipher</span><span class="p">)</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="n">plaintext</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Encrypt and Decrypting Data using our Scripts:</h2>

<p>Encrypting the string <code>this is a secret message</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>python encrypt.py <span class="s2">&quot;this is a secret message&quot;</span>
</span><span class='line'>Password:
</span><span class='line'>c2MAAnyfWIfOBV43vxo3sVCEYMG4C6hx69hv2Ii1JKlVHJUgBAlADJPOsD5cJO6MMI9faTDm1As/VfesvBzIe5S16mNyg2q7xfnP5iJ0RlK92vMNRbKOvNibg3M<span class="o">=</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now that we have our encoded ciphertext, lets decrypt it with the password that we encrypted it with:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>python decrypt.py <span class="s1">&#39;c2MAAnyfWIfOBV43vxo3sVCEYMG4C6hx69hv2Ii1JKlVHJUgBAlADJPOsD5cJO6MMI9faTDm1As/VfesvBzIe5S16mNyg2q7xfnP5iJ0RlK92vMNRbKOvNibg3M=&#39;</span>
</span><span class='line'>Password:
</span><span class='line'>this is a secret message
</span></code></pre></td></tr></table></div></figure>


<p>This is one way of working with sensitive info that you would like to encrypt/decrypt.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Paramiko Module in Python to Execute Remote Bash Commands]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/04/23/using-paramiko-module-in-python-to-execute-remote-bash-commands/"/>
    <updated>2018-04-23T12:16:59-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/04/23/using-paramiko-module-in-python-to-execute-remote-bash-commands</id>
    <content type="html"><![CDATA[<p>Paramiko is a python implementation of the sshv2 protocol.</p>

<h2>Paramiko to execute Remote Commands:</h2>

<p>We will use paramiko module in python to execute a command on our remote server.</p>

<p>Client side will be referenced as (side-a) and Server side will be referenced as (side-b)</p>

<h2>Getting the Dependencies:</h2>

<p>Install Paramiko via pip on side-a:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>pip install paramiko --user
</span></code></pre></td></tr></table></div></figure>


<h2>Using Paramiko in our Code:</h2>

<p>Our Python Code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">paramiko</span>
</span><span class='line'>
</span><span class='line'><span class="n">ssh</span> <span class="o">=</span> <span class="n">paramiko</span><span class="o">.</span><span class="n">SSHClient</span><span class="p">()</span>
</span><span class='line'><span class="n">ssh</span><span class="o">.</span><span class="n">set_missing_host_key_policy</span><span class="p">(</span><span class="n">paramiko</span><span class="o">.</span><span class="n">AutoAddPolicy</span><span class="p">())</span>
</span><span class='line'><span class="n">ssh</span><span class="o">.</span><span class="n">connect</span><span class="p">(</span><span class="n">hostname</span><span class="o">=</span><span class="s">&#39;192.168.10.10&#39;</span><span class="p">,</span> <span class="n">username</span><span class="o">=</span><span class="s">&#39;ubuntu&#39;</span><span class="p">,</span> <span class="n">key_filename</span><span class="o">=</span><span class="s">&#39;/home/ubuntu/.ssh/mykey.pem&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">stdin</span><span class="p">,</span> <span class="n">stdout</span><span class="p">,</span> <span class="n">stderr</span> <span class="o">=</span> <span class="n">ssh</span><span class="o">.</span><span class="n">exec_command</span><span class="p">(</span><span class="s">&#39;lsb_release -a&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">stdout</span><span class="o">.</span><span class="n">read</span><span class="p">()</span><span class="o">.</span><span class="n">splitlines</span><span class="p">():</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="n">line</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">ssh</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Execute our Command Remotely:</h2>

<p>Now we will attempt to establish the ssh connection from side-a, then run <code>lsb_release -a</code> on our remote server, side-b:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>python execute.py
</span><span class='line'>
</span><span class='line'>Distributor ID:   Ubuntu
</span><span class='line'>Description:  Ubuntu 16.04.4 LTS
</span><span class='line'>Release:  16.04
</span><span class='line'>Codename: xenial
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup a SSH Tunnel With the Sshtunnel Module in Python]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/04/23/setup-a-ssh-tunnel-with-the-sshtunnel-module-in-python/"/>
    <updated>2018-04-23T11:56:46-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/04/23/setup-a-ssh-tunnel-with-the-sshtunnel-module-in-python</id>
    <content type="html"><![CDATA[<p>Sometimes we need to restrict access to a port, where a port should listen on localhost, but you want to access that port from a remote source. One secure way of doing that, is to establish a SSH Tunnel to the remote side, and forward to port via the SSH Tunnel.</p>

<p>Today we will setup a Flask Web Service on our Remote Server (Side B) which will be listening on <code>127.0.0.1:5000</code> and setup the SSH Tunnel with the <code>sshtunnel</code> module in Python from our client side (Side A). Then we will make a GET request on our client side to the port that we are forwarding via the tunnel to our remote side.</p>

<h2>Remote Side:</h2>

<p>Our Demo Python Flask Application:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">Flask</span>
</span><span class='line'>
</span><span class='line'><span class="n">app</span> <span class="o">=</span> <span class="n">Flask</span><span class="p">(</span><span class="n">__name__</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@app.route</span><span class="p">(</span><span class="s">&#39;/&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">index</span><span class="p">():</span>
</span><span class='line'>    <span class="k">return</span> <span class="s">&#39;OK&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
</span><span class='line'>    <span class="n">app</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="n">host</span><span class="o">=</span><span class="s">&#39;127.0.0.1&#39;</span><span class="p">,</span> <span class="n">port</span><span class="o">=</span><span class="mi">5000</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Run the server:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>python app.py
</span><span class='line'>Listening on 127.0.0.1:5000
</span></code></pre></td></tr></table></div></figure>


<h2>Client Side:</h2>

<p>From our client side we first need to install sshtunnel via pip:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>pip install sshtunnel requests --user
</span></code></pre></td></tr></table></div></figure>


<p>Our code for our client that will establish the tunnel and do the GET request:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">sshtunnel</span> <span class="kn">import</span> <span class="n">SSHTunnelForwarder</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">requests</span>
</span><span class='line'>
</span><span class='line'><span class="n">remote_user</span> <span class="o">=</span> <span class="s">&#39;ubuntu&#39;</span>
</span><span class='line'><span class="n">remote_host</span> <span class="o">=</span> <span class="s">&#39;192.168.10.10&#39;</span>
</span><span class='line'><span class="n">remote_port</span> <span class="o">=</span> <span class="mi">22</span>
</span><span class='line'><span class="n">local_host</span> <span class="o">=</span> <span class="s">&#39;127.0.0.1&#39;</span>
</span><span class='line'><span class="n">local_port</span> <span class="o">=</span> <span class="mi">5000</span>
</span><span class='line'>
</span><span class='line'><span class="n">server</span> <span class="o">=</span> <span class="n">SSHTunnelForwarder</span><span class="p">(</span>
</span><span class='line'>   <span class="p">(</span><span class="n">remote_host</span><span class="p">,</span> <span class="n">remote_port</span><span class="p">),</span>
</span><span class='line'>   <span class="n">ssh_username</span><span class="o">=</span><span class="n">remote_user</span><span class="p">,</span>
</span><span class='line'>   <span class="n">ssh_private_key</span><span class="o">=</span><span class="s">&#39;/home/ubuntu/.ssh/mykey.pem&#39;</span><span class="p">,</span>
</span><span class='line'>   <span class="n">remote_bind_address</span><span class="o">=</span><span class="p">(</span><span class="n">local_host</span><span class="p">,</span> <span class="n">local_port</span><span class="p">),</span>
</span><span class='line'>   <span class="n">local_bind_address</span><span class="o">=</span><span class="p">(</span><span class="n">local_host</span><span class="p">,</span> <span class="n">local_port</span><span class="p">),</span>
</span><span class='line'>   <span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">server</span><span class="o">.</span><span class="n">start</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="n">headers</span> <span class="o">=</span> <span class="p">{</span> <span class="s">&#39;User-Agent&#39;</span><span class="p">:</span> <span class="s">&#39;Mozilla/5.0 (Windows NT 6.0; WOW64; rv:24.0) Gecko/20100101 Firefox/24.0&#39;</span><span class="p">}</span>
</span><span class='line'><span class="n">r</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;http://127.0.0.1:5000&#39;</span><span class="p">,</span> <span class="n">headers</span><span class="o">=</span><span class="n">headers</span><span class="p">)</span><span class="o">.</span><span class="n">content</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="n">r</span><span class="p">)</span>
</span><span class='line'><span class="n">server</span><span class="o">.</span><span class="n">stop</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>Running our app:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>python ssh_tunnel.py
</span><span class='line'>OK
</span></code></pre></td></tr></table></div></figure>


<p>So we have sucessfully established our ssh tunnel to our remote side, and able to access the network restricted port via the tunnel.</p>

<h2>Resources:</h2>

<ul>
<li><a href="https://pypi.org/project/sshtunnel/">SSHTunnel</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Basic RESTFul API Server With Python Flask]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/04/21/basic-restful-api-server-with-python-flask/"/>
    <updated>2018-04-21T19:35:34-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/04/21/basic-restful-api-server-with-python-flask</id>
    <content type="html"><![CDATA[<p><img src="http://obj-cache.cloud.ruanbekker.com/flask.png" alt="" /></p>

<p>A Basic RESTFul API Service with Python Flask. We will be using the Flask, jsonify and request classes to build our API service.</p>

<h2>Description of this demonstration:</h2>

<p>Our API will be able to do the following:</p>

<ul>
<li>Create, Read, Update, Delete</li>
</ul>


<p>In this demonstration, we will add some information about people to our API, then go through each method that is mentioned above.</p>

<h2>Getting the Dependencies:</h2>

<p>Setup the virtualenv and install the dependencies:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>virtualenv .venv
</span><span class='line'><span class="nv">$ </span><span class="nb">source</span> .venv/bin/activate
</span><span class='line'><span class="nv">$ </span>pip install flask
</span></code></pre></td></tr></table></div></figure>


<h2>The API Server Code:</h2>

<p>Here&rsquo;s the complete code, as you can see I have a couple of decorators for each url endpoint, and a <code>id_generator</code> function, that will generate id&rsquo;s for each document. The id will be used for getting users information, updates and deletes:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">Flask</span><span class="p">,</span> <span class="n">jsonify</span><span class="p">,</span> <span class="n">request</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">multiprocessing</span> <span class="kn">import</span> <span class="n">Value</span>
</span><span class='line'>
</span><span class='line'><span class="n">counter</span> <span class="o">=</span> <span class="n">Value</span><span class="p">(</span><span class="s">&#39;i&#39;</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'><span class="n">app</span> <span class="o">=</span> <span class="n">Flask</span><span class="p">(</span><span class="n">__name__</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'><span class="n">help_message</span> <span class="o">=</span> <span class="s">&quot;&quot;&quot;</span>
</span><span class='line'><span class="s">API Usage:</span>
</span><span class='line'><span class="s"> </span>
</span><span class='line'><span class="s">- GET    /api/list</span>
</span><span class='line'><span class="s">- POST   /api/add data={&quot;key&quot;: &quot;value&quot;}</span>
</span><span class='line'><span class="s">- GET    /api/get/&lt;id&gt;</span>
</span><span class='line'><span class="s">- PUT    /api/update/&lt;id&gt; data={&quot;key&quot;: &quot;value_to_replace&quot;}</span>
</span><span class='line'><span class="s">- DELETE /api/delete/&lt;id&gt; </span>
</span><span class='line'>
</span><span class='line'><span class="s">&quot;&quot;&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">id_generator</span><span class="p">():</span>
</span><span class='line'>    <span class="k">with</span> <span class="n">counter</span><span class="o">.</span><span class="n">get_lock</span><span class="p">():</span>
</span><span class='line'>        <span class="n">counter</span><span class="o">.</span><span class="n">value</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">counter</span><span class="o">.</span><span class="n">value</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@app.route</span><span class="p">(</span><span class="s">&#39;/api&#39;</span><span class="p">,</span> <span class="n">methods</span><span class="o">=</span><span class="p">[</span><span class="s">&#39;GET&#39;</span><span class="p">])</span>
</span><span class='line'><span class="k">def</span> <span class="nf">help</span><span class="p">():</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">help_message</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@app.route</span><span class="p">(</span><span class="s">&#39;/api/list&#39;</span><span class="p">,</span> <span class="n">methods</span><span class="o">=</span><span class="p">[</span><span class="s">&#39;GET&#39;</span><span class="p">])</span>
</span><span class='line'><span class="k">def</span> <span class="nf">list</span><span class="p">():</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">jsonify</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@app.route</span><span class="p">(</span><span class="s">&#39;/api/add&#39;</span><span class="p">,</span> <span class="n">methods</span><span class="o">=</span><span class="p">[</span><span class="s">&#39;POST&#39;</span><span class="p">])</span>
</span><span class='line'><span class="k">def</span> <span class="nf">index</span><span class="p">():</span>
</span><span class='line'>    <span class="n">payload</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">json</span>
</span><span class='line'>    <span class="n">payload</span><span class="p">[</span><span class="s">&#39;id&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">id_generator</span><span class="p">()</span>
</span><span class='line'>    <span class="n">a</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">payload</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="s">&quot;Created: {} </span><span class="se">\n</span><span class="s">&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">payload</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@app.route</span><span class="p">(</span><span class="s">&#39;/api/get&#39;</span><span class="p">,</span> <span class="n">methods</span><span class="o">=</span><span class="p">[</span><span class="s">&#39;GET&#39;</span><span class="p">])</span>
</span><span class='line'><span class="k">def</span> <span class="nf">get_none</span><span class="p">():</span>
</span><span class='line'>    <span class="k">return</span> <span class="s">&#39;ID Required: /api/get/&lt;id&gt; </span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@app.route</span><span class="p">(</span><span class="s">&#39;/api/get/&lt;int:_id&gt;&#39;</span><span class="p">,</span> <span class="n">methods</span><span class="o">=</span><span class="p">[</span><span class="s">&#39;GET&#39;</span><span class="p">])</span>
</span><span class='line'><span class="k">def</span> <span class="nf">get</span><span class="p">(</span><span class="n">_id</span><span class="p">):</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">user</span> <span class="ow">in</span> <span class="n">a</span><span class="p">:</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">_id</span> <span class="o">==</span> <span class="n">user</span><span class="p">[</span><span class="s">&#39;id&#39;</span><span class="p">]:</span>
</span><span class='line'>            <span class="n">selected_user</span> <span class="o">=</span> <span class="n">user</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">jsonify</span><span class="p">(</span><span class="n">selected_user</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@app.route</span><span class="p">(</span><span class="s">&#39;/api/update&#39;</span><span class="p">,</span> <span class="n">methods</span><span class="o">=</span><span class="p">[</span><span class="s">&#39;PUT&#39;</span><span class="p">])</span>
</span><span class='line'><span class="k">def</span> <span class="nf">update_none</span><span class="p">():</span>
</span><span class='line'>    <span class="k">return</span> <span class="s">&#39;ID and Desired K/V in Payload required: /api/update/&lt;id&gt; -d </span><span class="se">\&#39;</span><span class="s">{&quot;name&quot;: &quot;john&quot;}</span><span class="se">\&#39;</span><span class="s"> </span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@app.route</span><span class="p">(</span><span class="s">&#39;/api/update/&lt;int:_id&gt;&#39;</span><span class="p">,</span> <span class="n">methods</span><span class="o">=</span><span class="p">[</span><span class="s">&#39;PUT&#39;</span><span class="p">])</span>
</span><span class='line'><span class="k">def</span> <span class="nf">update</span><span class="p">(</span><span class="n">_id</span><span class="p">):</span>
</span><span class='line'>    <span class="n">update_req</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">json</span>
</span><span class='line'>    <span class="n">key_to_update</span> <span class="o">=</span> <span class="n">update_req</span><span class="o">.</span><span class="n">keys</span><span class="p">()[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'>    <span class="n">update_val</span> <span class="o">=</span> <span class="p">(</span><span class="n">item</span> <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">a</span> <span class="k">if</span> <span class="n">item</span><span class="p">[</span><span class="s">&#39;id&#39;</span><span class="p">]</span> <span class="o">==</span> <span class="n">_id</span><span class="p">)</span><span class="o">.</span><span class="n">next</span><span class="p">()[</span><span class="n">key_to_update</span><span class="p">]</span> <span class="o">=</span> <span class="n">update_req</span><span class="o">.</span><span class="n">values</span><span class="p">()[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'>    <span class="n">update_resp</span> <span class="o">=</span> <span class="p">(</span><span class="n">item</span> <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">a</span> <span class="k">if</span> <span class="n">item</span><span class="p">[</span><span class="s">&#39;id&#39;</span><span class="p">]</span> <span class="o">==</span> <span class="n">_id</span><span class="p">)</span><span class="o">.</span><span class="n">next</span><span class="p">()</span>
</span><span class='line'>    <span class="k">return</span> <span class="s">&quot;Updated: {} </span><span class="se">\n</span><span class="s">&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">update_resp</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@app.route</span><span class="p">(</span><span class="s">&#39;/api/delete/&lt;int:_id&gt;&#39;</span><span class="p">,</span> <span class="n">methods</span><span class="o">=</span><span class="p">[</span><span class="s">&#39;DELETE&#39;</span><span class="p">])</span>
</span><span class='line'><span class="k">def</span> <span class="nf">delete</span><span class="p">(</span><span class="n">_id</span><span class="p">):</span>
</span><span class='line'>    <span class="n">deleted_user</span> <span class="o">=</span> <span class="p">(</span><span class="n">item</span> <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">a</span> <span class="k">if</span> <span class="n">item</span><span class="p">[</span><span class="s">&#39;id&#39;</span><span class="p">]</span> <span class="o">==</span> <span class="n">_id</span><span class="p">)</span><span class="o">.</span><span class="n">next</span><span class="p">()</span>
</span><span class='line'>    <span class="n">a</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="n">deleted_user</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="s">&quot;Deleted: {} </span><span class="se">\n</span><span class="s">&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">deleted_user</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
</span><span class='line'>    <span class="n">app</span><span class="o">.</span><span class="n">run</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Demo Time:</h2>

<p>Retrieving the Help output:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -XGET -H <span class="s1">&#39;Content-Type: application/json&#39;</span> http://localhost:5000/api
</span><span class='line'>
</span><span class='line'>API Usage:
</span><span class='line'>
</span><span class='line'>- GET    /api/list
</span><span class='line'>- POST   /api/add <span class="nv">data</span><span class="o">={</span><span class="s2">&quot;key&quot;</span>: <span class="s2">&quot;value&quot;</span><span class="o">}</span>
</span><span class='line'>- GET    /api/get/&lt;id&gt;
</span><span class='line'>- PUT    /api/update/&lt;id&gt; <span class="nv">data</span><span class="o">={</span><span class="s2">&quot;key&quot;</span>: <span class="s2">&quot;value_to_replace&quot;</span><span class="o">}</span>
</span><span class='line'>- DELETE /api/delete/&lt;id&gt;
</span></code></pre></td></tr></table></div></figure>


<p>Doing a list, to list all the users, its expected for it to be empty as we have not added any info to our API:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -XGET -H <span class="s1">&#39;Content-Type: application/json&#39;</span> http://localhost:5000/api/list
</span><span class='line'><span class="o">[]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Adding our first user:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -XPOST -H <span class="s1">&#39;Content-Type: application/json&#39;</span> http://localhost:5000/api/add -d <span class="s1">&#39;{&quot;name&quot;: &quot;ruan&quot;, &quot;country&quot;: &quot;south africa&quot;, &quot;age&quot;: 30}&#39;</span>
</span><span class='line'>Created: <span class="o">{</span>u<span class="s1">&#39;country&#39;</span>: u<span class="s1">&#39;south africa&#39;</span>, u<span class="s1">&#39;age&#39;</span>: 30, u<span class="s1">&#39;name&#39;</span>: u<span class="s1">&#39;ruan&#39;</span>, <span class="s1">&#39;id&#39;</span>: 1<span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Adding our second user:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -XPOST -H <span class="s1">&#39;Content-Type: application/json&#39;</span> http://localhost:5000/api/add -d <span class="s1">&#39;{&quot;name&quot;: &quot;stefan&quot;, &quot;country&quot;: &quot;south africa&quot;, &quot;age&quot;: 29}&#39;</span>
</span><span class='line'>Created: <span class="o">{</span>u<span class="s1">&#39;country&#39;</span>: u<span class="s1">&#39;south africa&#39;</span>, u<span class="s1">&#39;age&#39;</span>: 29, u<span class="s1">&#39;name&#39;</span>: u<span class="s1">&#39;stefan&#39;</span>, <span class="s1">&#39;id&#39;</span>: 2<span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Doing a list again, will retrieve all our users:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -XGET -H <span class="s1">&#39;Content-Type: application/json&#39;</span> http://localhost:5000/api/list
</span><span class='line'><span class="o">[</span>
</span><span class='line'>  <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;age&quot;</span>: 30,
</span><span class='line'>    <span class="s2">&quot;country&quot;</span>: <span class="s2">&quot;south africa&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;id&quot;</span>: 1,
</span><span class='line'>    <span class="s2">&quot;name&quot;</span>: <span class="s2">&quot;ruan&quot;</span>
</span><span class='line'>  <span class="o">}</span>,
</span><span class='line'>  <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;age&quot;</span>: 29,
</span><span class='line'>    <span class="s2">&quot;country&quot;</span>: <span class="s2">&quot;south africa&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;id&quot;</span>: 2,
</span><span class='line'>    <span class="s2">&quot;name&quot;</span>: <span class="s2">&quot;stefan&quot;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Doing a GET on the userid, to only display the users info:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -XGET -H <span class="s1">&#39;Content-Type: application/json&#39;</span> http://localhost:5000/api/get/2
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;age&quot;</span>: 29,
</span><span class='line'>  <span class="s2">&quot;country&quot;</span>: <span class="s2">&quot;south africa&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;id&quot;</span>: 2,
</span><span class='line'>  <span class="s2">&quot;name&quot;</span>: <span class="s2">&quot;stefan&quot;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now, let&rsquo;s update some details. Let&rsquo;s say that Stefan relocated to New Zealand. We will need to provide his <code>id</code> and also the key/value that we want to update:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -XPUT -H <span class="s1">&#39;Content-Type: application/json&#39;</span> http://localhost:5000/api/update/2 -d <span class="s1">&#39;{&quot;country&quot;: &quot;new zealand&quot;}&#39;</span>
</span><span class='line'>Updated: <span class="o">{</span>u<span class="s1">&#39;country&#39;</span>: u<span class="s1">&#39;new zealand&#39;</span>, u<span class="s1">&#39;age&#39;</span>: 29, u<span class="s1">&#39;name&#39;</span>: u<span class="s1">&#39;stefan&#39;</span>, <span class="s1">&#39;id&#39;</span>: 2<span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>As you can see the response confirmed that the value was updated, but let&rsquo;s verify the output, by doing a get on his id:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -XGET -H <span class="s1">&#39;Content-Type: application/json&#39;</span> http://localhost:5000/api/get/2
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;age&quot;</span>: 29,
</span><span class='line'>  <span class="s2">&quot;country&quot;</span>: <span class="s2">&quot;new zealand&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;id&quot;</span>: 2,
</span><span class='line'>  <span class="s2">&quot;name&quot;</span>: <span class="s2">&quot;stefan&quot;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>And lastly, lets delete our user, which will only require the userid:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -XDELETE -H <span class="s1">&#39;Content-Type: application/json&#39;</span> http://localhost:5000/api/delete/2
</span><span class='line'>Deleted: <span class="o">{</span>u<span class="s1">&#39;country&#39;</span>: u<span class="s1">&#39;new zealand&#39;</span>, u<span class="s1">&#39;age&#39;</span>: 29, u<span class="s1">&#39;name&#39;</span>: u<span class="s1">&#39;stefan&#39;</span>, <span class="s1">&#39;id&#39;</span>: 2<span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>To verify this, list all the users:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -XGET -H <span class="s1">&#39;Content-Type: application/json&#39;</span> http://localhost:5000/api/list
</span><span class='line'><span class="o">[</span>
</span><span class='line'>  <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;age&quot;</span>: 30,
</span><span class='line'>    <span class="s2">&quot;country&quot;</span>: <span class="s2">&quot;south africa&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;id&quot;</span>: 1,
</span><span class='line'>    <span class="s2">&quot;name&quot;</span>: <span class="s2">&quot;ruan&quot;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Using Python Requests:</h2>

<p>We can also use python&rsquo;s requests module to do the same, to give a demonstration I will create a new user:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>pip install requests
</span><span class='line'><span class="nv">$ </span>python
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">requests</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">json</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">base_url</span> <span class="o">=</span> <span class="s">&#39;http://localhost:5000/api/add&#39;</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">headers</span> <span class="o">=</span> <span class="p">{</span><span class="s">&quot;Content-Type&quot;</span><span class="p">:</span> <span class="s">&quot;application/json&quot;</span><span class="p">}</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">payload</span> <span class="o">=</span> <span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">({</span><span class="s">&quot;name&quot;</span><span class="p">:</span> <span class="s">&quot;shaun&quot;</span><span class="p">,</span> <span class="s">&quot;country&quot;</span><span class="p">:</span> <span class="s">&quot;australia&quot;</span><span class="p">,</span> <span class="s">&quot;age&quot;</span><span class="p">:</span> <span class="mi">24</span><span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">r</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">post</span><span class="p">(</span><span class="n">base_url</span><span class="p">,</span> <span class="n">headers</span><span class="o">=</span><span class="n">headers</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">payload</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">r</span><span class="o">.</span><span class="n">content</span>
</span><span class='line'><span class="n">Created</span><span class="p">:</span> <span class="p">{</span><span class="s">u&#39;country&#39;</span><span class="p">:</span> <span class="s">u&#39;australia&#39;</span><span class="p">,</span> <span class="s">u&#39;age&#39;</span><span class="p">:</span> <span class="mi">24</span><span class="p">,</span> <span class="s">u&#39;name&#39;</span><span class="p">:</span> <span class="s">u&#39;shaun&#39;</span><span class="p">,</span> <span class="s">&#39;id&#39;</span><span class="p">:</span> <span class="mi">4</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Thats it. I&rsquo;ve stumbled upon <a href="https://flask-restful.readthedocs.io/en/latest/">Flask-Restful</a> which I still want to check out, and as soon as I do, I will do a post on it, maybe baked with a NoSQL db or something like that.</p>

<p>Cheers!</p>

<h2>Resources:</h2>

<ul>
<li><a href="https://stackoverflow.com/a/8653568">Python Generator Expressions</a></li>
<li><a href="http://flask.pocoo.org/docs/0.12/api/#flask.Request">Flask Docs</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Basic Introduction to Use Arguments With Argparse on Python]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/04/18/basic-introduction-to-use-arguments-with-argparse-on-python/"/>
    <updated>2018-04-18T13:35:28-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/04/18/basic-introduction-to-use-arguments-with-argparse-on-python</id>
    <content type="html"><![CDATA[<p>I used to work a lot with <code>sys.argv</code> for using arguments in my applications, until I stumbled upon the <code>argparse</code> module! (Thanks Donovan!)</p>

<p>What I like about argparse, is that it builds up the help menu for you, and you also have a lot of options, as you can set the argument to be required, set the datatypes, addtional help context etc.</p>

<h2>The Basic Demonstration:</h2>

<p>Today we will just run through a very basic example on how to use <code>argparse</code>:</p>

<ul>
<li>Return the generated help menu</li>
<li>Return the required value</li>
<li>Return the additional arguments</li>
<li>Compare arguments with a IF statement</li>
</ul>


<h2>The Python Argparse Tutorial Code:</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">argparse</span>
</span><span class='line'>
</span><span class='line'><span class="n">parser</span> <span class="o">=</span> <span class="n">argparse</span><span class="o">.</span><span class="n">ArgumentParser</span><span class="p">(</span><span class="n">description</span><span class="o">=</span><span class="s">&#39;argparse demo&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">parser</span><span class="o">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s">&#39;-w&#39;</span><span class="p">,</span> <span class="s">&#39;--word&#39;</span><span class="p">,</span> <span class="n">help</span><span class="o">=</span><span class="s">&#39;a word (required)&#39;</span><span class="p">,</span> <span class="n">required</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'><span class="n">parser</span><span class="o">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s">&#39;-s&#39;</span><span class="p">,</span> <span class="s">&#39;--sentence&#39;</span><span class="p">,</span> <span class="n">help</span><span class="o">=</span><span class="s">&#39;a sentence (not required)&#39;</span><span class="p">,</span> <span class="n">required</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
</span><span class='line'><span class="n">parser</span><span class="o">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s">&#39;-c&#39;</span><span class="p">,</span> <span class="s">&#39;--comparison&#39;</span><span class="p">,</span> <span class="n">help</span><span class="o">=</span><span class="s">&#39;a word to compare (not required)&#39;</span><span class="p">,</span> <span class="n">required</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
</span><span class='line'><span class="n">args</span> <span class="o">=</span> <span class="n">parser</span><span class="o">.</span><span class="n">parse_args</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="s">&quot;Word: {}&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">args</span><span class="o">.</span><span class="n">word</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">args</span><span class="o">.</span><span class="n">sentence</span><span class="p">:</span>
</span><span class='line'>  <span class="k">print</span><span class="p">(</span><span class="s">&quot;Sentence: :{}&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">args</span><span class="o">.</span><span class="n">sentence</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">args</span><span class="o">.</span><span class="n">comparison</span><span class="p">:</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">args</span><span class="o">.</span><span class="n">comparison</span> <span class="o">==</span> <span class="n">args</span><span class="o">.</span><span class="n">word</span><span class="p">:</span>
</span><span class='line'>      <span class="k">print</span><span class="p">(</span><span class="s">&quot;Comparison: the provided word argument and provided comparison argument is the same&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">else</span><span class="p">:</span>
</span><span class='line'>      <span class="k">print</span><span class="p">(</span><span class="s">&quot;Comparison: the provided word argument and provided comparison argument is NOT the same&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Seeing it in action:</h2>

<p>To return a usage/help info, run it with the <code>-h</code> or <code>--help</code> argument:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>python foo.py -h
</span><span class='line'>usage: foo.py <span class="o">[</span>-h<span class="o">]</span> -w WORD <span class="o">[</span>-s SENTENCE<span class="o">]</span> <span class="o">[</span>-c COMPARISON<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>argparse demo
</span><span class='line'>
</span><span class='line'>optional arguments:
</span><span class='line'>  -h, --help            show this <span class="nb">help </span>message and <span class="nb">exit</span>
</span><span class='line'>  -w WORD, --word WORD  a word <span class="o">(</span>required<span class="o">)</span>
</span><span class='line'>  -s SENTENCE, --sentence SENTENCE
</span><span class='line'>                        a sentence <span class="o">(</span>not required<span class="o">)</span>
</span><span class='line'>  -c COMPARISON, --comparison COMPARISON
</span><span class='line'>                        a word to compare <span class="o">(</span>not required<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>For this to work, the application is expecting the <code>word</code> argument to run, as we declared it as <code>required=True</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>python foo.py -w hello
</span><span class='line'>Word: hello
</span></code></pre></td></tr></table></div></figure>


<p>Now to use the arguments that is not required, which makes it optional:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>python foo.py -w hello -s <span class="s2">&quot;hello, world&quot;</span>
</span><span class='line'>Word: hello
</span><span class='line'>Sentence: :hello, world
</span></code></pre></td></tr></table></div></figure>


<p>We can also implement some if statements into our application to compare if arguments are the same (as a basic example):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>python foo.py -w hello -s <span class="s2">&quot;hello, world&quot;</span> -c goodbye
</span><span class='line'>Word: hello
</span><span class='line'>Sentence: :hello, world
</span><span class='line'>Comparison: the provided word argument and provided comparison argument is NOT the same
</span></code></pre></td></tr></table></div></figure>


<p>We can see that the word and comparison arguments are not the same. When they match up:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>python foo.py -w hello -s <span class="s2">&quot;hello, world&quot;</span> -c hello
</span><span class='line'>Word: hello
</span><span class='line'>Sentence: :hello, world
</span><span class='line'>Comparison: the provided word argument and provided comparison argument is the same
</span></code></pre></td></tr></table></div></figure>


<p>This was a very basic demonstration on the <code>argparse</code> module.</p>

<h2>Resource:</h2>

<ul>
<li><a href="https://docs.python.org/3/library/argparse.html">Python Docs: Argparse</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Monitor a Amazon Elasticsearch Service Cluster Update Process]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/04/16/how-to-monitor-a-amazon-elasticsearch-service-cluster-update-process/"/>
    <updated>2018-04-16T03:24:09-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/04/16/how-to-monitor-a-amazon-elasticsearch-service-cluster-update-process</id>
    <content type="html"><![CDATA[<p>When you make a configuration change on Amazon&rsquo;s Elasticsearch, it does a blue/green deployment. So new nodes will be allocated to the cluster (which you will notice from CloudWatch when looking at the nodes metrics). Once these nodes are deployed, data gets copied accross to the new nodes, and traffic gets directed to the new nodes, and once its done, the old nodes gets terminated.</p>

<p>Note: While there will be more nodes in the cluster, you will not get billed for the extra nodes.</p>

<p>While this process is going, you can monitor your cluster to see the progress:</p>

<h2>The Shards API:</h2>

<p>Using the <code>/_cat/shards</code> API, you will find that the shards are in a RELOCATING state (keeping in mind, this is when the change is still busy)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl -s -XGET <span class="s1">&#39;https://search-example-elasticsearch-cluster-6-abc123defghijkl5airxticzvjaqy.eu-west-1.es.amazonaws.com/_cat/shards?v&#39;</span> <span class="p">|</span> grep -v <span class="s1">&#39;STARTED&#39;</span>
</span><span class='line'>index                                   shard prirep state         docs    store ip            node
</span><span class='line'>example-app1-2018.02.23                 <span class="m">4</span>     r      RELOCATING  <span class="m">323498</span> 1018.3mb x.x.x.x x2mKoe_ -&gt; x.x.x.x GyNiRJyeSTifN_9JZisGuQ GyNiRJy
</span><span class='line'>example-app1-2018.02.28                 <span class="m">2</span>     p      RELOCATING  <span class="m">477609</span>    1.5gb x.x.x.x x2mKoe_ -&gt; x.x.x.x sOihejw1SrKtag_LO1RGIA sOihejw
</span><span class='line'>example-app1-2018.03.01                 <span class="m">3</span>     r      RELOCATING  <span class="m">463143</span>    1.5gb x.x.x.x  ZZfv-Ha -&gt; x.x.x.x jOchdCZWQq-TAPZNTadNoA jOchdCZ
</span><span class='line'>fortinet-syslog-2018.02                 <span class="m">0</span>     p      RELOCATING <span class="m">1218556</span>  462.2mb x.x.x.x  moQA57Y -&gt; x.x.x.x sOihejw1SrKtag_LO1RGIA sOihejw
</span><span class='line'>example-app1-2018.03.23                 <span class="m">3</span>     r      RELOCATING  <span class="m">821254</span>    2.4gb x.x.x.x  moQA57Y -&gt; x.x.x.x GyNiRJyeSTifN_9JZisGuQ GyNiRJy
</span><span class='line'>example-app1-2018.04.02                 <span class="m">2</span>     p      RELOCATING <span class="m">1085279</span>    3.4gb x.x.x.x x2mKoe_ -&gt; x.x.x.x jOchdCZWQq-TAPZNTadNoA jOchdCZ
</span><span class='line'>example-app1-2018.02.08                 <span class="m">3</span>     p      RELOCATING  <span class="m">136321</span>    125mb x.x.x.x ZUZSFWu -&gt; x.x.x.x tyU_V_KLS5mZXEwnF-YEAQ tyU_V_K
</span><span class='line'>fortinet-syslog-2018.04                 <span class="m">4</span>     r      RELOCATING <span class="m">7513842</span>    2.8gb x.x.x.x  ZZfv-Ha -&gt; x.x.x.x il1WsroNSgGmXJugds_aMQ il1Wsro
</span><span class='line'>example-app1-2018.04.09                 <span class="m">1</span>     r      RELOCATING <span class="m">1074581</span>    3.5gb x.x.x.x  ZRzKGe5 -&gt; x.x.x.x il1WsroNSgGmXJugds_aMQ il1Wsro
</span><span class='line'>example-app1-2018.04.09                 <span class="m">0</span>     p      RELOCATING <span class="m">1074565</span>    3.5gb x.x.x.x  moQA57Y -&gt; x.x.x.x tyU_V_KLS5mZXEwnF-YEAQ tyU_V_K
</span></code></pre></td></tr></table></div></figure>


<h2>The Recovery API:</h2>

<p>We can then use the <code>/_cat/recovery</code> API, which will show the progress of the shards transferring to the other nodes, you will find the following:</p>

<ul>
<li><code>index, shard, time, type, stage, source_host, target_host, files, files_percent, bytes, bytes_percent</code></li>
</ul>


<p>As Amazon masks their node ip addresses, we will find that the ips are not available. To make it more human readable, we will only pass the columns that we are interested in and not to show the shards that has been set to <code>done</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -s -XGET <span class="s1">&#39;https://search-example-elasticsearch-cluster-6-abc123defghijkl5airxticzvjaqy.eu-west-1.es.amazonaws.com/_cat/recovery?v&amp;h=i,s,t,ty,st,shost,thost,f,fp,b,bp&#39;</span> <span class="p">|</span> grep -v <span class="s1">&#39;done&#39;</span>
</span><span class='line'>i                                       s t     ty          st       shost         thost         f   fp     b          bp
</span><span class='line'>example-app1-2018.04.11                 <span class="m">1</span> 2m    peer        index    x.x.x.x x.x.x.x  <span class="m">139</span> 97.1%  <span class="m">3435483673</span> 65.9%
</span><span class='line'>web-syslog-2018.04                 <span class="m">4</span> 7.6m  peer        finalize x.x.x.x x.x.x.x  <span class="m">109</span> 100.0% <span class="m">2854310892</span> 100.0%
</span><span class='line'>example-app1-2018.04.16                 <span class="m">3</span> 2.9m  peer        translog x.x.x.x x.x.x.x  <span class="m">130</span> 100.0% <span class="m">446180036</span>  100.0%
</span><span class='line'>example-app1-2018.03.30                 <span class="m">3</span> 2.1m  peer        index    x.x.x.x  x.x.x.x  <span class="m">127</span> 97.6%  <span class="m">3862498583</span> 62.5%
</span><span class='line'>example-app1-2018.04.01                 <span class="m">0</span> 4.4m  peer        index    x.x.x.x  x.x.x.x  <span class="m">140</span> 99.3%  <span class="m">3410543270</span> 87.9%
</span><span class='line'>example-app1-2018.04.06                 <span class="m">0</span> 5.1m  peer        index    x.x.x.x x.x.x.x  <span class="m">128</span> 97.7%  <span class="m">4291421948</span> 66.3%
</span><span class='line'>example-app1-2018.04.07                 <span class="m">0</span> 52.2s peer        index    x.x.x.x x.x.x.x <span class="m">149</span> 91.9%  <span class="m">3969581277</span> 27.4%
</span><span class='line'>network-capture-2018.04.01               <span class="m">2</span> 11.4s peer        index    x.x.x.x  x.x.x.x <span class="m">107</span> 95.3%  <span class="m">359987163</span>  55.0%
</span><span class='line'>example-app1-2018.03.17                 <span class="m">1</span> 1.7m  peer        index    x.x.x.x  x.x.x.x <span class="m">117</span> 98.3%  <span class="m">2104196548</span> 74.5%
</span><span class='line'>example-app1-2018.02.25                 <span class="m">3</span> 58.4s peer        index    x.x.x.x  x.x.x.x <span class="m">102</span> 98.0%  <span class="m">945437614</span>  74.7%
</span></code></pre></td></tr></table></div></figure>


<p>We can also see the human readable output, which is displayed in json format, with much more detail:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -s -XGET <span class="s1">&#39;https://search-example-elasticsearch-cluster-6-abc123defghijkl5airxticzvjaqy.eu-west-1.es.amazonaws.com/example-app1-2018.04.03/_recovery?human&#39;</span> <span class="p">|</span> python -m json.tool
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;example-app1-2018.04.03&quot;</span>: <span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;shards&quot;</span>: <span class="o">[</span>
</span><span class='line'>            <span class="o">{</span>
</span><span class='line'>                <span class="s2">&quot;id&quot;</span>: 0,
</span><span class='line'>                <span class="s2">&quot;index&quot;</span>: <span class="o">{</span>
</span><span class='line'>                    <span class="s2">&quot;files&quot;</span>: <span class="o">{</span>
</span><span class='line'>                        <span class="s2">&quot;percent&quot;</span>: <span class="s2">&quot;100.0%&quot;</span>,
</span><span class='line'>                        <span class="s2">&quot;recovered&quot;</span>: 103,
</span><span class='line'>                        <span class="s2">&quot;reused&quot;</span>: 0,
</span><span class='line'>                        <span class="s2">&quot;total&quot;</span>: 103
</span><span class='line'>                    <span class="o">}</span>,
</span><span class='line'>                    <span class="s2">&quot;size&quot;</span>: <span class="o">{</span>
</span><span class='line'>                        <span class="s2">&quot;percent&quot;</span>: <span class="s2">&quot;100.0%&quot;</span>,
</span><span class='line'>                        <span class="s2">&quot;recovered&quot;</span>: <span class="s2">&quot;3.6gb&quot;</span>,
</span><span class='line'>                        <span class="s2">&quot;recovered_in_bytes&quot;</span>: 3926167091,
</span><span class='line'>                        <span class="s2">&quot;reused&quot;</span>: <span class="s2">&quot;0b&quot;</span>,
</span><span class='line'>                        <span class="s2">&quot;reused_in_bytes&quot;</span>: 0,
</span><span class='line'>                        <span class="s2">&quot;total&quot;</span>: <span class="s2">&quot;3.6gb&quot;</span>,
</span><span class='line'>                        <span class="s2">&quot;total_in_bytes&quot;</span>: 3926167091
</span><span class='line'>                    <span class="o">}</span>,
</span><span class='line'>                    <span class="s2">&quot;source_throttle_time&quot;</span>: <span class="s2">&quot;2m&quot;</span>,
</span><span class='line'>                    <span class="s2">&quot;source_throttle_time_in_millis&quot;</span>: 121713,
</span><span class='line'>                    <span class="s2">&quot;target_throttle_time&quot;</span>: <span class="s2">&quot;2.1m&quot;</span>,
</span><span class='line'>                    <span class="s2">&quot;target_throttle_time_in_millis&quot;</span>: 126170,
</span><span class='line'>                    <span class="s2">&quot;total_time&quot;</span>: <span class="s2">&quot;7.2m&quot;</span>,
</span><span class='line'>                    <span class="s2">&quot;total_time_in_millis&quot;</span>: 434142
</span><span class='line'>                <span class="o">}</span>,
</span><span class='line'>                <span class="s2">&quot;primary&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>                <span class="s2">&quot;source&quot;</span>: <span class="o">{</span>
</span><span class='line'>                    <span class="s2">&quot;host&quot;</span>: <span class="s2">&quot;x.x.x.x&quot;</span>,
</span><span class='line'>                    <span class="s2">&quot;id&quot;</span>: <span class="s2">&quot;ZRzKGe5WSg2SzilZGb3RbA&quot;</span>,
</span><span class='line'>                    <span class="s2">&quot;ip&quot;</span>: <span class="s2">&quot;x.x.x.x&quot;</span>,
</span><span class='line'>                    <span class="s2">&quot;name&quot;</span>: <span class="s2">&quot;ZRzKGe5&quot;</span>,
</span><span class='line'>                    <span class="s2">&quot;transport_address&quot;</span>: <span class="s2">&quot;x.x.x.x:9300&quot;</span>
</span><span class='line'>                <span class="o">}</span>,
</span><span class='line'>                <span class="s2">&quot;stage&quot;</span>: <span class="s2">&quot;DONE&quot;</span>,
</span><span class='line'>                <span class="s2">&quot;start_time&quot;</span>: <span class="s2">&quot;2018-04-10T19:26:48.668Z&quot;</span>,
</span><span class='line'>                <span class="s2">&quot;start_time_in_millis&quot;</span>: 1523388408668,
</span><span class='line'>                <span class="s2">&quot;stop_time&quot;</span>: <span class="s2">&quot;2018-04-10T19:34:04.980Z&quot;</span>,
</span><span class='line'>                <span class="s2">&quot;stop_time_in_millis&quot;</span>: 1523388844980,
</span><span class='line'>                <span class="s2">&quot;target&quot;</span>: <span class="o">{</span>
</span><span class='line'>                    <span class="s2">&quot;host&quot;</span>: <span class="s2">&quot;x.x.x.x&quot;</span>,
</span><span class='line'>                    <span class="s2">&quot;id&quot;</span>: <span class="s2">&quot;x2mKoe_GTpe3b1CnXOKisA&quot;</span>,
</span><span class='line'>                    <span class="s2">&quot;ip&quot;</span>: <span class="s2">&quot;x.x.x.x&quot;</span>,
</span><span class='line'>                    <span class="s2">&quot;name&quot;</span>: <span class="s2">&quot;x2mKoe_&quot;</span>,
</span><span class='line'>                    <span class="s2">&quot;transport_address&quot;</span>: <span class="s2">&quot;x.x.x.x:9300&quot;</span>
</span><span class='line'>                <span class="o">}</span>,
</span><span class='line'>                <span class="s2">&quot;total_time&quot;</span>: <span class="s2">&quot;7.2m&quot;</span>,
</span><span class='line'>                <span class="s2">&quot;total_time_in_millis&quot;</span>: 436311,
</span><span class='line'>                <span class="s2">&quot;translog&quot;</span>: <span class="o">{</span>
</span><span class='line'>                    <span class="s2">&quot;percent&quot;</span>: <span class="s2">&quot;100.0%&quot;</span>,
</span><span class='line'>                    <span class="s2">&quot;recovered&quot;</span>: 0,
</span><span class='line'>                    <span class="s2">&quot;total&quot;</span>: 0,
</span><span class='line'>                    <span class="s2">&quot;total_on_start&quot;</span>: 0,
</span><span class='line'>                    <span class="s2">&quot;total_time&quot;</span>: <span class="s2">&quot;1.1s&quot;</span>,
</span><span class='line'>                    <span class="s2">&quot;total_time_in_millis&quot;</span>: 1154
</span><span class='line'>                <span class="o">}</span>,
</span><span class='line'>                <span class="s2">&quot;type&quot;</span>: <span class="s2">&quot;PEER&quot;</span>,
</span><span class='line'>                <span class="s2">&quot;verify_index&quot;</span>: <span class="o">{</span>
</span><span class='line'>                    <span class="s2">&quot;check_index_time&quot;</span>: <span class="s2">&quot;0s&quot;</span>,
</span><span class='line'>                    <span class="s2">&quot;check_index_time_in_millis&quot;</span>: 0,
</span><span class='line'>                    <span class="s2">&quot;total_time&quot;</span>: <span class="s2">&quot;0s&quot;</span>,
</span><span class='line'>                    <span class="s2">&quot;total_time_in_millis&quot;</span>: 0
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>,
</span></code></pre></td></tr></table></div></figure>


<h2>The Cluster Health API:</h2>

<p>Amazon restricts most of the <code>/_cluster</code> API actions, but we can however see the health endpoint, where we can see the number of <code>nodes</code>, <code>active_shards</code>, <code>relocating_shards</code>, <code>number_of_pending_tasks</code> etc:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -XGET https://search-example-elasticsearch-cluster-6-abc123defghijkl5airxticzvjaqy.eu-west-1.es.amazonaws.com/_cluster/health?pretty
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;cluster_name&quot;</span> : <span class="s2">&quot;0123456789012:example-elasticsearch-cluster-6&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;status&quot;</span> : <span class="s2">&quot;green&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;timed_out&quot;</span> : <span class="nb">false</span>,
</span><span class='line'>  <span class="s2">&quot;number_of_nodes&quot;</span> : 16,
</span><span class='line'>  <span class="s2">&quot;number_of_data_nodes&quot;</span> : 10,
</span><span class='line'>  <span class="s2">&quot;active_primary_shards&quot;</span> : 803,
</span><span class='line'>  <span class="s2">&quot;active_shards&quot;</span> : 1606,
</span><span class='line'>  <span class="s2">&quot;relocating_shards&quot;</span> : 10,
</span><span class='line'>  <span class="s2">&quot;initializing_shards&quot;</span> : 0,
</span><span class='line'>  <span class="s2">&quot;unassigned_shards&quot;</span> : 0,
</span><span class='line'>  <span class="s2">&quot;delayed_unassigned_shards&quot;</span> : 0,
</span><span class='line'>  <span class="s2">&quot;number_of_pending_tasks&quot;</span> : 0,
</span><span class='line'>  <span class="s2">&quot;number_of_in_flight_fetch&quot;</span> : 0,
</span><span class='line'>  <span class="s2">&quot;task_max_waiting_in_queue_millis&quot;</span> : 0,
</span><span class='line'>  <span class="s2">&quot;active_shards_percent_as_number&quot;</span> : 100.0
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>The Pending Tasks API:</h2>

<p>We also have some insights into the <code>/_cat/pending_tasks</code> API:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -s -XGET <span class="s1">&#39;https://search-example-elasticsearch-cluster-6-abc123defghijkl5airxticzvjaqy.eu-west-1.es.amazonaws.com/_cat/pending_tasks?v&#39;</span>
</span><span class='line'>insertOrder timeInQueue priority <span class="nb">source</span>
</span><span class='line'><span class="m">1757</span>        53ms URGENT   shard-started shard id <span class="o">[[</span>network-metrics-2018.04.13<span class="o">][</span>0<span class="o">]]</span>, allocation id <span class="o">[</span>Qh91o_OGRX-lFnY8KxYgQw<span class="o">]</span>, primary term <span class="o">[</span>0<span class="o">]</span>, message <span class="o">[</span>after peer recovery<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Resources:</h2>

<ul>
<li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/cat-recovery.html#cat-recovery">https://www.elastic.co/guide/en/elasticsearch/reference/current/cat-recovery.html#cat-recovery</a></li>
<li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-recovery.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-recovery.html</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Experimenting With Python and TinyMongo a MongoDB Wrapper for TinyDB]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/04/15/experimenting-with-python-and-tinymongo-a-mongodb-wrapper-for-tinydb/"/>
    <updated>2018-04-15T16:39:22-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/04/15/experimenting-with-python-and-tinymongo-a-mongodb-wrapper-for-tinydb</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/schapman1974/tinymongo">TinyMongo</a> is a wrapper for MongoDB on top of TinyDB.</p>

<p>This is awesome for testing, where you need a local document orientated database which is backed by a flat file. It feels just like using MongoDB, except that its local, lightweight and using TinyDB in the backend.</p>

<h2>Installing Dependencies:</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>pip install tinymongo
</span></code></pre></td></tr></table></div></figure>


<h2>Usage Examples:</h2>

<p>Initialize tinymongo and create the database and collection:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">from</span> <span class="nn">tinymongo</span> <span class="kn">import</span> <span class="n">TinyMongoClient</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">connection</span> <span class="o">=</span> <span class="n">TinyMongoClient</span><span class="p">(</span><span class="s">&#39;foo&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db_init</span> <span class="o">=</span> <span class="n">connection</span><span class="o">.</span><span class="n">mydb</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db</span> <span class="o">=</span> <span class="n">db_init</span><span class="o">.</span><span class="n">users</span>
</span></code></pre></td></tr></table></div></figure>


<p>Insert a Document, catch the document id and search for that document:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">record_id</span> <span class="o">=</span> <span class="n">db</span> <span class="o">.</span><span class="n">insert_one</span><span class="p">({</span><span class="s">&#39;username&#39;</span><span class="p">:</span> <span class="s">&#39;ruanb&#39;</span><span class="p">,</span> <span class="s">&#39;name&#39;</span><span class="p">:</span> <span class="s">&#39;ruan&#39;</span><span class="p">,</span> <span class="s">&#39;age&#39;</span><span class="p">:</span> <span class="mi">31</span><span class="p">,</span> <span class="s">&#39;gender&#39;</span><span class="p">:</span> <span class="s">&#39;male&#39;</span><span class="p">,</span> <span class="s">&#39;location&#39;</span><span class="p">:</span> <span class="s">&#39;south africa&#39;</span><span class="p">})</span><span class="o">.</span><span class="n">inserted_id</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">user_info</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">find_one</span><span class="p">({</span><span class="s">&quot;_id&quot;</span><span class="p">:</span> <span class="n">record_id</span><span class="p">})</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">user_info</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="s">u&#39;username&#39;</span><span class="p">:</span> <span class="s">u&#39;ruanb&#39;</span><span class="p">,</span> <span class="s">u&#39;name&#39;</span><span class="p">:</span> <span class="s">u&#39;ruan&#39;</span><span class="p">,</span> <span class="s">u&#39;gender&#39;</span><span class="p">:</span> <span class="s">u&#39;male&#39;</span><span class="p">,</span> <span class="s">u&#39;age&#39;</span><span class="p">:</span> <span class="mi">31</span><span class="p">,</span> <span class="s">u&#39;_id&#39;</span><span class="p">:</span> <span class="s">u&#39;8d2ce01140ec11e888110242ac110004&#39;</span><span class="p">,</span> <span class="s">u&#39;location&#39;</span><span class="p">:</span> <span class="s">u&#39;south africa&#39;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Update a document: Update the age attribute from 31 to 32</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db</span><span class="o">.</span><span class="n">users</span><span class="o">.</span><span class="n">update_one</span><span class="p">({</span><span class="s">&#39;_id&#39;</span><span class="p">:</span> <span class="s">&#39;8d2ce01140ec11e888110242ac110004&#39;</span><span class="p">},</span> <span class="p">{</span><span class="s">&#39;$set&#39;</span><span class="p">:</span> <span class="p">{</span><span class="s">&#39;age&#39;</span><span class="p">:</span> <span class="mi">32</span> <span class="p">}})</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">user_info</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="s">u&#39;username&#39;</span><span class="p">:</span> <span class="s">u&#39;ruanb&#39;</span><span class="p">,</span> <span class="s">u&#39;name&#39;</span><span class="p">:</span> <span class="s">u&#39;ruan&#39;</span><span class="p">,</span> <span class="s">u&#39;gender&#39;</span><span class="p">:</span> <span class="s">u&#39;male&#39;</span><span class="p">,</span> <span class="s">u&#39;age&#39;</span><span class="p">:</span> <span class="mi">32</span><span class="p">,</span> <span class="s">u&#39;_id&#39;</span><span class="p">:</span> <span class="s">u&#39;8d2ce01140ec11e888110242ac110004&#39;</span><span class="p">,</span> <span class="s">u&#39;location&#39;</span><span class="p">:</span> <span class="s">u&#39;south africa&#39;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Insert some more data:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">record_id</span> <span class="o">=</span> <span class="n">db</span> <span class="o">.</span><span class="n">insert_one</span><span class="p">({</span><span class="s">&#39;username&#39;</span><span class="p">:</span> <span class="s">&#39;stefanb&#39;</span><span class="p">,</span> <span class="s">&#39;name&#39;</span><span class="p">:</span> <span class="s">&#39;stefan&#39;</span><span class="p">,</span> <span class="s">&#39;age&#39;</span><span class="p">:</span> <span class="mi">30</span><span class="p">,</span> <span class="s">&#39;gender&#39;</span><span class="p">:</span> <span class="s">&#39;male&#39;</span><span class="p">,</span> <span class="s">&#39;location&#39;</span><span class="p">:</span> <span class="s">&#39;south africa&#39;</span><span class="p">})</span><span class="o">.</span><span class="n">inserted_id</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">record_id</span> <span class="o">=</span> <span class="n">db</span> <span class="o">.</span><span class="n">insert_one</span><span class="p">({</span><span class="s">&#39;username&#39;</span><span class="p">:</span> <span class="s">&#39;alexa&#39;</span><span class="p">,</span> <span class="s">&#39;name&#39;</span><span class="p">:</span> <span class="s">&#39;alex&#39;</span><span class="p">,</span> <span class="s">&#39;age&#39;</span><span class="p">:</span> <span class="mi">34</span><span class="p">,</span> <span class="s">&#39;gender&#39;</span><span class="p">:</span> <span class="s">&#39;male&#39;</span><span class="p">,</span> <span class="s">&#39;location&#39;</span><span class="p">:</span> <span class="s">&#39;south africa&#39;</span><span class="p">})</span><span class="o">.</span><span class="n">inserted_id</span>
</span></code></pre></td></tr></table></div></figure>


<p>Find all the users, sorted by descending age, oldest to youngest:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">users</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">sort</span><span class="o">=</span><span class="p">[(</span><span class="s">&#39;age&#39;</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">)])</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">for</span> <span class="n">doc</span> <span class="ow">in</span> <span class="n">response</span><span class="p">:</span>
</span><span class='line'><span class="o">...</span>     <span class="k">print</span><span class="p">(</span><span class="n">doc</span><span class="p">)</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'><span class="p">{</span><span class="s">u&#39;username&#39;</span><span class="p">:</span> <span class="s">u&#39;alexa&#39;</span><span class="p">,</span> <span class="s">u&#39;name&#39;</span><span class="p">:</span> <span class="s">u&#39;alex&#39;</span><span class="p">,</span> <span class="s">u&#39;gender&#39;</span><span class="p">:</span> <span class="s">u&#39;male&#39;</span><span class="p">,</span> <span class="s">u&#39;age&#39;</span><span class="p">:</span> <span class="mi">34</span><span class="p">,</span> <span class="s">u&#39;_id&#39;</span><span class="p">:</span> <span class="s">u&#39;66b1cc3d40ee11e892980242ac110004&#39;</span><span class="p">,</span> <span class="s">u&#39;location&#39;</span><span class="p">:</span> <span class="s">u&#39;south africa&#39;</span><span class="p">}</span>
</span><span class='line'><span class="p">{</span><span class="s">u&#39;username&#39;</span><span class="p">:</span> <span class="s">u&#39;ruanb&#39;</span><span class="p">,</span> <span class="s">u&#39;name&#39;</span><span class="p">:</span> <span class="s">u&#39;ruan&#39;</span><span class="p">,</span> <span class="s">u&#39;gender&#39;</span><span class="p">:</span> <span class="s">u&#39;male&#39;</span><span class="p">,</span> <span class="s">u&#39;age&#39;</span><span class="p">:</span> <span class="mi">32</span><span class="p">,</span> <span class="s">u&#39;_id&#39;</span><span class="p">:</span> <span class="s">u&#39;8d2ce01140ec11e888110242ac110004&#39;</span><span class="p">,</span> <span class="s">u&#39;location&#39;</span><span class="p">:</span> <span class="s">u&#39;south africa&#39;</span><span class="p">}</span>
</span><span class='line'><span class="p">{</span><span class="s">u&#39;username&#39;</span><span class="p">:</span> <span class="s">u&#39;stefanb&#39;</span><span class="p">,</span> <span class="s">u&#39;name&#39;</span><span class="p">:</span> <span class="s">u&#39;stefan&#39;</span><span class="p">,</span> <span class="s">u&#39;gender&#39;</span><span class="p">:</span> <span class="s">u&#39;male&#39;</span><span class="p">,</span> <span class="s">u&#39;age&#39;</span><span class="p">:</span> <span class="mi">30</span><span class="p">,</span> <span class="s">u&#39;_id&#39;</span><span class="p">:</span> <span class="s">u&#39;fbe9da8540ed11e88c5e0242ac110004&#39;</span><span class="p">,</span> <span class="s">u&#39;location&#39;</span><span class="p">:</span> <span class="s">u&#39;south africa&#39;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Find the number of documents in the collection:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db</span><span class="o">.</span><span class="n">users</span><span class="o">.</span><span class="n">find</span><span class="p">()</span><span class="o">.</span><span class="n">count</span><span class="p">()</span>
</span><span class='line'><span class="mi">3</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Resources:</h2>

<ul>
<li><a href="https://github.com/schapman1974/tinymongo">TinyMongo</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Experimenting With Python and Flata the Lightweight Document Orientated Database]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/04/15/experimenting-with-python-and-flata-the-lightweight-document-orientated-database/"/>
    <updated>2018-04-15T15:09:25-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/04/15/experimenting-with-python-and-flata-the-lightweight-document-orientated-database</id>
    <content type="html"><![CDATA[<p><img src="https://i.snag.gy/l298Y7.jpg" alt="" /></p>

<p><a href="https://github.com/harryho/flata">Flata</a> is a lightweight document orientated database, which was inspired by <a href="https://github.com/msiemens/tinydb">TinyDB</a> and <a href="https://github.com/typicode/lowdb">LowDB</a>.</p>

<h2>Why Flata?</h2>

<p>Most of the times my mind gets in its curious states and I think about alternative ways on doing things, especially testing lightweight apps and today I wondered if theres any NoSQL-like software out there that is easy to spin up and is backed by a flat file, something like <code>sqlite</code> for SQL-like services, so this time just something for NoSQL-like.</p>

<p>So I stumbled upon TinyDB and Flata which is really easy to use and awesome!</p>

<h2>What will we be doing today:</h2>

<ul>
<li>Create Database / Table</li>
<li>Write to the Table</li>
<li>Update Documents from the Table</li>
<li>Scan the Table</li>
<li>Query the Table</li>
<li>Delete Documents from the Table</li>
<li>Purge the Table</li>
</ul>


<h2>Getting the Dependencies:</h2>

<p>Flata is written in Python, so no external dependencies is needed. To install it:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>pip install flata
</span></code></pre></td></tr></table></div></figure>


<h2>Usage Examples:</h2>

<p>My home working directory:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">pwd</span>
</span><span class='line'>/home/ruan
</span></code></pre></td></tr></table></div></figure>


<p>This will be the directory where we will save our database in <code>.json</code> format.</p>

<p>Import the Dependencies:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">from</span> <span class="nn">flata</span> <span class="kn">import</span> <span class="n">Flata</span><span class="p">,</span> <span class="n">Query</span><span class="p">,</span> <span class="n">where</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">from</span> <span class="nn">flata.storages</span> <span class="kn">import</span> <span class="n">JSONStorage</span>
</span></code></pre></td></tr></table></div></figure>


<p>Create the Database file where all the data will be persisted:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db_init</span> <span class="o">=</span> <span class="n">Flata</span><span class="p">(</span><span class="s">&#39;mydb.json&#39;</span><span class="p">,</span> <span class="n">storage</span><span class="o">=</span><span class="n">JSONStorage</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Create the collection / table, with a custom id field. If the resource already exists a retrieve will be done:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db_init</span><span class="o">.</span><span class="n">table</span><span class="p">(</span><span class="s">&#39;collection1&#39;</span><span class="p">,</span> <span class="n">id_field</span> <span class="o">=</span> <span class="s">&#39;uid&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>List the tables:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db_init</span><span class="o">.</span><span class="n">all</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span><span class="s">u&#39;collection1&#39;</span><span class="p">:</span> <span class="p">{}}</span>
</span></code></pre></td></tr></table></div></figure>


<p>a get method can only be done if the resource exists, and we will assign it to the <code>db</code> object:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db</span> <span class="o">=</span> <span class="n">db_init</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;collection1&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>Insert some data into our table:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db</span><span class="o">.</span><span class="n">insert</span><span class="p">({</span><span class="s">&#39;username&#39;</span><span class="p">:</span> <span class="s">&#39;ruanb&#39;</span><span class="p">,</span> <span class="s">&#39;name&#39;</span><span class="p">:</span> <span class="s">&#39;ruan&#39;</span><span class="p">,</span> <span class="s">&#39;age&#39;</span><span class="p">:</span> <span class="mi">31</span><span class="p">,</span> <span class="s">&#39;gender&#39;</span><span class="p">:</span> <span class="s">&#39;male&#39;</span><span class="p">,</span> <span class="s">&#39;location&#39;</span><span class="p">:</span> <span class="s">&#39;south africa&#39;</span><span class="p">})</span>
</span><span class='line'><span class="p">{</span><span class="s">&#39;username&#39;</span><span class="p">:</span> <span class="s">&#39;ruanb&#39;</span><span class="p">,</span> <span class="s">&#39;uid&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s">&#39;gender&#39;</span><span class="p">:</span> <span class="s">&#39;male&#39;</span><span class="p">,</span> <span class="s">&#39;age&#39;</span><span class="p">:</span> <span class="mi">31</span><span class="p">,</span> <span class="s">&#39;location&#39;</span><span class="p">:</span> <span class="s">&#39;south africa&#39;</span><span class="p">,</span> <span class="s">&#39;name&#39;</span><span class="p">:</span> <span class="s">&#39;ruan&#39;</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db</span><span class="o">.</span><span class="n">insert</span><span class="p">({</span><span class="s">&#39;username&#39;</span><span class="p">:</span> <span class="s">&#39;stefanb&#39;</span><span class="p">,</span> <span class="s">&#39;name&#39;</span><span class="p">:</span> <span class="s">&#39;stefan&#39;</span><span class="p">,</span> <span class="s">&#39;age&#39;</span><span class="p">:</span> <span class="mi">30</span><span class="p">,</span> <span class="s">&#39;gender&#39;</span><span class="p">:</span> <span class="s">&#39;male&#39;</span><span class="p">,</span> <span class="s">&#39;location&#39;</span><span class="p">:</span> <span class="s">&#39;south africa&#39;</span><span class="p">})</span>
</span><span class='line'><span class="p">{</span><span class="s">&#39;username&#39;</span><span class="p">:</span> <span class="s">&#39;stefanb&#39;</span><span class="p">,</span> <span class="s">&#39;uid&#39;</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="s">&#39;gender&#39;</span><span class="p">:</span> <span class="s">&#39;male&#39;</span><span class="p">,</span> <span class="s">&#39;age&#39;</span><span class="p">:</span> <span class="mi">30</span><span class="p">,</span> <span class="s">&#39;location&#39;</span><span class="p">:</span> <span class="s">&#39;south africa&#39;</span><span class="p">,</span> <span class="s">&#39;name&#39;</span><span class="p">:</span> <span class="s">&#39;stefan&#39;</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db</span><span class="o">.</span><span class="n">insert</span><span class="p">({</span><span class="s">&#39;username&#39;</span><span class="p">:</span> <span class="s">&#39;mikec&#39;</span><span class="p">,</span> <span class="s">&#39;name&#39;</span><span class="p">:</span> <span class="s">&#39;mike&#39;</span><span class="p">,</span> <span class="s">&#39;age&#39;</span><span class="p">:</span> <span class="mi">28</span><span class="p">,</span> <span class="s">&#39;gender&#39;</span><span class="p">:</span> <span class="s">&#39;male&#39;</span><span class="p">,</span> <span class="s">&#39;location&#39;</span><span class="p">:</span> <span class="s">&#39;south africa&#39;</span><span class="p">})</span>
</span><span class='line'><span class="p">{</span><span class="s">&#39;username&#39;</span><span class="p">:</span> <span class="s">&#39;mikec&#39;</span><span class="p">,</span> <span class="s">&#39;uid&#39;</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span> <span class="s">&#39;gender&#39;</span><span class="p">:</span> <span class="s">&#39;male&#39;</span><span class="p">,</span> <span class="s">&#39;age&#39;</span><span class="p">:</span> <span class="mi">28</span><span class="p">,</span> <span class="s">&#39;location&#39;</span><span class="p">:</span> <span class="s">&#39;south africa&#39;</span><span class="p">,</span> <span class="s">&#39;name&#39;</span><span class="p">:</span> <span class="s">&#39;mike&#39;</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db</span><span class="o">.</span><span class="n">insert</span><span class="p">({</span><span class="s">&#39;username&#39;</span><span class="p">:</span> <span class="s">&#39;sam&#39;</span><span class="p">,</span> <span class="s">&#39;name&#39;</span><span class="p">:</span> <span class="s">&#39;samantha&#39;</span><span class="p">,</span> <span class="s">&#39;age&#39;</span><span class="p">:</span> <span class="mi">24</span><span class="p">,</span> <span class="s">&#39;gender&#39;</span><span class="p">:</span> <span class="s">&#39;female&#39;</span><span class="p">,</span> <span class="s">&#39;location&#39;</span><span class="p">:</span> <span class="s">&#39;south africa&#39;</span><span class="p">})</span>
</span><span class='line'><span class="p">{</span><span class="s">&#39;username&#39;</span><span class="p">:</span> <span class="s">&#39;sam&#39;</span><span class="p">,</span> <span class="s">&#39;uid&#39;</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span> <span class="s">&#39;gender&#39;</span><span class="p">:</span> <span class="s">&#39;female&#39;</span><span class="p">,</span> <span class="s">&#39;age&#39;</span><span class="p">:</span> <span class="mi">24</span><span class="p">,</span> <span class="s">&#39;location&#39;</span><span class="p">:</span> <span class="s">&#39;south africa&#39;</span><span class="p">,</span> <span class="s">&#39;name&#39;</span><span class="p">:</span> <span class="s">&#39;samantha&#39;</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db</span><span class="o">.</span><span class="n">insert</span><span class="p">({</span><span class="s">&#39;username&#39;</span><span class="p">:</span> <span class="s">&#39;michellek&#39;</span><span class="p">,</span> <span class="s">&#39;name&#39;</span><span class="p">:</span> <span class="s">&#39;michelle&#39;</span><span class="p">,</span> <span class="s">&#39;age&#39;</span><span class="p">:</span> <span class="mi">32</span><span class="p">,</span> <span class="s">&#39;gender&#39;</span><span class="p">:</span> <span class="s">&#39;female&#39;</span><span class="p">,</span> <span class="s">&#39;location&#39;</span><span class="p">:</span> <span class="s">&#39;south africa&#39;</span><span class="p">})</span>
</span><span class='line'><span class="p">{</span><span class="s">&#39;username&#39;</span><span class="p">:</span> <span class="s">&#39;michellek&#39;</span><span class="p">,</span> <span class="s">&#39;uid&#39;</span><span class="p">:</span> <span class="mi">5</span><span class="p">,</span> <span class="s">&#39;gender&#39;</span><span class="p">:</span> <span class="s">&#39;female&#39;</span><span class="p">,</span> <span class="s">&#39;age&#39;</span><span class="p">:</span> <span class="mi">32</span><span class="p">,</span> <span class="s">&#39;location&#39;</span><span class="p">:</span> <span class="s">&#39;south africa&#39;</span><span class="p">,</span> <span class="s">&#39;name&#39;</span><span class="p">:</span> <span class="s">&#39;michelle&#39;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Scan the whole table:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db</span><span class="o">.</span><span class="n">all</span><span class="p">()</span>
</span><span class='line'><span class="p">[{</span><span class="s">u&#39;username&#39;</span><span class="p">:</span> <span class="s">u&#39;ruanb&#39;</span><span class="p">,</span> <span class="s">u&#39;uid&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s">u&#39;name&#39;</span><span class="p">:</span> <span class="s">u&#39;ruan&#39;</span><span class="p">,</span> <span class="s">u&#39;gender&#39;</span><span class="p">:</span> <span class="s">u&#39;male&#39;</span><span class="p">,</span> <span class="s">u&#39;age&#39;</span><span class="p">:</span> <span class="mi">31</span><span class="p">,</span> <span class="s">u&#39;location&#39;</span><span class="p">:</span> <span class="s">u&#39;south africa&#39;</span><span class="p">},</span> <span class="p">{</span><span class="s">u&#39;username&#39;</span><span class="p">:</span> <span class="s">u&#39;stefanb&#39;</span><span class="p">,</span> <span class="s">u&#39;uid&#39;</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="s">u&#39;name&#39;</span><span class="p">:</span> <span class="s">u&#39;stefan&#39;</span><span class="p">,</span> <span class="s">u&#39;gender&#39;</span><span class="p">:</span> <span class="s">u&#39;male&#39;</span><span class="p">,</span> <span class="s">u&#39;age&#39;</span><span class="p">:</span> <span class="mi">30</span><span class="p">,</span> <span class="s">u&#39;location&#39;</span><span class="p">:</span> <span class="s">u&#39;south africa&#39;</span><span class="p">},</span> <span class="p">{</span><span class="s">u&#39;username&#39;</span><span class="p">:</span> <span class="s">u&#39;mikec&#39;</span><span class="p">,</span> <span class="s">u&#39;uid&#39;</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span> <span class="s">u&#39;name&#39;</span><span class="p">:</span> <span class="s">u&#39;mike&#39;</span><span class="p">,</span> <span class="s">u&#39;gender&#39;</span><span class="p">:</span> <span class="s">u&#39;male&#39;</span><span class="p">,</span> <span class="s">u&#39;age&#39;</span><span class="p">:</span> <span class="mi">28</span><span class="p">,</span> <span class="s">u&#39;location&#39;</span><span class="p">:</span> <span class="s">u&#39;south africa&#39;</span><span class="p">},</span> <span class="p">{</span><span class="s">u&#39;username&#39;</span><span class="p">:</span> <span class="s">u&#39;sam&#39;</span><span class="p">,</span> <span class="s">u&#39;uid&#39;</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span> <span class="s">u&#39;name&#39;</span><span class="p">:</span> <span class="s">u&#39;samantha&#39;</span><span class="p">,</span> <span class="s">u&#39;gender&#39;</span><span class="p">:</span> <span class="s">u&#39;female&#39;</span><span class="p">,</span> <span class="s">u&#39;age&#39;</span><span class="p">:</span> <span class="mi">24</span><span class="p">,</span> <span class="s">u&#39;location&#39;</span><span class="p">:</span> <span class="s">u&#39;south africa&#39;</span><span class="p">},</span> <span class="p">{</span><span class="s">u&#39;username&#39;</span><span class="p">:</span> <span class="s">u&#39;michellek&#39;</span><span class="p">,</span> <span class="s">u&#39;uid&#39;</span><span class="p">:</span> <span class="mi">5</span><span class="p">,</span> <span class="s">u&#39;name&#39;</span><span class="p">:</span> <span class="s">u&#39;michelle&#39;</span><span class="p">,</span> <span class="s">u&#39;gender&#39;</span><span class="p">:</span> <span class="s">u&#39;female&#39;</span><span class="p">,</span> <span class="s">u&#39;age&#39;</span><span class="p">:</span> <span class="mi">32</span><span class="p">,</span> <span class="s">u&#39;location&#39;</span><span class="p">:</span> <span class="s">u&#39;south africa&#39;</span><span class="p">}]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Query data from the table.</p>

<p>Query the table for the <code>username =&gt; ruanb</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">json</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">q</span> <span class="o">=</span> <span class="n">Query</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="n">q</span><span class="o">.</span><span class="n">username</span> <span class="o">==</span> <span class="s">&#39;ruanb&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">response</span><span class="p">,</span> <span class="n">indent</span><span class="o">=</span><span class="mi">2</span><span class="p">))</span>
</span><span class='line'><span class="p">[</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="s">u&#39;username&#39;</span><span class="p">:</span> <span class="s">u&#39;ruanb&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">u&#39;uid&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>    <span class="s">u&#39;name&#39;</span><span class="p">:</span> <span class="s">u&#39;ruan&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">u&#39;gender&#39;</span><span class="p">:</span> <span class="s">u&#39;male&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">u&#39;age&#39;</span><span class="p">:</span> <span class="mi">31</span><span class="p">,</span>
</span><span class='line'>    <span class="s">u&#39;location&#39;</span><span class="p">:</span> <span class="s">u&#39;south africa&#39;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Query the table for everyone that is older than <code>29</code> and only <code>male</code> genders:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db</span><span class="o">.</span><span class="n">search</span><span class="p">((</span> <span class="n">q</span><span class="o">.</span><span class="n">gender</span> <span class="o">==</span> <span class="s">&#39;male&#39;</span> <span class="p">)</span> <span class="o">&amp;</span> <span class="p">(</span><span class="n">q</span><span class="o">.</span><span class="n">age</span> <span class="o">&gt;=</span> <span class="mi">29</span> <span class="p">))</span>
</span><span class='line'><span class="p">[</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="s">u&#39;username&#39;</span><span class="p">:</span> <span class="s">u&#39;ruanb&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">u&#39;uid&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>    <span class="s">u&#39;name&#39;</span><span class="p">:</span> <span class="s">u&#39;ruan&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">u&#39;gender&#39;</span><span class="p">:</span> <span class="s">u&#39;male&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">u&#39;age&#39;</span><span class="p">:</span> <span class="mi">31</span><span class="p">,</span>
</span><span class='line'>    <span class="s">u&#39;location&#39;</span><span class="p">:</span> <span class="s">u&#39;south africa&#39;</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="s">u&#39;username&#39;</span><span class="p">:</span> <span class="s">u&#39;stefanb&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">u&#39;uid&#39;</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
</span><span class='line'>    <span class="s">u&#39;name&#39;</span><span class="p">:</span> <span class="s">u&#39;stefan&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">u&#39;gender&#39;</span><span class="p">:</span> <span class="s">u&#39;male&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">u&#39;age&#39;</span><span class="p">:</span> <span class="mi">30</span><span class="p">,</span>
</span><span class='line'>    <span class="s">u&#39;location&#39;</span><span class="p">:</span> <span class="s">u&#39;south africa&#39;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Query the table for everyone that is younger than 25 or males:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db</span><span class="o">.</span><span class="n">search</span><span class="p">((</span> <span class="n">q</span><span class="o">.</span><span class="n">age</span> <span class="o">&lt;</span> <span class="mi">25</span> <span class="p">)</span> <span class="o">|</span> <span class="p">(</span><span class="n">q</span><span class="o">.</span><span class="n">gender</span> <span class="o">==</span> <span class="s">&#39;male&#39;</span> <span class="p">)</span> <span class="p">)</span>
</span><span class='line'><span class="p">[</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;username&quot;</span><span class="p">:</span> <span class="s">&quot;ruanb&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;uid&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;name&quot;</span><span class="p">:</span> <span class="s">&quot;ruan&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;gender&quot;</span><span class="p">:</span> <span class="s">&quot;male&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;age&quot;</span><span class="p">:</span> <span class="mi">31</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;location&quot;</span><span class="p">:</span> <span class="s">&quot;south africa&quot;</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;username&quot;</span><span class="p">:</span> <span class="s">&quot;stefanb&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;uid&quot;</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;name&quot;</span><span class="p">:</span> <span class="s">&quot;stefan&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;gender&quot;</span><span class="p">:</span> <span class="s">&quot;male&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;age&quot;</span><span class="p">:</span> <span class="mi">30</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;location&quot;</span><span class="p">:</span> <span class="s">&quot;south africa&quot;</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;username&quot;</span><span class="p">:</span> <span class="s">&quot;mikec&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;uid&quot;</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;name&quot;</span><span class="p">:</span> <span class="s">&quot;mike&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;gender&quot;</span><span class="p">:</span> <span class="s">&quot;male&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;age&quot;</span><span class="p">:</span> <span class="mi">28</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;location&quot;</span><span class="p">:</span> <span class="s">&quot;south africa&quot;</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;username&quot;</span><span class="p">:</span> <span class="s">&quot;sam&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;uid&quot;</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;name&quot;</span><span class="p">:</span> <span class="s">&quot;samantha&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;gender&quot;</span><span class="p">:</span> <span class="s">&quot;female&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;age&quot;</span><span class="p">:</span> <span class="mi">24</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;location&quot;</span><span class="p">:</span> <span class="s">&quot;south africa&quot;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Update the location value: Lets say Samantha relocated to New Zealand, and we need to update her location from <code>South Africa</code> to <code>New Zealand</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db</span><span class="o">.</span><span class="n">update</span><span class="p">({</span><span class="s">&#39;location&#39;</span><span class="p">:</span> <span class="s">&#39;new zealand&#39;</span><span class="p">},</span> <span class="n">where</span><span class="p">(</span><span class="s">&#39;username&#39;</span><span class="p">)</span> <span class="o">==</span> <span class="s">&#39;sam&#39;</span> <span class="p">)</span>
</span><span class='line'><span class="p">([</span><span class="mi">4</span><span class="p">],</span> <span class="p">[{</span><span class="s">u&#39;username&#39;</span><span class="p">:</span> <span class="s">u&#39;sam&#39;</span><span class="p">,</span> <span class="s">u&#39;uid&#39;</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span> <span class="s">u&#39;name&#39;</span><span class="p">:</span> <span class="s">u&#39;samantha&#39;</span><span class="p">,</span> <span class="s">u&#39;gender&#39;</span><span class="p">:</span> <span class="s">u&#39;female&#39;</span><span class="p">,</span> <span class="s">u&#39;age&#39;</span><span class="p">:</span> <span class="mi">24</span><span class="p">,</span> <span class="s">u&#39;location&#39;</span><span class="p">:</span> <span class="s">&#39;new zealand&#39;</span><span class="p">}])</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="n">q</span><span class="o">.</span><span class="n">username</span> <span class="o">==</span> <span class="s">&#39;sam&#39;</span><span class="p">)</span>
</span><span class='line'><span class="p">[{</span><span class="s">u&#39;username&#39;</span><span class="p">:</span> <span class="s">u&#39;sam&#39;</span><span class="p">,</span> <span class="s">u&#39;uid&#39;</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span> <span class="s">u&#39;name&#39;</span><span class="p">:</span> <span class="s">u&#39;samantha&#39;</span><span class="p">,</span> <span class="s">u&#39;gender&#39;</span><span class="p">:</span> <span class="s">u&#39;female&#39;</span><span class="p">,</span> <span class="s">u&#39;age&#39;</span><span class="p">:</span> <span class="mi">24</span><span class="p">,</span> <span class="s">u&#39;location&#39;</span><span class="p">:</span> <span class="s">u&#39;new zealand&#39;</span><span class="p">}]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Delete a document by its id:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="n">ids</span><span class="o">=</span><span class="p">[</span><span class="mi">4</span><span class="p">])</span>
</span><span class='line'><span class="p">([</span><span class="mi">4</span><span class="p">],</span> <span class="p">[])</span>
</span></code></pre></td></tr></table></div></figure>


<p>Delete all documents matching a query, for this example, all people with the gender: <code>male</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="n">q</span><span class="o">.</span><span class="n">gender</span> <span class="o">==</span> <span class="s">&#39;male&#39;</span><span class="p">)</span>
</span><span class='line'><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span> <span class="p">[])</span>
</span></code></pre></td></tr></table></div></figure>


<p>Delete all the data in the table:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db</span><span class="o">.</span><span class="n">purge</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>When we exit, you will find the database file, which we created:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ls
</span><span class='line'>mydb.json
</span></code></pre></td></tr></table></div></figure>


<h2>Resources:</h2>

<ul>
<li><a href="https://github.com/harryho/flata">Flata</a></li>
<li><a href="https://github.com/msiemens/tinydb">TinyDB</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Set Docker Environment Variables During Build Time]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/04/07/set-docker-environment-variables-during-build-time/"/>
    <updated>2018-04-07T09:51:35-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/04/07/set-docker-environment-variables-during-build-time</id>
    <content type="html"><![CDATA[<p>When using that <code>ARG</code> option in your Dockerfile, you can specify the <code>--build-args</code> option to define the value for the key that you specify in your Dockerfile to use for a environment variable as an example.</p>

<p>Today we will use the <code>arg</code> and <code>env</code> to set environment variables at build time.</p>

<h2>The Dockerfile:</h2>

<p>Our Dockerfile</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='dockerfile'><span class='line'><span class="k">FROM</span> alpine:edge
</span><span class='line'>ARG NAME
</span><span class='line'><span class="k">ENV</span> <span class="nv">OWNER</span><span class="o">=</span><span class="k">${</span><span class="nv">NAME</span><span class="k">:-</span><span class="nv">NOT_DEFINED</span><span class="k">}</span>
</span><span class='line'><span class="k">CMD</span> <span class="o">[</span><span class="s2">&quot;sh&quot;</span>, <span class="s2">&quot;-c&quot;</span>, <span class="s2">&quot;echo env var: ${OWNER}&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Building our Image, we will pass the value to our NAME argument:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker build --build-arg <span class="nv">NAME</span><span class="o">=</span>james -t ruan:test .
</span></code></pre></td></tr></table></div></figure>


<p>Now when we run our container, we will notice that the build time argument has passed through to our environment variable from the running container:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker run -it ruan:test
</span><span class='line'>env var: james
</span></code></pre></td></tr></table></div></figure>


<p>When we build the image without specifying build arguments, and running the container:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker build -t ruan:test .
</span><span class='line'><span class="nv">$ </span>docker run -it ruan:test
</span><span class='line'>env var: NOT_DEFINED
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Docker Environment Substitution With Dockerfile]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/04/07/docker-environment-substitution-with-dockerfile/"/>
    <updated>2018-04-07T09:18:20-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/04/07/docker-environment-substitution-with-dockerfile</id>
    <content type="html"><![CDATA[<p>The <a href="https://12factor.net/">12 Factor</a> way, is a general guideline that provides best practices when building applications. One of them is using environment variables to store application configuration.</p>

<h2>What will we be doing:</h2>

<p>In this post we will build a simple docker application that returns the environment variable&rsquo;s value to standard out. We are using environment substitution, so if the environment variable is not provided, we will set a default value of <code>NOT_DEFINED</code>.</p>

<p>We will have the environment variable <code>OWNER</code> and when no value is set for that Environment Variable, the <code>NOT_DEFINED</code> value will be returned.</p>

<h2>The Dockerfile</h2>

<p>Our Dockerfile:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='dockerfile'><span class='line'><span class="k">FROM</span> alpine:edge
</span><span class='line'><span class="k">ENV</span> <span class="nv">OWNER</span><span class="o">=</span><span class="k">${</span><span class="nv">OWNER</span><span class="k">:-</span><span class="nv">NOT_DEFINED</span><span class="k">}</span>
</span><span class='line'><span class="k">CMD</span> <span class="o">[</span><span class="s2">&quot;sh&quot;</span>, <span class="s2">&quot;-c&quot;</span>, <span class="s2">&quot;echo env var: ${OWNER}&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Building the image:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker build -t <span class="nb">test</span>:envs .
</span></code></pre></td></tr></table></div></figure>


<h2>Putting it to action:</h2>

<p>Now we will run a container and pass the <code>OWNER</code> environment variable as an option:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker run -it -e <span class="nv">OWNER</span><span class="o">=</span>ruan <span class="nb">test</span>:envs .
</span><span class='line'>env var: ruan
</span></code></pre></td></tr></table></div></figure>


<p>When we run a container without specifying the environment variable:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker run -it ruan:test
</span><span class='line'>env var: NOT_DEFINED
</span></code></pre></td></tr></table></div></figure>


<h2>Resources:</h2>

<ul>
<li><a href="https://stackify.com/config-values-docker-containers-environment-variables/">https://stackify.com/config-values-docker-containers-environment-variables/</a></li>
<li><a href="https://tryolabs.com/blog/2015/03/26/configurable-docker-containers-for-multiple-environments/">https://tryolabs.com/blog/2015/03/26/configurable-docker-containers-for-multiple-environments/</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using AWS SSM Parameter Store to Retrieve Secrets Encrypted by KMS Using Python]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/04/04/using-aws-ssm-parameter-store-to-retrieve-secrets-encrypted-by-kms-using-python/"/>
    <updated>2018-04-04T16:47:16-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/04/04/using-aws-ssm-parameter-store-to-retrieve-secrets-encrypted-by-kms-using-python</id>
    <content type="html"><![CDATA[<p><img src="https://i.snag.gy/4ytE3W.jpg" alt="" /></p>

<p>Today we will use Amazon Web Services SSM Service to store secrets in their Parameter Store which we will encyrpt using KMS.</p>

<p>Then we will read the data from SSM and decrypt using our KMS key. We will then end it off by writing a Python Script that reads the AWS credentials, authenticates with SSM and then read the secret values that we stored.</p>

<h2>The Do List:</h2>

<p>We will break up this post in the following topics:</p>

<ul>
<li>Create a KMS Key which will use to Encrypt/Decrypt the Parameter in SSM</li>
<li>Create the IAM Policy which will be used to authorize the Encrypt/Decrypt by the KMS ID</li>
<li>Create the KMS Alias</li>
<li>Create the Parameter using PutParameter as a SecureString to use Encryption with KMS</li>
<li>Describe the Parameters</li>
<li>Read the Parameter with and without Decryption to determine the difference using GetParameter</li>
<li>Read the Parameters using GetParameters</li>
<li>Environment Variable Example</li>
</ul>


<h2>Create the KMS Key:</h2>

<p>As the administrator, or root account, create the KMS Key:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">boto3</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">session</span> <span class="o">=</span> <span class="n">boto3</span><span class="o">.</span><span class="n">Session</span><span class="p">(</span><span class="n">region_name</span><span class="o">=</span><span class="s">&#39;eu-west-1&#39;</span><span class="p">,</span> <span class="n">profile_name</span><span class="o">=</span><span class="s">&#39;personal&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">iam</span> <span class="o">=</span> <span class="n">session</span><span class="o">.</span><span class="n">client</span><span class="p">(</span><span class="s">&#39;iam&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">kms</span> <span class="o">=</span> <span class="n">session</span><span class="o">.</span><span class="n">client</span><span class="p">(</span><span class="s">&#39;kms&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="n">kms</span><span class="o">.</span><span class="n">create_key</span><span class="p">(</span>
</span><span class='line'>    <span class="n">Description</span><span class="o">=</span><span class="s">&#39;Ruan Test Key&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">KeyUsage</span><span class="o">=</span><span class="s">&#39;ENCRYPT_DECRYPT&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">Origin</span><span class="o">=</span><span class="s">&#39;AWS_KMS&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">BypassPolicyLockoutSafetyCheck</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span>
</span><span class='line'>    <span class="n">Tags</span><span class="o">=</span><span class="p">[{</span><span class="s">&#39;TagKey&#39;</span><span class="p">:</span> <span class="s">&#39;Name&#39;</span><span class="p">,</span> <span class="s">&#39;TagValue&#39;</span><span class="p">:</span> <span class="s">&#39;RuanTestKey&#39;</span><span class="p">}]</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">response</span><span class="p">[</span><span class="s">&#39;KeyMetadata&#39;</span><span class="p">][</span><span class="s">&#39;KeyId&#39;</span><span class="p">])</span>
</span><span class='line'><span class="n">foobar</span><span class="o">-</span><span class="mi">2162</span><span class="o">-</span><span class="mi">4363</span><span class="o">-</span><span class="n">ba02</span><span class="o">-</span><span class="n">a953729e5ce6</span>
</span></code></pre></td></tr></table></div></figure>


<p>Create the IAM Policy:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="n">iam</span><span class="o">.</span><span class="n">create_policy</span><span class="p">(</span>
</span><span class='line'>    <span class="n">PolicyName</span><span class="o">=</span><span class="s">&#39;ruan-kms-test-policy&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">PolicyDocument</span><span class="o">=</span><span class="s">&#39;{</span>
</span><span class='line'>        <span class="s">&quot;Version&quot;</span><span class="p">:</span> <span class="s">&quot;2012-10-17&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;Statement&quot;</span><span class="p">:</span> <span class="p">[{</span>
</span><span class='line'>            <span class="s">&quot;Sid&quot;</span><span class="p">:</span> <span class="s">&quot;Stmt1517212478199&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&quot;Action&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>                <span class="s">&quot;kms:Decrypt&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="s">&quot;kms:Encrypt&quot;</span>
</span><span class='line'>            <span class="p">],</span>
</span><span class='line'>            <span class="s">&quot;Effect&quot;</span><span class="p">:</span> <span class="s">&quot;Allow&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&quot;Resource&quot;</span><span class="p">:</span> <span class="s">&quot;arn:aws:kms:eu-west-1:0123456789012:key/foobar-2162-4363-ba02-a953729e5ce6&quot;</span>
</span><span class='line'>        <span class="p">}]</span>
</span><span class='line'>    <span class="p">}</span><span class="s">&#39;, </span>
</span><span class='line'>    <span class="n">Description</span><span class="o">=</span><span class="s">&#39;Ruan KMS Test Policy&#39;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">response</span><span class="p">[</span><span class="s">&#39;Policy&#39;</span><span class="p">][</span><span class="s">&#39;Arn&#39;</span><span class="p">])</span>
</span><span class='line'><span class="n">arn</span><span class="p">:</span><span class="n">aws</span><span class="p">:</span><span class="n">iam</span><span class="p">::</span><span class="mo">01234567</span><span class="mi">89012</span><span class="p">:</span><span class="n">policy</span><span class="o">/</span><span class="n">ruan</span><span class="o">-</span><span class="n">kms</span><span class="o">-</span><span class="n">test</span><span class="o">-</span><span class="n">policy</span>
</span></code></pre></td></tr></table></div></figure>


<p>Create the KMS Alias:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="n">kms</span><span class="o">.</span><span class="n">create_alias</span><span class="p">(</span><span class="n">AliasName</span><span class="o">=</span><span class="s">&#39;alias/ruan-test-kms&#39;</span><span class="p">,</span> <span class="n">TargetKeyId</span><span class="o">=</span><span class="s">&#39;foobar-2162-4363-ba02-a953729e5ce6&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Publish the Secrets to SSM:</h2>

<p>As the administrator, write the secret values to the parameter store in SSM. We will publish a secret with the Parameter: <code>/test/ruan/mysql/db01/mysql_hostname</code> and the Value: <code>db01.eu-west-1.mycompany.com</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">from</span> <span class="nn">getpass</span> <span class="kn">import</span> <span class="n">getpass</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">secretvalue</span> <span class="o">=</span> <span class="n">getpass</span><span class="p">()</span>
</span><span class='line'><span class="n">Password</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">secretvalue</span><span class="p">)</span>
</span><span class='line'><span class="n">db01</span><span class="o">.</span><span class="n">eu</span><span class="o">-</span><span class="n">west</span><span class="o">-</span><span class="mf">1.</span><span class="n">mycompany</span><span class="o">.</span><span class="n">com</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="n">ssm</span><span class="o">.</span><span class="n">put_parameter</span><span class="p">(</span>
</span><span class='line'>    <span class="n">Name</span><span class="o">=</span><span class="s">&#39;/test/ruan/mysql/db01/mysql_hostname&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">Description</span><span class="o">=</span><span class="s">&#39;RuanTest MySQL Hostname&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">Value</span><span class="o">=</span><span class="n">secretvalue</span><span class="p">,</span>
</span><span class='line'>    <span class="n">Type</span><span class="o">=</span><span class="s">&#39;SecureString&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">KeyId</span><span class="o">=</span><span class="s">&#39;foobar-2162-4363-ba02-a953729e5ce6&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">Overwrite</span><span class="o">=</span><span class="bp">False</span>
</span><span class='line'><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Describe Parameters</h2>

<p>Describe the Parameter that we written to SSM:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="n">ssm</span><span class="o">.</span><span class="n">describe_parameters</span><span class="p">(</span>
</span><span class='line'>    <span class="n">Filters</span><span class="o">=</span><span class="p">[{</span><span class="s">&#39;Key&#39;</span><span class="p">:</span> <span class="s">&#39;Name&#39;</span><span class="p">,</span> <span class="s">&#39;Values&#39;</span><span class="p">:</span> <span class="p">[</span><span class="s">&#39;/test/ruan/mysql/db01/mysql_hostname&#39;</span><span class="p">]}]</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">response</span><span class="p">[</span><span class="s">&#39;ResponseMetadata&#39;</span><span class="p">][</span><span class="s">&#39;Parameters&#39;</span><span class="p">][</span><span class="mi">0</span><span class="p">][</span><span class="s">&#39;Name&#39;</span><span class="p">])</span>
</span><span class='line'><span class="s">&#39;/test/ruan/mysql/db01/mysql_hostname&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Reading from SSM:</h2>

<p>Read the Parameter value from SSM without using decryption via KMS:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="n">ssm</span><span class="o">.</span><span class="n">get_parameter</span><span class="p">(</span><span class="n">Name</span><span class="o">=</span><span class="s">&#39;/test/ruan/mysql/db01/mysql_hostname&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">response</span><span class="p">[</span><span class="s">&#39;Parameter&#39;</span><span class="p">][</span><span class="s">&#39;Value&#39;</span><span class="p">])</span>
</span><span class='line'><span class="n">AQICAHh7jazUUBgNxMQbYFeve2</span><span class="o">/</span><span class="n">p</span><span class="o">+</span><span class="n">UWTuyAd5F3ZJkZkf9</span><span class="o">+</span><span class="n">hwgF</span><span class="o">+</span><span class="n">H</span><span class="o">+</span><span class="n">kSABfPCTEarjXqYBaJAAAAejB4BgkqhkiG9w0BBwagazBpAgEAMGQGCSqGSIb3DQEHATAeBglghkgBZQMEAS4wEQQMJUEuT8wDGCQ3zRBmAgEQgDc8LhLgFe</span><span class="o">+</span><span class="n">Rutgi0hOKnjTEVQa2lKTy3MmTDZEeLy3Tlr5VUl6AVJNBpd4IWJTbj5YuqrrAAWWJ</span>
</span></code></pre></td></tr></table></div></figure>


<p>As you can see the value is encrypted, this time read the parameter value with specifying decryption via KMS:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="n">ssm</span><span class="o">.</span><span class="n">get_parameter</span><span class="p">(</span><span class="n">Name</span><span class="o">=</span><span class="s">&#39;/test/ruan/mysql/db01/mysql_hostname&#39;</span><span class="p">,</span> <span class="n">WithDecryption</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">response</span><span class="p">[</span><span class="s">&#39;Parameter&#39;</span><span class="p">][</span><span class="s">&#39;Value&#39;</span><span class="p">])</span>
</span><span class='line'><span class="n">db01</span><span class="o">.</span><span class="n">eu</span><span class="o">-</span><span class="n">west</span><span class="o">-</span><span class="mf">1.</span><span class="n">mycompany</span><span class="o">.</span><span class="n">com</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Grant Permissions to Instance Profile:</h2>

<p>Now we will create a policy that can only decrypt and read values from SSM that matches the path: <code>/test/ruan/mysql/db01/mysql_*</code>. This policy will be associated to a instance profile role, which will be used by EC2, where our application will read the values from.</p>

<p>Our policy will look like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="nt">&quot;Version&quot;</span><span class="p">:</span> <span class="s2">&quot;2012-10-17&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;Statement&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Sid&quot;</span><span class="p">:</span> <span class="s2">&quot;Stmt1517398919242&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Action&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>        <span class="s2">&quot;kms:Decrypt&quot;</span>
</span><span class='line'>      <span class="p">],</span>
</span><span class='line'>      <span class="nt">&quot;Effect&quot;</span><span class="p">:</span> <span class="s2">&quot;Allow&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Resource&quot;</span><span class="p">:</span> <span class="s2">&quot;arn:aws:kms:eu-west-1:0123456789012:key/foobar-2162-4363-ba02-a953729e5ce6&quot;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Sid&quot;</span><span class="p">:</span> <span class="s2">&quot;Stmt1517399021096&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Action&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>        <span class="s2">&quot;ssm:GetParameter&quot;</span>
</span><span class='line'>      <span class="p">],</span>
</span><span class='line'>      <span class="nt">&quot;Effect&quot;</span><span class="p">:</span> <span class="s2">&quot;Allow&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Resource&quot;</span><span class="p">:</span> <span class="s2">&quot;arn:aws:ssm:eu-west-1:0123456789012:parameter/test/ruan/mysql/db01/mysql_*&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Create the Policy:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">pol</span> <span class="o">=</span> <span class="s">&#39;{&quot;Version&quot;: &quot;2012-10-17&quot;,&quot;Statement&quot;: [{&quot;Sid&quot;: &quot;Stmt1517398919242&quot;,&quot;Action&quot;: [&quot;kms:Decrypt&quot;],&quot;Effect&quot;: &quot;Allow&quot;,&quot;Resource&quot;: &quot;arn:aws:kms:eu-west-1:0123456789012:key/foobar-2162-4363-ba02-a953729e5ce6&quot;},{&quot;Sid&quot;: &quot;Stmt1517399021096&quot;,&quot;Action&quot;: [&quot;ssm:GetParameter&quot;],&quot;Effect&quot;: &quot;Allow&quot;,&quot;Resource&quot;: &quot;arn:aws:ssm:eu-west-1:0123456789012:parameter/test/ruan/mysql/db01/mysql_*&quot;}]}&#39;</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="n">iam</span><span class="o">.</span><span class="n">create_policy</span><span class="p">(</span><span class="n">PolicyName</span><span class="o">=</span><span class="s">&#39;RuanGetSSM-Policy&#39;</span><span class="p">,</span> <span class="n">PolicyDocument</span><span class="o">=</span><span class="n">pol</span><span class="p">,</span> <span class="n">Description</span><span class="o">=</span><span class="s">&#39;Test Policy to Get SSM Parameters&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Create the instance profile:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="n">iam</span><span class="o">.</span><span class="n">create_instance_profile</span><span class="p">(</span><span class="n">InstanceProfileName</span><span class="o">=</span><span class="s">&#39;RuanTestSSMInstanceProfile&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Create the Role:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="n">iam</span><span class="o">.</span><span class="n">create_role</span><span class="p">(</span><span class="n">RoleName</span><span class="o">=</span><span class="s">&#39;RuanTestGetSSM-Role&#39;</span><span class="p">,</span> <span class="n">AssumeRolePolicyDocument</span><span class="o">=</span><span class="s">&#39;{&quot;Version&quot;: &quot;2012-10-17&quot;,&quot;Statement&quot;: [{&quot;Sid&quot;: &quot;&quot;,&quot;Effect&quot;: &quot;Allow&quot;,&quot;Principal&quot;: {&quot;Service&quot;: &quot;ec2.amazonaws.com&quot;},&quot;Action&quot;: &quot;sts:AssumeRole&quot;}]}&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Associate the Role and Instance Profile:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="n">iam</span><span class="o">.</span><span class="n">add_role_to_instance_profile</span><span class="p">(</span><span class="n">InstanceProfileName</span><span class="o">=</span><span class="s">&#39;RuanTestSSMInstanceProfile&#39;</span><span class="p">,</span> <span class="n">RoleName</span><span class="o">=</span><span class="s">&#39;RuanTestGetSSM-Role&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Attach the Policy to the Role:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="n">iam</span><span class="o">.</span><span class="n">put_role_policy</span><span class="p">(</span><span class="n">RoleName</span><span class="o">=</span><span class="s">&#39;RuanTestGetSSM-Role&#39;</span><span class="p">,</span> <span class="n">PolicyName</span><span class="o">=</span><span class="s">&#39;RuanTestGetSSMPolicy1&#39;</span><span class="p">,</span> <span class="n">PolicyDocument</span><span class="o">=</span><span class="n">pol</span><span class="s">&#39;)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Launch the EC2 instance with the above mentioned Role. Create the <code>get_ssm.py</code> and run it to decrypt and read the value from SSM:</p>

<figure class='code'><figcaption><span>get_ssm.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">boto3</span>
</span><span class='line'><span class="n">session</span> <span class="o">=</span> <span class="n">boto3</span><span class="o">.</span><span class="n">Session</span><span class="p">(</span><span class="n">region_name</span><span class="o">=</span><span class="s">&#39;eu-west-1&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">ssm</span> <span class="o">=</span> <span class="n">session</span><span class="o">.</span><span class="n">client</span><span class="p">(</span><span class="s">&#39;ssm&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">hostname</span> <span class="o">=</span> <span class="n">ssm</span><span class="o">.</span><span class="n">get_parameter</span><span class="p">(</span><span class="n">Name</span><span class="o">=</span><span class="s">&#39;/test/ruan/mysql/db01/mysql_hostname&#39;</span><span class="p">,</span> <span class="n">WithDecryption</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="n">hostname</span><span class="p">[</span><span class="s">&#39;Parameter&#39;</span><span class="p">][</span><span class="s">&#39;Value&#39;</span><span class="p">])</span>
</span></code></pre></td></tr></table></div></figure>


<p>Run it:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>python get_ssm.py
</span><span class='line'>db01.eu-west-1.mycompany.com
</span></code></pre></td></tr></table></div></figure>


<h2>Reading with GetParameters:</h2>

<p>So say that we created more than one parameter in the path that we allowed, lets use <code>GetParameters</code> to read more than one Parameter:</p>

<figure class='code'><figcaption><span>get_parameters.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">boto3</span>
</span><span class='line'><span class="n">session</span> <span class="o">=</span> <span class="n">boto3</span><span class="o">.</span><span class="n">Session</span><span class="p">(</span><span class="n">region_name</span><span class="o">=</span><span class="s">&#39;eu-west-1&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">ssm</span> <span class="o">=</span> <span class="n">session</span><span class="o">.</span><span class="n">client</span><span class="p">(</span><span class="s">&#39;ssm&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">response</span> <span class="o">=</span> <span class="n">ssm</span><span class="o">.</span><span class="n">get_parameters</span><span class="p">(</span>
</span><span class='line'>    <span class="n">Names</span><span class="o">=</span><span class="p">[</span>
</span><span class='line'>        <span class="s">&#39;/test/ruan/mysql/db01/mysql_hostname&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&#39;/test/ruan/mysql/db01/mysql_user&#39;</span>
</span><span class='line'>    <span class="p">],</span>
</span><span class='line'>    <span class="n">WithDecryption</span><span class="o">=</span><span class="bp">True</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="n">secrets</span> <span class="ow">in</span> <span class="n">response</span><span class="p">[</span><span class="s">&#39;Parameters&#39;</span><span class="p">]:</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">secrets</span><span class="p">[</span><span class="s">&#39;Name&#39;</span><span class="p">]</span> <span class="o">==</span> <span class="s">&#39;/test/ruan/mysql/db01/mysql_hostname&#39;</span><span class="p">:</span>
</span><span class='line'>        <span class="k">print</span><span class="p">(</span><span class="s">&quot;Hostname: {}&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">secrets</span><span class="p">[</span><span class="s">&#39;Value&#39;</span><span class="p">]))</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">secrets</span><span class="p">[</span><span class="s">&#39;Name&#39;</span><span class="p">]</span> <span class="o">==</span> <span class="s">&#39;/test/ruan/mysql/db01/mysql_user&#39;</span><span class="p">:</span>
</span><span class='line'>        <span class="k">print</span><span class="p">(</span><span class="s">&quot;Username: {}&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">secrets</span><span class="p">[</span><span class="s">&#39;Value&#39;</span><span class="p">]))</span>
</span></code></pre></td></tr></table></div></figure>


<p>Run it:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>python get_parameters.py
</span><span class='line'>Hostname: db01.eu-west-1.mycompany.com
</span><span class='line'>Username: super_dba
</span></code></pre></td></tr></table></div></figure>


<h2>Environment Variable Example from an Application:</h2>

<p>Set the Environment Variable value to the SSM key:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">export </span><span class="nv">MYSQL_HOSTNAME</span><span class="o">=</span><span class="s2">&quot;/test/ruan/mysql/db01/mysql_hostname&quot;</span>
</span><span class='line'><span class="nv">$ </span><span class="nb">export </span><span class="nv">MYSQL_USERNAME</span><span class="o">=</span><span class="s2">&quot;/test/ruan/mysql/db01/mysql_user&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>The application code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">os</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">boto3</span>
</span><span class='line'>
</span><span class='line'><span class="n">session</span> <span class="o">=</span> <span class="n">boto3</span><span class="o">.</span><span class="n">Session</span><span class="p">(</span><span class="n">region_name</span><span class="o">=</span><span class="s">&#39;eu-west-1&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">ssm</span> <span class="o">=</span> <span class="n">session</span><span class="o">.</span><span class="n">client</span><span class="p">(</span><span class="s">&#39;ssm&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">MYSQL_HOSTNAME</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">environ</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;MYSQL_HOSTNAME&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">MYSQL_USERNAME</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">environ</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;MYSQL_USERNAME&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">hostname</span> <span class="o">=</span> <span class="n">ssm</span><span class="o">.</span><span class="n">get_parameter</span><span class="p">(</span><span class="n">Name</span><span class="o">=</span><span class="n">MYSQL_HOSTNAME</span><span class="p">,</span> <span class="n">WithDecryption</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'><span class="n">username</span> <span class="o">=</span> <span class="n">ssm</span><span class="o">.</span><span class="n">get_parameter</span><span class="p">(</span><span class="n">Name</span><span class="o">=</span><span class="n">MYSQL_USERNAME</span><span class="p">,</span> <span class="n">WithDecryption</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="s">&quot;Hostname: {}&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">hostname</span><span class="p">[</span><span class="s">&#39;Parameter&#39;</span><span class="p">][</span><span class="s">&#39;Value&#39;</span><span class="p">]))</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="s">&quot;Username: {}&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">username</span><span class="p">[</span><span class="s">&#39;Parameter&#39;</span><span class="p">][</span><span class="s">&#39;Value&#39;</span><span class="p">]))</span>
</span></code></pre></td></tr></table></div></figure>


<p>Let the application transform the key to the SSM Value:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>python app.py
</span><span class='line'>Hostname: db01.eu-west-1.mycompany.com
</span><span class='line'>Username: super_dba
</span></code></pre></td></tr></table></div></figure>


<h2>Resources:</h2>

<p>Great thanks to the following resources:</p>

<ul>
<li><a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-paramstore-su-organize.html">https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-paramstore-su-organize.html</a></li>
<li><a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-roles.html">https://docs.aws.amazon.com/cli/latest/userguide/cli-roles.html</a></li>
<li><a href="https://github.com/iMilnb/awstools/blob/master/platforms/roles/mkrole.py">https://github.com/iMilnb/awstools/blob/master/platforms/roles/mkrole.py</a></li>
<li><a href="https://github.com/ktruckenmiller/ssm-get-parameter-by-path/blob/master/python.py">https://github.com/ktruckenmiller/ssm-get-parameter-by-path/blob/master/python.py</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
