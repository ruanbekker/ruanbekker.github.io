<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Ruan Bekker's Blog]]></title>
  <link href="https://blog.ruanbekker.com/atom.xml" rel="self"/>
  <link href="https://blog.ruanbekker.com/"/>
  <updated>2022-06-23T18:09:22-04:00</updated>
  <id>https://blog.ruanbekker.com/</id>
  <author>
    <name><![CDATA[Ruan]]></name>
    <email><![CDATA[ruan@ruanbekker.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Install a Specific Python Version on Ubuntu]]></title>
    <link href="https://blog.ruanbekker.com/blog/2022/06/23/install-a-specific-python-version-on-ubuntu/"/>
    <updated>2022-06-23T17:53:46-04:00</updated>
    <id>https://blog.ruanbekker.com/blog/2022/06/23/install-a-specific-python-version-on-ubuntu</id>
    <content type="html"><![CDATA[<p><img src="https://blog.ruanbekker.com/images/ruanbekker-install-specific-python-version.png" alt="install-specific-python-version" /></p>

<p>In this short tutorial, I will demonstrate how to install a spcific version of Python on Ubuntu Linux.</p>

<p><a href="https://ruan.dev"><img src="https://img.shields.io/badge/website-ruan.dev-red.svg" alt="" /></a> <a href="https://twitter.com/ruanbekker"><img src="https://img.shields.io/badge/twitter-@ruanbekker-00acee.svg" alt="" /></a> <a href="https://github.com/ruanbekker"><img src="https://img.shields.io/badge/github-cheatsheets-orange.svg" alt="" /></a> <a href="https://saythanks.io/to/ruanbekker"><img src="https://img.shields.io/badge/dm-saythanks.io-07B63F.svg" alt="Say Thanks!" /></a>  <a href="https://ko-fi.com/ruanbekker"><img src="https://img.shields.io/badge/-Buy%20Me%20a%20Coffee-ff5f5f?logo=ko-fi&amp;logoColor=white" alt="Ko-fi" /></a></p>

<h2>Dependencies</h2>

<p>Update the apt repositories:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo apt update
</span></code></pre></td></tr></table></div></figure>


<p>Then install the required dependencies:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo apt install libssl-dev openssl wget build-essential zlib1g-dev -y
</span></code></pre></td></tr></table></div></figure>


<h2>Python Versions</h2>

<p>Head over to the <a href="https://www.python.org/downloads/">Python Downloads</a> section and select the version of your choice, in my case I will be using Python 3.8.13, once you have the download link, download it:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>wget https://www.python.org/ftp/python/3.8.13/Python-3.8.13.tgz
</span></code></pre></td></tr></table></div></figure>


<p>Then extract the tarball:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>tar -xvf Python-3.8.13.tgz
</span></code></pre></td></tr></table></div></figure>


<p>Once it completes, change to the directory:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>Python-3.8.13
</span></code></pre></td></tr></table></div></figure>


<h2>Installation</h2>

<p>Compile and add <code>--enable-optimizations</code> flag as an argument:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>./configure --enable-optimizations
</span></code></pre></td></tr></table></div></figure>


<p>Run make and make install:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>make
</span><span class='line'><span class="nv">$ </span>sudo make install
</span></code></pre></td></tr></table></div></figure>


<p>Once it completes, you can symlink the python binary so that it&rsquo;s detected by your <code>PATH</code>, if you have no installed python versions or want to use it as the default, you can force overwriting the symlink:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo ln -fs /usr/local/bin/python3 /usr/bin/python3
</span></code></pre></td></tr></table></div></figure>


<p>Then we can test it by running:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>python3 --version
</span><span class='line'>Python 3.8.13
</span></code></pre></td></tr></table></div></figure>


<h2>Thank You</h2>

<p>Thanks for reading, feel free to check out my <a href="https://ruan.dev/">website</a>, feel free to subscribe to my <a href="http://digests.ruanbekker.com/?via=ruanbekker-blog">newsletter</a> or follow me at <a href="https://twitter.com/ruanbekker">@ruanbekker</a> on Twitter.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Persist Iptables Rules After Reboots]]></title>
    <link href="https://blog.ruanbekker.com/blog/2022/06/15/how-to-persist-iptables-rules-after-reboots/"/>
    <updated>2022-06-15T06:10:12-04:00</updated>
    <id>https://blog.ruanbekker.com/blog/2022/06/15/how-to-persist-iptables-rules-after-reboots</id>
    <content type="html"><![CDATA[<p><img src="https://blog.ruanbekker.com/images/ruanbekker-blog-persist-iptables.png" alt="persist-iptables-after-reboot" /></p>

<p>In this tutorial we will demonstrate how to persist iptables rules across reboots.</p>

<h2>Rules Peristence</h2>

<p>By default, when you create iptables rules its active, but as soon as you restart your server, the rules will be gone. Therefore we need to persist these rules across reboots.</p>

<h2>Dependencies</h2>

<p>We require the package <code>iptables-persistent</code> and I will install it on a debian system so I will be using <code>apt</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo apt update
</span><span class='line'>sudo apt install iptables-persistent -y
</span></code></pre></td></tr></table></div></figure>


<p>Ensure that the service is enabled to start on boot:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo systemctl <span class="nb">enable </span>netfilter-persistent
</span></code></pre></td></tr></table></div></figure>


<h2>Creating Iptables Rules</h2>

<p>In this case I will allow port 80 on TCP from all sources:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo iptables -I INPUT -p tcp --dport <span class="m">80</span> -j ACCEPT
</span></code></pre></td></tr></table></div></figure>


<p>To persist our current rules, we need to save them to <code>/etc/iptables/rules.v4</code> with <code>iptables-save</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo iptables-save &gt; /etc/iptables/rules.v4
</span></code></pre></td></tr></table></div></figure>


<p>Now when we restart, our rules will be loaded and our previous defined rules will be active.</p>

<h2>Thank You</h2>

<p>Thanks for reading, feel free to check out my <a href="https://ruan.dev/">website</a>, feel free to subscribe to my <a href="http://digests.ruanbekker.com/?via=ruanbekker-blog">newsletter</a> or follow me at <a href="https://twitter.com/ruanbekker">@ruanbekker</a> on Twitter.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Read and Write Json Data With Python]]></title>
    <link href="https://blog.ruanbekker.com/blog/2022/06/14/how-to-read-and-write-json-data-with-python/"/>
    <updated>2022-06-14T19:02:53-04:00</updated>
    <id>https://blog.ruanbekker.com/blog/2022/06/14/how-to-read-and-write-json-data-with-python</id>
    <content type="html"><![CDATA[<p>This is a short tutorial on how to use python to write and read files.</p>

<h2>Example</h2>

<p>To write the following json data:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span><span class="nt">&quot;name&quot;</span><span class="p">:</span> <span class="s2">&quot;ruan&quot;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>To a file named <code>/tmp/data.json</code>, we will be using this code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">json</span>
</span><span class='line'>
</span><span class='line'><span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s">&quot;name&quot;</span><span class="p">:</span> <span class="s">&quot;ruan&quot;</span><span class="p">}</span>
</span><span class='line'><span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">&#39;data.json&#39;</span><span class="p">,</span> <span class="s">&#39;w&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
</span><span class='line'>    <span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">data</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<p>When we execute that code, we will find the data inside that file:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cat /tmp/data.json
</span><span class='line'><span class="o">{</span><span class="s2">&quot;name&quot;</span>: <span class="s2">&quot;ruan&quot;</span><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>And if we want to use python to read the data:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">json</span>
</span><span class='line'>
</span><span class='line'><span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">&#39;data.json&#39;</span><span class="p">,</span> <span class="s">&#39;r&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
</span><span class='line'>    <span class="n">json</span><span class="o">.</span><span class="n">loads</span><span class="p">(</span><span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">())</span>
</span></code></pre></td></tr></table></div></figure>


<p>When we execute that code, we will see:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span><span class="err">&#39;name&#39;:</span> <span class="err">&#39;ruan&#39;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Thank You</h2>

<p>Thanks for reading, feel free to check out my <strong><a href="https://ruan.dev">website</a></strong>, read my <strong><a href="http://digests.ruanbekker.com/?via=ruanbekker-blog">newsletter</a></strong> or follow me at <strong><a href="https://twitter.com/ruanbekker">@ruanbekker</a></strong> on Twitter.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup Linkding Bookmarks Manager on Docker]]></title>
    <link href="https://blog.ruanbekker.com/blog/2022/05/31/setup-linkding-bookmarks-manager-on-docker/"/>
    <updated>2022-05-31T15:50:24-04:00</updated>
    <id>https://blog.ruanbekker.com/blog/2022/05/31/setup-linkding-bookmarks-manager-on-docker</id>
    <content type="html"><![CDATA[<p><strong>Note</strong>:  <em>Originally posted on <a href="https://containers.fan/posts/setup-linkding-bookmarks-manager/">containers.fan</a></em></p>

<p>I&rsquo;ve stumbled upon a great bookmarks manager service called <strong><a href="https://github.com/sissbruecker/linkding/blob/master/README.md">Linkding</a></strong>. What I really like about it, it allows you to save your bookmarks, assign tags to it to search for it later, it has chrome and firefox browser extensions, and comes with an API.</p>

<h2>Installing Linkding</h2>

<p>We will be using Traefik to do SSL termination and host based routing, if you don’t have Traefik running already, you can follow this post to get that set up:</p>

<ul>
<li><a href="https://containers.fan/posts/setup-traefik-v2-docker-compose/">https://containers.fan/posts/setup-traefik-v2-docker-compose/</a></li>
</ul>


<p>You can follow the <a href="https://github.com/sissbruecker/linkding/blob/master/README.md">linkding documentation</a> for more detailed information.</p>

<p>The <code>docker-compose.yml</code> that I will be use:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">version</span><span class="p-Indicator">:</span> <span class="s">&quot;3.8&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">services</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">linkding</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">image</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">sissbruecker/linkding:latest</span>
</span><span class='line'>    <span class="l-Scalar-Plain">container_name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">linkding</span>
</span><span class='line'>    <span class="l-Scalar-Plain">volumes</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">./data:/etc/linkding/data</span>
</span><span class='line'>    <span class="l-Scalar-Plain">environment</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">LD_DISABLE_BACKGROUND_TASKS=False</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">LD_DISABLE_URL_VALIDATION=False</span>
</span><span class='line'>    <span class="l-Scalar-Plain">restart</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">unless-stopped</span>
</span><span class='line'>    <span class="l-Scalar-Plain">cpus</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">0.5</span>
</span><span class='line'>    <span class="l-Scalar-Plain">mem_limit</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">512m</span>
</span><span class='line'>    <span class="l-Scalar-Plain">networks</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">public</span>
</span><span class='line'>    <span class="l-Scalar-Plain">labels</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="s">&quot;traefik.enable=true&quot;</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="s">&quot;traefik.http.routers.linkding-app.rule=Host(`linkding.yourdomain.net`)&quot;</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="s">&quot;traefik.http.routers.linkding-app.entrypoints=https&quot;</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="s">&quot;traefik.http.routers.linkding-app.tls.certresolver=letsencrypt&quot;</span>
</span><span class='line'>    <span class="l-Scalar-Plain">logging</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">driver</span><span class="p-Indicator">:</span> <span class="s">&quot;json-file&quot;</span>
</span><span class='line'>      <span class="l-Scalar-Plain">options</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">max-size</span><span class="p-Indicator">:</span> <span class="s">&quot;1m&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">networks</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">public</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">public</span>
</span></code></pre></td></tr></table></div></figure>


<p>Make sure to replace the FQDN of your choice, as I used <code>linkding.yourdomain.net</code> as an example.</p>

<p>Once everything is in place, boot the stack:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>docker-compose up -d
</span></code></pre></td></tr></table></div></figure>


<h2>Admin Account Registration</h2>

<p>Once your linkding container has booted, you can create a admin user with the following command (ensure to replace where needed):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>docker-compose <span class="nb">exec </span>linkding python manage.py createsuperuser --username<span class="o">=</span>admin --email<span class="o">=</span>root@localhost
</span></code></pre></td></tr></table></div></figure>


<p>Once you head over to the linkding url that you provided and you logon, you should be able to see something like this:</p>

<p><img src="https://user-images.githubusercontent.com/567298/171265323-2b23515f-8535-4c89-a195-6ab9b63eab68.png" alt="linkding" /></p>

<h2>Creating Bookmarks</h2>

<p>When you select &ldquo;Add Bookmark&rdquo; and you provide the URL, linkding will retrieve the title and the description and populate it for you, and you can provide the tags (seperated by spaces):</p>

<p><img src="https://user-images.githubusercontent.com/567298/171266278-ab31afc0-4aca-48fc-9795-4d49ae9b3508.png" alt="linkding-bookmark" /></p>

<h2>Browser Extensions</h2>

<p>To add a browser extension, select &ldquo;Settings&rdquo;, then &ldquo;Integrations&rdquo;, then you will find the link to the browser extension for Chrome and Firefox:</p>

<p><img src="https://user-images.githubusercontent.com/567298/171266713-3e2b2e5d-2ff0-43be-9713-5dd69a15d0cd.png" alt="linkding-browser-extension" /></p>

<p>After you install the browser extension and click on it for the first time, it will ask you to set the Linkding Base URL and API Authentication Token:</p>

<p><img src="https://user-images.githubusercontent.com/567298/171267455-123cad06-3758-4991-bb7e-40dc43a62996.png" alt="linkding-configuration" /></p>

<p>You can find that at the bottom of the &ldquo;Integrations&rdquo; section:</p>

<p><img src="https://user-images.githubusercontent.com/567298/171269639-45e65ab0-b413-4879-9c8f-0b82f5884096.png" alt="linkding-rest-api-access" /></p>

<h2>REST API</h2>

<p>You can follow the <a href="https://github.com/sissbruecker/linkding/blob/master/docs/API.md">API Docs</a> for more information, using an example to search for bookmarks with the term &ldquo;docker&rdquo;:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl -sL -H <span class="s2">&quot;Authorization: Token ${LINKDING_API_TOKEN}&quot;</span> <span class="s2">&quot;https://linkding.${DOMAIN}/api/bookmarks?q=docker&quot;</span> <span class="p">|</span> python3 -m json.tool
</span></code></pre></td></tr></table></div></figure>


<p>In my case returns a response like the following:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;count&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;next&quot;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;previous&quot;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;results&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="nt">&quot;id&quot;</span><span class="p">:</span> <span class="mi">6</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;url&quot;</span><span class="p">:</span> <span class="s2">&quot;https://www.docker.com/blog/deploying-web-applications-quicker-and-easier-with-caddy-2/&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;title&quot;</span><span class="p">:</span> <span class="s2">&quot;&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;description&quot;</span><span class="p">:</span> <span class="s2">&quot;&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;website_title&quot;</span><span class="p">:</span> <span class="s2">&quot;Deploying Web Applications Quicker and Easier with Caddy 2 - Docker&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;website_description&quot;</span><span class="p">:</span> <span class="s2">&quot;Deploying web apps can be tough, even with leading server technologies. Learn how you can use Caddy 2 and Docker simplify this process.&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;is_archived&quot;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;tag_names&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>                <span class="s2">&quot;caddy&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="s2">&quot;docker&quot;</span>
</span><span class='line'>            <span class="p">],</span>
</span><span class='line'>            <span class="nt">&quot;date_added&quot;</span><span class="p">:</span> <span class="s2">&quot;2022-05-31T19:11:53.739002Z&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;date_modified&quot;</span><span class="p">:</span> <span class="s2">&quot;2022-05-31T19:11:53.739016Z&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Thank You</h2>

<p>Thanks for reading, feel free to check out my <strong><a href="https://ruan.dev">website</a></strong>, read my <strong><a href="http://digests.ruanbekker.com/?via=ruanbekker-blog">newsletter</a></strong> or follow me at <strong><a href="https://twitter.com/ruanbekker">@ruanbekker</a></strong> on Twitter.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python Flask Forms With Jinja Templating]]></title>
    <link href="https://blog.ruanbekker.com/blog/2022/05/31/python-flask-forms-with-jinja-templating/"/>
    <updated>2022-05-31T02:39:30-04:00</updated>
    <id>https://blog.ruanbekker.com/blog/2022/05/31/python-flask-forms-with-jinja-templating</id>
    <content type="html"><![CDATA[<p><img src="https://user-images.githubusercontent.com/567298/171112630-7fd74a3a-d216-4b4c-85a2-8d9de6428f45.png" alt="ruanbekker-blog" /></p>

<p>In this tutorial, we will demonstrate how to use <a href="https://flask.palletsprojects.com/en/2.1.x/">Python Flask</a> and <code>render_template</code> to use <a href="https://jinja.palletsprojects.com/en/3.1.x/">Jinja Templating</a> with our Form. The example is just a ui that accepts a firstname, lastname and email address and when we submit the form data, it renders on a table.</p>

<h2>Install Flask</h2>

<p>Create a virtual environment and install python flask</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>python3 -m pip install virtualenv
</span><span class='line'>python3 -m virtualenv -p python3 .venv
</span><span class='line'><span class="nb">source</span> .venv/bin/activate
</span></code></pre></td></tr></table></div></figure>


<h2>The Code</h2>

<p>First we will create our application code in <code>app.py</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">Flask</span><span class="p">,</span> <span class="n">render_template</span><span class="p">,</span> <span class="n">request</span>
</span><span class='line'>
</span><span class='line'><span class="n">app_version</span> <span class="o">=</span> <span class="s">&#39;1.1.0&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">app</span> <span class="o">=</span> <span class="n">Flask</span><span class="p">(</span><span class="n">__name__</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@app.route</span><span class="p">(</span><span class="s">&#39;/&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">root</span><span class="p">():</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">render_template</span><span class="p">(</span><span class="s">&#39;form.html&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@app.route</span><span class="p">(</span><span class="s">&#39;/result&#39;</span><span class="p">,</span><span class="n">methods</span> <span class="o">=</span> <span class="p">[</span><span class="s">&#39;POST&#39;</span><span class="p">,</span> <span class="s">&#39;GET&#39;</span><span class="p">])</span>
</span><span class='line'><span class="k">def</span> <span class="nf">result</span><span class="p">():</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">request</span><span class="o">.</span><span class="n">method</span> <span class="o">==</span> <span class="s">&#39;POST&#39;</span><span class="p">:</span>
</span><span class='line'>        <span class="n">result</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">form</span>
</span><span class='line'>        <span class="n">json_result</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>
</span><span class='line'>        <span class="k">print</span><span class="p">(</span><span class="n">json_result</span><span class="p">)</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">render_template</span><span class="p">(</span><span class="s">&quot;result.html&quot;</span><span class="p">,</span> <span class="n">result</span><span class="o">=</span><span class="n">result</span><span class="p">,</span> <span class="n">app_version</span><span class="o">=</span><span class="n">app_version</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
</span><span class='line'>    <span class="n">app</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="n">debug</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>As you can see our first route <code>/</code> will render the template in <code>form.html</code>. Our second route <code>/result</code> a couple of things are happening:</p>

<ul>
<li>If we received a POST method, we will capture the form data</li>
<li>We are then casting it to a dictionary data type</li>
<li>Print the results out of our form data (for debugging)</li>
<li>Then we are passing the result object and the app_version variable to our template where it will be parsed.</li>
</ul>


<p>When using <code>render_template</code> all html files resides under the <code>templates</code> directory, so let&rsquo;s first create our <code>base.html</code> file that we will use as a starting point in <code>templates/base.html</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">mkdir</span> <span class="n">templates</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then in your <code>templates/base.html</code>:</p>

<script src="https://gist.github.com/ruanbekker/4d6b3e91b629795b3429a15f5db72972.js"></script>


<p>In our <code>templates/form.html</code> we have our form template, and you can see we are referencing our <code>base.html</code> in our template to include the first bit:</p>

<script src="https://gist.github.com/ruanbekker/f9e0c78d12987e19862486e446378ed7.js"></script>


<p>Then our last template <code>templates/result.html</code> is used when we click on submit, when the form data is displayed in our table:</p>

<script src="https://gist.github.com/ruanbekker/ad40ae4c59a81e8c089e7df2d50c605a.js"></script>


<p>So our directory structure should look like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>├── app.py
</span><span class='line'>└── templates
</span><span class='line'>    ├── base.html
</span><span class='line'>    ├── form.html
</span><span class='line'>    └── result.html
</span><span class='line'>
</span><span class='line'><span class="m">1</span> directory, <span class="m">4</span> files
</span></code></pre></td></tr></table></div></figure>


<p>Then run the server:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>python app.py
</span></code></pre></td></tr></table></div></figure>


<h2>Screenshots</h2>

<p>It should look like the following when you access <a href="http://localhost:5000/">http://localhost:5000/</a></p>

<p><img src="https://user-images.githubusercontent.com/567298/171111587-915935a6-1557-4039-bbd0-d1d95070c2ae.png" alt="python-flask-forms" /></p>

<p>After entering your form data, select &ldquo;Submit&rdquo;, then you should see the following:</p>

<p><img src="https://user-images.githubusercontent.com/567298/171111868-9f8974d2-90cc-45c9-b930-da2d6ec96cbf.png" alt="python-flask-forms" /></p>

<p>So you can see that our request data was parsed through the template and our app version variable as well.</p>

<h2>Thank You</h2>

<p>Thanks for reading, if you like my content, check out my <strong><a href="https://ruan.dev">website</a></strong>, read my <strong><a href="http://digests.ruanbekker.com/?via=ruanbekker-blog">newsletter</a></strong> or follow me at <strong><a href="https://twitter.com/ruanbekker">@ruanbekker</a></strong> on Twitter.</p>

<p><a href="https://github.com/ruanbekker/cheatsheets" target="_blank"><img alt="ruanbekker-cheatsheets" src="https://user-images.githubusercontent.com/567298/169162832-ef3019de-bc49-4d6c-b2a6-8ac17c457d24.png"></a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Prometheus Relabel Config Examples]]></title>
    <link href="https://blog.ruanbekker.com/blog/2022/05/30/prometheus-relabel-config-examples/"/>
    <updated>2022-05-30T03:01:01-04:00</updated>
    <id>https://blog.ruanbekker.com/blog/2022/05/30/prometheus-relabel-config-examples</id>
    <content type="html"><![CDATA[<p>This is a quick demonstration on how to use prometheus relabel configs, when you have scenarios for when example, you want to use a part of your hostname and assign it to a prometheus label.</p>

<h2>Prometheus Relabling</h2>

<p>Using a standard prometheus config to scrape two targets:
- <code>ip-192-168-64-29.multipass:9100</code>
- <code>ip-192-168-64-30.multipass:9100</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>global:
</span><span class='line'>  scrape_interval:     15s
</span><span class='line'>  evaluation_interval: 15s
</span><span class='line'>  external_labels:
</span><span class='line'>    cluster: 'local'
</span><span class='line'>
</span><span class='line'>scrape_configs:
</span><span class='line'>  - job_name: 'prometheus'
</span><span class='line'>    scrape_interval: 15s
</span><span class='line'>    static_configs:
</span><span class='line'>    - targets: ['localhost:9090']
</span><span class='line'>
</span><span class='line'>  - job_name: 'multipass-nodes'
</span><span class='line'>    static_configs:
</span><span class='line'>    - targets: ['ip-192-168-64-29.multipass:9100']
</span><span class='line'>      labels:
</span><span class='line'>        test: 1
</span><span class='line'>    - targets: ['ip-192-168-64-30.multipass:9100']
</span><span class='line'>      labels:
</span><span class='line'>        test: 1</span></code></pre></td></tr></table></div></figure>


<p>The Result:</p>

<p><img width="924" alt="image" src="https://user-images.githubusercontent.com/567298/170823370-f2c6b3a3-68a8-4f5a-ad43-2f1b832c95e0.png"></p>

<p>When we want to relabel one of the source the prometheus <a href="https://grafana.com/blog/2022/03/21/how-relabeling-in-prometheus-works/#internal-labels">internal labels</a>, <code>__address__</code> which will be the given target including the port, then we apply regex: <code>(.*)</code> to catch everything from the source label, and since there is only one group we use the <code>replacement</code> as <code>${1}-randomtext</code> and use that value to apply it as the value of the given <code>target_label</code> which in this case is for <code>randomlabel</code>, which will be in this case:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>global:
</span><span class='line'>  scrape_interval:     15s
</span><span class='line'>  evaluation_interval: 15s
</span><span class='line'>  external_labels:
</span><span class='line'>    cluster: 'local'
</span><span class='line'>
</span><span class='line'>scrape_configs:
</span><span class='line'>  - job_name: 'prometheus'
</span><span class='line'>    scrape_interval: 15s
</span><span class='line'>    static_configs:
</span><span class='line'>    - targets: ['localhost:9090']
</span><span class='line'>
</span><span class='line'>  - job_name: 'multipass-nodes'
</span><span class='line'>    static_configs:
</span><span class='line'>    - targets: ['ip-192-168-64-29.multipass:9100']
</span><span class='line'>      labels:
</span><span class='line'>        test: 3
</span><span class='line'>    - targets: ['ip-192-168-64-30.multipass:9100']
</span><span class='line'>      labels:
</span><span class='line'>        test: 3
</span><span class='line'>    relabel_configs:
</span><span class='line'>    - source_labels: [__address__]
</span><span class='line'>      regex: '(.+)'
</span><span class='line'>      replacement: '${1}-randomtext'
</span><span class='line'>      target_label: randomlabel</span></code></pre></td></tr></table></div></figure>


<p>The Result:</p>

<p><img width="1107" alt="image" src="https://user-images.githubusercontent.com/567298/170824588-44a79c3d-5131-4311-bcca-f5137d6acdad.png"></p>

<p>In this case we want to relabel the <code>__address__</code> and apply the value to the <code>instance</code> label, but we want to exclude the <code>:9100</code> from the <code>__address__</code> label:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># Config: https://github.com/prometheus/prometheus/blob/release-2.36/config/testdata/conf.good.yml
</span><span class='line'>global:
</span><span class='line'>  scrape_interval:     15s
</span><span class='line'>  evaluation_interval: 15s
</span><span class='line'>  external_labels:
</span><span class='line'>    cluster: 'local'
</span><span class='line'>
</span><span class='line'>scrape_configs:
</span><span class='line'>  - job_name: 'prometheus'
</span><span class='line'>    scrape_interval: 15s
</span><span class='line'>    static_configs:
</span><span class='line'>    - targets: ['localhost:9090']
</span><span class='line'>
</span><span class='line'>  - job_name: 'multipass-nodes'
</span><span class='line'>    static_configs:
</span><span class='line'>    - targets: ['ip-192-168-64-29.multipass:9100']
</span><span class='line'>      labels:
</span><span class='line'>        test: 4
</span><span class='line'>    - targets: ['ip-192-168-64-30.multipass:9100']
</span><span class='line'>      labels:
</span><span class='line'>        test: 4
</span><span class='line'>    relabel_configs:
</span><span class='line'>    - source_labels: [__address__]
</span><span class='line'>      separator: ':'
</span><span class='line'>      regex: '(.*):(.*)'
</span><span class='line'>      replacement: '${1}'
</span><span class='line'>      target_label: instance</span></code></pre></td></tr></table></div></figure>


<p>The Result:</p>

<p><img width="950" alt="image" src="https://user-images.githubusercontent.com/567298/170824806-45f0f243-5fe7-4635-9e9a-335616a322da.png"></p>

<h2>AWS EC2 SD Configs</h2>

<p>On AWS EC2 you can make use of the <a href="https://prometheus.io/docs/prometheus/latest/configuration/configuration/#ec2_sd_config">ec2_sd_config</a> where you can make use of EC2 Tags, to set the values of your tags to prometheus label values.</p>

<p>In this scenario, on my EC2 instances I have 3 tags:
- Key: PrometheusScrape, Value: Enabled
- Key: Name, Value: pdn-server-1
- Key: Environment, Value: dev</p>

<p>In our config, we only apply a node-exporter scrape config to instances which are tagged <code>PrometheusScrape=Enabled</code>, then we use the <code>Name</code> tag, and assign it&rsquo;s value to the <code>instance</code> tag, and the similarly we assign the <code>Environment</code> tag value to the <code>environment</code> promtheus label value.</p>

<p>Because this prometheus instance resides in the same VPC, I am using the <code>__meta_ec2_private_ip</code> which is the private ip address of the EC2 instance to assign it to the address where it needs to scrape the node exporter metrics endpoint:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">scrape_configs</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">job_name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">node-exporter</span>
</span><span class='line'>    <span class="l-Scalar-Plain">scrape_interval</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">15s</span>
</span><span class='line'>    <span class="l-Scalar-Plain">ec2_sd_configs</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">region</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">eu-west-1</span>
</span><span class='line'>      <span class="l-Scalar-Plain">port</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">9100</span>
</span><span class='line'>      <span class="l-Scalar-Plain">filters</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">tag:PrometheusScrape</span>
</span><span class='line'>          <span class="l-Scalar-Plain">values</span><span class="p-Indicator">:</span>
</span><span class='line'>            <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">Enabled</span>
</span><span class='line'>    <span class="l-Scalar-Plain">relabel_configs</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">source_labels</span><span class="p-Indicator">:</span> <span class="p-Indicator">[</span><span class="nv">__meta_ec2_private_ip</span><span class="p-Indicator">]</span>
</span><span class='line'>      <span class="l-Scalar-Plain">replacement</span><span class="p-Indicator">:</span> <span class="s">&#39;${1}:9100&#39;</span>
</span><span class='line'>      <span class="l-Scalar-Plain">target_label</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">__address__</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">source_labels</span><span class="p-Indicator">:</span> <span class="p-Indicator">[</span><span class="nv">__meta_ec2_tag_Name</span><span class="p-Indicator">]</span>
</span><span class='line'>      <span class="l-Scalar-Plain">target_label</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">instance</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">source_labels</span><span class="p-Indicator">:</span> <span class="p-Indicator">[</span><span class="nv">__meta_ec2_tag_Environment</span><span class="p-Indicator">]</span>
</span><span class='line'>      <span class="l-Scalar-Plain">target_label</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">environment</span>
</span></code></pre></td></tr></table></div></figure>


<p>You will need a EC2 Ready Only instance role (or access keys on the configuration) in order for prometheus to read the EC2 tags on your account.</p>

<p>See their <a href="https://prometheus.io/docs/prometheus/latest/configuration/configuration/#ec2_sd_config">documentation</a> for more info.</p>

<h2>Stack</h2>

<p>The docker-compose used:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">version</span><span class="p-Indicator">:</span> <span class="s">&#39;3.8&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">services</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">prometheus</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">image</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">prom/prometheus</span>
</span><span class='line'>    <span class="l-Scalar-Plain">container_name</span><span class="p-Indicator">:</span> <span class="s">&#39;prometheus&#39;</span>
</span><span class='line'>    <span class="l-Scalar-Plain">user</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">root</span>
</span><span class='line'>    <span class="l-Scalar-Plain">restart</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">unless-stopped</span>
</span><span class='line'>    <span class="l-Scalar-Plain">volumes</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">./prometheus.yml:/etc/prometheus/prometheus.yml</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">prometheus-data:/prometheus</span>
</span><span class='line'>    <span class="l-Scalar-Plain">command</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="s">&#39;--config.file=/etc/prometheus/prometheus.yml&#39;</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="s">&#39;--storage.tsdb.path=/prometheus&#39;</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="s">&#39;--storage.tsdb.retention=14d&#39;</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="s">&#39;--web.console.libraries=/etc/prometheus/console_libraries&#39;</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="s">&#39;--web.console.templates=/etc/prometheus/consoles&#39;</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="s">&#39;--web.external-url=http://prometheus.127.0.0.1.nip.io&#39;</span>
</span><span class='line'>    <span class="l-Scalar-Plain">ports</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">9090:9090</span>
</span><span class='line'>    <span class="l-Scalar-Plain">networks</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">public</span>
</span><span class='line'>    <span class="l-Scalar-Plain">logging</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">driver</span><span class="p-Indicator">:</span> <span class="s">&quot;json-file&quot;</span>
</span><span class='line'>      <span class="l-Scalar-Plain">options</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">max-size</span><span class="p-Indicator">:</span> <span class="s">&quot;1m&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">networks</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">public</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">public</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">volumes</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">prometheus-data</span><span class="p-Indicator">:</span> <span class="p-Indicator">{}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>References</h2>

<p>Usful docs:</p>

<ul>
<li><a href="https://grafana.com/blog/2022/03/21/how-relabeling-in-prometheus-works/#internal-labels">https://grafana.com/blog/2022/03/21/how-relabeling-in-prometheus-works/#internal-labels</a></li>
<li><a href="https://prometheus.io/docs/prometheus/latest/configuration/configuration/#ec2_sd_config">https://prometheus.io/docs/prometheus/latest/configuration/configuration/#ec2_sd_config</a></li>
<li><a href="https://regexr.com/">https://regexr.com/</a></li>
</ul>


<h2>Thank You</h2>

<p>Thanks for reading, if you like my content, check out my <strong><a href="https://ruan.dev">website</a></strong>, read my <strong><a href="http://digests.ruanbekker.com/?via=ruanbekker-blog">newsletter</a></strong> or follow me at <strong><a href="https://twitter.com/ruanbekker">@ruanbekker</a></strong> on Twitter.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Create a AWS Lambda Layer With Docker]]></title>
    <link href="https://blog.ruanbekker.com/blog/2022/05/27/create-a-aws-lambda-layer-with-docker/"/>
    <updated>2022-05-27T06:19:05-04:00</updated>
    <id>https://blog.ruanbekker.com/blog/2022/05/27/create-a-aws-lambda-layer-with-docker</id>
    <content type="html"><![CDATA[<p>In this tutorial we will be creating a AWS Lambda Python <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">Layer</a> that will include the Python Requests package and we will compile the package with Docker and the LambCI image.</p>

<h2>Getting Started</h2>

<p>First we will create the directory where we will store the intermediate data:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mkdir lambda-layers
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>lambda-layers
</span></code></pre></td></tr></table></div></figure>


<p>Then we will create the directory structure, as you can see I will be using the python 3.8 runtime:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mkdir -p requests/python/lib/python3.8
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>requests
</span></code></pre></td></tr></table></div></figure>


<p>Write the dependencies to the requirements file:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s2">&quot;requests&quot;</span> &gt; requirements.txt
</span></code></pre></td></tr></table></div></figure>


<p>Install dependencies locally using docker, where we will be using the <code>lambci/lambda:build-python3.8</code> iamge and we are mounting our current working directory to <code>/var/task</code> inside the container, and then we will be running the command <code>pip install -r requirements.txt -t python/lib/python3.7/site-packages/; exit</code> inside the container, which will essentially dump the content to our working directory:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker run -v <span class="nv">$PWD</span>:/var/task <span class="se">\</span>
</span><span class='line'>   lambci/lambda:build-python3.8 <span class="se">\</span>
</span><span class='line'>   sh -c <span class="s2">&quot;pip install -r requirements.txt -t python/lib/python3.8/site-packages/; exit&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Zip up the deployment package that we will push to AWS Lambda Layers:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>zip -r package.zip python &gt; /dev/null
</span></code></pre></td></tr></table></div></figure>


<p>Publish the layer using the aws cli tools, by specifying the deployment package, the compatible runtime and a identifier:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>aws --profile dev lambda <span class="se">\</span>
</span><span class='line'>   publish-layer-version --layer-name python-requests <span class="se">\</span>
</span><span class='line'>   --description <span class="s2">&quot;Python Requests using 3.8 Runtime&quot;</span> <span class="se">\</span>
</span><span class='line'>   --zip-file fileb://package.zip <span class="se">\</span>
</span><span class='line'>   --compatible-runtime <span class="s2">&quot;python3.8&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then when you want to reference the layer on the functio that you want to create, you can do it like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>aws lambda create-function --function-name <span class="nb">test</span>-requests <span class="se">\</span>
</span><span class='line'>   --runtime python3.8 <span class="se">\</span>
</span><span class='line'>   --handler lambda_function.lambda_handler <span class="se">\</span>
</span><span class='line'>   --role <span class="s2">&quot;&quot;</span> --layers <span class="s2">&quot;arn:aws:lambda:eu-west-1:xxxxxxxxxxxx:layer:test-requests&quot;</span> <span class="se">\</span>
</span><span class='line'>   --code <span class="s2">&quot;S3Bucket=string,S3Key=string&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Thank You</h2>

<p>Thanks for reading, if you like my content, check out my <strong><a href="https://ruan.dev">website</a></strong>, read my <strong><a href="http://digests.ruanbekker.com/?via=ruanbekker-blog">newsletter</a></strong> or follow me at <strong><a href="https://twitter.com/ruanbekker">@ruanbekker</a></strong> on Twitter.</p>

<p>Credit to <a href="https://oznetnerd.com/2020/11/11/lambda-packaging-the-right-way/">oznetnerd.com</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Customize VIM Editor With a Brand New Look]]></title>
    <link href="https://blog.ruanbekker.com/blog/2022/05/11/customize-vim-editor-with-a-brand-new-look/"/>
    <updated>2022-05-11T17:10:16-04:00</updated>
    <id>https://blog.ruanbekker.com/blog/2022/05/11/customize-vim-editor-with-a-brand-new-look</id>
    <content type="html"><![CDATA[<p>In this tutorial we will customize the vim editor, by adding the molokai color scheme, change a couple of basic settings (more suited for my preference - not too much) and add a couple of plugins that will change the look to something like this:</p>

<p><img src="https://user-images.githubusercontent.com/567298/161967893-c19e460a-a8f6-4841-b3cd-de8419522790.png" alt="image" /></p>

<h2>About Vim</h2>

<p><strong><a href="https://www.vim.org/">vim</a></strong> has always been my favorite linux text editor, which is super powerful and highly customizable</p>

<h2>Install Vim</h2>

<p>Update indexes:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo apt update
</span></code></pre></td></tr></table></div></figure>


<p>Install vim:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo apt install vim -y
</span></code></pre></td></tr></table></div></figure>


<h2>Color Scheme</h2>

<p>To find all existing vim color schemes installed:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>find /usr/share/vim/vim*/colors/ -type f -name <span class="s2">&quot;*.vim&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>The output on mine shows:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>/usr/share/vim/vim81/colors/desert.vim
</span><span class='line'>/usr/share/vim/vim81/colors/default.vim
</span><span class='line'>/usr/share/vim/vim81/colors/murphy.vim
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<p>I will be opting for <a href="https://github.com/tomasr/molokai">molokai</a>, so first create the directory where we will download our color scheme:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir -p ~/.vim/colors
</span></code></pre></td></tr></table></div></figure>


<p>Then download the color scheme:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl -o ~/.vim/colors/molokai.vim https://raw.githubusercontent.com/tomasr/molokai/master/colors/molokai.vim
</span></code></pre></td></tr></table></div></figure>


<p>By default our color scheme will look like this when we create <code>foo.py</code>:</p>

<p><img src="https://user-images.githubusercontent.com/567298/161961784-ff536963-baca-492b-989b-5d61bc4dfa71.png" alt="image" /></p>

<p>When we hit the &ldquo;esc&rdquo; button, and enter <code>:colorscheme molokai</code> we can change the colorscheme to molokai, and then we should have the following:</p>

<p><img src="https://user-images.githubusercontent.com/567298/161962129-434f42ff-c894-4388-9d2e-5dbf1c80e1f5.png" alt="image" /></p>

<p>To persist these changes, open up <code>~/.vimrc</code> and paste the following as a starter:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>colorscheme molokai
</span><span class='line'>syntax on
</span></code></pre></td></tr></table></div></figure>


<p>Now when we open up <code>foo.py</code> we will see that it defaults to the <code>molokai</code> color scheme.</p>

<h2>Vim Configuration</h2>

<p>Everyone has their own personal preference on vim configs, but I like to keep mine basic, and this is the content of my <code>~/.vimrc</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>colorscheme molokai
</span><span class='line'>syntax on
</span><span class='line'><span class="nb">set </span>mouse-<span class="o">=</span>a
</span><span class='line'>
</span><span class='line'>filetype on
</span><span class='line'>filetype indent plugin on
</span><span class='line'><span class="nb">set </span>noexpandtab <span class="s2">&quot; tabs ftw</span>
</span><span class='line'><span class="s2">set smarttab &quot;</span> tab respects <span class="s1">&#39;tabstop&#39;</span>, <span class="s1">&#39;shiftwidth&#39;</span>, and <span class="s1">&#39;softtabstop&#39;</span>
</span><span class='line'><span class="nb">set </span><span class="nv">tabstop</span><span class="o">=</span><span class="m">4</span> <span class="s2">&quot; the visible width of tabs</span>
</span><span class='line'><span class="s2">set softtabstop=4 &quot;</span> edit as <span class="k">if</span> the tabs are <span class="m">4</span> characters wide
</span><span class='line'><span class="nb">set </span><span class="nv">shiftwidth</span><span class="o">=</span><span class="m">4</span> <span class="s2">&quot; number of spaces to use for indent and unindent</span>
</span><span class='line'><span class="s2">set shiftround &quot;</span> round indent to a multiple of <span class="s1">&#39;shiftwidth&#39;</span>
</span><span class='line'>
</span><span class='line'>autocmd FileType yml setlocal <span class="nv">ts</span><span class="o">=</span><span class="m">2</span> <span class="nv">sts</span><span class="o">=</span><span class="m">2</span> <span class="nv">sw</span><span class="o">=</span><span class="m">2</span> expandtab
</span><span class='line'>autocmd FileType yaml setlocal <span class="nv">ts</span><span class="o">=</span><span class="m">2</span> <span class="nv">sts</span><span class="o">=</span><span class="m">2</span> <span class="nv">sw</span><span class="o">=</span><span class="m">2</span> expandtab
</span></code></pre></td></tr></table></div></figure>


<h2>Plugins</h2>

<p>The <code>~/.vimrc</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="s2">&quot;&quot;</span> https://github.com/VundleVim/Vundle.vim
</span><span class='line'><span class="nb">set </span>nocompatible
</span><span class='line'>filetype off
</span><span class='line'><span class="s2">&quot; set the runtime path to include Vundle and initialize</span>
</span><span class='line'><span class="s2">set rtp+=~/.vim/bundle/Vundle.vim</span>
</span><span class='line'><span class="s2">call vundle#begin()</span>
</span><span class='line'><span class="s2">&quot;</span> alternatively, pass a path where Vundle should install plugins
</span><span class='line'><span class="s2">&quot;call vundle#begin(&#39;~/some/path/here&#39;)</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&quot;</span> <span class="nb">let </span>Vundle manage Vundle, required
</span><span class='line'>Plugin <span class="s1">&#39;VundleVim/Vundle.vim&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&quot; The following are examples of different formats supported.</span>
</span><span class='line'><span class="s2">&quot;</span> Keep Plugin commands between vundle#begin/end.
</span><span class='line'><span class="s2">&quot; plugin on GitHub repo</span>
</span><span class='line'><span class="s2">Plugin &#39;tpope/vim-fugitive&#39;</span>
</span><span class='line'><span class="s2">&quot;</span> plugin from http://vim-scripts.org/vim/scripts.html
</span><span class='line'><span class="s2">&quot; Plugin &#39;L9&#39;</span>
</span><span class='line'><span class="s2">&quot;</span> Git plugin not hosted on GitHub
</span><span class='line'>Plugin <span class="s1">&#39;git://git.wincent.com/command-t.git&#39;</span>
</span><span class='line'><span class="s2">&quot; git repos on your local machine (i.e. when working on your own plugin)</span>
</span><span class='line'><span class="s2">&quot;</span> Plugin <span class="s1">&#39;file:///home/gmarik/path/to/plugin&#39;</span>
</span><span class='line'><span class="s2">&quot; The sparkup vim script is in a subdirectory of this repo called vim.</span>
</span><span class='line'><span class="s2">&quot;</span> Pass the path to <span class="nb">set </span>the runtimepath properly.
</span><span class='line'>Plugin <span class="s1">&#39;rstacruz/sparkup&#39;</span>, <span class="o">{</span><span class="s1">&#39;rtp&#39;</span>: <span class="s1">&#39;vim/&#39;</span><span class="o">}</span>
</span><span class='line'><span class="s2">&quot; Install L9 and avoid a Naming conflict if you&#39;ve already installed a</span>
</span><span class='line'><span class="s2">&quot;</span> different version somewhere <span class="k">else</span>.
</span><span class='line'><span class="s2">&quot; Plugin &#39;ascenator/L9&#39;, {&#39;name&#39;: &#39;newL9&#39;}</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&quot;</span> All of your Plugins must be added before the following line
</span><span class='line'>call vundle#end<span class="o">()</span>            <span class="s2">&quot; required</span>
</span><span class='line'><span class="s2">filetype plugin indent on    &quot;</span> required
</span><span class='line'><span class="s2">&quot; To ignore plugin indent changes, instead use:</span>
</span><span class='line'><span class="s2">&quot;</span>filetype plugin on
</span><span class='line'><span class="s2">&quot;</span>
</span><span class='line'><span class="s2">&quot;</span> Brief <span class="nb">help</span>
</span><span class='line'><span class="s2">&quot; :PluginList       - lists configured plugins</span>
</span><span class='line'><span class="s2">&quot;</span> :PluginInstall    - installs plugins<span class="p">;</span> append <span class="sb">`</span>!<span class="sb">`</span> to update or just :PluginUpdate
</span><span class='line'><span class="s2">&quot; :PluginSearch foo - searches for foo; append `!` to refresh local cache</span>
</span><span class='line'><span class="s2">&quot;</span> :PluginClean      - confirms removal of unused plugins<span class="p">;</span> append <span class="sb">`</span>!<span class="sb">`</span> to auto-approve removal
</span><span class='line'><span class="s2">&quot;</span>
</span><span class='line'><span class="s2">&quot;</span> see :h vundle <span class="k">for</span> more details or wiki <span class="k">for</span> FAQ
</span><span class='line'><span class="s2">&quot; Put your non-Plugin stuff after this line</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&quot;</span> colorscheme duo-mini
</span><span class='line'><span class="s2">&quot; sets color themes</span>
</span><span class='line'><span class="s2">colorscheme molokai</span>
</span><span class='line'><span class="s2">syntax on</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&quot;</span> sets the filename at the bottom
</span><span class='line'><span class="nb">set </span><span class="nv">laststatus</span><span class="o">=</span>2
</span><span class='line'><span class="s2">&quot; https://github.com/itchyny/lightline.vim</span>
</span><span class='line'><span class="s2">Plugin &#39;itchyny/lightline.vim&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&quot;</span> https://github.com/Shougo/neobundle.vim
</span><span class='line'><span class="s2">&quot; Note: Skip initialization for vim-tiny or vim-small.</span>
</span><span class='line'><span class="s2">if 0 | endif</span>
</span><span class='line'>
</span><span class='line'><span class="s2">if &amp;compatible</span>
</span><span class='line'><span class="s2">  set nocompatible               &quot;</span> Be iMproved
</span><span class='line'>endif
</span><span class='line'>
</span><span class='line'><span class="s2">&quot; Required:</span>
</span><span class='line'><span class="s2">set runtimepath+=~/.vim/bundle/neobundle.vim/</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&quot;</span> Required:
</span><span class='line'>call neobundle#begin<span class="o">(</span>expand<span class="o">(</span><span class="s1">&#39;~/.vim/bundle/&#39;</span><span class="o">))</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&quot; Let NeoBundle manage NeoBundle</span>
</span><span class='line'><span class="s2">&quot;</span> Required:
</span><span class='line'>NeoBundleFetch <span class="s1">&#39;Shougo/neobundle.vim&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&quot; My Bundles here:</span>
</span><span class='line'><span class="s2">&quot;</span> Refer to <span class="p">|</span>:NeoBundle-examples<span class="p">|</span>.
</span><span class='line'><span class="s2">&quot; Note: You don&#39;t set neobundle setting in .gvimrc!</span>
</span><span class='line'><span class="s2">NeoBundle &#39;itchyny/lightline.vim&#39;</span>
</span><span class='line'><span class="s2">call neobundle#end()</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&quot;</span> Required:
</span><span class='line'>filetype plugin indent on
</span><span class='line'>
</span><span class='line'><span class="s2">&quot; If there are uninstalled bundles found on startup,</span>
</span><span class='line'><span class="s2">&quot;</span> this will conveniently prompt you to install them.
</span><span class='line'>NeoBundleCheck
</span><span class='line'>
</span><span class='line'><span class="s2">&quot; https://github.com/junegunn/vim-plug</span>
</span><span class='line'><span class="s2">&quot;</span> Specify a directory <span class="k">for</span> plugins
</span><span class='line'><span class="s2">&quot; - For Neovim: stdpath(&#39;data&#39;) . &#39;/plugged&#39;</span>
</span><span class='line'><span class="s2">&quot;</span> - Avoid using standard Vim directory names like <span class="s1">&#39;plugin&#39;</span>
</span><span class='line'>call plug#begin<span class="o">(</span><span class="s1">&#39;~/.vim/plugged&#39;</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&quot; Make sure you use single quotes</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&quot;</span> Shorthand notation<span class="p">;</span> fetches https://github.com/junegunn/vim-easy-align
</span><span class='line'>Plug <span class="s1">&#39;junegunn/vim-easy-align&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&quot; Any valid git URL is allowed</span>
</span><span class='line'><span class="s2">Plug &#39;https://github.com/junegunn/vim-github-dashboard.git&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&quot;</span> Multiple Plug commands can be written in a single line using <span class="p">|</span> separators
</span><span class='line'><span class="s2">&quot;Plug &#39;SirVer/ultisnips&#39; | Plug &#39;honza/vim-snippets&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&quot;</span> On-demand loading
</span><span class='line'>Plug <span class="s1">&#39;scrooloose/nerdtree&#39;</span>, <span class="o">{</span> <span class="s1">&#39;on&#39;</span>:  <span class="s1">&#39;NERDTreeToggle&#39;</span> <span class="o">}</span>
</span><span class='line'>Plug <span class="s1">&#39;tpope/vim-fireplace&#39;</span>, <span class="o">{</span> <span class="s1">&#39;for&#39;</span>: <span class="s1">&#39;clojure&#39;</span> <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&quot; Using a non-master branch</span>
</span><span class='line'><span class="s2">Plug &#39;rdnetto/YCM-Generator&#39;, { &#39;branch&#39;: &#39;stable&#39; }</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&quot;</span> Using a tagged release<span class="p">;</span> wildcard allowed <span class="o">(</span>requires git 1.9.2 or above<span class="o">)</span>
</span><span class='line'>Plug <span class="s1">&#39;fatih/vim-go&#39;</span>, <span class="o">{</span> <span class="s1">&#39;tag&#39;</span>: <span class="s1">&#39;*&#39;</span> <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&quot; Plugin options</span>
</span><span class='line'><span class="s2">Plug &#39;nsf/gocode&#39;, { &#39;tag&#39;: &#39;v.20150303&#39;, &#39;rtp&#39;: &#39;vim&#39; }</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&quot;</span> Plugin outside ~/.vim/plugged with post-update hook
</span><span class='line'>Plug <span class="s1">&#39;junegunn/fzf&#39;</span>, <span class="o">{</span> <span class="s1">&#39;dir&#39;</span>: <span class="s1">&#39;~/.fzf&#39;</span>, <span class="s1">&#39;do&#39;</span>: <span class="s1">&#39;./install --all&#39;</span> <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&quot; Unmanaged plugin (manually installed and updated)</span>
</span><span class='line'><span class="s2">Plug &#39;~/my-prototype-plugin&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="s2">Plug &#39;itchyny/lightline.vim&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&quot;</span> Initialize plugin system
</span><span class='line'>call plug#end<span class="o">()</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&quot; sets the filename as the title up top</span>
</span><span class='line'><span class="s2">&quot;</span> <span class="nb">set </span>title
</span><span class='line'><span class="s2">&quot; let g:airline#extensions#tabline#enabled = 1</span>
</span><span class='line'>
</span><span class='line'><span class="s2">set noexpandtab &quot;</span> tabs ftw
</span><span class='line'><span class="nb">set </span>smarttab <span class="s2">&quot; tab respects &#39;tabstop&#39;, &#39;shiftwidth&#39;, and &#39;softtabstop&#39;</span>
</span><span class='line'><span class="s2">set tabstop=4 &quot;</span> the visible width of tabs
</span><span class='line'><span class="nb">set </span><span class="nv">softtabstop</span><span class="o">=</span><span class="m">4</span> <span class="s2">&quot; edit as if the tabs are 4 characters wide</span>
</span><span class='line'><span class="s2">set shiftwidth=4 &quot;</span> number of spaces to use <span class="k">for</span> indent and unindent
</span><span class='line'><span class="nb">set </span>shiftround <span class="err">&quot;</span> round indent to a multiple of <span class="s1">&#39;shiftwidth&#39;</span>
</span><span class='line'>autocmd FileType yml setlocal <span class="nv">ts</span><span class="o">=</span><span class="m">2</span> <span class="nv">sts</span><span class="o">=</span><span class="m">2</span> <span class="nv">sw</span><span class="o">=</span><span class="m">2</span> expandtab
</span><span class='line'>autocmd FileType yaml setlocal <span class="nv">ts</span><span class="o">=</span><span class="m">2</span> <span class="nv">sts</span><span class="o">=</span><span class="m">2</span> <span class="nv">sw</span><span class="o">=</span><span class="m">2</span> expandtab
</span></code></pre></td></tr></table></div></figure>


<p>Install the dependencies:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git clone https://github.com/Shougo/neobundle.vim ~/.vim/bundle/neobundle.vim
</span><span class='line'>curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
</span><span class='line'>git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim
</span></code></pre></td></tr></table></div></figure>


<p>Install the plugins:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vim +NeoBundleInstall +qall
</span><span class='line'>vim +PluginInstall +qall
</span></code></pre></td></tr></table></div></figure>


<p>Your vim editor should look like this:</p>

<p><img src="https://user-images.githubusercontent.com/567298/161967893-c19e460a-a8f6-4841-b3cd-de8419522790.png" alt="image" /></p>

<h2>Thank You</h2>

<p>Thanks for reading, if you like my content, check out my <strong><a href="https://ruan.dev">website</a></strong>, read my <strong><a href="http://digests.ruanbekker.com/?via=ruanbekker-blog">newsletter</a></strong> or follow me at <strong><a href="https://twitter.com/ruanbekker">@ruanbekker</a></strong> on Twitter.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Create a Discord Bot in Python]]></title>
    <link href="https://blog.ruanbekker.com/blog/2022/05/05/create-a-discord-bot-in-python/"/>
    <updated>2022-05-05T04:32:12-04:00</updated>
    <id>https://blog.ruanbekker.com/blog/2022/05/05/create-a-discord-bot-in-python</id>
    <content type="html"><![CDATA[<p><img src="https://user-images.githubusercontent.com/567298/166907630-cfd0760e-ddff-46b4-9b82-f163fb90f0ee.png" alt="discord-logo" /></p>

<p>In this tutorial we will develop our own <strong><a href="https://discord.com/">Discord</a></strong> bot using <strong>Python</strong>.</p>

<p>The source code for this bot will be stored in my <a href="https://github.com/ruanbekker/discord-minecraft-python-bot">github repository</a></p>

<h2>About the bot</h2>

<p>First we will create a basic discord bot that will greet the message sender, and then we will create a Minecraft Bot, that will enable us to do the following:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>:: Bot Usage ::
</span><span class='line'>!mc help          : shows help
</span><span class='line'>!mc serverusage   : shows system load in percentage
</span><span class='line'>!mc serverstatus  : shows if the server is online or offline
</span><span class='line'>!mc whoisonline   : shows who is online at the moment</span></code></pre></td></tr></table></div></figure>


<p>Let&rsquo;s get into it.</p>

<h2>Dependencies</h2>

<p>Create a python virtual environment and install the dependent packages:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ python3 -m virtualenv .venv
</span><span class='line'>$ source .venv/bin/activate
</span><span class='line'>$ pip install discord
</span><span class='line'>$ pip install python-dotenv</span></code></pre></td></tr></table></div></figure>


<h2>Create the Discord Application</h2>

<p>We first need to create the application on discord and retrieve a token that our python app will require.</p>

<p>Create a application on discord:</p>

<ul>
<li><a href="https://discordapp.com/developers/applications">https://discordapp.com/developers/applications</a></li>
</ul>


<p>You should see:</p>

<p><img width="1782" alt="image" src="https://user-images.githubusercontent.com/567298/165783157-0747c6f1-af2d-434a-9e3f-1e554f7e69ef.png"></p>

<p>Click &ldquo;New Application&rdquo; and provide it a name:</p>

<p><img width="478" alt="image" src="https://user-images.githubusercontent.com/567298/165783246-68899cd9-c796-41a9-ae9d-88764a83ec0d.png"></p>

<p>Once you create the application you will get a screen to upload a logo, provide a description and most importantly get your application id as well as your public key:</p>

<p><img src="https://user-images.githubusercontent.com/567298/165911250-0fd11a0b-b851-4d65-a898-7049dd73aa60.png" alt="image" /></p>

<p>Then select the Bot section:</p>

<p><img width="1756" alt="image" src="https://user-images.githubusercontent.com/567298/165911940-a85498bd-d572-455b-b38a-50114e6b4144.png"></p>

<p>Then select &ldquo;Add Bot&rdquo;:</p>

<p><img width="717" alt="image" src="https://user-images.githubusercontent.com/567298/165912066-6cd72b29-e0fe-4c4f-b73d-269e48da61d6.png"></p>

<p>Select OAuth2 and select the &ldquo;bot&rdquo; scope:</p>

<p><img width="1751" alt="image" src="https://user-images.githubusercontent.com/567298/165912862-a51a9f29-d876-4ba7-b226-be78214c934d.png"></p>

<p>At the bottom of the page it will provide you with a URL that looks something like:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>https://discord.com/api/oauth2/authorize?client_id=xxxxxxxxxxx&permissions=0&scope=bot</span></code></pre></td></tr></table></div></figure>


<p>Paste the link in your browser and authorize the bot to your server of choice:</p>

<p><img src="https://user-images.githubusercontent.com/567298/165917380-6e8fbbed-9237-4017-a8bd-c27d58bcdc6d.png" alt="image" /></p>

<p>Then click authorize, and you should see your bot appearing on Discord:</p>

<p><img src="https://user-images.githubusercontent.com/567298/165917760-d8c132e9-18d4-4428-b551-c895d4a5102c.png" alt="image" /></p>

<h2>Developing the Discord Bot</h2>

<p>Now we will be building our python discord bot, head back to the &ldquo;Bot&rdquo; section and select &ldquo;Reset Token&rdquo;, then copy and store the token value to a file <code>.env</code>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>DISCORD_TOKEN=xxxxxxxxx</span></code></pre></td></tr></table></div></figure>


<p>So in our current working directory, we should have a file <code>.env</code> with the following content:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cat .env
</span><span class='line'>DISCORD_TOKEN=your-unique-token-value-will-be-here</span></code></pre></td></tr></table></div></figure>


<p>For this demonstration, I will create a private channel in discord called <code>minecraft-test</code> and add the bot <code>MinecraftBot</code> to the channel (this is only for testing, after testing you can add your bot to your other channels for other people to use):</p>

<p><img src="https://user-images.githubusercontent.com/567298/166233812-2596960b-5142-4ad1-809e-96d884ea5c58.png" alt="image" /></p>

<p>For our first test, a basic bot, where we would like to type <code>hello</code> and the bot should greet us by our username, in our <code>mc_discord_bot.py</code> file we will have:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">discord</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">os</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">dotenv</span> <span class="kn">import</span> <span class="n">load_dotenv</span>
</span><span class='line'>
</span><span class='line'><span class="n">BOT_NAME</span> <span class="o">=</span> <span class="s">&quot;MinecraftBot&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">load_dotenv</span><span class="p">()</span>
</span><span class='line'><span class="n">DISCORD_TOKEN</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">getenv</span><span class="p">(</span><span class="s">&quot;DISCORD_TOKEN&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">bot</span> <span class="o">=</span> <span class="n">discord</span><span class="o">.</span><span class="n">Client</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@bot.event</span>
</span><span class='line'><span class="n">async</span> <span class="k">def</span> <span class="nf">on_ready</span><span class="p">():</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="n">f</span><span class="s">&#39;{bot.user} has logged in.&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@bot.event</span>
</span><span class='line'><span class="n">async</span> <span class="k">def</span> <span class="nf">on_message</span><span class="p">(</span><span class="n">message</span><span class="p">):</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">message</span><span class="o">.</span><span class="n">author</span> <span class="o">==</span> <span class="n">bot</span><span class="o">.</span><span class="n">user</span><span class="p">:</span>
</span><span class='line'>        <span class="k">return</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">message</span><span class="o">.</span><span class="n">content</span> <span class="o">==</span> <span class="s">&#39;hello&#39;</span><span class="p">:</span>
</span><span class='line'>        <span class="n">await</span> <span class="n">message</span><span class="o">.</span><span class="n">channel</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="n">f</span><span class="s">&#39;Hey {message.author}&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">message</span><span class="o">.</span><span class="n">content</span> <span class="o">==</span> <span class="s">&#39;goodbye&#39;</span><span class="p">:</span>
</span><span class='line'>        <span class="n">await</span> <span class="n">message</span><span class="o">.</span><span class="n">channel</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="n">f</span><span class="s">&#39;Goodbye {message.author}&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">bot</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="n">DISCORD_TOKEN</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then run the bot:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="err">$</span> <span class="n">python</span> <span class="n">mc_discord_bot</span><span class="o">.</span><span class="n">py</span>
</span><span class='line'><span class="n">MinecraftBot</span> <span class="n">has</span> <span class="n">logged</span> <span class="ow">in</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>And when we type <code>hello</code> and <code>goodbye</code> you can see our bot responds on those values:</p>

<p><img src="https://user-images.githubusercontent.com/567298/166235388-7240a66c-2be4-4343-8f36-398077c4fcf6.png" alt="image" /></p>

<p>Now that we tested our bot, we can clear the <code>mc_discord_bot.py</code> and write our minecraft bot, the requirements of this bot is simple, but we would like the following:</p>

<ul>
<li>use the command <code>!mc</code> to trigger our bot and subcommands for what we want</li>
<li>able to see who is playing minecraft on our server at the moment</li>
<li>able to get the status if the minecraft server is online</li>
<li>able to get the server load percentage (as the bot runs on the minecraft server)</li>
</ul>


<p>This is our complete <code>mc_discord_bot.py</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">discord</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">discord.ext</span> <span class="kn">import</span> <span class="n">commands</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">requests</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">os</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">dotenv</span> <span class="kn">import</span> <span class="n">load_dotenv</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">random</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">multiprocessing</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Variables</span>
</span><span class='line'><span class="n">BOT_NAME</span> <span class="o">=</span> <span class="s">&quot;MinecraftBot&quot;</span>
</span><span class='line'><span class="n">load_dotenv</span><span class="p">()</span>
</span><span class='line'><span class="n">DISCORD_TOKEN</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">getenv</span><span class="p">(</span><span class="s">&quot;DISCORD_TOKEN&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">minecraft_server_url</span> <span class="o">=</span> <span class="s">&quot;lightmc.fun&quot;</span> <span class="c"># this is just an example, and you should use your own minecraft server</span>
</span><span class='line'>
</span><span class='line'><span class="n">bot_help_message</span> <span class="o">=</span> <span class="s">&quot;&quot;&quot;</span>
</span><span class='line'><span class="s">:: Bot Usage ::</span>
</span><span class='line'><span class="s">`!mc help`                   : shows help</span>
</span><span class='line'><span class="s">`!mc serverusage`   : shows system load in percentage</span>
</span><span class='line'><span class="s">`!mc serverstatus` : shows if the server is online or offline</span>
</span><span class='line'><span class="s">`!mc whoisonline`   : shows who is online at the moment</span>
</span><span class='line'><span class="s">&quot;&quot;&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">available_commands</span> <span class="o">=</span> <span class="p">[</span><span class="s">&#39;help&#39;</span><span class="p">,</span> <span class="s">&#39;serverusage&#39;</span><span class="p">,</span> <span class="s">&#39;serverstatus&#39;</span><span class="p">,</span> <span class="s">&#39;whoisonline&#39;</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Set the bot command prefix</span>
</span><span class='line'><span class="n">bot</span> <span class="o">=</span> <span class="n">commands</span><span class="o">.</span><span class="n">Bot</span><span class="p">(</span><span class="n">command_prefix</span><span class="o">=</span><span class="s">&quot;!&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Executes when the bot is ready</span>
</span><span class='line'><span class="nd">@bot.event</span>
</span><span class='line'><span class="n">async</span> <span class="k">def</span> <span class="nf">on_ready</span><span class="p">():</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="n">f</span><span class="s">&#39;{bot.user} succesfully logged in!&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Executes whenever there is an incoming message event</span>
</span><span class='line'><span class="nd">@bot.event</span>
</span><span class='line'><span class="n">async</span> <span class="k">def</span> <span class="nf">on_message</span><span class="p">(</span><span class="n">message</span><span class="p">):</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="n">f</span><span class="s">&#39;Guild: {message.guild.name}, User: {message.author}, Message: {message.content}&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">message</span><span class="o">.</span><span class="n">author</span> <span class="o">==</span> <span class="n">bot</span><span class="o">.</span><span class="n">user</span><span class="p">:</span>
</span><span class='line'>        <span class="k">return</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="n">message</span><span class="o">.</span><span class="n">content</span> <span class="o">==</span> <span class="s">&#39;!mc&#39;</span><span class="p">:</span>
</span><span class='line'>        <span class="n">await</span> <span class="n">message</span><span class="o">.</span><span class="n">channel</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="n">bot_help_message</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="s">&#39;whosonline&#39;</span> <span class="ow">in</span> <span class="n">message</span><span class="o">.</span><span class="n">content</span><span class="p">:</span>
</span><span class='line'>        <span class="k">print</span><span class="p">(</span><span class="n">f</span><span class="s">&#39;{message.author} used {message.content}&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">await</span> <span class="n">bot</span><span class="o">.</span><span class="n">process_commands</span><span class="p">(</span><span class="n">message</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Executes when the command mc is used and we trigger specific functions</span>
</span><span class='line'><span class="c"># when specific arguments are caught in our if statements</span>
</span><span class='line'><span class="nd">@bot.command</span><span class="p">()</span>
</span><span class='line'><span class="n">async</span> <span class="k">def</span> <span class="nf">mc</span><span class="p">(</span><span class="n">ctx</span><span class="p">,</span> <span class="n">arg</span><span class="p">):</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">arg</span> <span class="o">==</span> <span class="s">&#39;help&#39;</span><span class="p">:</span>
</span><span class='line'>        <span class="n">await</span> <span class="n">ctx</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="n">bot_help_message</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="n">arg</span> <span class="o">==</span> <span class="s">&#39;serverusage&#39;</span><span class="p">:</span>
</span><span class='line'>        <span class="n">cpu_count</span> <span class="o">=</span> <span class="n">multiprocessing</span><span class="o">.</span><span class="n">cpu_count</span><span class="p">()</span>
</span><span class='line'>        <span class="n">one</span><span class="p">,</span> <span class="n">five</span><span class="p">,</span> <span class="n">fifteen</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">getloadavg</span><span class="p">()</span>
</span><span class='line'>        <span class="n">load_percentage</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">five</span> <span class="o">/</span> <span class="n">cpu_count</span> <span class="o">*</span> <span class="mi">100</span><span class="p">)</span>
</span><span class='line'>        <span class="n">await</span> <span class="n">ctx</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="n">f</span><span class="s">&#39;Server load is at {load_percentage}%&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="n">arg</span> <span class="o">==</span> <span class="s">&#39;serverstatus&#39;</span><span class="p">:</span>
</span><span class='line'>        <span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">f</span><span class="s">&#39;https://api.mcsrvstat.us/2/{minecraft_server_url}&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">json</span><span class="p">()</span>
</span><span class='line'>        <span class="n">server_status</span> <span class="o">=</span> <span class="n">response</span><span class="p">[</span><span class="s">&#39;online&#39;</span><span class="p">]</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">server_status</span> <span class="o">==</span> <span class="bp">True</span><span class="p">:</span>
</span><span class='line'>            <span class="n">server_status</span> <span class="o">=</span> <span class="s">&#39;online&#39;</span>
</span><span class='line'>        <span class="n">await</span> <span class="n">ctx</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="n">f</span><span class="s">&#39;Server is {server_status}&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="n">arg</span> <span class="o">==</span> <span class="s">&#39;whoisonline&#39;</span><span class="p">:</span>
</span><span class='line'>        <span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;https://api.mcsrvstat.us/2/{minecraft_server_url}&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">json</span><span class="p">()</span>
</span><span class='line'>        <span class="n">players_status</span> <span class="o">=</span> <span class="n">response</span><span class="p">[</span><span class="s">&#39;players&#39;</span><span class="p">]</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">players_status</span><span class="p">[</span><span class="s">&#39;online&#39;</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
</span><span class='line'>            <span class="n">players_online_message</span> <span class="o">=</span> <span class="s">&#39;No one is online&#39;</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">players_status</span><span class="p">[</span><span class="s">&#39;online&#39;</span><span class="p">]</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
</span><span class='line'>            <span class="n">players_online_username</span> <span class="o">=</span> <span class="n">players_status</span><span class="p">[</span><span class="s">&#39;list&#39;</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'>            <span class="n">players_online_message</span> <span class="o">=</span> <span class="n">f</span><span class="s">&#39;1 player is online: {players_online_username}&#39;</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">players_status</span><span class="p">[</span><span class="s">&#39;online&#39;</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">:</span>
</span><span class='line'>            <span class="n">po</span> <span class="o">=</span> <span class="n">players_status</span><span class="p">[</span><span class="s">&#39;online&#39;</span><span class="p">]</span>
</span><span class='line'>            <span class="n">players_online_usernames</span> <span class="o">=</span> <span class="n">players_status</span><span class="p">[</span><span class="s">&#39;list&#39;</span><span class="p">]</span>
</span><span class='line'>            <span class="n">joined_usernames</span> <span class="o">=</span> <span class="s">&quot;, &quot;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">players_online_usernames</span><span class="p">)</span>
</span><span class='line'>            <span class="n">players_online_message</span> <span class="o">=</span> <span class="n">f</span><span class="s">&#39;{po} players are online: {joined_usernames}&#39;</span>
</span><span class='line'>        <span class="n">await</span> <span class="n">ctx</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="n">f</span><span class="s">&#39;{players_online_message}&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">bot</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="n">DISCORD_TOKEN</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>And now we can start our bot:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>python mc_discord_bot.py
</span></code></pre></td></tr></table></div></figure>


<p>And we can run our help command:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>!mc <span class="nb">help</span>
</span></code></pre></td></tr></table></div></figure>


<p>Which will prompt our help message, and then test out the others:</p>

<p><img src="https://user-images.githubusercontent.com/567298/166237617-c2df1dd1-99bc-4558-8eb8-b1159e850836.png" alt="image" /></p>

<h2>Resources</h2>

<p>Thank you to the following authors, which really helped me doing this:</p>

<ul>
<li><a href="https://www.freecodecamp.org/news/create-a-discord-bot-with-python/">https://www.freecodecamp.org/news/create-a-discord-bot-with-python/</a></li>
<li><a href="https://betterprogramming.pub/coding-a-discord-bot-with-python-64da9d6cade7">https://betterprogramming.pub/coding-a-discord-bot-with-python-64da9d6cade7</a></li>
<li><a href="https://dev.to/codesphere/create-a-discord-bot-in-minutes-with-python-2jgp">https://dev.to/codesphere/create-a-discord-bot-in-minutes-with-python-2jgp</a></li>
</ul>


<h2>Thank You</h2>

<p>Thanks for reading, if you like my content, check out my <strong><a href="https://ruan.dev">website</a></strong>, read my <strong><a href="http://digests.ruanbekker.com/?via=ruanbekker-blog">newsletter</a></strong> or follow me at <strong><a href="https://twitter.com/ruanbekker">@ruanbekker</a></strong> on Twitter.</p>

<p>The source code for this bot will be stored in my github repository:
- <a href="https://github.com/ruanbekker/discord-minecraft-python-bot">https://github.com/ruanbekker/discord-minecraft-python-bot</a></p>

<p>I&rsquo;ve started a brand new Discord server, not much happening at the moment, but planning to share and distribute tech content and a place for like minded people to hang out. If that&rsquo;s something you are interested in, feel free to join on <strong><a href="https://discord.gg/bPmc4Stchd">this link</a></strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Publish and Use Your Ansible Role From Git]]></title>
    <link href="https://blog.ruanbekker.com/blog/2022/04/19/publish-and-use-your-ansible-role-from-git/"/>
    <updated>2022-04-19T04:35:09-04:00</updated>
    <id>https://blog.ruanbekker.com/blog/2022/04/19/publish-and-use-your-ansible-role-from-git</id>
    <content type="html"><![CDATA[<p>In this tutorial we will be creating a ansible role, publish our ansible role to github, then we will install the role locally and create a ansible playbook to use the ansible role.</p>

<p>The source code for this blog post will be available on my <a href="https://blog.ruanbekker.com/blog/2022/04/19/publish-and-use-your-ansible-role-from-git/">github</a> repository.</p>

<h2>Ansible Installation</h2>

<p>Create a virtual environment with Python:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ virtualenv .venv -p python3
</span><span class='line'>$ source .venv/bin/activate</span></code></pre></td></tr></table></div></figure>


<p>Install ansible with pip:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ pip install ansible==4.4.0</span></code></pre></td></tr></table></div></figure>


<p>Now that we have ansible installed, we can create our role.</p>

<h2>Initialize Ansible Role</h2>

<p>A Ansible Role consists of a couple of files, and using <code>ansible-galaxy</code> makes it easy initializing a boilerplate structure to begin with::</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ansible-galaxy init --init-path roles ssh_config
</span><span class='line'>- Role ssh_config was created successfully</span></code></pre></td></tr></table></div></figure>


<p>The role that we created is named <code>ssh_config</code> and will be placed under the directory <code>roles</code> under our current working directory.</p>

<h2>Define Role Tasks</h2>

<p>Create the dummy task under <code>roles/ssh_config/tasks/main.yml</code>:</p>

<script src="https://gist.github.com/ruanbekker/4971be45476915ba877bb444a9ff1c0b.js"></script>


<p>Then define the defaults environment values in the file <code>roles/ssh_config/defaults/main.yml</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="nn">---</span>
</span><span class='line'><span class="c1"># defaults file for ssh_config</span>
</span><span class='line'><span class="l-Scalar-Plain">ssh_port</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">22</span>
</span></code></pre></td></tr></table></div></figure>


<p>The value of <code>ssh_port</code> will default to <code>22</code> if we don&rsquo;t define it in our variables.</p>

<h2>Commit to Git</h2>

<p>The assumption is made here that you already created a git repository and that your access is sorted. Add the files and commit it to git:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">$ git add .</span>
</span><span class='line'><span class="l-Scalar-Plain">$ git commit -m &quot;Your message&quot;</span>
</span><span class='line'><span class="l-Scalar-Plain">$ git push origin main</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now your ansible role should be commited and visible in git.</p>

<h2>SSH Config Client Side</h2>

<p>I will be referencing the git source url via SSH, and since I am using my default ssh key, the ssh config isn&rsquo;t really needed, but if you are using a different version control system, with different ports or different ssh keys, the following ssh config snippet may be useful:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">$ cat ~/.ssh/config</span>
</span><span class='line'><span class="l-Scalar-Plain">Host github.com</span>
</span><span class='line'>    <span class="l-Scalar-Plain">User git</span>
</span><span class='line'>    <span class="l-Scalar-Plain">Port 22</span>
</span><span class='line'>    <span class="l-Scalar-Plain">IdentityFile ~/.ssh/id_rsa</span>
</span></code></pre></td></tr></table></div></figure>


<p>If you won&rsquo;t be using SSH as the source url in your ansible setup for your role, you can skip the SSH setup.</p>

<h2>Installing the Ansible Role from Git</h2>

<p>When installing roles, ansible installs them by default under: <code>~/.ansible/roles</code>, <code>/usr/share/ansible/roles</code> or <code>/etc/ansible/roles</code>.</p>

<p>From our previous steps, we still have the ansible role content locally (not under the default installed directory), so by saying installing the role kinda sounds like we are doing double the work. But the intention is that you have your ansible role centralized and versioned on git, and on new servers or workstations where you want to consume the role from, that specific role, won&rsquo;t be present on that source.</p>

<p>To install the role from Git, we need to populate the <code>requirements.yml</code> file:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">$ mkdir ~/my-project</span>
</span><span class='line'><span class="l-Scalar-Plain">$ cd ~/my-project</span>
</span></code></pre></td></tr></table></div></figure>


<p>The requirements file is used to define where our role is located, which version and the type of version control, the <code>requirements.yml</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="nn">---</span>
</span><span class='line'><span class="l-Scalar-Plain">roles</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">ssh_config</span>
</span><span class='line'>    <span class="l-Scalar-Plain">src</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">ssh://git@github.com/ruanbekker/ansible-demo-role.git</span>
</span><span class='line'>    <span class="l-Scalar-Plain">version</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">main</span>
</span><span class='line'>    <span class="l-Scalar-Plain">scm</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">git</span>
</span></code></pre></td></tr></table></div></figure>


<p>For other variations of using the requirements file, you can have a look at their <a href="https://galaxy.ansible.com/docs/using/installing.html#installing-multiple-roles-from-a-file">documentation</a></p>

<p>Then install the ansible role from our requirements file (I have used <code>--force</code> to overwrite my current one while testing):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">$ ansible-galaxy install -r requirements.yml --force</span>
</span><span class='line'><span class="l-Scalar-Plain">Starting galaxy role install process</span>
</span><span class='line'><span class="l-Scalar-Plain">- changing role ssh_config from main to main</span>
</span><span class='line'><span class="l-Scalar-Plain">- extracting ssh_config to /Users/ruan/.ansible/roles/ssh_config</span>
</span><span class='line'><span class="l-Scalar-Plain">- ssh_config (main) was installed successfully</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Ansible Playbook</h2>

<p>Define the ansible playbook to use the role that we installed from git, in a file called <code>playbook.yml</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="nn">---</span>
</span><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">hosts</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">localhost</span>
</span><span class='line'>  <span class="l-Scalar-Plain">roles</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">ssh_config</span>
</span><span class='line'>  <span class="l-Scalar-Plain">vars</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">ssh_port</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">2202</span>
</span></code></pre></td></tr></table></div></figure>


<p>Run the ansible playbook:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">$ ansible-playbook playbook.yml</span>
</span><span class='line'><span class="l-Scalar-Plain">PLAY [localhost] *********************************************************************************************</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">TASK [Gathering Facts] ***************************************************************************************</span>
</span><span class='line'><span class="l-Scalar-Plain">ok</span><span class="p-Indicator">:</span> <span class="p-Indicator">[</span><span class="nv">localhost</span><span class="p-Indicator">]</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">TASK [ssh_config</span> <span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Dummy task] *******************************************************************************</span>
</span><span class='line'><span class="l-Scalar-Plain">ok</span><span class="p-Indicator">:</span> <span class="p-Indicator">[</span><span class="nv">localhost</span><span class="p-Indicator">]</span> <span class="l-Scalar-Plain">=&gt; {</span>
</span><span class='line'>    <span class="l-Scalar-Plain">&quot;msg&quot;</span><span class="p-Indicator">:</span> <span class="s">&quot;This</span><span class="nv"> </span><span class="s">is</span><span class="nv"> </span><span class="s">a</span><span class="nv"> </span><span class="s">dummy</span><span class="nv"> </span><span class="s">task</span><span class="nv"> </span><span class="s">changing</span><span class="nv"> </span><span class="s">ssh</span><span class="nv"> </span><span class="s">port</span><span class="nv"> </span><span class="s">to</span><span class="nv"> </span><span class="s">2202.&quot;</span>
</span><span class='line'><span class="err">}</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">PLAY RECAP ***************************************************************************************************</span>
</span><span class='line'><span class="l-Scalar-Plain">localhost</span>                  <span class="p-Indicator">:</span> <span class="l-Scalar-Plain">ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Thank You</h2>

<p>Thanks for reading, if you like my content, check out my <strong><a href="https://ruan.dev">website</a></strong>, read my <strong><a href="http://digests.ruanbekker.com/?via=ruanbekker-blog">newsletter</a></strong> or follow me at <strong><a href="https://twitter.com/ruanbekker">@ruanbekker</a></strong> on Twitter.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Provision a AWS EC2 Instance With Terraform]]></title>
    <link href="https://blog.ruanbekker.com/blog/2022/04/16/provision-a-aws-ec2-instance-with-terraform/"/>
    <updated>2022-04-16T19:04:08-04:00</updated>
    <id>https://blog.ruanbekker.com/blog/2022/04/16/provision-a-aws-ec2-instance-with-terraform</id>
    <content type="html"><![CDATA[<p>In this tutorial I will demonstrate how to use Terraform (a Infrastructure as Code Tool), to provision a AWS EC2 Instance and the source code that we will be using in this tutorial will be published to my <a href="https://github.com/ruanbekker/terraformfiles/tree/master/aws-ec2-instance">terraformfiles github repository</a>.</p>

<h2>Requirements</h2>

<p>To follow along this tutorial, you will need an AWS Account and Terraform installed</p>

<h2>Terraform</h2>

<p>To install Terraform for your operating system, you can follow <a href="https://learn.hashicorp.com/tutorials/terraform/install-cli">Terraform Installation Documentation</a>, I am using Mac OSx, so for me it will be:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>brew tap hashicorp/tap
</span><span class='line'>brew install hashicorp/tap/terraform
</span></code></pre></td></tr></table></div></figure>


<p>To verify the installation, we can run <code>terraform version</code> and my output shows:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Terraform v1.1.8
</span><span class='line'>on darwin_amd64
</span></code></pre></td></tr></table></div></figure>


<h2>Terraform Project Structure</h2>

<p>Create the directory:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir terraform-aws-ec2
</span><span class='line'><span class="nb">cd </span>terraform-aws-ec2
</span></code></pre></td></tr></table></div></figure>


<p>Create the following files: <code>main.tf</code>, <code>providers.tf</code>, <code>variables.tf</code>, <code>outputs.tf</code>, <code>locals.tf</code> and <code>terraform.tfvars</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>touch main.tf providers.tf variables.tf outputs.tf locals.tf terraform.tfvars
</span></code></pre></td></tr></table></div></figure>


<h2>Define Terraform Configuration Code</h2>

<p>First we need to define the aws provider, which we will do in <code>providers.tf</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>terraform <span class="o">{</span>
</span><span class='line'>  required_providers <span class="o">{</span>
</span><span class='line'>    <span class="nv">aws</span> <span class="o">=</span> <span class="o">{</span>
</span><span class='line'>      <span class="nv">version</span> <span class="o">=</span> <span class="s2">&quot;~&gt; 3.27&quot;</span>
</span><span class='line'>      <span class="nb">source</span> <span class="o">=</span> <span class="s2">&quot;hashicorp/aws&quot;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>provider <span class="s2">&quot;aws&quot;</span> <span class="o">{</span>
</span><span class='line'>  <span class="nv">region</span>  <span class="o">=</span> <span class="s2">&quot;eu-west-1&quot;</span>
</span><span class='line'>  <span class="nv">profile</span> <span class="o">=</span> <span class="s2">&quot;default&quot;</span>
</span><span class='line'>  <span class="nv">shared_credentials_file</span> <span class="o">=</span> <span class="s2">&quot;~/.aws/credentials&quot;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>You will notice that I am defining my profile name <code>default</code> from the <code>~/.aws/credentials</code> credential provider in order for terraform to authenticate with AWS.</p>

<p>Next I am defining the <code>main.tf</code> which will be the file where we define our aws resources:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>data <span class="s2">&quot;aws_ami&quot;</span> <span class="s2">&quot;latest_ubuntu&quot;</span> <span class="o">{</span>
</span><span class='line'>  <span class="nv">most_recent</span> <span class="o">=</span> <span class="nb">true</span>
</span><span class='line'><span class="nb">  </span><span class="nv">owners</span> <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;099720109477&quot;</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>  filter <span class="o">{</span>
</span><span class='line'>    <span class="nv">name</span>   <span class="o">=</span> <span class="s2">&quot;name&quot;</span>
</span><span class='line'>    <span class="nv">values</span> <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;ubuntu/images/hvm-ssd/ubuntu-focal-20.04-*-server-*&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  filter <span class="o">{</span>
</span><span class='line'>    <span class="nv">name</span>   <span class="o">=</span> <span class="s2">&quot;virtualization-type&quot;</span>
</span><span class='line'>    <span class="nv">values</span> <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;hvm&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  filter <span class="o">{</span>
</span><span class='line'>    <span class="nv">name</span>   <span class="o">=</span> <span class="s2">&quot;root-device-type&quot;</span>
</span><span class='line'>    <span class="nv">values</span> <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;ebs&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  filter <span class="o">{</span>
</span><span class='line'>    <span class="nv">name</span>   <span class="o">=</span> <span class="s2">&quot;architecture&quot;</span>
</span><span class='line'>    <span class="nv">values</span> <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;x86_64&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>data <span class="s2">&quot;aws_iam_policy_document&quot;</span> <span class="s2">&quot;assume_role_policy&quot;</span> <span class="o">{</span>
</span><span class='line'>  statement <span class="o">{</span>
</span><span class='line'>    <span class="nv">actions</span> <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;sts:AssumeRole&quot;</span><span class="o">]</span>
</span><span class='line'>    principals <span class="o">{</span>
</span><span class='line'>      <span class="nb">type</span>        <span class="o">=</span> <span class="s2">&quot;Service&quot;</span>
</span><span class='line'>      <span class="nv">identifiers</span> <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;ec2.amazonaws.com&quot;</span><span class="o">]</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>data <span class="s2">&quot;aws_iam_policy&quot;</span> <span class="s2">&quot;ec2_read_only_access&quot;</span> <span class="o">{</span>
</span><span class='line'>  <span class="nv">arn</span> <span class="o">=</span> <span class="s2">&quot;arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>resource <span class="s2">&quot;aws_iam_role&quot;</span> <span class="s2">&quot;ec2_access_role&quot;</span> <span class="o">{</span>
</span><span class='line'>  <span class="nv">name</span>               <span class="o">=</span> <span class="s2">&quot;${local.project_name}-ec2-role&quot;</span>
</span><span class='line'>  <span class="nv">assume_role_policy</span> <span class="o">=</span> data.aws_iam_policy_document.assume_role_policy.json
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>resource <span class="s2">&quot;aws_iam_policy_attachment&quot;</span> <span class="s2">&quot;readonly_role_policy_attach&quot;</span> <span class="o">{</span>
</span><span class='line'>  <span class="nv">name</span>       <span class="o">=</span> <span class="s2">&quot;${local.project_name}-ec2-role-attachment&quot;</span>
</span><span class='line'>  <span class="nv">roles</span>      <span class="o">=</span> <span class="o">[</span>aws_iam_role.ec2_access_role.name<span class="o">]</span>
</span><span class='line'>  <span class="nv">policy_arn</span> <span class="o">=</span> data.aws_iam_policy.ec2_read_only_access.arn
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>resource <span class="s2">&quot;aws_iam_instance_profile&quot;</span> <span class="s2">&quot;instance_profile&quot;</span> <span class="o">{</span>
</span><span class='line'>  <span class="nv">name</span>  <span class="o">=</span> <span class="s2">&quot;${local.project_name}-ec2-instance-profile&quot;</span>
</span><span class='line'>  <span class="nv">role</span> <span class="o">=</span> aws_iam_role.ec2_access_role.name
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>resource <span class="s2">&quot;aws_security_group&quot;</span> <span class="s2">&quot;ec2&quot;</span> <span class="o">{</span>
</span><span class='line'>    <span class="nv">name</span>        <span class="o">=</span> <span class="s2">&quot;${local.project_name}-ec2-sg&quot;</span>
</span><span class='line'>    <span class="nv">description</span> <span class="o">=</span> <span class="s2">&quot;${local.project_name}-ec2-sg&quot;</span>
</span><span class='line'>    <span class="nv">vpc_id</span>      <span class="o">=</span> var.vpc_id
</span><span class='line'>
</span><span class='line'>    <span class="nv">tags</span> <span class="o">=</span> merge<span class="o">(</span>
</span><span class='line'>      var.default_tags,
</span><span class='line'>      <span class="o">{</span>
</span><span class='line'>       <span class="nv">Name</span> <span class="o">=</span> <span class="s2">&quot;${local.project_name}-ec2-sg&quot;</span>
</span><span class='line'>      <span class="o">}</span>,
</span><span class='line'>    <span class="o">)</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>resource <span class="s2">&quot;aws_security_group_rule&quot;</span> <span class="s2">&quot;ssh&quot;</span> <span class="o">{</span>
</span><span class='line'>    <span class="nv">description</span>       <span class="o">=</span> <span class="s2">&quot;allows public ssh access to ec2&quot;</span>
</span><span class='line'>    <span class="nv">security_group_id</span> <span class="o">=</span> aws_security_group.ec2.id
</span><span class='line'>    <span class="nb">type</span>              <span class="o">=</span> <span class="s2">&quot;ingress&quot;</span>
</span><span class='line'>    <span class="nv">protocol</span>          <span class="o">=</span> <span class="s2">&quot;tcp&quot;</span>
</span><span class='line'>    <span class="nv">from_port</span>         <span class="o">=</span> 22
</span><span class='line'>    <span class="nv">to_port</span>           <span class="o">=</span> 22
</span><span class='line'>    <span class="nv">cidr_blocks</span>       <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;0.0.0.0/0&quot;</span><span class="o">]</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>resource <span class="s2">&quot;aws_security_group_rule&quot;</span> <span class="s2">&quot;egress&quot;</span> <span class="o">{</span>
</span><span class='line'>    <span class="nv">description</span>       <span class="o">=</span> <span class="s2">&quot;allows egress&quot;</span>
</span><span class='line'>    <span class="nv">security_group_id</span> <span class="o">=</span> aws_security_group.ec2.id
</span><span class='line'>    <span class="nb">type</span>              <span class="o">=</span> <span class="s2">&quot;egress&quot;</span>
</span><span class='line'>    <span class="nv">protocol</span>          <span class="o">=</span> <span class="s2">&quot;-1&quot;</span>
</span><span class='line'>    <span class="nv">from_port</span>         <span class="o">=</span> 0
</span><span class='line'>    <span class="nv">to_port</span>           <span class="o">=</span> 0
</span><span class='line'>    <span class="nv">cidr_blocks</span>       <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;0.0.0.0/0&quot;</span><span class="o">]</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>resource <span class="s2">&quot;aws_instance&quot;</span> <span class="s2">&quot;ec2&quot;</span> <span class="o">{</span>
</span><span class='line'>  <span class="nv">ami</span>                         <span class="o">=</span> data.aws_ami.latest_ubuntu.id
</span><span class='line'>  <span class="nv">instance_type</span>               <span class="o">=</span> var.instance_type
</span><span class='line'>  <span class="nv">subnet_id</span>                   <span class="o">=</span> var.subnet_id
</span><span class='line'>  <span class="nv">key_name</span>                    <span class="o">=</span> var.ssh_keyname
</span><span class='line'>  <span class="nv">vpc_security_group_ids</span>      <span class="o">=</span> <span class="o">[</span>aws_security_group.ec2.id<span class="o">]</span>
</span><span class='line'>  <span class="nv">associate_public_ip_address</span> <span class="o">=</span> <span class="nb">true</span>
</span><span class='line'><span class="nb">  </span><span class="nv">monitoring</span>                  <span class="o">=</span> <span class="nb">true</span>
</span><span class='line'><span class="nb">  </span><span class="nv">iam_instance_profile</span>        <span class="o">=</span> aws_iam_instance_profile.instance_profile.name
</span><span class='line'>
</span><span class='line'>  lifecycle <span class="o">{</span>
</span><span class='line'>    <span class="nv">ignore_changes</span>            <span class="o">=</span> <span class="o">[</span>subnet_id, ami<span class="o">]</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  root_block_device <span class="o">{</span>
</span><span class='line'>      <span class="nv">volume_type</span>           <span class="o">=</span> <span class="s2">&quot;gp2&quot;</span>
</span><span class='line'>      <span class="nv">volume_size</span>           <span class="o">=</span> var.ebs_root_size_in_gb
</span><span class='line'>      <span class="nv">encrypted</span>             <span class="o">=</span> <span class="nb">false</span>
</span><span class='line'><span class="nb">      </span><span class="nv">delete_on_termination</span> <span class="o">=</span> <span class="nb">true</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nv">tags</span> <span class="o">=</span> merge<span class="o">(</span>
</span><span class='line'>    var.default_tags,
</span><span class='line'>    <span class="o">{</span>
</span><span class='line'>     <span class="nv">Name</span> <span class="o">=</span> <span class="s2">&quot;${local.project_name}&quot;</span>
</span><span class='line'>    <span class="o">}</span>,
</span><span class='line'>  <span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>A couple of things are defined here:</p>

<ul>
<li>A data resource to fetch the latest Ubuntu 20.04 AMI</li>
<li>The IAM Role and Policy that we will use to associate to our EC2 Instance Profile</li>
<li>The EC2 Security Group</li>
<li>The EC2 Instance</li>
<li>The VPC ID and Subnet ID are required variables which we will set in <code>terraform.tfvars</code></li>
</ul>


<p>The next file will be our <code>variables.tf</code> file where we will define all our variable definitions:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>variable <span class="s2">&quot;default_tags&quot;</span> <span class="o">{</span>
</span><span class='line'>  <span class="nv">default</span> <span class="o">=</span> <span class="o">{</span>
</span><span class='line'>    <span class="nv">Environment</span> <span class="o">=</span> <span class="s2">&quot;test&quot;</span>
</span><span class='line'>    <span class="nv">Owner</span>       <span class="o">=</span> <span class="s2">&quot;ruan.bekker&quot;</span>
</span><span class='line'>    <span class="nv">Project</span>     <span class="o">=</span> <span class="s2">&quot;terraform-blogpost&quot;</span>
</span><span class='line'>    <span class="nv">CostCenter</span>  <span class="o">=</span> <span class="s2">&quot;engineering&quot;</span>
</span><span class='line'>    <span class="nv">ManagedBy</span>   <span class="o">=</span> <span class="s2">&quot;terraform&quot;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>variable <span class="s2">&quot;aws_region&quot;</span> <span class="o">{</span>
</span><span class='line'>  <span class="nb">type</span>        <span class="o">=</span> string
</span><span class='line'>  <span class="nv">default</span>     <span class="o">=</span> <span class="s2">&quot;eu-west-1&quot;</span>
</span><span class='line'>  <span class="nv">description</span> <span class="o">=</span> <span class="s2">&quot;the region to use in aws&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>variable <span class="s2">&quot;vpc_id&quot;</span> <span class="o">{</span>
</span><span class='line'>  <span class="nb">type</span>        <span class="o">=</span> string
</span><span class='line'>  <span class="nv">description</span> <span class="o">=</span> <span class="s2">&quot;the vpc to use&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>variable <span class="s2">&quot;ssh_keyname&quot;</span> <span class="o">{</span>
</span><span class='line'>  <span class="nb">type</span>        <span class="o">=</span> string
</span><span class='line'>  <span class="nv">description</span> <span class="o">=</span> <span class="s2">&quot;ssh key to use&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>variable <span class="s2">&quot;subnet_id&quot;</span> <span class="o">{</span>
</span><span class='line'>  <span class="nb">type</span>        <span class="o">=</span> string
</span><span class='line'>  <span class="nv">description</span> <span class="o">=</span> <span class="s2">&quot;the subnet id where the ec2 instance needs to be placed in&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>variable <span class="s2">&quot;instance_type&quot;</span> <span class="o">{</span>
</span><span class='line'>  <span class="nb">type</span>        <span class="o">=</span> string
</span><span class='line'>  <span class="nv">default</span>     <span class="o">=</span> <span class="s2">&quot;t3.nano&quot;</span>
</span><span class='line'>  <span class="nv">description</span> <span class="o">=</span> <span class="s2">&quot;the instance type to use&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>variable <span class="s2">&quot;project_id&quot;</span> <span class="o">{</span>
</span><span class='line'>  <span class="nb">type</span>        <span class="o">=</span> string
</span><span class='line'>  <span class="nv">default</span>     <span class="o">=</span> <span class="s2">&quot;terraform-blogpost&quot;</span>
</span><span class='line'>  <span class="nv">description</span> <span class="o">=</span> <span class="s2">&quot;the project name&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>variable <span class="s2">&quot;ebs_root_size_in_gb&quot;</span> <span class="o">{</span>
</span><span class='line'>  <span class="nb">type</span>        <span class="o">=</span> number
</span><span class='line'>  <span class="nv">default</span>     <span class="o">=</span> 10
</span><span class='line'>  <span class="nv">description</span> <span class="o">=</span> <span class="s2">&quot;the size in GB for the root disk&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>variable <span class="s2">&quot;environment_name&quot;</span> <span class="o">{</span>
</span><span class='line'>   <span class="nb">type</span>    <span class="o">=</span> string
</span><span class='line'>   <span class="nv">default</span> <span class="o">=</span> <span class="s2">&quot;dev&quot;</span>
</span><span class='line'>   <span class="nv">description</span> <span class="o">=</span> <span class="s2">&quot;the environment this resource will go to (assumption being made theres one account)&quot;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The next file is our <code>locals.tf</code> which just concatenates our project id and environment name:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>locals <span class="o">{</span>
</span><span class='line'>  <span class="nv">project_name</span> <span class="o">=</span> <span class="s2">&quot;${var.project_id}-${var.environment_name}&quot;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then our <code>outputs.tf</code> for the values that terraform should output:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>output <span class="s2">&quot;id&quot;</span> <span class="o">{</span>
</span><span class='line'>  <span class="nv">description</span> <span class="o">=</span> <span class="s2">&quot;The ec2 instance id&quot;</span>
</span><span class='line'>  <span class="nv">value</span>       <span class="o">=</span> aws_instance.ec2.id
</span><span class='line'>  <span class="nv">sensitive</span>   <span class="o">=</span> <span class="nb">false</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>output <span class="s2">&quot;ip&quot;</span> <span class="o">{</span>
</span><span class='line'>  <span class="nv">description</span> <span class="o">=</span> <span class="s2">&quot;The ec2 instance public ip address&quot;</span>
</span><span class='line'>  <span class="nv">value</span>       <span class="o">=</span> aws_instance.ec2.public_ip
</span><span class='line'>  <span class="nv">sensitive</span>   <span class="o">=</span> <span class="nb">false</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>output <span class="s2">&quot;subnet_id&quot;</span> <span class="o">{</span>
</span><span class='line'>  <span class="nv">description</span> <span class="o">=</span> <span class="s2">&quot;the subnet id which will be used&quot;</span>
</span><span class='line'>  <span class="nv">value</span>       <span class="o">=</span> var.subnet_id
</span><span class='line'>  <span class="nv">sensitive</span>   <span class="o">=</span> <span class="nb">false</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then lastly our <code>terraform.tfvars</code>, which you will need to supply your own values to match your AWS Account:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># required</span>
</span><span class='line'><span class="nv">vpc_id</span> <span class="o">=</span> <span class="s2">&quot;vpc-063d7xxxxxxxxxxxx&quot;</span>
</span><span class='line'><span class="nv">ssh_keyname</span> <span class="o">=</span> <span class="s2">&quot;ireland-key&quot;</span>
</span><span class='line'><span class="nv">subnet_id</span> <span class="o">=</span> <span class="s2">&quot;subnet-04b3xxxxxxxxxxxxx&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Deploy EC2 Instance</h2>

<p>Now that all our configuration is in place, we need to intialize terraform by downloading the providers:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>terraform init
</span></code></pre></td></tr></table></div></figure>


<p>Once the terraform init has completed, we can run a <code>terraform plan</code> which will show us what terraform will do. Since the <code>terraform.tfvars</code> are the default file for variables, we don&rsquo;t have to specify the name of the file, but since I want to be excplicit, I will include it (should you want to change the file name):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>terraform plan -var-file<span class="o">=</span><span class="s2">&quot;terraform.tfvars&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now it&rsquo;s a good time to review what terraform wants to action by viewing the plan output, once you are happy you can deploy the changes by running a <code>terraform apply</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>terraform apply -var-file<span class="o">=</span><span class="s2">&quot;terraform.tfvars&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Optional: You can override variables by either updating the <code>terraform.tfvars</code> or you can append them with terraform apply <code>-var-file="terraform.tfvars" -var="ssh_key=default_key"</code>, a successful output should show something like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Outputs:
</span><span class='line'><span class="nv">id</span> <span class="o">=</span> <span class="s2">&quot;i-0dgacxxxxxxxxxxxx&quot;</span>
</span><span class='line'><span class="nv">ip</span> <span class="o">=</span> <span class="s2">&quot;18.26.xxx.92&quot;</span>
</span><span class='line'><span class="nv">subnet</span> <span class="o">=</span> <span class="s2">&quot;subnet-04b3xxxxxxxxxxxxx&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Access your EC2 Instance</h2>

<p>You can access the instance by SSH'ing to the IP that was returned by the output as well as the SSH key name that you provided, or you can make use of the <code>terraform output</code> to access the output value:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ssh -i ~/.ssh/id_rsa ubuntu@<span class="k">$(</span>terraform output -raw ip<span class="k">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Cleanup</h2>

<p>To delete the infrastructure that Terraform provisioned:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>terraform destroy
</span></code></pre></td></tr></table></div></figure>


<h2>Thank You</h2>

<p>Thanks for reading, if you like my content, check out my <strong><a href="https://ruan.dev">website</a></strong>, read my <strong><a href="http://digests.ruanbekker.com/?via=ruanbekker-blog">newsletter</a></strong> or follow me at <strong><a href="https://twitter.com/ruanbekker">@ruanbekker</a></strong> on Twitter.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Matrix Bot Using SimpleMatrixBotlib in Python]]></title>
    <link href="https://blog.ruanbekker.com/blog/2022/03/29/matrix-bot-using-simplematrixbotlib-in-python/"/>
    <updated>2022-03-29T18:50:43-04:00</updated>
    <id>https://blog.ruanbekker.com/blog/2022/03/29/matrix-bot-using-simplematrixbotlib-in-python</id>
    <content type="html"><![CDATA[<p>In this tutorial we will setup a python bot for our matrix chat server. We will only do a couple of basic commands, so that you have a solid base to build from.</p>

<h2>Matrix Server</h2>

<p>In our <a href="https://blog.ruanbekker.com/blog/2022/03/29/setup-matrix-and-element-chat-server/">previous post</a> we&rsquo;ve setup a matrix and element server, so if you are following along, head over to that post to setup your matrix server before continuing.</p>

<h2>Matrix Python Bot</h2>

<p>We will be using <a href="https://simple-matrix-bot-lib.readthedocs.io/en/latest/index.html">simple-matrix-bot-lib</a> as our bot, so first we need to install it:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>python3 -m pip install simplematrixbotlib
</span><span class='line'>python3 -m pip install requests
</span></code></pre></td></tr></table></div></figure>


<p>We will need to authenticate with a user, so I will create a dedicated bot user:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker <span class="nb">exec</span> -it matrix_synapse_1 bash
</span><span class='line'>&gt; register_new_matrix_user -c /data/homeserver.yaml http://localhost:8008
</span><span class='line'>
</span><span class='line'>New user localpart <span class="o">[</span>root<span class="o">]</span>: bot
</span><span class='line'>Password:
</span><span class='line'>Confirm password:
</span><span class='line'>Make admin <span class="o">[</span>no<span class="o">]</span>: no
</span><span class='line'>Sending registration request...
</span><span class='line'>Success!
</span></code></pre></td></tr></table></div></figure>


<p>The most basic bot is the echo bot, which just returns your message:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">subprocess</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">simplematrixbotlib</span> <span class="kn">as</span> <span class="nn">botlib</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">urllib.request</span> <span class="kn">import</span> <span class="n">ssl</span><span class="p">,</span> <span class="n">socket</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">datetime</span><span class="o">,</span> <span class="nn">smtplib</span>
</span><span class='line'>
</span><span class='line'><span class="n">MATRIX_URL</span><span class="o">=</span><span class="s">&quot;https://matrix.foodmain.co.za&quot;</span>
</span><span class='line'><span class="n">MATRIX_USER</span><span class="o">=</span><span class="s">&quot;@foobot:matrix.foodmain.co.za&quot;</span>
</span><span class='line'><span class="n">MATRIX_PASS</span><span class="o">=</span><span class="s">&quot;foo&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">creds</span> <span class="o">=</span> <span class="n">botlib</span><span class="o">.</span><span class="n">Creds</span><span class="p">(</span><span class="n">MATRIX_URL</span><span class="p">,</span> <span class="n">MATRIX_USER</span><span class="p">,</span> <span class="n">MATRIX_PASS</span><span class="p">)</span>
</span><span class='line'><span class="n">bot</span> <span class="o">=</span> <span class="n">botlib</span><span class="o">.</span><span class="n">Bot</span><span class="p">(</span><span class="n">creds</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">PREFIX</span> <span class="o">=</span> <span class="s">&#39;!&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Help</span>
</span><span class='line'><span class="nd">@bot.listener.on_message_event</span>
</span><span class='line'><span class="n">async</span> <span class="k">def</span> <span class="nf">help</span><span class="p">(</span><span class="n">room</span><span class="p">,</span> <span class="n">message</span><span class="p">):</span>
</span><span class='line'>    <span class="n">match</span> <span class="o">=</span> <span class="n">botlib</span><span class="o">.</span><span class="n">MessageMatch</span><span class="p">(</span><span class="n">room</span><span class="p">,</span> <span class="n">message</span><span class="p">,</span> <span class="n">bot</span><span class="p">,</span> <span class="n">PREFIX</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">match</span><span class="o">.</span><span class="n">is_not_from_this_bot</span><span class="p">()</span> <span class="ow">and</span> <span class="n">match</span><span class="o">.</span><span class="n">prefix</span><span class="p">()</span> <span class="ow">and</span> <span class="n">match</span><span class="o">.</span><span class="n">command</span><span class="p">(</span><span class="s">&quot;help&quot;</span><span class="p">):</span>
</span><span class='line'>        <span class="n">help_message</span> <span class="o">=</span> <span class="s">&quot;&quot;&quot;</span>
</span><span class='line'><span class="s">        Help:</span>
</span><span class='line'><span class="s">         - !help</span>
</span><span class='line'><span class="s">        Echo</span>
</span><span class='line'><span class="s">         - !echo your message</span>
</span><span class='line'><span class="s">        &quot;&quot;&quot;</span>
</span><span class='line'>        <span class="n">await</span> <span class="n">bot</span><span class="o">.</span><span class="n">api</span><span class="o">.</span><span class="n">send_markdown_message</span><span class="p">(</span><span class="n">room</span><span class="o">.</span><span class="n">room_id</span><span class="p">,</span> <span class="n">help_message</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Echo</span>
</span><span class='line'><span class="nd">@bot.listener.on_message_event</span>
</span><span class='line'><span class="n">async</span> <span class="k">def</span> <span class="nf">echo</span><span class="p">(</span><span class="n">room</span><span class="p">,</span> <span class="n">message</span><span class="p">):</span>
</span><span class='line'>    <span class="sd">&quot;&quot;&quot;</span>
</span><span class='line'><span class="sd">    Example function that &quot;echoes&quot; arguements.</span>
</span><span class='line'><span class="sd">    Usage:</span>
</span><span class='line'><span class="sd">    user:  !echo say something</span>
</span><span class='line'><span class="sd">    bot:   say something</span>
</span><span class='line'><span class="sd">    &quot;&quot;&quot;</span>
</span><span class='line'>    <span class="n">match</span> <span class="o">=</span> <span class="n">botlib</span><span class="o">.</span><span class="n">MessageMatch</span><span class="p">(</span><span class="n">room</span><span class="p">,</span> <span class="n">message</span><span class="p">,</span> <span class="n">bot</span><span class="p">,</span> <span class="n">PREFIX</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">match</span><span class="o">.</span><span class="n">is_not_from_this_bot</span><span class="p">()</span> <span class="ow">and</span> <span class="n">match</span><span class="o">.</span><span class="n">prefix</span><span class="p">()</span> <span class="ow">and</span> <span class="n">match</span><span class="o">.</span><span class="n">command</span><span class="p">(</span><span class="s">&quot;echo&quot;</span><span class="p">):</span>
</span><span class='line'>        <span class="k">print</span><span class="p">(</span><span class="s">&quot;Room: {r}, User: {u}, Message: {m}&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">r</span><span class="o">=</span><span class="n">room</span><span class="o">.</span><span class="n">room_id</span><span class="p">,</span> <span class="n">u</span><span class="o">=</span><span class="nb">str</span><span class="p">(</span><span class="n">message</span><span class="p">)</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&#39;:&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span> <span class="n">m</span><span class="o">=</span><span class="nb">str</span><span class="p">(</span><span class="n">message</span><span class="p">)</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&#39;:&#39;</span><span class="p">)[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">strip</span><span class="p">()))</span>
</span><span class='line'>        <span class="n">await</span> <span class="n">bot</span><span class="o">.</span><span class="n">api</span><span class="o">.</span><span class="n">send_text_message</span><span class="p">(</span><span class="n">room</span><span class="o">.</span><span class="n">room_id</span><span class="p">,</span> <span class="s">&quot; &quot;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">arg</span> <span class="k">for</span> <span class="n">arg</span> <span class="ow">in</span> <span class="n">match</span><span class="o">.</span><span class="n">args</span><span class="p">()))</span>
</span><span class='line'>
</span><span class='line'><span class="n">bot</span><span class="o">.</span><span class="n">run</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>Run the bot, invite the bot user to a room and test it with <code>!echo hi</code></p>

<p>For a bot having to use the requests library, such as getting a quote from an api, we can use the following:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">random</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">subprocess</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">simplematrixbotlib</span> <span class="kn">as</span> <span class="nn">botlib</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">requests</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">urllib.request</span> <span class="kn">import</span> <span class="n">ssl</span><span class="p">,</span> <span class="n">socket</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">datetime</span><span class="o">,</span> <span class="nn">smtplib</span>
</span><span class='line'>
</span><span class='line'><span class="n">MATRIX_URL</span><span class="o">=</span><span class="s">&quot;https://matrix.foodmain.co.za&quot;</span>
</span><span class='line'><span class="n">MATRIX_USER</span><span class="o">=</span><span class="s">&quot;@foobot:matrix.foodmain.co.za&quot;</span>
</span><span class='line'><span class="n">MATRIX_PASS</span><span class="o">=</span><span class="s">&quot;foo&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">creds</span> <span class="o">=</span> <span class="n">botlib</span><span class="o">.</span><span class="n">Creds</span><span class="p">(</span><span class="n">MATRIX_URL</span><span class="p">,</span> <span class="n">MATRIX_USER</span><span class="p">,</span> <span class="n">MATRIX_PASS</span><span class="p">)</span>
</span><span class='line'><span class="n">bot</span> <span class="o">=</span> <span class="n">botlib</span><span class="o">.</span><span class="n">Bot</span><span class="p">(</span><span class="n">creds</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">PREFIX</span> <span class="o">=</span> <span class="s">&#39;!&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Help</span>
</span><span class='line'><span class="nd">@bot.listener.on_message_event</span>
</span><span class='line'><span class="n">async</span> <span class="k">def</span> <span class="nf">help</span><span class="p">(</span><span class="n">room</span><span class="p">,</span> <span class="n">message</span><span class="p">):</span>
</span><span class='line'>    <span class="n">match</span> <span class="o">=</span> <span class="n">botlib</span><span class="o">.</span><span class="n">MessageMatch</span><span class="p">(</span><span class="n">room</span><span class="p">,</span> <span class="n">message</span><span class="p">,</span> <span class="n">bot</span><span class="p">,</span> <span class="n">PREFIX</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">match</span><span class="o">.</span><span class="n">is_not_from_this_bot</span><span class="p">()</span> <span class="ow">and</span> <span class="n">match</span><span class="o">.</span><span class="n">prefix</span><span class="p">()</span> <span class="ow">and</span> <span class="n">match</span><span class="o">.</span><span class="n">command</span><span class="p">(</span><span class="s">&quot;help&quot;</span><span class="p">):</span>
</span><span class='line'>        <span class="n">help_message</span> <span class="o">=</span> <span class="s">&quot;&quot;&quot;</span>
</span><span class='line'><span class="s">        Help:</span>
</span><span class='line'><span class="s">         - !help</span>
</span><span class='line'><span class="s">        Echo</span>
</span><span class='line'><span class="s">         - !echo msg</span>
</span><span class='line'><span class="s">        Fortune:</span>
</span><span class='line'><span class="s">         - !fortune</span>
</span><span class='line'><span class="s">        Quote:</span>
</span><span class='line'><span class="s">         - !quote</span>
</span><span class='line'><span class="s">        &quot;&quot;&quot;</span>
</span><span class='line'>        <span class="n">await</span> <span class="n">bot</span><span class="o">.</span><span class="n">api</span><span class="o">.</span><span class="n">send_markdown_message</span><span class="p">(</span><span class="n">room</span><span class="o">.</span><span class="n">room_id</span><span class="p">,</span> <span class="n">help_message</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Echo</span>
</span><span class='line'><span class="nd">@bot.listener.on_message_event</span>
</span><span class='line'><span class="n">async</span> <span class="k">def</span> <span class="nf">echo</span><span class="p">(</span><span class="n">room</span><span class="p">,</span> <span class="n">message</span><span class="p">):</span>
</span><span class='line'>    <span class="sd">&quot;&quot;&quot;</span>
</span><span class='line'><span class="sd">    Example function that &quot;echoes&quot; arguements.</span>
</span><span class='line'><span class="sd">    Usage:</span>
</span><span class='line'><span class="sd">    user: !echo say something</span>
</span><span class='line'><span class="sd">    bot:  say something</span>
</span><span class='line'><span class="sd">    &quot;&quot;&quot;</span>
</span><span class='line'>    <span class="n">match</span> <span class="o">=</span> <span class="n">botlib</span><span class="o">.</span><span class="n">MessageMatch</span><span class="p">(</span><span class="n">room</span><span class="p">,</span> <span class="n">message</span><span class="p">,</span> <span class="n">bot</span><span class="p">,</span> <span class="n">PREFIX</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">match</span><span class="o">.</span><span class="n">is_not_from_this_bot</span><span class="p">()</span> <span class="ow">and</span> <span class="n">match</span><span class="o">.</span><span class="n">prefix</span><span class="p">()</span> <span class="ow">and</span> <span class="n">match</span><span class="o">.</span><span class="n">command</span><span class="p">(</span><span class="s">&quot;echo&quot;</span><span class="p">):</span>
</span><span class='line'>        <span class="k">print</span><span class="p">(</span><span class="s">&quot;Room: {r}, User: {u}, Message: {m}&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">r</span><span class="o">=</span><span class="n">room</span><span class="o">.</span><span class="n">room_id</span><span class="p">,</span> <span class="n">u</span><span class="o">=</span><span class="nb">str</span><span class="p">(</span><span class="n">message</span><span class="p">)</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&#39;:&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span> <span class="n">m</span><span class="o">=</span><span class="nb">str</span><span class="p">(</span><span class="n">message</span><span class="p">)</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&#39;:&#39;</span><span class="p">)[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">strip</span><span class="p">()))</span>
</span><span class='line'>        <span class="n">await</span> <span class="n">bot</span><span class="o">.</span><span class="n">api</span><span class="o">.</span><span class="n">send_text_message</span><span class="p">(</span><span class="n">room</span><span class="o">.</span><span class="n">room_id</span><span class="p">,</span> <span class="s">&quot; &quot;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">arg</span> <span class="k">for</span> <span class="n">arg</span> <span class="ow">in</span> <span class="n">match</span><span class="o">.</span><span class="n">args</span><span class="p">()))</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Fortune</span>
</span><span class='line'><span class="nd">@bot.listener.on_message_event</span>
</span><span class='line'><span class="n">async</span> <span class="k">def</span> <span class="nf">fortune</span><span class="p">(</span><span class="n">room</span><span class="p">,</span> <span class="n">message</span><span class="p">):</span>
</span><span class='line'>    <span class="n">match</span> <span class="o">=</span> <span class="n">botlib</span><span class="o">.</span><span class="n">MessageMatch</span><span class="p">(</span><span class="n">room</span><span class="p">,</span> <span class="n">message</span><span class="p">,</span> <span class="n">bot</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">match</span><span class="o">.</span><span class="n">is_not_from_this_bot</span> <span class="ow">and</span> <span class="n">match</span><span class="o">.</span><span class="n">command</span><span class="p">(</span><span class="s">&#39;!fortune&#39;</span><span class="p">):</span>
</span><span class='line'>        <span class="n">fortune</span> <span class="o">=</span> <span class="n">subprocess</span><span class="o">.</span><span class="n">run</span><span class="p">([</span><span class="s">&#39;/usr/games/fortune&#39;</span><span class="p">],</span> <span class="n">capture_output</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span><span class="o">.</span><span class="n">stdout</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="s">&#39;UTF-8&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="k">print</span><span class="p">(</span><span class="n">fortune</span><span class="p">)</span>
</span><span class='line'>        <span class="n">await</span> <span class="n">bot</span><span class="o">.</span><span class="n">api</span><span class="o">.</span><span class="n">send_text_message</span><span class="p">(</span><span class="n">room</span><span class="o">.</span><span class="n">room_id</span><span class="p">,</span> <span class="n">fortune</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Quotes</span>
</span><span class='line'><span class="nd">@bot.listener.on_message_event</span>
</span><span class='line'><span class="n">async</span> <span class="k">def</span> <span class="nf">quote</span><span class="p">(</span><span class="n">room</span><span class="p">,</span> <span class="n">message</span><span class="p">):</span>
</span><span class='line'>    <span class="n">match</span> <span class="o">=</span> <span class="n">botlib</span><span class="o">.</span><span class="n">MessageMatch</span><span class="p">(</span><span class="n">room</span><span class="p">,</span> <span class="n">message</span><span class="p">,</span> <span class="n">bot</span><span class="p">,</span> <span class="n">PREFIX</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">match</span><span class="o">.</span><span class="n">is_not_from_this_bot</span><span class="p">()</span> <span class="ow">and</span> <span class="n">match</span><span class="o">.</span><span class="n">prefix</span><span class="p">()</span> <span class="ow">and</span> <span class="p">(</span>
</span><span class='line'>            <span class="n">match</span><span class="o">.</span><span class="n">command</span><span class="p">(</span><span class="s">&quot;quote&quot;</span><span class="p">)</span> <span class="ow">or</span> <span class="n">match</span><span class="o">.</span><span class="n">command</span><span class="p">(</span><span class="s">&quot;q&quot;</span><span class="p">)):</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;https://goquotes-api.herokuapp.com/api/v1/random?count=1&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">json</span><span class="p">()[</span><span class="s">&#39;quotes&#39;</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'>        <span class="n">quote</span> <span class="o">=</span> <span class="n">response</span><span class="p">[</span><span class="s">&#39;text&#39;</span><span class="p">]</span>
</span><span class='line'>        <span class="n">author</span> <span class="o">=</span> <span class="n">response</span><span class="p">[</span><span class="s">&#39;author&#39;</span><span class="p">]</span>
</span><span class='line'>        <span class="n">tag</span> <span class="o">=</span> <span class="n">response</span><span class="p">[</span><span class="s">&#39;tag&#39;</span><span class="p">]</span>
</span><span class='line'>        <span class="n">formatted_message</span> <span class="o">=</span> <span class="n">f</span><span class="s">&quot;&quot;&quot;{quote}</span>
</span><span class='line'><span class="s">        - {author}</span>
</span><span class='line'><span class="s">        &quot;&quot;&quot;</span>
</span><span class='line'>        <span class="c">#await bot.api.send_text_message(room.room_id, formatted_message)</span>
</span><span class='line'>        <span class="n">await</span> <span class="n">bot</span><span class="o">.</span><span class="n">api</span><span class="o">.</span><span class="n">send_markdown_message</span><span class="p">(</span><span class="n">room</span><span class="o">.</span><span class="n">room_id</span><span class="p">,</span>  <span class="n">formatted_message</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">bot</span><span class="o">.</span><span class="n">run</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Resources</h2>

<p>For more information, have a look at their <a href="https://simple-matrix-bot-lib.readthedocs.io/en/latest/index.html">documentation</a></p>

<h2>Thank You</h2>

<p>Thanks for reading, if you like my content, check out my <strong><a href="https://ruan.dev">website</a></strong>, read my <strong><a href="http://digests.ruanbekker.com/?via=ruanbekker-blog">newsletter</a></strong> or follow me at <strong><a href="https://twitter.com/ruanbekker">@ruanbekker</a></strong> on Twitter.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup Matrix and Element Chat Server]]></title>
    <link href="https://blog.ruanbekker.com/blog/2022/03/29/setup-matrix-and-element-chat-server/"/>
    <updated>2022-03-29T18:33:49-04:00</updated>
    <id>https://blog.ruanbekker.com/blog/2022/03/29/setup-matrix-and-element-chat-server</id>
    <content type="html"><![CDATA[<p>In this tutorial we will setup a Matrix and Element Chat Server using Docker on Ubuntu.</p>

<h2>What is Matrix?</h2>

<p>Matrix is an open standard and communication protocol for secure, decentralised, real-time communication. For more information on Matrix, see their <a href="https://matrix.org/">website</a></p>

<h2>Install Docker</h2>

<p>I will assume that docker and docker compose is installed, if not, follow this resource to install them:
- <a href="https://docs.docker.com/get-docker/">https://docs.docker.com/get-docker/</a></p>

<h2>Install Matrix Server</h2>

<p>Create the directory structure:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker network create --driver<span class="o">=</span>bridge --subnet<span class="o">=</span>10.10.10.0/24 --gateway<span class="o">=</span>10.10.10.1 matrix_net
</span><span class='line'><span class="nv">$ </span>mkdir matrix
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>matrix/
</span></code></pre></td></tr></table></div></figure>


<p>The <code>docker-compose.yml</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">version</span><span class="p-Indicator">:</span> <span class="s">&#39;3.8&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">services</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">element</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">image</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">vectorim/element-web:latest</span>
</span><span class='line'>    <span class="l-Scalar-Plain">restart</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">unless-stopped</span>
</span><span class='line'>    <span class="l-Scalar-Plain">volumes</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">./element-config.json:/app/config.json</span>
</span><span class='line'>    <span class="l-Scalar-Plain">networks</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">default</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">ipv4_address</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">10.10.10.3</span>
</span><span class='line'>
</span><span class='line'>  <span class="l-Scalar-Plain">synapse</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">image</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">matrixdotorg/synapse:latest</span>
</span><span class='line'>    <span class="l-Scalar-Plain">restart</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">unless-stopped</span>
</span><span class='line'>    <span class="l-Scalar-Plain">networks</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">default</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">ipv4_address</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">10.10.10.4</span>
</span><span class='line'>    <span class="l-Scalar-Plain">volumes</span><span class="p-Indicator">:</span>
</span><span class='line'>     <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">./synapse:/data</span>
</span><span class='line'>
</span><span class='line'>  <span class="l-Scalar-Plain">postgres</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">image</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">postgres:11</span>
</span><span class='line'>    <span class="l-Scalar-Plain">restart</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">unless-stopped</span>
</span><span class='line'>    <span class="l-Scalar-Plain">networks</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">default</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">ipv4_address</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">10.10.10.2</span>
</span><span class='line'>    <span class="l-Scalar-Plain">volumes</span><span class="p-Indicator">:</span>
</span><span class='line'>     <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">./postgresdata:/var/lib/postgresql/data</span>
</span><span class='line'>    <span class="l-Scalar-Plain">environment</span><span class="p-Indicator">:</span>
</span><span class='line'>     <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">POSTGRES_DB=synapse</span>
</span><span class='line'>     <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">POSTGRES_USER=synapse</span>
</span><span class='line'>     <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">POSTGRES_PASSWORD=STRONGPASSWORD</span>
</span><span class='line'>     <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">POSTGRES_INITDB_ARGS=--lc-collate C --lc-ctype C --encoding UTF8</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">networks</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">default</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">external</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">matrix</span>
</span></code></pre></td></tr></table></div></figure>


<p>Download a sample config:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>wget https://develop.element.io/config.json
</span><span class='line'><span class="nv">$ </span>mv config.json element-config.json
</span></code></pre></td></tr></table></div></figure>


<p>And adjust the bits where needed in <code>element-config.json</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;default_server_config&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;m.homeserver&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="nt">&quot;base_url&quot;</span><span class="p">:</span> <span class="s2">&quot;https://matrix.domain.co.za&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;server_name&quot;</span><span class="p">:</span> <span class="s2">&quot;matrix.domain.co.za&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nt">&quot;m.identity_server&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="nt">&quot;base_url&quot;</span><span class="p">:</span> <span class="s2">&quot;https://vector.im&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;brand&quot;</span><span class="p">:</span> <span class="s2">&quot;Element&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;integrations_ui_url&quot;</span><span class="p">:</span> <span class="s2">&quot;https://scalar.vector.im/&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;integrations_rest_url&quot;</span><span class="p">:</span> <span class="s2">&quot;https://scalar.vector.im/api&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;integrations_widgets_urls&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>        <span class="s2">&quot;https://scalar.vector.im/_matrix/integrations/v1&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;https://scalar.vector.im/api&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;https://scalar-staging.vector.im/_matrix/integrations/v1&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;https://scalar-staging.vector.im/api&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;https://scalar-staging.riot.im/scalar/api&quot;</span>
</span><span class='line'>    <span class="p">],</span>
</span><span class='line'>    <span class="nt">&quot;hosting_signup_link&quot;</span><span class="p">:</span> <span class="s2">&quot;https://element.io/matrix-services?utm_source=element-web&amp;utm_medium=web&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;bug_report_endpoint_url&quot;</span><span class="p">:</span> <span class="s2">&quot;https://element.io/bugreports/submit&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;uisi_autorageshake_app&quot;</span><span class="p">:</span> <span class="s2">&quot;element-auto-uisi&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;showLabsSettings&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;piwik&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;url&quot;</span><span class="p">:</span> <span class="s2">&quot;https://piwik.riot.im/&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;siteId&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;policyUrl&quot;</span><span class="p">:</span> <span class="s2">&quot;https://element.io/cookie-policy&quot;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;roomDirectory&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;servers&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>            <span class="s2">&quot;matrix.org&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="s2">&quot;gitter.im&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="s2">&quot;libera.chat&quot;</span>
</span><span class='line'>        <span class="p">]</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;enable_presence_by_hs_url&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;https://matrix.org&quot;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;https://matrix-client.matrix.org&quot;</span><span class="p">:</span> <span class="kc">false</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;terms_and_conditions_links&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="nt">&quot;url&quot;</span><span class="p">:</span> <span class="s2">&quot;https://element.io/privacy&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;text&quot;</span><span class="p">:</span> <span class="s2">&quot;Privacy Policy&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="nt">&quot;url&quot;</span><span class="p">:</span> <span class="s2">&quot;https://element.io/cookie-policy&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;text&quot;</span><span class="p">:</span> <span class="s2">&quot;Cookie Policy&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">],</span>
</span><span class='line'>    <span class="nt">&quot;hostSignup&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;brand&quot;</span><span class="p">:</span> <span class="s2">&quot;Element Home&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;cookiePolicyUrl&quot;</span><span class="p">:</span> <span class="s2">&quot;https://element.io/cookie-policy&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;domains&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>          <span class="s2">&quot;matrix.org&quot;</span>
</span><span class='line'>      <span class="p">],</span>
</span><span class='line'>      <span class="nt">&quot;privacyPolicyUrl&quot;</span><span class="p">:</span> <span class="s2">&quot;https://element.io/privacy&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;termsOfServiceUrl&quot;</span><span class="p">:</span> <span class="s2">&quot;https://element.io/terms-of-service&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;url&quot;</span><span class="p">:</span> <span class="s2">&quot;https://ems.element.io/element-home/in-app-loader&quot;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;sentry&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;dsn&quot;</span><span class="p">:</span> <span class="s2">&quot;https://xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxc5@sentry.matrix.org/6&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;environment&quot;</span><span class="p">:</span> <span class="s2">&quot;develop&quot;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;posthog&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;projectApiKey&quot;</span><span class="p">:</span> <span class="s2">&quot;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;apiHost&quot;</span><span class="p">:</span> <span class="s2">&quot;https://posthog.hss.element.io&quot;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;features&quot;</span><span class="p">:</span> <span class="p">{},</span>
</span><span class='line'>    <span class="nt">&quot;map_style_url&quot;</span><span class="p">:</span> <span class="s2">&quot;https://api.maptiler.com/maps/streets/style.json?key=xxxxxxxxxxxxx&quot;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Generate the homeserver config:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker run -it --rm -v <span class="s2">&quot;$HOME/matrix/synapse:/data&quot;</span> -e <span class="nv">SYNAPSE_SERVER_NAME</span><span class="o">=</span>matrix.domain.co.za -e <span class="nv">SYNAPSE_REPORT_STATS</span><span class="o">=</span>yes matrixdotorg/synapse:latest generate
</span></code></pre></td></tr></table></div></figure>


<p>Verify the generated config in <code>synapse/homeserver.yaml</code> (I only changed server name and database):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">server_name</span><span class="p-Indicator">:</span> <span class="s">&quot;matrix.domain.co.za&quot;</span>
</span><span class='line'><span class="l-Scalar-Plain">database</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">psycopg2</span>
</span><span class='line'>  <span class="l-Scalar-Plain">args</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">user</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">synapse</span>
</span><span class='line'>    <span class="l-Scalar-Plain">password</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">STRONGPASSWORD</span>
</span><span class='line'>    <span class="l-Scalar-Plain">database</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">synapse</span>
</span><span class='line'>    <span class="l-Scalar-Plain">host</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">postgres</span>
</span><span class='line'>    <span class="l-Scalar-Plain">cp_min</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">5</span>
</span><span class='line'>    <span class="l-Scalar-Plain">cp_max</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">10</span>
</span></code></pre></td></tr></table></div></figure>


<p>Boot the stack:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker-compose up -d
</span></code></pre></td></tr></table></div></figure>


<h2>Caddy Reverse Proxy</h2>

<p>Install caddy as a reverse proxy (includes letsencrypt out of the box):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>apt install -y debian-keyring debian-archive-keyring apt-transport-https
</span><span class='line'><span class="nv">$ </span>curl -1sLf <span class="s1">&#39;https://dl.cloudsmith.io/public/caddy/stable/gpg.key&#39;</span> <span class="p">|</span> sudo tee /etc/apt/trusted.gpg.d/caddy-stable.asc
</span><span class='line'><span class="nv">$ </span>curl -1sLf <span class="s1">&#39;https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt&#39;</span> <span class="p">|</span> sudo tee /etc/apt/sources.list.d/caddy-stable.list
</span><span class='line'><span class="nv">$ </span>apt update
</span><span class='line'><span class="nv">$ </span>apt install caddy -y
</span></code></pre></td></tr></table></div></figure>


<p>Create the <code>/etc/caddy/Caddyfile</code> with the following content:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>matrix.domain.co.za <span class="o">{</span>
</span><span class='line'>        reverse_proxy /_matrix/* 10.10.10.4:8008
</span><span class='line'>        reverse_proxy /_synapse/client/* 10.10.10.4:8008
</span><span class='line'>
</span><span class='line'>        header <span class="o">{</span>
</span><span class='line'>                X-Content-Type-Options nosniff
</span><span class='line'>                Referrer-Policy strict-origin-when-cross-origin
</span><span class='line'>                Strict-Transport-Security <span class="s2">&quot;max-age=63072000; includeSubDomains;&quot;</span>
</span><span class='line'>                Permissions-Policy <span class="s2">&quot;accelerometer=(), camera=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), payment=(), usb=(), interest-cohort=()&quot;</span>
</span><span class='line'>                X-Frame-Options SAMEORIGIN
</span><span class='line'>                X-XSS-Protection 1
</span><span class='line'>                X-Robots-Tag none
</span><span class='line'>                -server
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>element.domain.co.za <span class="o">{</span>
</span><span class='line'>        encode zstd gzip
</span><span class='line'>        reverse_proxy 10.10.10.3:80
</span><span class='line'>
</span><span class='line'>        header <span class="o">{</span>
</span><span class='line'>                X-Content-Type-Options nosniff
</span><span class='line'>                Referrer-Policy strict-origin-when-cross-origin
</span><span class='line'>                Strict-Transport-Security <span class="s2">&quot;max-age=63072000; includeSubDomains;&quot;</span>
</span><span class='line'>                Permissions-Policy <span class="s2">&quot;accelerometer=(), camera=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), payment=(), usb=(), interest-cohort=()&quot;</span>
</span><span class='line'>                X-Frame-Options SAMEORIGIN
</span><span class='line'>                X-XSS-Protection 1
</span><span class='line'>                X-Robots-Tag none
</span><span class='line'>                -server
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Change to the <code>/etc/caddy</code> directory then reload:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">pushd</span> /etc/caddy
</span><span class='line'><span class="nv">$ </span>caddy fmt
</span><span class='line'><span class="nv">$ </span>caddy reload
</span><span class='line'><span class="nv">$ </span><span class="nb">popd</span>
</span></code></pre></td></tr></table></div></figure>


<p>Wait a couple of minutes and visit element on <a href="https://element.domain.co.za/">https://element.domain.co.za/</a></p>

<h2>Admin Element User</h2>

<p>Create your admin user on the docker container:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker <span class="nb">exec</span> -it matrix_synapse_1 bash
</span><span class='line'>&gt; register_new_matrix_user -c /data/homeserver.yaml http://localhost:8008
</span><span class='line'>
</span><span class='line'>New user localpart <span class="o">[</span>root<span class="o">]</span>: ruan
</span><span class='line'>Password:
</span><span class='line'>Confirm password:
</span><span class='line'>Make admin <span class="o">[</span>no<span class="o">]</span>: yes
</span><span class='line'>Sending registration request...
</span><span class='line'>Success!
</span></code></pre></td></tr></table></div></figure>


<h2>Resources</h2>

<p>Thanks to <a href="https://cyberhost.uk/element-matrix-setup/">cyberhost.uk</a> for credit on helping me with this post.</p>

<h2>Thank You</h2>

<p>Thanks for reading, if you like my content, check out my <strong><a href="https://ruan.dev">website</a></strong>, read my <strong><a href="http://digests.ruanbekker.com/?via=ruanbekker-blog">newsletter</a></strong> or follow me at <strong><a href="https://twitter.com/ruanbekker">@ruanbekker</a></strong> on Twitter.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Load Environment Variables From File in Python]]></title>
    <link href="https://blog.ruanbekker.com/blog/2022/03/22/load-environment-variables-from-file-in-python/"/>
    <updated>2022-03-22T07:34:11-04:00</updated>
    <id>https://blog.ruanbekker.com/blog/2022/03/22/load-environment-variables-from-file-in-python</id>
    <content type="html"><![CDATA[<p>In this quick tutorial we will demonstrate how to load additional environment variables from file into your python application.</p>

<p>It loads key value pairs from a file and append it to its current runtime environment variables, so your current environment is unaffected.</p>

<h2>python-dotenv</h2>

<p>We will make use of the package <a href="https://pypi.org/project/python-dotenv">python-dotenv</a> so we will need to install the python package with pip:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>python3 -m pip install python-dotenv
</span></code></pre></td></tr></table></div></figure>


<h2>The env file</h2>

<p>I will create the <code>.env</code> in my current working directory with the content:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">APPLICATION_NAME</span><span class="o">=</span>foo
</span><span class='line'><span class="nv">APPLICATION_OWNER</span><span class="o">=</span>bar
</span></code></pre></td></tr></table></div></figure>


<h2>The application</h2>

<p>This is a basic demonstration of a python application which loads the additional environment variables from file, then we will use <code>json.dumps(.., indent=2)</code> so that we can get a pretty print of all our environment variables:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">os</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">json</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">dotenv</span> <span class="kn">import</span> <span class="n">load_dotenv</span>
</span><span class='line'>
</span><span class='line'><span class="n">load_dotenv</span><span class="p">(</span><span class="s">&#39;.env&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="nb">dict</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">environ</span><span class="p">),</span> <span class="n">indent</span><span class="o">=</span><span class="mi">2</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<p>When we run the application the output will look something like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="nt">&quot;SHELL&quot;</span><span class="p">:</span> <span class="s2">&quot;/bin/bash&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;PWD&quot;</span><span class="p">:</span> <span class="s2">&quot;/home/ubuntu/env-vars&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;LOGNAME&quot;</span><span class="p">:</span> <span class="s2">&quot;ubuntu&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;HOME&quot;</span><span class="p">:</span> <span class="s2">&quot;/home/ubuntu&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;LANG&quot;</span><span class="p">:</span> <span class="s2">&quot;C.UTF-8&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;TERM&quot;</span><span class="p">:</span> <span class="s2">&quot;xterm-256color&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;USER&quot;</span><span class="p">:</span> <span class="s2">&quot;ubuntu&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;LC_CTYPE&quot;</span><span class="p">:</span> <span class="s2">&quot;C.UTF-8&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;PATH&quot;</span><span class="p">:</span> <span class="s2">&quot;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;SSH_TTY&quot;</span><span class="p">:</span> <span class="s2">&quot;/dev/pts/0&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;OLDPWD&quot;</span><span class="p">:</span> <span class="s2">&quot;/home/ubuntu&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;APPLICATION_NAME&quot;</span><span class="p">:</span> <span class="s2">&quot;foo&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;APPLICATION_OWNER&quot;</span><span class="p">:</span> <span class="s2">&quot;bar&quot;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>As we can see our two environment variables was added to the environment. If you would like to access your two environment variables, we can do the following:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">os</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">dotenv</span> <span class="kn">import</span> <span class="n">load_dotenv</span>
</span><span class='line'>
</span><span class='line'><span class="n">load_dotenv</span><span class="p">(</span><span class="s">&#39;.env&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">APPLICATION_NAME</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">getenv</span><span class="p">(</span><span class="s">&#39;APPLICATION_NAME&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">APPLICATION_OWNER</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">getenv</span><span class="p">(</span><span class="s">&#39;APPLICATION_OWNER&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="s">&#39;Name: {0}, Owner: {1}&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">APPLICATION_NAME</span><span class="p">,</span> <span class="n">APPLICATION_OWNER</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<p>And when we run that, the output should be the following:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Name: foo, Owner: bar
</span></code></pre></td></tr></table></div></figure>


<h2>Thank You</h2>

<p>Thanks for reading, if you like my content, check out my <strong><a href="https://ruan.dev">website</a></strong>, read my <strong><a href="http://digests.ruanbekker.com/?via=ruanbekker-blog">newsletter</a></strong> or follow me at <strong><a href="https://twitter.com/ruanbekker">@ruanbekker</a></strong> on Twitter.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Run a Basic Python Flask Restful API]]></title>
    <link href="https://blog.ruanbekker.com/blog/2022/03/20/run-a-basic-python-flask-restful-api/"/>
    <updated>2022-03-20T17:33:17-04:00</updated>
    <id>https://blog.ruanbekker.com/blog/2022/03/20/run-a-basic-python-flask-restful-api</id>
    <content type="html"><![CDATA[<p>In this tutorial we will run a basic api using flask-restful, it will only have two routes which will be a get and post method for the purpose of demonstration.</p>

<h2>What is Flask Restful</h2>

<p><a href="https://flask-restful.readthedocs.io/en/latest/index.html">Flask-RESTful</a> is an extension for <a href="https://flask.palletsprojects.com/en/2.0.x/">Flask</a> that adds support for quickly building REST APIs. It is a lightweight abstraction that works with your existing ORM/libraries. Flask-RESTful encourages best practices with minimal setup.</p>

<p>If you want to see a basic Flask API post, you can follow the link below:
- <a href="https://blog.ruanbekker.com/blog/2018/11/27/python-flask-tutorial-series-create-a-hello-world-app-p1/">https://blog.ruanbekker.com/blog/2018/11/27/python-flask-tutorial-series-create-a-hello-world-app-p1/</a></p>

<h2>Installation</h2>

<p>Install Flask and Flask Restful:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>python3 -m pip install flask
</span><span class='line'>python3 -m pip install flask-restful
</span></code></pre></td></tr></table></div></figure>


<h2>Code</h2>

<p>The basic code that we have, is to have two methods available (get and post):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">flask</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">flask_restful</span>
</span><span class='line'>
</span><span class='line'><span class="n">app</span> <span class="o">=</span> <span class="n">flask</span><span class="o">.</span><span class="n">Flask</span><span class="p">(</span><span class="n">__name__</span><span class="p">)</span>
</span><span class='line'><span class="n">api</span> <span class="o">=</span> <span class="n">flask_restful</span><span class="o">.</span><span class="n">Api</span><span class="p">(</span><span class="n">app</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">HelloWorld</span><span class="p">(</span><span class="n">flask_restful</span><span class="o">.</span><span class="n">Resource</span><span class="p">):</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">get</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>        <span class="k">return</span> <span class="p">{</span><span class="s">&#39;hello&#39;</span><span class="p">:</span> <span class="s">&#39;world&#39;</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">post</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>        <span class="n">json_data</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">get_json</span><span class="p">(</span><span class="n">force</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'>        <span class="n">firstname</span> <span class="o">=</span> <span class="n">json_data</span><span class="p">[</span><span class="s">&#39;firstname&#39;</span><span class="p">]</span>
</span><span class='line'>        <span class="n">lastname</span> <span class="o">=</span> <span class="n">json_data</span><span class="p">[</span><span class="s">&#39;lastname&#39;</span><span class="p">]</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">jsonify</span><span class="p">(</span><span class="n">firstname</span><span class="o">=</span><span class="n">firstname</span><span class="p">,</span> <span class="n">lastname</span><span class="o">=</span><span class="n">lastname</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">api</span><span class="o">.</span><span class="n">add_resource</span><span class="p">(</span><span class="n">HelloWorld</span><span class="p">,</span> <span class="s">&#39;/&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&quot;__main__&quot;</span><span class="p">:</span>
</span><span class='line'>    <span class="n">app</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="n">debug</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Run the Server</h2>

<p>Run the server:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>python api.py
</span></code></pre></td></tr></table></div></figure>


<p>Then make a get request:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl http://localhost:5000/
</span></code></pre></td></tr></table></div></figure>


<p>The response should be the following:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;hello&quot;</span><span class="p">:</span> <span class="s2">&quot;world&quot;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then make a post request:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl -XPOST http://localhost:5000/ -d <span class="s1">&#39;{&quot;firstname&quot;: &quot;ruan&quot;, &quot;lastname&quot;: &quot;bekker&quot;}&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>The response should look something like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="nt">&quot;firstname&quot;</span><span class="p">:</span> <span class="s2">&quot;ruan&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;lastname&quot;</span><span class="p">:</span> <span class="s2">&quot;bekker&quot;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Integration Tests</h2>

<p>We can setup integration tests with <code>unittest</code> by creating <code>test_api.py</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">unittest</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">app</span> <span class="kn">as</span> <span class="nn">api</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">TestFlaskApi</span><span class="p">(</span><span class="n">unittest</span><span class="o">.</span><span class="n">TestCase</span><span class="p">):</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">setUp</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">app</span> <span class="o">=</span> <span class="n">api</span><span class="o">.</span><span class="n">app</span><span class="o">.</span><span class="n">test_client</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">test_get_method</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>        <span class="n">response</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">app</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&quot;/&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">assertEqual</span><span class="p">(</span>
</span><span class='line'>            <span class="n">response</span><span class="o">.</span><span class="n">get_json</span><span class="p">(),</span>
</span><span class='line'>            <span class="p">{</span><span class="s">&quot;hello&quot;</span><span class="p">:</span> <span class="s">&quot;world&quot;</span><span class="p">},</span>
</span><span class='line'>        <span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">test_post_method</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>        <span class="c"># request payload</span>
</span><span class='line'>        <span class="n">payload</span> <span class="o">=</span> <span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">({</span>
</span><span class='line'>            <span class="s">&quot;firstname&quot;</span><span class="p">:</span> <span class="s">&quot;ruan&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&quot;lastname&quot;</span><span class="p">:</span> <span class="s">&quot;bekker&quot;</span>
</span><span class='line'>        <span class="p">})</span>
</span><span class='line'>
</span><span class='line'>        <span class="c"># make request</span>
</span><span class='line'>        <span class="n">response</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">app</span><span class="o">.</span><span class="n">post</span><span class="p">(</span><span class="s">&quot;/&quot;</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">payload</span><span class="p">,</span> <span class="n">headers</span><span class="o">=</span><span class="p">{</span><span class="s">&quot;Content-Type&quot;</span><span class="p">:</span> <span class="s">&quot;application/json&quot;</span><span class="p">})</span>
</span><span class='line'>
</span><span class='line'>        <span class="c"># assert</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">assertEqual</span><span class="p">(</span><span class="nb">str</span><span class="p">,</span> <span class="nb">type</span><span class="p">(</span><span class="n">response</span><span class="o">.</span><span class="n">json</span><span class="p">[</span><span class="s">&#39;lastname&#39;</span><span class="p">]))</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">assertEqual</span><span class="p">(</span><span class="mi">200</span><span class="p">,</span> <span class="n">response</span><span class="o">.</span><span class="n">status_code</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">tearDown</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>        <span class="c"># delete if anything was created</span>
</span><span class='line'>        <span class="k">pass</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
</span><span class='line'>    <span class="n">unittest</span><span class="o">.</span><span class="n">main</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then we can run our test with:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>python -m unittest discover -p test_app.py -v
</span></code></pre></td></tr></table></div></figure>


<p>Since our first test is expecting <code>{"hello": "world"}</code> our test will pass, and our second test we are validating that our post request returns a 200 response code and that our lastname field is of string type.</p>

<p>The output of our tests will show something like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>test_get_request <span class="o">(</span>test_app.TestFlaskApi<span class="o">)</span> ... ok
</span><span class='line'>test_post_request <span class="o">(</span>test_app.TestFlaskApi<span class="o">)</span> ... ok
</span><span class='line'>
</span><span class='line'>----------------------------------------------------------------------
</span><span class='line'>Ran <span class="m">2</span> tests in 0.009s
</span><span class='line'>
</span><span class='line'>OK
</span></code></pre></td></tr></table></div></figure>


<h2>More on Flask-Restful</h2>

<p>This was a very basic example and their <a href="https://flask-restful.readthedocs.io/en/latest/quickstart.html">documentation</a> provides a great tutorial on how to extend from this example. This is also a <a href="https://dev.to/paurakhsharma/flask-rest-api-part-6-testing-rest-apis-4lla">great blogpost</a> on testing rest api&rsquo;s.</p>

<h2>Thank You</h2>

<p>Thanks for reading, if you like my content, check out my <strong><a href="https://ruan.dev">website</a></strong>, read my <strong><a href="http://digests.ruanbekker.com/?via=ruanbekker-blog">newsletter</a></strong> or follow me at <strong><a href="https://twitter.com/ruanbekker">@ruanbekker</a></strong> on Twitter.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Run OpenLDAP With a UI on Docker]]></title>
    <link href="https://blog.ruanbekker.com/blog/2022/03/20/run-openldap-with-a-ui-on-docker/"/>
    <updated>2022-03-20T16:55:39-04:00</updated>
    <id>https://blog.ruanbekker.com/blog/2022/03/20/run-openldap-with-a-ui-on-docker</id>
    <content type="html"><![CDATA[<p>In this tutorial we will setup two containers, openldap and a openldap ui to manage our users on openldap.</p>

<h2>What is OpenLDAP</h2>

<p>OpenLDAP is an open source implementation of the Lightweight Directory Access Protocol, which makes it possible for organizations to use centralized authentication and directory access services over a network.</p>

<h2>Configuration</h2>

<p>This stack will boot a openldap and openldap-ui container container with the following <code>docker-compose.yml</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">version</span><span class="p-Indicator">:</span> <span class="s">&quot;3.8&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">services</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">openldap</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">image</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">osixia/openldap:1.5.0</span>
</span><span class='line'>    <span class="l-Scalar-Plain">container_name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">openldap</span>
</span><span class='line'>    <span class="l-Scalar-Plain">volumes</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">./storage/ldap_db:/var/lib/ldap</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">./storage/ldap_config:/etc/ldap/slapd.d</span>
</span><span class='line'>    <span class="l-Scalar-Plain">environment</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">LDAP_ORGANISATION=example-org</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">LDAP_DOMAIN=example.org</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">LDAP_ADMIN_PASSWORD=admin</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">LDAP_CONFIG_PASSWORD=config</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">LDAP_RFC2307BIS_SCHEMA=true</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">LDAP_REMOVE_CONFIG_AFTER_SETUP=true</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">LDAP_TLS_VERIFY_CLIENT=never</span>
</span><span class='line'>    <span class="l-Scalar-Plain">networks</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">openldap</span>
</span><span class='line'>
</span><span class='line'>  <span class="l-Scalar-Plain">openldap-ui</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">image</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">wheelybird/ldap-user-manager:v1.5</span>
</span><span class='line'>    <span class="l-Scalar-Plain">container_name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">openldap-ui</span>
</span><span class='line'>    <span class="l-Scalar-Plain">environment</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">LDAP_URI=ldap://openldap</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">LDAP_BASE_DN=dc=example,dc=org</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">LDAP_REQUIRE_STARTTLS=FALSE</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">LDAP_ADMINS_GROUP=admins</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">LDAP_ADMIN_BIND_DN=cn=admin,dc=example,dc=org</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">LDAP_ADMIN_BIND_PWD=admin</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">LDAP_IGNORE_CERT_ERRORS=true</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">NO_HTTPS=TRUE</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">PASSWORD_HASH=SSHA</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">SERVER_HOSTNAME=localhost:18080</span>
</span><span class='line'>    <span class="l-Scalar-Plain">depends_on</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">openldap</span>
</span><span class='line'>    <span class="l-Scalar-Plain">ports</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">18080:80</span>
</span><span class='line'>    <span class="l-Scalar-Plain">networks</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">openldap</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">networks</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">openldap</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">openldap</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Boot</h2>

<p>Boot the stack with docker-compose:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>docker-compose up -d
</span></code></pre></td></tr></table></div></figure>


<p>You can access OpenLDAP-UI on port <code>18080</code> and the admin password will be <code>admin</code>. You will have admin access to create users.</p>

<h2>Verify Users</h2>

<p>Access the openldap container:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>docker-compose <span class="nb">exec </span>openldap bash
</span></code></pre></td></tr></table></div></figure>


<p>You can use <code>ldapsearch</code> to verify our user:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ldapsearch -x -h openldap -D <span class="s2">&quot;uid=ruan,ou=people,dc=example,dc=org&quot;</span> -b <span class="s2">&quot;ou=people,dc=example,dc=org&quot;</span> -w <span class="s2">&quot;$PASSWORD&quot;</span> -s base <span class="s1">&#39;uid=ruan&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Or we can use <code>ldapwhoami</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ldapwhoami -vvv -h ldap://openldap:389 -p <span class="m">389</span> -D <span class="s1">&#39;uid=ruan,ou=people,dc=example,dc=org&#39;</span> -x -w <span class="s2">&quot;$PASSWORD&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Which will provide a output with something like:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ldap_initialize<span class="o">(</span> &lt;DEFAULT&gt; <span class="o">)</span>
</span><span class='line'>dn:uid<span class="o">=</span>ruan,ou<span class="o">=</span>people,dc<span class="o">=</span>example,dc<span class="o">=</span>org
</span><span class='line'>Result: Success <span class="o">(</span>0<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Thank You</h2>

<p>Thanks for reading, if you like my content, check out my <strong><a href="https://ruan.dev">website</a></strong>, read my <strong><a href="http://digests.ruanbekker.com/?via=ruanbekker-blog">newsletter</a></strong> or follow me at <strong><a href="https://twitter.com/ruanbekker">@ruanbekker</a></strong> on Twitter.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Create DNS Records With Terraform on Cloudflare]]></title>
    <link href="https://blog.ruanbekker.com/blog/2022/02/20/create-dns-records-with-terraform-on-cloudflare/"/>
    <updated>2022-02-20T13:11:06-05:00</updated>
    <id>https://blog.ruanbekker.com/blog/2022/02/20/create-dns-records-with-terraform-on-cloudflare</id>
    <content type="html"><![CDATA[<p>In this tutorial we will use <strong>Terraform</strong> to create DNS records on <strong>Cloudflare</strong>.</p>

<h2>Installing Terraform</h2>

<p>I will be installing terraform for linux, but you can follow terraform&rsquo;s documentation if you are using a different operating system:
- <a href="https://learn.hashicorp.com/tutorials/terraform/install-cli">https://learn.hashicorp.com/tutorials/terraform/install-cli</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; curl -fsSL https://apt.releases.hashicorp.com/gpg <span class="p">|</span> sudo apt-key add -
</span><span class='line'>&gt; sudo apt-add-repository <span class="s2">&quot;deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main&quot;</span>
</span><span class='line'>&gt; sudo apt update <span class="o">&amp;&amp;</span> sudo apt install terraform -y
</span></code></pre></td></tr></table></div></figure>


<p>Verify that terraform was installed:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; terraform version
</span><span class='line'>Terraform v1.1.6
</span><span class='line'>on linux_amd64
</span></code></pre></td></tr></table></div></figure>


<h2>Cloudflare Authentication</h2>

<p>We need to create an API Token in order to authenticate terraform to make the required API calls to create the DNS Record.</p>

<p>They have a great post on this, which you can follow below:
- <a href="https://developers.cloudflare.com/api/tokens/create">https://developers.cloudflare.com/api/tokens/create</a></p>

<p>You will need access to &ldquo;Edit DNS Zones&rdquo; and also include the Domain that you would like to edit.</p>

<p>Ensure that you save the API Token in a safe place.</p>

<h2>Terraform Code</h2>

<p>First we will create a project directory:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; mkdir terraform-cloudflare-dns
</span><span class='line'>&gt; <span class="nb">cd </span>terraform-cloudflare-dns
</span></code></pre></td></tr></table></div></figure>


<p>First we will create the <code>providers.tf</code> which we define our provider and the required parameters for the provider:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>terraform <span class="o">{</span>
</span><span class='line'>  required_providers <span class="o">{</span>
</span><span class='line'>    <span class="nv">cloudflare</span> <span class="o">=</span> <span class="o">{</span>
</span><span class='line'>      <span class="nb">source</span> <span class="o">=</span> <span class="s2">&quot;cloudflare/cloudflare&quot;</span>
</span><span class='line'>      <span class="nv">version</span> <span class="o">=</span> <span class="s2">&quot;~&gt; 3.0&quot;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>provider <span class="s2">&quot;cloudflare&quot;</span> <span class="o">{</span>
</span><span class='line'>  <span class="nv">email</span>   <span class="o">=</span> var.cloudflare_email
</span><span class='line'>  <span class="nv">api_token</span> <span class="o">=</span> var.cloudflare_api_token
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>As you can see, we are referencing <code>email</code> and <code>api_token</code> as variables, therefore we need to define those variables in <code>variables.tf</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>variable <span class="s2">&quot;cloudflare_email&quot;</span> <span class="o">{</span>
</span><span class='line'>  <span class="nb">type</span>        <span class="o">=</span> string
</span><span class='line'>  <span class="nv">description</span> <span class="o">=</span> <span class="s2">&quot;clouflare email address&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>variable <span class="s2">&quot;cloudflare_api_token&quot;</span> <span class="o">{</span>
</span><span class='line'>  <span class="nb">type</span>        <span class="o">=</span> string
</span><span class='line'>  <span class="nv">description</span> <span class="o">=</span> <span class="s2">&quot;cloudflare api token&quot;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>In our <code>main.tf</code>, we are first using a data resource to query cloudflare for our domain <code>rbkr.xyz</code> and then access the attribute <code>id</code> which we will be using in our <code>cloudflare_record</code> resource so that it knows which domain to add the DNS record for.</p>

<p>Then we are going to create the A record <code>foobar</code> and provide the value of <code>127.0.0.1</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>data <span class="s2">&quot;cloudflare_zone&quot;</span> <span class="s2">&quot;this&quot;</span> <span class="o">{</span>
</span><span class='line'>  <span class="nv">name</span> <span class="o">=</span> <span class="s2">&quot;rbkr.xyz&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>resource <span class="s2">&quot;cloudflare_record&quot;</span> <span class="s2">&quot;foobar&quot;</span> <span class="o">{</span>
</span><span class='line'>  <span class="nv">zone_id</span> <span class="o">=</span> data.cloudflare_zone.this.id
</span><span class='line'>  <span class="nv">name</span>    <span class="o">=</span> <span class="s2">&quot;foobar&quot;</span>
</span><span class='line'>  <span class="nv">value</span>   <span class="o">=</span> <span class="s2">&quot;127.0.0.1&quot;</span>
</span><span class='line'>  <span class="nb">type</span>    <span class="o">=</span> <span class="s2">&quot;A&quot;</span>
</span><span class='line'>  <span class="nv">proxied</span> <span class="o">=</span> <span class="nb">false</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then we are defining our outputs in <code>outputs.tf</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>output <span class="s2">&quot;record&quot;</span> <span class="o">{</span>
</span><span class='line'>  <span class="nv">value</span> <span class="o">=</span> cloudflare_record.foobar.hostname
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>output <span class="s2">&quot;metadata&quot;</span> <span class="o">{</span>
</span><span class='line'>  <span class="nv">value</span>       <span class="o">=</span> cloudflare_record.foobar.metadata
</span><span class='line'>  <span class="nv">sensitive</span>   <span class="o">=</span> <span class="nb">true</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Creating the Record</h2>

<p>Once our configuration code is in place we can run a <code>init</code> which will download the providers:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; terraform init
</span></code></pre></td></tr></table></div></figure>


<p>Once that is done, we can run a <code>plan</code> so we can see what will be deployed, but since our <code>variables.tf</code> has no <code>default</code> values, we will either have to define this in <code>terraform.tfvars</code> or use it in-line.</p>

<p>I will be using it in-line for this demonstration:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; terraform plan -var <span class="s2">&quot;cloudflare_email=$EMAIL&quot;</span> -var <span class="s2">&quot;cloudflare_api_token=$API_TOKEN&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Once you are happy, you can run a <code>apply</code> which will deploy the changes:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; terraform apply -var <span class="s2">&quot;cloudflare_email=$EMAIL&quot;</span> -var <span class="s2">&quot;cloudflare_api_token=$API_TOKEN&quot;</span>
</span><span class='line'>
</span><span class='line'>Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
</span><span class='line'>  + create
</span><span class='line'>
</span><span class='line'>Terraform will perform the following actions:
</span><span class='line'>
</span><span class='line'>  <span class="c"># cloudflare_record.foobar will be created</span>
</span><span class='line'>  + resource <span class="s2">&quot;cloudflare_record&quot;</span> <span class="s2">&quot;foobar&quot;</span> <span class="o">{</span>
</span><span class='line'>      + <span class="nv">allow_overwrite</span> <span class="o">=</span> <span class="nb">false</span>
</span><span class='line'>      + <span class="nv">created_on</span>      <span class="o">=</span> <span class="o">(</span>known after apply<span class="o">)</span>
</span><span class='line'>      + <span class="nv">hostname</span>        <span class="o">=</span> <span class="o">(</span>known after apply<span class="o">)</span>
</span><span class='line'>      + <span class="nv">id</span>              <span class="o">=</span> <span class="o">(</span>known after apply<span class="o">)</span>
</span><span class='line'>      + <span class="nv">metadata</span>        <span class="o">=</span> <span class="o">(</span>known after apply<span class="o">)</span>
</span><span class='line'>      + <span class="nv">modified_on</span>     <span class="o">=</span> <span class="o">(</span>known after apply<span class="o">)</span>
</span><span class='line'>      + <span class="nv">name</span>            <span class="o">=</span> <span class="s2">&quot;foobar&quot;</span>
</span><span class='line'>      + <span class="nv">proxiable</span>       <span class="o">=</span> <span class="o">(</span>known after apply<span class="o">)</span>
</span><span class='line'>      + <span class="nv">proxied</span>         <span class="o">=</span> <span class="nb">false</span>
</span><span class='line'>      + <span class="nv">ttl</span>             <span class="o">=</span> <span class="o">(</span>known after apply<span class="o">)</span>
</span><span class='line'>      + <span class="nb">type</span>            <span class="o">=</span> <span class="s2">&quot;A&quot;</span>
</span><span class='line'>      + <span class="nv">value</span>           <span class="o">=</span> <span class="s2">&quot;127.0.0.1&quot;</span>
</span><span class='line'>      + <span class="nv">zone_id</span>         <span class="o">=</span> <span class="s2">&quot;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&quot;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>Plan: <span class="m">1</span> to add, <span class="m">0</span> to change, <span class="m">0</span> to destroy.
</span><span class='line'>
</span><span class='line'>Changes to Outputs:
</span><span class='line'>  + <span class="nv">metadata</span> <span class="o">=</span> <span class="o">(</span>sensitive value<span class="o">)</span>
</span><span class='line'>  + <span class="nv">record</span>   <span class="o">=</span> <span class="o">(</span>known after apply<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>Do you want to perform these actions?
</span><span class='line'>  Terraform will perform the actions described above.
</span><span class='line'>  Only <span class="s1">&#39;yes&#39;</span> will be accepted to approve.
</span><span class='line'>
</span><span class='line'>  Enter a value: yes
</span><span class='line'>
</span><span class='line'>cloudflare_record.foobar: Creating...
</span><span class='line'>cloudflare_record.foobar: Creation <span class="nb">complete </span>after 4s <span class="o">[</span><span class="nv">id</span><span class="o">=</span>xxxxxxxxxxxxxxxxxxxxx<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>Apply <span class="nb">complete</span>! Resources: <span class="m">1</span> added, <span class="m">0</span> changed, <span class="m">0</span> destroyed.
</span><span class='line'>
</span><span class='line'>Outputs:
</span><span class='line'>
</span><span class='line'><span class="nv">metadata</span> <span class="o">=</span> &lt;sensitive&gt;
</span><span class='line'><span class="nv">record</span> <span class="o">=</span> <span class="s2">&quot;foobar.rbkr.xyz&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Test DNS</h2>

<p>We can now test if this is working as expected with a dns utility like dig:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; dig foobar.rbkr.xyz
</span><span class='line'>
</span><span class='line'><span class="p">;</span> &lt;&lt;&gt;&gt; DiG 9.10.6 &lt;&lt;&gt;&gt; foobar.rbkr.xyz
</span><span class='line'><span class="p">;;</span> global options: +cmd
</span><span class='line'><span class="p">;;</span> Got answer:
</span><span class='line'><span class="p">;;</span> -&gt;&gt;HEADER<span class="s">&lt;&lt;- opco</span>de: QUERY, status: NOERROR, id: 20800
</span><span class='line'><span class="p">;;</span> flags: qr rd ra<span class="p">;</span> QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1
</span><span class='line'>
</span><span class='line'><span class="p">;;</span> OPT PSEUDOSECTION:
</span><span class='line'><span class="p">;</span> EDNS: version: 0, flags:<span class="p">;</span> udp: 4096
</span><span class='line'><span class="p">;;</span> QUESTION SECTION:
</span><span class='line'><span class="p">;</span>foobar.rbkr.xyz.       IN      A
</span><span class='line'>
</span><span class='line'><span class="p">;;</span> ANSWER SECTION:
</span><span class='line'>foobar.rbkr.xyz. <span class="m">300</span>    IN      A       127.0.0.1
</span><span class='line'>
</span><span class='line'><span class="p">;;</span> Query <span class="nb">time</span>: <span class="m">262</span> msec
</span><span class='line'><span class="p">;;</span> SERVER: 172.31.0.2#53<span class="o">(</span>172.31.0.2<span class="o">)</span>
</span><span class='line'><span class="p">;;</span> WHEN: Wed Feb <span class="m">02</span> 13:57:59 SAST 2022
</span><span class='line'><span class="p">;;</span> MSG SIZE  rcvd: 68
</span></code></pre></td></tr></table></div></figure>


<h2>Thank You</h2>

<p>Thanks for reading, if you like my content, check out my <strong><a href="https://ruan.dev">website</a></strong> or follow me at <strong><a href="https://twitter.com/ruanbekker">@ruanbekker</a></strong> on Twitter.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Blockchain Basics]]></title>
    <link href="https://blog.ruanbekker.com/blog/2021/12/05/blockchain-basics/"/>
    <updated>2021-12-05T08:12:10-05:00</updated>
    <id>https://blog.ruanbekker.com/blog/2021/12/05/blockchain-basics</id>
    <content type="html"><![CDATA[<p>In this tutorial, we will cover the <strong>basics of blockchain</strong> and why you would want to run a full-node such as bitcoin, ethereum, etc.</p>

<h2>Blockchain Basics</h2>

<p>Before we start setting up our bitcoin full-node, we first need to get through some blockchain basics, if you already aware of it, you can skip the the setup section of this post.</p>

<h2>Block</h2>

<p>Transaction data is <strong>permanently recorded</strong> into files called <strong>blocks</strong>. You can think of it as a <strong>transaction ledger</strong>. Blocks are organised into a linear sequence over time.</p>

<p>New transactions are <strong>constantly being processed</strong> by <strong>miners</strong> into new blocks which are added to the <strong>end of the chain</strong>. As blocks are buried deeper and deeper into the blockchain they <strong>become harder</strong> and harder to change or remove, this gives rise of <strong><a href="https://en.bitcoin.it/wiki/Irreversible_Transactions">Bitcoin&rsquo;s Irreversible Transactions</a></strong>.</p>

<p>The first block added to the blockchain is referred to as the <strong><a href="https://en.bitcoin.it/wiki/Genesis_block">genesis block</a></strong></p>

<h2>Blockchain</h2>

<p>A blockchain is a transaction database shared by <strong>all nodes participating</strong> in a system based on the bitcoin protocol. A <strong>full copy</strong> of a currency&rsquo;s blockchain contains <strong>every</strong> transaction ever executed in the currency. With this information, one can find out how much value belonged to each address at any point in history.</p>

<p>Every block contains a hash of the previous block. This has the effect of creating a chain of blocks from the genesis block to the current block. <strong>Each block</strong> is guaranteed to come after the <strong>previous block</strong> chronologically because the previous block&rsquo;s hash would otherwise not be known. Each block is also computationally impractical to modify once it has been in the chain for a while because every block after it would also have to be regenerated. <strong>These properties are what make bitcoins transactions irreversible</strong>. The blockchain is the main innovation of Bitcoin.</p>

<h2>Mining</h2>

<p>Mining is the <strong>process</strong> of <strong>adding transaction records</strong> to bitcoin&rsquo;s public ledger of past transactions. The term &ldquo;mining rig&rdquo; is referred to where as a single computer system that performs the necessary computations for &ldquo;mining&rdquo;.</p>

<p>The blockchain serves to confirm transactions to the rest of the network as having taken place. Bitcoin nodes use the blockchain to <strong>distinguish legitimate Bitcoin transactions</strong> from attempts to re-spend coins that have already been spent elsewhere.</p>

<h2>Node</h2>

<p>Any <strong>computer</strong> that connects to the <strong>bitcoin network</strong> is called a <strong>node</strong>. Nodes that fully verify all of the rules of bitcoin are called full nodes. The most popular software implementation of full nodes is called bitcoin-core, its releases can be found on their <strong><a href="https://github.com/bitcoin/bitcoin/releases">github page</a></strong></p>

<h2>What is a Full Node</h2>

<p>A full node is a node (computer system with bitcoin-core running on it) which <strong>downloads every block and transaction</strong> and check them against <strong>bitcoin&rsquo;s consensus rules</strong>. which fully validates transactions and blocks. Almost all full nodes also help the network by accepting transactions and blocks from other full nodes, validating those transactions and blocks, and then relaying them to further full nodes.</p>

<p>Some <strong>examples</strong> of <strong>consensus rules</strong>:</p>

<ul>
<li>Blocks may only <a href="https://en.bitcoin.it/wiki/Controlled_supply">create</a> a certain number of bitcoins. (Currently 6.25 BTC per block.)</li>
<li>Transactions must have correct signatures for the bitcoins being spent.</li>
<li>Transactions/blocks must be in the correct data format.</li>
<li>Within a single <a href="https://en.bitcoin.it/wiki/Block_chain">blockchain</a>, a transaction output cannot be double-spent.</li>
</ul>


<p>At minimum, a full node must download every transaction that has ever taken place, all new transactions, and all block headers. Additionally, full nodes must store information about every unspent transaction output until it is spent.</p>

<p>By default full nodes are inefficient in that they download each new transaction at least twice, and they store the entire block chain (more than 165 GB as of 20180214) forever, even though only the unspent transaction outputs (&lt;2 GB) are required. Performance can improved by enabling <a href="https://bitcointalk.org/index.php?topic=1377345.0">-blocksonly</a> mode and enabling <a href="https://bitcoin.org/en/release/v0.12.0#wallet-pruning">pruning</a></p>

<h2>Archival Nodes</h2>

<p>A subset of full nodes also <strong>accept incoming connections</strong> and <strong>upload old blocks</strong> to other peers on the network. This happens if the software is run with -listen=1 as is default.</p>

<p>Contrary to some popular misconceptions, being an archival node is not necessary to being a full node. If a user&rsquo;s bandwidth is constrained then they can use -listen=0, if their disk space is constrained they can use pruning, all the while still being a fully-validating node that enforces bitcoin&rsquo;s consensus rules and contributing to bitcoin&rsquo;s overall security.</p>

<p>Most information was referenced from <strong><a href="https://en.bitcoin.it/wiki/Full_node">this</a></strong> wiki.</p>

<h2>Thank You</h2>

<p>Thanks for reading, if you like my content, check out my <strong><a href="https://ruan.dev">website</a></strong> or follow me at <strong><a href="https://twitter.com/ruanbekker">@ruanbekker</a></strong> on Twitter.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Run a GETH Ethereum Light Node]]></title>
    <link href="https://blog.ruanbekker.com/blog/2021/12/05/run-a-geth-ethereum-light-node/"/>
    <updated>2021-12-05T04:14:11-05:00</updated>
    <id>https://blog.ruanbekker.com/blog/2021/12/05/run-a-geth-ethereum-light-node</id>
    <content type="html"><![CDATA[<p><img src="https://user-images.githubusercontent.com/567298/144747750-e0a6f000-fc60-4422-b9bc-7b1b6549cbe4.png" alt="ethereum" /></p>

<p>In this tutorial we will install the Geth implementation of <a href="https://ethereum.org/en/">Ethereum</a> on Linux and we will be using the <a href="https://ethereum.org/en/developers/docs/nodes-and-clients/#light-node">light sync mode</a> which will get you up and running in minutes, which only downloads a couple of GBs.</p>

<p>Once we have our node setup we will be using the API and Web3 to interact with our ethereum node.</p>

<p>To understand the basics of blockchain better, you can read my post:
- <a href="https://blog.ruanbekker.com/blog/2021/12/05/blockchain-basics/">The Basics of Blockchain</a></p>

<h2>Environment Setup</h2>

<p>We require go to be installed on our server, so from golang&rsquo;s <a href="https://golang.org/dl/">releases</a> page get the latest version of Go and extract it:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> /tmp
</span><span class='line'>wget https://go.dev/dl/go1.17.4.linux-amd64.tar.gz
</span><span class='line'>sudo tar -C /usr/local -xzf go1.17.4.linux-amd64.tar.gz
</span></code></pre></td></tr></table></div></figure>


<p>Setup environment for Go in <code>/etc/profile.d/go.sh</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">GOROOT</span><span class="o">=</span>/usr/local/go
</span><span class='line'><span class="nb">export </span><span class="nv">GOPATH</span><span class="o">=</span><span class="nv">$HOME</span>/go
</span><span class='line'><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="nv">$PATH</span>:<span class="nv">$GOROOT</span>/bin
</span></code></pre></td></tr></table></div></figure>


<p>While you are in your session, source the file:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">source</span> /etc/profile.d/go.sh
</span></code></pre></td></tr></table></div></figure>


<p>And verify that Go is installed:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>go version
</span><span class='line'>go version go1.17.4 linux/amd64
</span></code></pre></td></tr></table></div></figure>


<h2>Download Geth</h2>

<p>From the geth <a href="https://geth.ethereum.org/downloads/">releases</a> page, get the latest version, extract and setup a symlink to the latest version:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> /tmp
</span><span class='line'>wget https://gethstore.blob.core.windows.net/builds/geth-linux-amd64-1.10.13-7a0c19f8.tar.gz
</span><span class='line'>tar -xvf geth-linux-amd64-1.10.13-7a0c19f8.tar.gz
</span><span class='line'>sudo mkdir -p /usr/local/geth/1.10.13/bin
</span><span class='line'>sudo mv geth-linux-amd64-1.10.13-7a0c19f8/geth /usr/local/geth/1.10.13/bin/geth
</span><span class='line'>sudo ln -s /usr/local/geth/1.10.13 /usr/local/geth/current
</span></code></pre></td></tr></table></div></figure>


<p>Setup the environment for geth on <code>/etc/profile.d/geth.sh</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="nv">$PATH</span>:/usr/local/geth/current/bin
</span></code></pre></td></tr></table></div></figure>


<p>Then source the file while you are still in your session:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">source</span> /etc/profile.d/geth.sh
</span></code></pre></td></tr></table></div></figure>


<p>You should be able to verify that geth is installed by running:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>geth version
</span><span class='line'>Geth
</span><span class='line'>Version: 1.10.13-stable
</span><span class='line'>Git Commit: eae3b1946a276ac099e0018fc792d9e8c3bfda6d
</span><span class='line'>Git Commit Date: 20210929
</span><span class='line'>Architecture: amd64
</span><span class='line'>Go Version: go1.17
</span><span class='line'>Operating System: linux
</span><span class='line'><span class="nv">GOPATH</span><span class="o">=</span>/home/ubuntu/go
</span><span class='line'><span class="nv">GOROOT</span><span class="o">=</span>/usr/local/go
</span></code></pre></td></tr></table></div></figure>


<h2>Setup Geth</h2>

<p>Create the data directory for geth and change the ownership of the directory to our user:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo mkdir -p /blockchain/ethereum/data
</span><span class='line'>sudo chown -R ubuntu:ubuntu /blockchain/ethereum
</span></code></pre></td></tr></table></div></figure>


<p>Run geth in the foreground to test:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>geth --ropsten <span class="se">\</span>
</span><span class='line'>  --datadir /blockchain/ethereum/data --datadir.minfreedisk <span class="m">1024</span> <span class="se">\</span>
</span><span class='line'>  --cache <span class="m">128</span> --syncmode <span class="s2">&quot;light&quot;</span> <span class="se">\</span>
</span><span class='line'>  --http --http.addr 0.0.0.0 --http.port <span class="m">8545</span> <span class="se">\</span>
</span><span class='line'>  --metrics --metrics.addr 0.0.0.0 --metrics.port 6060
</span></code></pre></td></tr></table></div></figure>


<p>If everything goes okay, you can stop the process, and remove the ropsten testnet blockchain and state databases:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>geth --ropsten removedb
</span></code></pre></td></tr></table></div></figure>


<p>Create the systemd unit file in <code>/etc/systemd/system/geth.service</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>Unit<span class="o">]</span>
</span><span class='line'><span class="nv">Description</span><span class="o">=</span>Geth Node
</span><span class='line'><span class="nv">After</span><span class="o">=</span>network.target auditd.service
</span><span class='line'><span class="nv">Wants</span><span class="o">=</span>network.target
</span><span class='line'>
</span><span class='line'><span class="o">[</span>Service<span class="o">]</span>
</span><span class='line'><span class="nv">WorkingDirectory</span><span class="o">=</span>/home/ubuntu
</span><span class='line'><span class="nv">ExecStart</span><span class="o">=</span>/usr/local/geth/current/bin/geth <span class="se">\</span>
</span><span class='line'>  --ropsten <span class="se">\</span>
</span><span class='line'>  --datadir /blockchain/ethereum/data <span class="se">\</span>
</span><span class='line'>  --datadir.minfreedisk <span class="m">1024</span> <span class="se">\</span>
</span><span class='line'>  --cache <span class="m">128</span> <span class="se">\</span>
</span><span class='line'>  --syncmode <span class="s2">&quot;light&quot;</span> <span class="se">\</span>
</span><span class='line'>  --http --http.addr 0.0.0.0 --http.port <span class="m">8545</span> <span class="se">\</span>
</span><span class='line'>  --http.api <span class="s2">&quot;admin,db,debug,eth,miner,net,personal,txpool,web3&quot;</span> <span class="se">\</span>
</span><span class='line'>  --http.corsdomain <span class="s2">&quot;*&quot;</span> <span class="se">\</span>
</span><span class='line'>  --metrics --metrics.addr 0.0.0.0 --metrics.port <span class="m">6060</span> <span class="se">\</span>
</span><span class='line'>  --whitelist <span class="nv">10920274</span><span class="o">=</span>0xfd652086d220d506ae5b7cb80fde97d2f3f7028d346cc7d9d384a83d3d638532
</span><span class='line'><span class="nv">User</span><span class="o">=</span>ubuntu
</span><span class='line'><span class="nv">Group</span><span class="o">=</span>ubuntu
</span><span class='line'><span class="nv">Restart</span><span class="o">=</span>on-failure
</span><span class='line'><span class="nv">RestartSec</span><span class="o">=</span>120s
</span><span class='line'><span class="nv">KillMode</span><span class="o">=</span>process
</span><span class='line'><span class="nv">KillSignal</span><span class="o">=</span>SIGINT
</span><span class='line'><span class="nv">TimeoutStopSec</span><span class="o">=</span>600
</span><span class='line'>
</span><span class='line'><span class="o">[</span>Install<span class="o">]</span>
</span><span class='line'><span class="nv">WantedBy</span><span class="o">=</span>multi-user.target
</span><span class='line'><span class="nv">Alias</span><span class="o">=</span>geth.service
</span></code></pre></td></tr></table></div></figure>


<p>The values such as <code>--whitelist</code> can be retrieved from <a href="https://github.com/ethereum/go-ethereum/issues/23546">this issue</a> or <a href="https://www.linkedin.com/pulse/how-mine-ropsten-testnet-ether-keir-finlow-bates/">this post</a> and extracted from the post:</p>

<blockquote><p>&ldquo;due to the London upgrade you&rsquo;ll probably end up on the chain that isn&rsquo;t tracked by Etherscan and Metamask. To ensure you only retrieve blocks from peers on that chain, include the following string in your geth start command&rdquo;</p></blockquote>

<p>Since we created a new systemd unit file, reload the systemd daemon:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo systemctl daemon-reload
</span></code></pre></td></tr></table></div></figure>


<p>Enable and start geth:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo systemctl <span class="nb">enable </span>geth
</span><span class='line'>sudo systemctl restart geth
</span></code></pre></td></tr></table></div></figure>


<p>You can tail the logs to ensure everything runs as it should:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo journalctl -fu geth
</span></code></pre></td></tr></table></div></figure>


<h2>API</h2>

<p>Following the <a href="https://eth.wiki/json-rpc/API">JSON-RPC</a> documentation, create your account:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl -H <span class="s2">&quot;Content-Type: application/json&quot;</span> -XPOST http://localhost:8545/ -d <span class="s1">&#39;{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;method&quot;:&quot;personal_newAccount&quot;,&quot;params&quot;:[&quot;password&quot;],&quot;id&quot;:1}&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>The response should provide your ropsten testnet address:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span><span class="nt">&quot;jsonrpc&quot;</span><span class="p">:</span><span class="s2">&quot;2.0&quot;</span><span class="p">,</span><span class="nt">&quot;id&quot;</span><span class="p">:</span><span class="mi">1</span><span class="p">,</span><span class="nt">&quot;result&quot;</span><span class="p">:</span><span class="s2">&quot;0x2b1718cdf7dbcc381267ccf43d320c6e194d6aa8&quot;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>We can list all our ethereum addresses by calling the <a href="https://eth.wiki/json-rpc/API#eth_accounts">eth_accounts</a> method:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl -H <span class="s2">&quot;Content-Type: application/json&quot;</span> -XPOST http://localhost:8545/ -d <span class="s1">&#39;{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;method&quot;:&quot;eth_accounts&quot;,&quot;params&quot;:[],&quot;id&quot;:1}&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>We can then check our balance with <a href="https://eth.wiki/json-rpc/API#eth_getbalance">eth_getbalance</a>, where we pass the ethereum address which is in hex format, followed by the block number, but we will use &ldquo;latest&rdquo;:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl -H <span class="s2">&quot;Content-Type: application/json&quot;</span> -XPOST http://localhost:8545/ -d <span class="s1">&#39;{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;method&quot;:&quot;eth_getBalance&quot;,&quot;params&quot;:[&quot;0x2b1718cdf7dbcc381267ccf43d320c6e194d6aa8&quot;, &quot;latest&quot;],&quot;id&quot;:1}&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>You can use the following faucets to send testnet funds to your account:
- <a href="https://faucet.dimensions.network/">https://faucet.dimensions.network/</a>
- <a href="https://faucet.ropsten.be/">https://faucet.ropsten.be/</a></p>

<p>After sending funds to your account, we can check our balance again:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl -H <span class="s2">&quot;Content-Type: application/json&quot;</span> -XPOST http://localhost:8545/ -d <span class="s1">&#39;{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;method&quot;:&quot;eth_getBalance&quot;,&quot;params&quot;:[&quot;0x2b1718cdf7dbcc381267ccf43d320c6e194d6aa8&quot;, &quot;latest&quot;],&quot;id&quot;:1}&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>And our balances should reflect in our account:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span><span class="nt">&quot;jsonrpc&quot;</span><span class="p">:</span><span class="s2">&quot;2.0&quot;</span><span class="p">,</span><span class="nt">&quot;id&quot;</span><span class="p">:</span><span class="mi">1</span><span class="p">,</span><span class="nt">&quot;result&quot;</span><span class="p">:</span><span class="s2">&quot;0x429d069189e0000&quot;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Hexadecimal and Wei</h2>

<p>As you can notice the value of our balance for our ethereum address is in hexadecimal format, we can convert it to decimal format:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">echo</span> <span class="k">$((</span><span class="m">0</span>x429d069189e0000<span class="k">))</span>
</span><span class='line'>300000000000000000
</span></code></pre></td></tr></table></div></figure>


<p>We can use python to convert to decimal using the int() function, by passing the hexadecimal value and pass its base to convert it into an integer, the base for hexadecimal is 16:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="s">&#39;0x429d069189e0000&#39;</span><span class="p">,</span> <span class="mi">16</span><span class="p">))</span>
</span><span class='line'><span class="mi">300000000000000000</span>
</span></code></pre></td></tr></table></div></figure>


<p>The decimal value that was returned is the value in <a href="https://www.investopedia.com/terms/w/wei.asp">Wei</a>, and the value of 1 ETH equals to 1,000,000,000,000,000,000 Wei.</p>

<p>Using <a href="https://gwei.io/">gwei.io</a> the conversions from 1 ETH are:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">Wei</span><span class="p">:</span> <span class="mi">1000000000000000000</span>
</span><span class='line'><span class="n">Kwei</span><span class="p">:</span> <span class="mi">1000000000000000</span>
</span><span class='line'><span class="n">Mwei</span><span class="p">:</span> <span class="mi">1000000000000</span>
</span><span class='line'><span class="n">Gwei</span><span class="p">:</span> <span class="mi">1000000000</span>
</span><span class='line'><span class="n">Twei</span><span class="p">:</span> <span class="mi">1000000</span>
</span><span class='line'><span class="n">Pwei</span><span class="p">:</span> <span class="mi">1000</span>
</span><span class='line'><span class="n">ETH</span><span class="p">:</span> <span class="mi">1</span>
</span></code></pre></td></tr></table></div></figure>


<p>So now we can convert our balance from wei to ethereum:</p>

<ul>
<li><code>your_balance_in_wei / unit_value_of_wei</code></li>
<li><code>300000000000000000 / 1000000000000000000</code></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">python3</span> <span class="o">-</span><span class="n">c</span> <span class="s">&quot;print(300000000000000000 / 1000000000000000000)&quot;</span>
</span><span class='line'><span class="mf">0.3</span>
</span></code></pre></td></tr></table></div></figure>


<p>We can use <a href="https://eth-converter.com/">this</a> converter to make sure my math is correct</p>

<p>To get the current gas price in wei</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl -H <span class="s2">&quot;Content-Type: application/json&quot;</span> -XPOST http://localhost:8545/ -d <span class="s1">&#39;{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;method&quot;:&quot;eth_gasPrice&quot;,&quot;params&quot;:[],&quot;id&quot;:1}&#39;</span><span class="o">{</span><span class="s2">&quot;jsonrpc&quot;</span>:<span class="s2">&quot;2.0&quot;</span>,<span class="s2">&quot;id&quot;</span>:1,<span class="s2">&quot;result&quot;</span>:<span class="s2">&quot;0x73a20d04&quot;</span><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>CLI - <a href="https://geth.ethereum.org/docs/interface/managing-your-accounts">Accounts</a></h2>

<p>Create a password in <code>/tmp/pass</code> then:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>geth --datadir /blockchain/ethereum/data --keystore /blockchain/ethereum/data/keystore account new --password /tmp/.pass
</span><span class='line'>
</span><span class='line'>Your new key was generated
</span><span class='line'>
</span><span class='line'>Public address of the key:   0x5814D945EC909eb1307be4F133AaAB3dEF3572f0
</span><span class='line'>Path of the secret key file: /blockchain/ethereum/data/keystore/UTC--2021-10-06T15-43-23.679655564Z--5814d945ec909eb1307be4f133aaab3def3572f0
</span><span class='line'>
</span><span class='line'>- You can share your public address with anyone. Others need it to interact with you.
</span><span class='line'>- You must NEVER share the secret key with anyone! The key controls access to your funds!
</span><span class='line'>- You must BACKUP your key file! Without the key, it<span class="s1">&#39;s impossible to access account funds!</span>
</span><span class='line'><span class="s1">- You must REMEMBER your password! Without the password, it&#39;</span>s impossible to decrypt the key!
</span></code></pre></td></tr></table></div></figure>


<p>Then when you attach your console session, you will be able to see the address that we created:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>geth attach /blockchain/ethereum/data/geth.ipc
</span><span class='line'>&gt; eth.accounts<span class="o">[</span>0<span class="o">]</span>
</span><span class='line'><span class="s2">&quot;0x5814d945ec909eb1307be4f133aaab3def3572f0&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>CLI - Attach</h2>

<p>Run the geth console:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>geth attach /blockchain/ethereum/data/geth.ipc
</span><span class='line'>Welcome to the Geth JavaScript console!
</span><span class='line'>
</span><span class='line'>instance: Geth/v1.10.13-stable-eae3b194/linux-amd64/go1.17
</span><span class='line'>at block: <span class="m">11173667</span> <span class="o">(</span>Wed Oct <span class="m">06</span> <span class="m">2021</span> 08:00:44 GMT+0200 <span class="o">(</span>SAST<span class="o">))</span>
</span><span class='line'> datadir: /blockchain/ethereum/data
</span><span class='line'> modules: admin:1.0 debug:1.0 eth:1.0 ethash:1.0 les:1.0 net:1.0 personal:1.0 rpc:1.0 txpool:1.0 vflux:1.0 web3:1.0
</span><span class='line'>
</span><span class='line'>To <span class="nb">exit</span>, press ctrl-d or <span class="nb">type exit</span>
</span><span class='line'>&gt;
</span></code></pre></td></tr></table></div></figure>


<p>We can run <code>net</code> to show us the peercounts:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; net
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  listening: <span class="nb">true</span>,
</span><span class='line'>  peerCount: 1,
</span><span class='line'>  version: <span class="s2">&quot;3&quot;</span>,
</span><span class='line'>  getListening: <span class="k">function</span><span class="o">(</span>callback<span class="o">)</span>,
</span><span class='line'>  getPeerCount: <span class="k">function</span><span class="o">(</span>callback<span class="o">)</span>,
</span><span class='line'>  getVersion: <span class="k">function</span><span class="o">(</span>callback<span class="o">)</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Or if we just want to access the peerCount value:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; net.peerCount
</span><span class='line'>1
</span></code></pre></td></tr></table></div></figure>


<p>To view the peers thats connected:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; admin.peers
</span><span class='line'><span class="o">[{</span>
</span><span class='line'>    caps: <span class="o">[</span><span class="s2">&quot;eth/66&quot;</span>, <span class="s2">&quot;les/2&quot;</span>, <span class="s2">&quot;les/3&quot;</span>, <span class="s2">&quot;les/4&quot;</span>, <span class="s2">&quot;snap/1&quot;</span><span class="o">]</span>,
</span><span class='line'>    enode: <span class="s2">&quot;enode://3b76ec5359e59048721de8b6ff97a064ea280233d37433222ce7efcdac700c987326734983c9b65f8f1914c40e1efd6b43999912a3bca208fcbb540a678db110@93.75.22.22:30308&quot;</span>,
</span><span class='line'>    enr: <span class="s2">&quot;enr:-KO4QD2mp_FKB4ZDpfOAD_ziVnMXo1Mcd-FQl9Abj__EJKr9As6UE0frpdaiOnWjqzuGLGaabaAkG7e2CvfY8LulI9ENg2V0aMfGhHEZtrOAgmlkgnY0gmlwhF1LFhaDbGVzwQGJc2VjcDI1NmsxoQI7duxTWeWQSHId6Lb_l6Bk6igCM9N0MyIs5-_NrHAMmIRzbmFwwIN0Y3CCdmSDdWRwgnZk&quot;</span>,
</span><span class='line'>    id: <span class="s2">&quot;a95433e1bcbcc64f5d1ad8bd2535557d1f5ed2191a760f704d42a925656bb8de&quot;</span>,
</span><span class='line'>    name: <span class="s2">&quot;Geth/v1.10.9-stable-eae3b194/linux-amd64/go1.17&quot;</span>,
</span><span class='line'>    network: <span class="o">{</span>
</span><span class='line'>      inbound: <span class="nb">false</span>,
</span><span class='line'>      localAddress: <span class="s2">&quot;192.168.0.120:55166&quot;</span>,
</span><span class='line'>      remoteAddress: <span class="s2">&quot;93.75.22.22:30308&quot;</span>,
</span><span class='line'>      static: <span class="nb">false</span>,
</span><span class='line'>      trusted: <span class="nb">false</span>
</span><span class='line'>    <span class="o">}</span>,
</span><span class='line'>    protocols: <span class="o">{</span>
</span><span class='line'>      les: <span class="o">{</span>
</span><span class='line'>        difficulty: 35015228630523840,
</span><span class='line'>        head: <span class="s2">&quot;1aa1db0e6810f504f1542e8c3c49cecf17b0c3246b41f45bede42723d22b7c0c&quot;</span>,
</span><span class='line'>        version: 4
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Check if the node is syncing:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; eth.syncing
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  currentBlock: 11176044,
</span><span class='line'>  highestBlock: 11176158,
</span><span class='line'>  knownStates: 40043719,
</span><span class='line'>  pulledStates: 39904521,
</span><span class='line'>  startingBlock: 0
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>We can view our accounts:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; eth.accounts
</span><span class='line'><span class="o">[</span><span class="s2">&quot;0x2b1718cdf7dbcc381267ccf43d320c6e194d6aa8&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>And get the balance:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; eth.getBalance<span class="o">(</span>eth.accounts<span class="o">[</span>0<span class="o">])</span>
</span><span class='line'>300000000000000000
</span></code></pre></td></tr></table></div></figure>


<h2>CLI - SendTransaction</h2>

<p>The account that will be receiving the funds (host-a):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>geth attach /blockchain/ethereum/data/geth.ipc
</span><span class='line'>&gt; eth.accounts<span class="o">[</span>0<span class="o">]</span>
</span><span class='line'><span class="s2">&quot;0x2b1718cdf7dbcc381267ccf43d320c6e194d6aa8&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>It&rsquo;s current balance:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; eth.getBalance<span class="o">(</span>eth.accounts<span class="o">[</span>0<span class="o">])</span>
</span><span class='line'>20485608293038927543
</span></code></pre></td></tr></table></div></figure>


<p>On the account that we will be sending from (host-b):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>geth attach /blockchain/ethereum/data/geth.ipc
</span><span class='line'>&gt; eth.accounts<span class="o">[</span>0<span class="o">]</span>
</span><span class='line'><span class="s2">&quot;0xd490fb53c0e7d3c80153112a4bd135e2cf897282&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>It&rsquo;s current balance:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; eth.getBalance<span class="o">(</span>eth.accounts<span class="o">[</span>0<span class="o">])</span>
</span><span class='line'>2001712477998186788
</span></code></pre></td></tr></table></div></figure>


<p>When we attempt to send 1ETH to the recipient address:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; eth.sendTransaction<span class="o">({</span>from: <span class="s2">&quot;0xd490fb53c0e7d3c80153112a4bd135e2cf897282&quot;</span>, to: <span class="s2">&quot;0x2b1718cdf7dbcc381267ccf43d320c6e194d6aa8&quot;</span>, value: <span class="s2">&quot;1000000000000000000&quot;</span><span class="o">})</span>
</span><span class='line'>Error: authentication needed: password or unlock
</span><span class='line'>  at web3.js:6357:37<span class="o">(</span>47<span class="o">)</span>
</span><span class='line'>  at web3.js:5091:62<span class="o">(</span>37<span class="o">)</span>
</span><span class='line'>  at &lt;<span class="nb">eval</span>&gt;:1:20<span class="o">(</span>10<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>You will notice that we need to unlock our account first:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; web3.personal.unlockAccount<span class="o">(</span>web3.personal.listAccounts<span class="o">[</span>0<span class="o">]</span>, null, 60<span class="o">)</span>
</span><span class='line'>Unlock account 0xd490fb53c0e7d3c80153112a4bd135e2cf897282
</span><span class='line'>Passphrase:
</span><span class='line'><span class="nb">true</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now we can send the transaction:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; eth.sendTransaction<span class="o">({</span>from: <span class="s2">&quot;0xd490fb53c0e7d3c80153112a4bd135e2cf897282&quot;</span>, to: <span class="s2">&quot;0x2b1718cdf7dbcc381267ccf43d320c6e194d6aa8&quot;</span>, value: <span class="s2">&quot;1000000000000000000&quot;</span><span class="o">})</span>
</span><span class='line'><span class="s2">&quot;0x4bffabf28b71e6f83a48f0accb850b232dc3f482e30d942be3a2eb53d639d4bd&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>And the transaction id can be looked up on the ropsten blockexplorer:
- <a href="https://ropsten.etherscan.io/tx/0x4bffabf28b71e6f83a48f0accb850b232dc3f482e30d942be3a2eb53d639d4bd">https://ropsten.etherscan.io/tx/0x4bffabf28b71e6f83a48f0accb850b232dc3f482e30d942be3a2eb53d639d4bd</a></p>

<p>And after the confirmations has been confirmed, we can see in our receiving account, we received the funds:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; eth.getBalance<span class="o">(</span>eth.accounts<span class="o">[</span>0<span class="o">])</span>
</span><span class='line'>21485608293038927543
</span></code></pre></td></tr></table></div></figure>


<h2>Web3</h2>

<p>Run a python environment:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>docker run -it python:3.8.5-slim bash
</span></code></pre></td></tr></table></div></figure>


<p>Install dependencies:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>apt update
</span><span class='line'>apt install python3-dev gcc -y
</span><span class='line'>pip install web3<span class="o">[</span>tester<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>The examples I will be following was extracted from the documentation:
- <a href="https://ethereum.org/ml/developers/tutorials/a-developers-guide-to-ethereum-part-one/">https://ethereum.org/ml/developers/tutorials/a-developers-guide-to-ethereum-part-one/</a></p>

<p>Instantiate a client and connect to your geth node, [this documentation] provides different methods of connecting, but I will be using the <code>HTTPProvider</code> to connect over the network:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">from</span> <span class="nn">web3</span> <span class="kn">import</span> <span class="n">Web3</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">w3</span> <span class="o">=</span> <span class="n">Web3</span><span class="p">(</span><span class="n">Web3</span><span class="o">.</span><span class="n">HTTPProvider</span><span class="p">(</span><span class="s">&#39;http://192.168.0.120:8545&#39;</span><span class="p">))</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">w3</span><span class="o">.</span><span class="n">isConnected</span><span class="p">()</span>
</span><span class='line'><span class="bp">True</span>
</span></code></pre></td></tr></table></div></figure>


<p>List the accounts:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python3'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">w3</span><span class="o">.</span><span class="n">eth</span><span class="o">.</span><span class="n">accounts</span>
</span><span class='line'><span class="p">[</span><span class="s">&#39;0x2b1718CdF7dBcc381267CCF43D320C6e194D6aa8&#39;</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Get the balance in Wei:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python3'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">account</span> <span class="o">=</span> <span class="n">w3</span><span class="o">.</span><span class="n">eth</span><span class="o">.</span><span class="n">accounts</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">w3</span><span class="o">.</span><span class="n">eth</span><span class="o">.</span><span class="n">get_balance</span><span class="p">(</span><span class="n">account</span><span class="p">)</span>
</span><span class='line'><span class="mi">300000000000000000</span>
</span></code></pre></td></tr></table></div></figure>


<p>Convert from Wei to ETH:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">balance_wei</span> <span class="o">=</span> <span class="n">w3</span><span class="o">.</span><span class="n">eth</span><span class="o">.</span><span class="n">get_balance</span><span class="p">(</span><span class="n">account</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">w3</span><span class="o">.</span><span class="n">fromWei</span><span class="p">(</span><span class="n">balance_wei</span><span class="p">,</span> <span class="s">&#39;ether&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">Decimal</span><span class="p">(</span><span class="s">&#39;0.3&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Get the information about the latest block:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">w3</span><span class="o">.</span><span class="n">eth</span><span class="o">.</span><span class="n">get_block</span><span class="p">(</span><span class="s">&#39;latest&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">AttributeDict</span><span class="p">({</span><span class="s">&#39;baseFeePerGas&#39;</span><span class="p">:</span> <span class="mi">9</span><span class="p">,</span> <span class="s">&#39;difficulty&#39;</span><span class="p">:</span> <span class="mi">2073277081</span><span class="p">,</span> <span class="s">&#39;extraData&#39;</span><span class="p">:</span> <span class="n">HexBytes</span><span class="p">(</span><span class="s">&#39;0x63732e7064782e65647520676574682076312e31302e38&#39;</span><span class="p">),</span> <span class="s">&#39;gasLimit&#39;</span><span class="p">:</span> <span class="mi">8000000</span><span class="p">,</span> <span class="s">&#39;gasUsed&#39;</span><span class="p">:</span> <span class="mi">3361330</span><span class="p">,</span> <span class="s">&#39;hash&#39;</span><span class="p">:</span> <span class="n">HexBytes</span><span class="p">(</span><span class="s">&#39;0xd06a7a734413bcffa4d56617b7efb9ebd8e684c5fcc7fd4f3ec85b8b809b1a0b&#39;</span><span class="p">),</span> <span class="s">&#39;logsBloom&#39;</span><span class="p">:</span> <span class="n">HexBytes</span><span class="p">(</span><span class="s">&#39;0xspan><span class="p">),</span> <span class="s">&#39;miner&#39;</span><span class="p">:</span> <span class="s">&#39;0xe9e7034AeD5CE7f5b0D281CFE347B8a5c2c53504&#39;</span><span class="p">,</span> <span class="s">&#39;mixHash&#39;</span><span class="p">:</span> <span class="n">HexBytes</span><span class="p">(</span><span class="s">&#39;0x42641ef2d13826f9cb070516f81515464af9c5c0a36edaa7c250fec62d18a193&#39;</span><span class="p">),</span> <span class="s">&#39;nonce&#39;</span><span class="p">:</span> <span class="n">HexBytes</span><span class="p">(</span><span class="s">&#39;0x670ce792aed73895&#39;</span><span class="p">),</span> <span class="s">&#39;number&#39;</span><span class="p">:</span> <span class="mi">11173874</span><span class="p">,</span> <span class="s">&#39;parentHash&#39;</span><span class="p">:</span> <span class="n">HexBytes</span><span class="p">(</span><span class="s">&#39;0xe26e265b264e5158a46ee213d39150d90b532db061497027f35ad36e98458895&#39;</span><span class="p">),</span> <span class="s">&#39;receiptsRoot&#39;</span><span class="p">:</span> <span class="n">HexBytes</span><span class="p">(</span><span class="s">&#39;0x08c15b7365caa993a3047a3093ae641d5b97c51aff058952ab48a56bdee9240b&#39;</span><span class="p">),</span> <span class="s">&#39;sha3Uncles&#39;</span><span class="p">:</span> <span class="n">HexBytes</span><span class="p">(</span><span class="s">&#39;0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347&#39;</span><span class="p">),</span> <span class="s">&#39;size&#39;</span><span class="p">:</span> <span class="mi">16130</span><span class="p">,</span> <span class="s">&#39;stateRoot&#39;</span><span class="p">:</span> <span class="n">HexBytes</span><span class="p">(</span><span class="s">&#39;0x9e2d99e11b4c71b93f14a563a87945c0ed89e577eefc860a7909bd6f3b8e669f&#39;</span><span class="p">),</span> <span class="s">&#39;timestamp&#39;</span><span class="p">:</span> <span class="mi">1633502988</span><span class="p">,</span> <span class="s">&#39;totalDifficulty&#39;</span><span class="p">:</span> <span class="mi">35015626783987398</span><span class="p">,</span> <span class="s">&#39;transactions&#39;</span><span class="p">:</span> <span class="p">[</span><span class="n">HexBytes</span><span class="p">(</span><span class="s">&#39;0x9013555031ca4510e619968814b75ff428c595488c46a387a6b57774313f4686&#39;</span><span class="p">),</span> <span class="n">HexBytes</span><span class="p">(</span><span class="s">&#39;0x899f3dfa8cc0ce7eac397500a014dd624d50c0024e112fa3989403da5669b838&#39;</span><span class="p">),</span> <span class="n">HexBytes</span><span class="p">(</span><span class="s">&#39;0xf0c08c7e6849be5d23e0c603b405012a1baa4252884f8efac3244d3ed77b8622&#39;</span><span class="p">),</span> <span class="n">HexBytes</span><span class="p">(</span><span class="s">&#39;0xb6e03e10e0d6ced0a791f3a9474d760d7248301dc489c5b191aa82b1ef23e677&#39;</span><span class="p">),</span> <span class="n">HexBytes</span><span class="p">(</span><span class="s">&#39;0xb424a4da501df145346027c9c839ae9bf9a25f3672bf13fe097c39f46eda5028&#39;</span><span class="p">),</span> <span class="n">HexBytes</span><span class="p">(</span><span class="s">&#39;0xcb74ac5580485542ca532f5dc46798b84cb26d34ebc127871d6e2ffead6c32c7&#39;</span><span class="p">),</span> <span class="n">HexBytes</span><span class="p">(</span><span class="s">&#39;0xb61cf0eb92798885e4a6309d228e8a31e892e4353810593ba14a2737c1fcd53a&#39;</span><span class="p">),</span> <span class="n">HexBytes</span><span class="p">(</span><span class="s">&#39;0x20b27640c1b674be98d3051fac5dcf5ae50d5b7e957defc2336f07b99053fb2c&#39;</span><span class="p">),</span> <span class="n">HexBytes</span><span class="p">(</span><span class="s">&#39;0x2929a7384e5b47c4e414142623911a2deca95996e761bc10ccedf607342156af&#39;</span><span class="p">),</span> <span class="n">HexBytes</span><span class="p">(</span><span class="s">&#39;0x698af438f73bf384b7c35d4448c0e098d7744b4ce58327dc258a3d5706421c7e&#39;</span><span class="p">)],</span> <span class="s">&#39;transactionsRoot&#39;</span><span class="p">:</span> <span class="n">HexBytes</span><span class="p">(</span><span class="s">&#39;0x33cca53eabc2aed8cb0c8a5a7b771b9f14fd2e2aa2561195250411f0714ec768&#39;</span><span class="p">),</span> <span class="s">&#39;uncles&#39;</span><span class="p">:</span> <span class="p">[]})</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Mining</h2>

<p>Note: <code>Light clients do not support mining</code></p>

<p>From another node, im running the fast sync mode on ropsten:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">--</span><span class="n">syncmode</span> <span class="s">&quot;fast&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://geth.ethereum.org/docs/interface/mining">https://geth.ethereum.org/docs/interface/mining</a></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; eth.hashrate
</span><span class='line'>43949
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; eth.coinbase
</span><span class='line'><span class="s2">&quot;0x2b1718cdf7dbcc381267ccf43d320c6e194d6aa8&quot;</span>
</span><span class='line'>&gt; eth.getBalance<span class="o">(</span>eth.coinbase<span class="o">)</span>.toNumber<span class="o">()</span><span class="p">;</span>
</span><span class='line'>145000000000000000000
</span></code></pre></td></tr></table></div></figure>


<h2>Delete Data</h2>

<p>If we look at a fully synced ropsten &ldquo;fast&rdquo; node:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>du -h /blockchain/ethereum/
</span><span class='line'>4.0K  /blockchain/ethereum/data/keystore
</span><span class='line'>856K  /blockchain/ethereum/data/geth/triecache
</span><span class='line'>58G   /blockchain/ethereum/data/geth/chaindata/ancient
</span><span class='line'>69G   /blockchain/ethereum/data/geth/chaindata
</span><span class='line'>2.2M  /blockchain/ethereum/data/geth/nodes
</span><span class='line'>188M  /blockchain/ethereum/data/geth/ethash
</span><span class='line'>69G   /blockchain/ethereum/data/geth
</span><span class='line'>69G   /blockchain/ethereum/data
</span><span class='line'>69G   /blockchain/ethereum/
</span></code></pre></td></tr></table></div></figure>


<p>Remove the data with <code>removedb</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>geth --datadir /blockchain/ethereum/data removedb
</span><span class='line'>INFO <span class="o">[</span>10-06<span class="p">|</span>20:01:52.061<span class="o">]</span> Maximum peer count                       <span class="nv">ETH</span><span class="o">=</span><span class="m">50</span> <span class="nv">LES</span><span class="o">=</span><span class="m">0</span> <span class="nv">total</span><span class="o">=</span>50
</span><span class='line'>INFO <span class="o">[</span>10-06<span class="p">|</span>20:01:52.061<span class="o">]</span> Smartcard socket not found, disabling    <span class="nv">err</span><span class="o">=</span><span class="s2">&quot;stat /run/pcscd/pcscd.comm: no such file or directory&quot;</span>
</span><span class='line'>INFO <span class="o">[</span>10-06<span class="p">|</span>20:01:52.062<span class="o">]</span> Set global gas cap                       <span class="nv">cap</span><span class="o">=</span>50,000,000
</span><span class='line'>Remove full node state database <span class="o">(</span>/blockchain/ethereum/data/geth/chaindata<span class="o">)</span>? <span class="o">[</span>y/n<span class="o">]</span> y
</span><span class='line'>Remove full node state database <span class="o">(</span>/blockchain/ethereum/data/geth/chaindata<span class="o">)</span>? <span class="o">[</span>y/n<span class="o">]</span> y
</span><span class='line'>INFO <span class="o">[</span>10-06<span class="p">|</span>20:01:57.141<span class="o">]</span> Database successfully deleted            <span class="nv">path</span><span class="o">=</span>/blockchain/ethereum/data/geth/chaindata <span class="nv">elapsed</span><span class="o">=</span>2.482s
</span><span class='line'>Remove full node ancient database <span class="o">(</span>/blockchain/ethereum/data/geth/chaindata/ancient<span class="o">)</span>? <span class="o">[</span>y/n<span class="o">]</span> y
</span><span class='line'>Remove full node ancient database <span class="o">(</span>/blockchain/ethereum/data/geth/chaindata/ancient<span class="o">)</span>? <span class="o">[</span>y/n<span class="o">]</span> y
</span><span class='line'>INFO <span class="o">[</span>10-06<span class="p">|</span>20:02:05.645<span class="o">]</span> Database successfully deleted            <span class="nv">path</span><span class="o">=</span>/blockchain/ethereum/data/geth/chaindata/ancient <span class="nv">elapsed</span><span class="o">=</span>589.737ms
</span><span class='line'>INFO <span class="o">[</span>10-06<span class="p">|</span>20:02:05.645<span class="o">]</span> Light node database missing              <span class="nv">path</span><span class="o">=</span>/blockchain/ethereum/data/geth/lightchaindata
</span></code></pre></td></tr></table></div></figure>


<p>Now when we list the data directory, we can see the data was removed:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>du -h /blockchain/ethereum/
</span><span class='line'>8.0K  /blockchain/ethereum/data/keystore
</span><span class='line'>868K  /blockchain/ethereum/data/geth/triecache
</span><span class='line'>4.0K  /blockchain/ethereum/data/geth/chaindata/ancient
</span><span class='line'>180K  /blockchain/ethereum/data/geth/chaindata
</span><span class='line'>1.4M  /blockchain/ethereum/data/geth/nodes
</span><span class='line'>188M  /blockchain/ethereum/data/geth/ethash
</span><span class='line'>190M  /blockchain/ethereum/data/geth
</span><span class='line'>190M  /blockchain/ethereum/data
</span><span class='line'>190M  /blockchain/ethereum/
</span></code></pre></td></tr></table></div></figure>


<h2>Resources</h2>

<ul>
<li><a href="https://ethereum.org/ml/developers/tutorials/a-developers-guide-to-ethereum-part-one/">Use web3 in python</a></li>
<li><a href="https://www.linkedin.com/pulse/how-mine-ropsten-testnet-ether-keir-finlow-bates">How to mine ropsten testnet</a></li>
<li><a href="https://documenter.getpostman.com/view/4117254/ethereum-json-rpc/RVu7CT5J">Ethereum JSON RPC on Postman</a></li>
<li><a href="https://eth.wiki/json-rpc/API#personal_newAccount">ETH WIki - JSON RPC</a></li>
<li><a href="https://gist.github.com/swaldman/e58a866eafc4ff043c4099e394901a1e">https://gist.github.com/swaldman/e58a866eafc4ff043c4099e394901a1e</a></li>
<li><a href="https://ethereum.org/en/developers/tutorials/run-node-raspberry-pi/">Run Geth on a Raspberry Pi - ethereum.org</a></li>
</ul>


<h2>Thank You</h2>

<p>Thanks for reading, if you like my content, check out my <strong><a href="https://ruan.dev">website</a></strong> or follow me at <strong><a href="https://twitter.com/ruanbekker">@ruanbekker</a></strong> on Twitter.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Run Docker Containers With Terraform]]></title>
    <link href="https://blog.ruanbekker.com/blog/2021/11/23/run-docker-containers-with-terraform/"/>
    <updated>2021-11-23T11:06:03-05:00</updated>
    <id>https://blog.ruanbekker.com/blog/2021/11/23/run-docker-containers-with-terraform</id>
    <content type="html"><![CDATA[<p>In this post I will demonstrate how to use the terraform <a href="https://registry.terraform.io/providers/kreuzwerker/docker/latest/docs/resources/container">docker_container</a> resource from the <a href="https://github.com/kreuzwerker/terraform-provider-docker">docker provider</a> to run two docker containers, traefik and nginx and use the random provider to generate a random url for us.</p>

<h2>Pre-Requisites</h2>

<p>You will require <a href="https://www.terraform.io/downloads.html">terraform</a> and <a href="https://docs.docker.com/get-docker/">docker</a> to be installed.</p>

<h2>Project Structure</h2>

<p>The source code for this post is available on my github repository, but the project structure will look like the following:</p>

<p><img src="https://user-images.githubusercontent.com/567298/143061769-c619e7eb-c5b1-42bc-9fa4-ed59c15448fa.png" alt="image" /></p>

<p>Our <code>providers.tf</code>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>terraform {
</span><span class='line'>  required_providers {
</span><span class='line'>    docker = {
</span><span class='line'>      source  = "kreuzwerker/docker"
</span><span class='line'>      version = "2.15.0"
</span><span class='line'>    }
</span><span class='line'>    random = {
</span><span class='line'>      version = "~&gt; 3.0"
</span><span class='line'>    }
</span><span class='line'>  }
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>provider "docker" {
</span><span class='line'>  host = "unix:///var/run/docker.sock"
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>provider "random" {}</span></code></pre></td></tr></table></div></figure>


<p>Our <code>variables.tf</code>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>variable "domain" {
</span><span class='line'>  type    = string
</span><span class='line'>  default = "localdns.xyz"
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>Our <code>outputs.tf</code>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>output "nginx_container_name" {
</span><span class='line'>  value = docker_container.nginx.name
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>output "traefik_container_name" {
</span><span class='line'>  value = docker_container.traefik.name
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>output "traefik_url" {
</span><span class='line'>  value = "http://traefik.${var.domain}/"
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>output "nginx_url" {
</span><span class='line'>  value = "http://www.${random_string.nginx.result}.${var.domain}/"
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>Our <code>main.tf</code>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>resource "random_string" "nginx" {
</span><span class='line'>  length  = 8
</span><span class='line'>  upper   = false
</span><span class='line'>  special = false
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>resource "docker_image" "nginx" {
</span><span class='line'>  name = "nginx:stable-alpine"
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>resource "docker_image" "traefik" {
</span><span class='line'>  name = "traefik:1.7.14"
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>resource "docker_network" "nginx" {
</span><span class='line'>  name   = "docknet"
</span><span class='line'>  driver = "bridge"
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>resource "docker_container" "traefik" {
</span><span class='line'>  name  = "traefik"
</span><span class='line'>  image = docker_image.traefik.name
</span><span class='line'>
</span><span class='line'>  networks_advanced {
</span><span class='line'>    name    = docker_network.nginx.name
</span><span class='line'>    aliases = ["docknet"]
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  restart = "unless-stopped"
</span><span class='line'>  destroy_grace_seconds = 30
</span><span class='line'>  must_run = true
</span><span class='line'>  memory = 256
</span><span class='line'>
</span><span class='line'>  volumes {
</span><span class='line'>    host_path      = "/var/run/docker.sock"
</span><span class='line'>    container_path = "/var/run/docker.sock"
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  command = [
</span><span class='line'>    "--api",
</span><span class='line'>    "--docker",
</span><span class='line'>    "--docker.watch",
</span><span class='line'>    "--entrypoints=Name:http Address::80",
</span><span class='line'>    "--logLevel=INFO"
</span><span class='line'>  ]
</span><span class='line'>
</span><span class='line'>  ports {
</span><span class='line'>    internal = 80
</span><span class='line'>    external = 80
</span><span class='line'>    ip       = "0.0.0.0"
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  labels {
</span><span class='line'>    label = "traefik.enable"
</span><span class='line'>    value = true
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  labels {
</span><span class='line'>    label = "traefik.docker.network"
</span><span class='line'>    value = "docknet"
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  labels {
</span><span class='line'>    label = "traefik.frontend.rule"
</span><span class='line'>    value = "Host:traefik.${var.domain}"
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  labels {
</span><span class='line'>    label = "traefik.port"
</span><span class='line'>    value = 8080
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>resource "docker_container" "nginx" {
</span><span class='line'>  name  = "nginx"
</span><span class='line'>  image = docker_image.nginx.name
</span><span class='line'>
</span><span class='line'>  networks_advanced {
</span><span class='line'>    name    = docker_network.nginx.name
</span><span class='line'>    aliases = ["docknet"]
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  restart = "unless-stopped"
</span><span class='line'>  destroy_grace_seconds = 30
</span><span class='line'>  must_run = true
</span><span class='line'>  memory = 256
</span><span class='line'>
</span><span class='line'>  volumes {
</span><span class='line'>    host_path      = "/Users/ruan/personal/terraform-playground/docker-containers/html"
</span><span class='line'>    container_path = "/usr/share/nginx/html"
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  volumes {
</span><span class='line'>    host_path      = "/Users/ruan/personal/terraform-playground/docker-containers/configs/nginx.conf"
</span><span class='line'>    container_path = "/etc/nginx/nginx.conf"
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  volumes {
</span><span class='line'>    host_path      = "/Users/ruan/personal/terraform-playground/docker-containers/configs/app.conf"
</span><span class='line'>    container_path = "/etc/nginx/conf.d/app.conf"
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  env = [
</span><span class='line'>    "PUID=501",
</span><span class='line'>    "PGID=20"
</span><span class='line'>  ]
</span><span class='line'>
</span><span class='line'>  labels {
</span><span class='line'>    label = "traefik.enable"
</span><span class='line'>    value = true
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  labels {
</span><span class='line'>    label = "traefik.docker.network"
</span><span class='line'>    value = "docknet"
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  labels {
</span><span class='line'>    label = "traefik.frontend.rule"
</span><span class='line'>    value = "Host:www.${random_string.nginx.result}.${var.domain}"
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  labels {
</span><span class='line'>    label = "traefik.port"
</span><span class='line'>    value = 80
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  depends_on = [
</span><span class='line'>    docker_container.traefik,
</span><span class='line'>    random_string.nginx
</span><span class='line'>  ]
</span><span class='line'>
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>Our <code>html/index.html</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="cp">&lt;!doctype html&gt;</span>
</span><span class='line'><span class="nt">&lt;html</span> <span class="na">lang=</span><span class="s">&quot;en&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;head&gt;</span>
</span><span class='line'>        <span class="nt">&lt;meta</span> <span class="na">charset=</span><span class="s">&quot;utf-8&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">&quot;viewport&quot;</span> <span class="na">content=</span><span class="s">&quot;width=device-width, initial-scale=1&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>
</span><span class='line'>        <span class="nt">&lt;title&gt;</span>Welcome<span class="nt">&lt;/title&gt;</span>
</span><span class='line'>
</span><span class='line'>        <span class="c">&lt;!-- Fonts --&gt;</span>
</span><span class='line'>        <span class="nt">&lt;link</span> <span class="na">href=</span><span class="s">&quot;https://fonts.googleapis.com/css?family=Nunito:200,600&quot;</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>
</span><span class='line'>        <span class="c">&lt;!-- Styles --&gt;</span>
</span><span class='line'>        <span class="nt">&lt;style&gt;</span>
</span><span class='line'>            <span class="nt">html</span><span class="o">,</span> <span class="nt">body</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">background-color</span><span class="o">:</span> <span class="m">#fff</span><span class="p">;</span>
</span><span class='line'>                <span class="k">color</span><span class="o">:</span> <span class="m">#636b6f</span><span class="p">;</span>
</span><span class='line'>                <span class="k">font-family</span><span class="o">:</span> <span class="s1">&#39;Nunito&#39;</span><span class="o">,</span> <span class="k">sans-serif</span><span class="p">;</span>
</span><span class='line'>                <span class="k">font-weight</span><span class="o">:</span> <span class="m">200</span><span class="p">;</span>
</span><span class='line'>                <span class="k">height</span><span class="o">:</span> <span class="m">100</span><span class="n">vh</span><span class="p">;</span>
</span><span class='line'>                <span class="k">margin</span><span class="o">:</span> <span class="m">0</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="nc">.full-height</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">height</span><span class="o">:</span> <span class="m">100</span><span class="n">vh</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="nc">.flex-center</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">align</span><span class="o">-</span><span class="n">items</span><span class="o">:</span> <span class="k">center</span><span class="p">;</span>
</span><span class='line'>                <span class="k">display</span><span class="o">:</span> <span class="n">flex</span><span class="p">;</span>
</span><span class='line'>                <span class="k">justify</span><span class="o">-</span><span class="k">content</span><span class="o">:</span> <span class="k">center</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="nc">.position-ref</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">position</span><span class="o">:</span> <span class="k">relative</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="nc">.top-right</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">position</span><span class="o">:</span> <span class="k">absolute</span><span class="p">;</span>
</span><span class='line'>                <span class="k">right</span><span class="o">:</span> <span class="m">10px</span><span class="p">;</span>
</span><span class='line'>                <span class="k">top</span><span class="o">:</span> <span class="m">18px</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="nc">.content</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">text-align</span><span class="o">:</span> <span class="k">center</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="nc">.title</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">font-size</span><span class="o">:</span> <span class="m">84px</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="nc">.links</span> <span class="o">&gt;</span> <span class="nt">a</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">color</span><span class="o">:</span> <span class="m">#636b6f</span><span class="p">;</span>
</span><span class='line'>                <span class="k">padding</span><span class="o">:</span> <span class="m">0</span> <span class="m">25px</span><span class="p">;</span>
</span><span class='line'>                <span class="k">font-size</span><span class="o">:</span> <span class="m">13px</span><span class="p">;</span>
</span><span class='line'>                <span class="k">font-weight</span><span class="o">:</span> <span class="m">600</span><span class="p">;</span>
</span><span class='line'>                <span class="k">letter-spacing</span><span class="o">:</span> <span class="o">.</span><span class="m">1</span><span class="n">rem</span><span class="p">;</span>
</span><span class='line'>                <span class="k">text-decoration</span><span class="o">:</span> <span class="k">none</span><span class="p">;</span>
</span><span class='line'>                <span class="k">text-transform</span><span class="o">:</span> <span class="k">uppercase</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="nc">.m-b-md</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">margin-bottom</span><span class="o">:</span> <span class="m">30px</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="nt">&lt;/style&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/head&gt;</span>
</span><span class='line'>    <span class="nt">&lt;body&gt;</span>
</span><span class='line'>        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;flex-center position-ref full-height&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;content&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;title m-b-md&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                    Welcome
</span><span class='line'>                <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>
</span><span class='line'>                <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;links&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;https://ruan.dev&quot;</span> <span class="na">target=</span><span class="s">&quot;_blank&quot;</span><span class="nt">&gt;</span>About Me<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Our <code>configs/nginx.conf</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>user  nginx;
</span><span class='line'>worker_processes  auto;
</span><span class='line'>error_log  /var/log/nginx/error.log notice;
</span><span class='line'>pid        /var/run/nginx.pid;
</span><span class='line'>
</span><span class='line'>events {
</span><span class='line'>    worker_connections  1024;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>http {
</span><span class='line'>    include       /etc/nginx/mime.types;
</span><span class='line'>    default_type  application/octet-stream;
</span><span class='line'>
</span><span class='line'>    log_format  main  &#39;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#39;
</span><span class='line'>                      &#39;$status $body_bytes_sent &quot;$http_referer&quot; &#39;
</span><span class='line'>                      &#39;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#39;;
</span><span class='line'>
</span><span class='line'>    access_log  /var/log/nginx/access.log  main;
</span><span class='line'>    sendfile        on;
</span><span class='line'>    keepalive_timeout  65;
</span><span class='line'>
</span><span class='line'>    include /etc/nginx/conf.d/app.conf;
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>


<p>And lastly, our <code>configs/app.conf</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>server {
</span><span class='line'>  listen 80;
</span><span class='line'>  server_name _;
</span><span class='line'>
</span><span class='line'>  location / {
</span><span class='line'>    root   /usr/share/nginx/html;
</span><span class='line'>    index  index.html;
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  location /healthz {
</span><span class='line'>    return 200 &#39;up&#39;;
</span><span class='line'>  }
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>


<h2>Deployment</h2>

<p>Once everything is in place, or if you want to clone my repository, you can do that by:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>git clone https://github.com/ruanbekker/terraform-docker-container-example
</span><span class='line'>cd terraform-docker-container-example
</span></code></pre></td></tr></table></div></figure>


<p>Then we can initialize terraform by fetching the required plugins:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>terraform init
</span></code></pre></td></tr></table></div></figure>


<p>Once that completes we can run a plan:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>terraform plan
</span></code></pre></td></tr></table></div></figure>


<p>And that should output something more or less like:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
<span class='line-number'>221</span>
<span class='line-number'>222</span>
<span class='line-number'>223</span>
<span class='line-number'>224</span>
<span class='line-number'>225</span>
<span class='line-number'>226</span>
<span class='line-number'>227</span>
<span class='line-number'>228</span>
<span class='line-number'>229</span>
<span class='line-number'>230</span>
<span class='line-number'>231</span>
<span class='line-number'>232</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with
</span><span class='line'>the following symbols:
</span><span class='line'>  + create
</span><span class='line'>
</span><span class='line'>Terraform will perform the following actions:
</span><span class='line'>
</span><span class='line'>  # docker_container.nginx will be created
</span><span class='line'>  + resource &quot;docker_container&quot; &quot;nginx&quot; {
</span><span class='line'>      + attach                = false
</span><span class='line'>      + bridge                = (known after apply)
</span><span class='line'>      + command               = (known after apply)
</span><span class='line'>      + container_logs        = (known after apply)
</span><span class='line'>      + destroy_grace_seconds = 30
</span><span class='line'>      + entrypoint            = (known after apply)
</span><span class='line'>      + env                   = [
</span><span class='line'>          + &quot;PGID=20&quot;,
</span><span class='line'>          + &quot;PUID=501&quot;,
</span><span class='line'>        ]
</span><span class='line'>      + exit_code             = (known after apply)
</span><span class='line'>      + gateway               = (known after apply)
</span><span class='line'>      + hostname              = (known after apply)
</span><span class='line'>      + id                    = (known after apply)
</span><span class='line'>      + image                 = &quot;nginx:stable-alpine&quot;
</span><span class='line'>      + init                  = (known after apply)
</span><span class='line'>      + ip_address            = (known after apply)
</span><span class='line'>      + ip_prefix_length      = (known after apply)
</span><span class='line'>      + ipc_mode              = (known after apply)
</span><span class='line'>      + log_driver            = &quot;json-file&quot;
</span><span class='line'>      + logs                  = false
</span><span class='line'>      + memory                = 256
</span><span class='line'>      + must_run              = true
</span><span class='line'>      + name                  = &quot;nginx&quot;
</span><span class='line'>      + network_data          = (known after apply)
</span><span class='line'>      + read_only             = false
</span><span class='line'>      + remove_volumes        = true
</span><span class='line'>      + restart               = &quot;unless-stopped&quot;
</span><span class='line'>      + rm                    = false
</span><span class='line'>      + security_opts         = (known after apply)
</span><span class='line'>      + shm_size              = (known after apply)
</span><span class='line'>      + start                 = true
</span><span class='line'>      + stdin_open            = false
</span><span class='line'>      + tty                   = false
</span><span class='line'>
</span><span class='line'>      + healthcheck {
</span><span class='line'>          + interval     = (known after apply)
</span><span class='line'>          + retries      = (known after apply)
</span><span class='line'>          + start_period = (known after apply)
</span><span class='line'>          + test         = (known after apply)
</span><span class='line'>          + timeout      = (known after apply)
</span><span class='line'>        }
</span><span class='line'>
</span><span class='line'>      + labels {
</span><span class='line'>          + label = &quot;traefik.docker.network&quot;
</span><span class='line'>          + value = &quot;docknet&quot;
</span><span class='line'>        }
</span><span class='line'>      + labels {
</span><span class='line'>          + label = &quot;traefik.enable&quot;
</span><span class='line'>          + value = &quot;true&quot;
</span><span class='line'>        }
</span><span class='line'>      + labels {
</span><span class='line'>          + label = &quot;traefik.frontend.rule&quot;
</span><span class='line'>          + value = (known after apply)
</span><span class='line'>        }
</span><span class='line'>      + labels {
</span><span class='line'>          + label = &quot;traefik.port&quot;
</span><span class='line'>          + value = &quot;80&quot;
</span><span class='line'>        }
</span><span class='line'>
</span><span class='line'>      + networks_advanced {
</span><span class='line'>          + aliases = [
</span><span class='line'>              + &quot;docknet&quot;,
</span><span class='line'>            ]
</span><span class='line'>          + name    = &quot;docknet&quot;
</span><span class='line'>        }
</span><span class='line'>
</span><span class='line'>      + volumes {
</span><span class='line'>          + container_path = &quot;/etc/nginx/conf.d/app.conf&quot;
</span><span class='line'>          + host_path      = &quot;/Users/ruan/personal/terraform-playground/docker-containers/configs/app.conf&quot;
</span><span class='line'>        }
</span><span class='line'>      + volumes {
</span><span class='line'>          + container_path = &quot;/etc/nginx/nginx.conf&quot;
</span><span class='line'>          + host_path      = &quot;/Users/ruan/personal/terraform-playground/docker-containers/configs/nginx.conf&quot;
</span><span class='line'>        }
</span><span class='line'>      + volumes {
</span><span class='line'>          + container_path = &quot;/usr/share/nginx/html&quot;
</span><span class='line'>          + host_path      = &quot;/Users/ruan/personal/terraform-playground/docker-containers/html&quot;
</span><span class='line'>        }
</span><span class='line'>    }
</span><span class='line'>
</span><span class='line'>  # docker_container.traefik will be created
</span><span class='line'>  + resource &quot;docker_container&quot; &quot;traefik&quot; {
</span><span class='line'>      + attach                = false
</span><span class='line'>      + bridge                = (known after apply)
</span><span class='line'>      + command               = [
</span><span class='line'>          + &quot;--api&quot;,
</span><span class='line'>          + &quot;--docker&quot;,
</span><span class='line'>          + &quot;--docker.watch&quot;,
</span><span class='line'>          + &quot;--entrypoints=Name:http Address::80&quot;,
</span><span class='line'>          + &quot;--logLevel=INFO&quot;,
</span><span class='line'>        ]
</span><span class='line'>      + container_logs        = (known after apply)
</span><span class='line'>      + destroy_grace_seconds = 30
</span><span class='line'>      + entrypoint            = (known after apply)
</span><span class='line'>      + env                   = (known after apply)
</span><span class='line'>      + exit_code             = (known after apply)
</span><span class='line'>      + gateway               = (known after apply)
</span><span class='line'>      + hostname              = (known after apply)
</span><span class='line'>      + id                    = (known after apply)
</span><span class='line'>      + image                 = &quot;traefik:1.7.14&quot;
</span><span class='line'>      + init                  = (known after apply)
</span><span class='line'>      + ip_address            = (known after apply)
</span><span class='line'>      + ip_prefix_length      = (known after apply)
</span><span class='line'>      + ipc_mode              = (known after apply)
</span><span class='line'>      + log_driver            = &quot;json-file&quot;
</span><span class='line'>      + logs                  = false
</span><span class='line'>      + memory                = 256
</span><span class='line'>      + must_run              = true
</span><span class='line'>      + name                  = &quot;traefik&quot;
</span><span class='line'>      + network_data          = (known after apply)
</span><span class='line'>      + read_only             = false
</span><span class='line'>      + remove_volumes        = true
</span><span class='line'>      + restart               = &quot;unless-stopped&quot;
</span><span class='line'>      + rm                    = false
</span><span class='line'>      + security_opts         = (known after apply)
</span><span class='line'>      + shm_size              = (known after apply)
</span><span class='line'>      + start                 = true
</span><span class='line'>      + stdin_open            = false
</span><span class='line'>      + tty                   = false
</span><span class='line'>
</span><span class='line'>      + healthcheck {
</span><span class='line'>          + interval     = (known after apply)
</span><span class='line'>          + retries      = (known after apply)
</span><span class='line'>          + start_period = (known after apply)
</span><span class='line'>          + test         = (known after apply)
</span><span class='line'>          + timeout      = (known after apply)
</span><span class='line'>        }
</span><span class='line'>
</span><span class='line'>      + labels {
</span><span class='line'>          + label = &quot;traefik.docker.network&quot;
</span><span class='line'>          + value = &quot;docknet&quot;
</span><span class='line'>        }
</span><span class='line'>      + labels {
</span><span class='line'>          + label = &quot;traefik.enable&quot;
</span><span class='line'>          + value = &quot;true&quot;
</span><span class='line'>        }
</span><span class='line'>      + labels {
</span><span class='line'>          + label = &quot;traefik.frontend.rule&quot;
</span><span class='line'>          + value = &quot;Host:traefik.localdns.xyz&quot;
</span><span class='line'>        }
</span><span class='line'>      + labels {
</span><span class='line'>          + label = &quot;traefik.port&quot;
</span><span class='line'>          + value = &quot;8080&quot;
</span><span class='line'>        }
</span><span class='line'>
</span><span class='line'>      + networks_advanced {
</span><span class='line'>          + aliases = [
</span><span class='line'>              + &quot;docknet&quot;,
</span><span class='line'>            ]
</span><span class='line'>          + name    = &quot;docknet&quot;
</span><span class='line'>        }
</span><span class='line'>
</span><span class='line'>      + ports {
</span><span class='line'>          + external = 80
</span><span class='line'>          + internal = 80
</span><span class='line'>          + ip       = &quot;0.0.0.0&quot;
</span><span class='line'>          + protocol = &quot;tcp&quot;
</span><span class='line'>        }
</span><span class='line'>
</span><span class='line'>      + volumes {
</span><span class='line'>          + container_path = &quot;/var/run/docker.sock&quot;
</span><span class='line'>          + host_path      = &quot;/var/run/docker.sock&quot;
</span><span class='line'>        }
</span><span class='line'>    }
</span><span class='line'>
</span><span class='line'>  # docker_image.nginx will be created
</span><span class='line'>  + resource &quot;docker_image&quot; &quot;nginx&quot; {
</span><span class='line'>      + id          = (known after apply)
</span><span class='line'>      + latest      = (known after apply)
</span><span class='line'>      + name        = &quot;nginx:stable-alpine&quot;
</span><span class='line'>      + output      = (known after apply)
</span><span class='line'>      + repo_digest = (known after apply)
</span><span class='line'>    }
</span><span class='line'>
</span><span class='line'>  # docker_image.traefik will be created
</span><span class='line'>  + resource &quot;docker_image&quot; &quot;traefik&quot; {
</span><span class='line'>      + id          = (known after apply)
</span><span class='line'>      + latest      = (known after apply)
</span><span class='line'>      + name        = &quot;traefik:1.7.14&quot;
</span><span class='line'>      + output      = (known after apply)
</span><span class='line'>      + repo_digest = (known after apply)
</span><span class='line'>    }
</span><span class='line'>
</span><span class='line'>  # docker_network.nginx will be created
</span><span class='line'>  + resource &quot;docker_network&quot; &quot;nginx&quot; {
</span><span class='line'>      + driver      = &quot;bridge&quot;
</span><span class='line'>      + id          = (known after apply)
</span><span class='line'>      + internal    = (known after apply)
</span><span class='line'>      + ipam_driver = &quot;default&quot;
</span><span class='line'>      + name        = &quot;docknet&quot;
</span><span class='line'>      + options     = (known after apply)
</span><span class='line'>      + scope       = (known after apply)
</span><span class='line'>
</span><span class='line'>      + ipam_config {
</span><span class='line'>          + aux_address = (known after apply)
</span><span class='line'>          + gateway     = (known after apply)
</span><span class='line'>          + ip_range    = (known after apply)
</span><span class='line'>          + subnet      = (known after apply)
</span><span class='line'>        }
</span><span class='line'>    }
</span><span class='line'>
</span><span class='line'>  # random_string.nginx will be created
</span><span class='line'>  + resource &quot;random_string&quot; &quot;nginx&quot; {
</span><span class='line'>      + id          = (known after apply)
</span><span class='line'>      + length      = 8
</span><span class='line'>      + lower       = true
</span><span class='line'>      + min_lower   = 0
</span><span class='line'>      + min_numeric = 0
</span><span class='line'>      + min_special = 0
</span><span class='line'>      + min_upper   = 0
</span><span class='line'>      + number      = true
</span><span class='line'>      + result      = (known after apply)
</span><span class='line'>      + special     = false
</span><span class='line'>      + upper       = false
</span><span class='line'>    }
</span><span class='line'>
</span><span class='line'>Plan: 6 to add, 0 to change, 0 to destroy.
</span><span class='line'>
</span><span class='line'>Changes to Outputs:
</span><span class='line'>  + nginx_container_name   = &quot;nginx&quot;
</span><span class='line'>  + nginx_url              = (known after apply)
</span><span class='line'>  + traefik_container_name = &quot;traefik&quot;
</span><span class='line'>  + traefik_url            = &quot;http://traefik.localdns.xyz/&quot;
</span></code></pre></td></tr></table></div></figure>


<p>Which we can see will create 2 containers, traefik and then nginx, map the configs and html in place and also sets the traefik hostname in the labels for our respective containers so that we can reach them via the specific host headers.</p>

<p>The we can deploy our containers:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>terraform apply -auto-approve
</span></code></pre></td></tr></table></div></figure>


<p>Which will provide us the output detail defined from our <code>outputs.tf</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>Apply complete! Resources: 6 added, 0 changed, 0 destroyed.
</span><span class='line'>
</span><span class='line'>Outputs:
</span><span class='line'>
</span><span class='line'>nginx_container_name = &quot;nginx&quot;
</span><span class='line'>nginx_url = &quot;http://www.5igjdfq9.localdns.xyz/&quot;
</span><span class='line'>traefik_container_name = &quot;traefik&quot;
</span><span class='line'>traefik_url = &quot;http://traefik.localdns.xyz/&quot;
</span></code></pre></td></tr></table></div></figure>


<h2>Access our Containers</h2>

<p>We can access our Traefik Dashboard on <a href="http://traefik.localdns.xyz">http://traefik.localdns.xyz</a> and should look something like this:</p>

<p><img src="https://user-images.githubusercontent.com/567298/143064031-23e9dbe4-522b-4f11-96f9-f30a2104ee44.png" alt="image" /></p>

<p>And when we access our Nginx container on <a href="http://www.5igjdfq9.localdns.xyz">http://www.5igjdfq9.localdns.xyz</a> it should look more or less like this:</p>

<p><img src="https://user-images.githubusercontent.com/567298/143064228-88107b75-31fc-41eb-aee0-f26ff976c42a.png" alt="image" /></p>

<p>Running a <code>docker ps</code> will show our running containers:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>docker ps
</span><span class='line'>CONTAINER ID   IMAGE                  COMMAND                  CREATED         STATUS                PORTS                NAMES
</span><span class='line'>e45158ae8cba   nginx:stable-alpine    &quot;/docker-entrypoint   3 minutes ago   Up 3 minutes          80/tcp               nginx
</span><span class='line'>ebdbe42a0fcb   traefik:1.7.14         &quot;/traefik --api       3 minutes ago   Up 3 minutes          0.0.0.0:80-&gt;80/tcp   traefik
</span></code></pre></td></tr></table></div></figure>


<h2>Cleanup</h2>

<p>We can delete our containers by running:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>terraform destroy -auto-approve
</span></code></pre></td></tr></table></div></figure>


<h2>Thank You</h2>

<p>Thanks for reading, if you like my content, check out my <strong><a href="https://ruan.dev">website</a></strong> or follow me at <strong><a href="https://twitter.com/ruanbekker">@ruanbekker</a></strong> on Twitter.</p>
]]></content>
  </entry>
  
</feed>
