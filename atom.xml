<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Ruan Bekker's Blog]]></title>
  <link href="http://blog.ruanbekker.com/atom.xml" rel="self"/>
  <link href="http://blog.ruanbekker.com/"/>
  <updated>2017-09-16T18:09:39-04:00</updated>
  <id>http://blog.ruanbekker.com/</id>
  <author>
    <name><![CDATA[Ruan]]></name>
    <email><![CDATA[ruan@ruanbekker.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Setup a Postfix Relay Server That Uses SES to Relay Outbound Mail]]></title>
    <link href="http://blog.ruanbekker.com/blog/2017/09/16/setup-a-postfix-relay-server-that-uses-ses-to-relay-outbound-mail/"/>
    <updated>2017-09-16T18:01:49-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2017/09/16/setup-a-postfix-relay-server-that-uses-ses-to-relay-outbound-mail</id>
    <content type="html"><![CDATA[<p>We will setup a Postfix Relay Servcer which our clients will use to send out mail, the Postfix server will use Amazon&rsquo;s SES Service to send out mail, which we will configure as a relay host in Postfix.</p>

<h2>Setup EC2 Instance to Relay through AWS SES:</h2>

<p>Install Postfix and SASL:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>apt install postfix mailutils libsasl2-2 sasl2-bin libsasl2-modules -y
</span></code></pre></td></tr></table></div></figure>


<p>Section we need to configure in <code>/etc/nginx/main.cf</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">relayhost</span> <span class="o">=</span> <span class="o">[</span>email-smtp.eu-west-1.amazonaws.com<span class="o">]</span>:587
</span><span class='line'><span class="nv">smtp_use_tls</span> <span class="o">=</span> yes
</span><span class='line'><span class="nv">smtp_sasl_auth_enable</span> <span class="o">=</span> yes
</span><span class='line'><span class="nv">smtp_sasl_security_options</span> <span class="o">=</span>
</span><span class='line'><span class="nv">smtp_sasl_password_maps</span> <span class="o">=</span> <span class="nb">hash</span>:/etc/postfix/sasl_passwd
</span><span class='line'><span class="nv">smtp_tls_CAfile</span> <span class="o">=</span> /etc/ssl/certs/ca-certificates.crt
</span></code></pre></td></tr></table></div></figure>


<p>Populate SASL Passwd:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cat /etc/postfix/sasl_passwd
</span><span class='line'><span class="o">[</span>email-smtp.eu-west-1.amazonaws.com<span class="o">]</span>:587    AKIAABCDEFGHIJKLM:SomeRandomSecretString
</span></code></pre></td></tr></table></div></figure>


<p>Postmap the changes:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>postmap /etc/postfix/sasl_passwd
</span></code></pre></td></tr></table></div></figure>


<p>Restart Postfix:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo /etc/init.d/postfix restart
</span></code></pre></td></tr></table></div></figure>


<p>Test the Mail Flow:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">echo test</span> <span class="p">|</span> mail -r ruan@ruanbekker.com -s <span class="s1">&#39;ses test mail &#39;</span> ruan@ruanbekker.com <span class="o">&amp;&amp;</span> tail -f /var/log/mail.log
</span><span class='line'>
</span><span class='line'>Jul <span class="m">18</span> 11:29:06 ip-10-1-4-250 postfix/smtp<span class="o">[</span>5056<span class="o">]</span>: 9FDCB469AA: <span class="nv">to</span><span class="o">=</span>&lt;ruan@ruanbekker.com&gt;, <span class="nv">relay</span><span class="o">=</span>email-smtp.eu-west-1.amazonaws.com<span class="o">[</span>52.10.20.30<span class="o">]</span>:587, <span class="nv">delay</span><span class="o">=</span>0.29, <span class="nv">delays</span><span class="o">=</span>0.02/0.03/0.12/0.13, <span class="nv">dsn</span><span class="o">=</span>2.0.0, <span class="nv">status</span><span class="o">=</span>sent <span class="o">(</span><span class="m">250</span> Ok 0234567d557572f2-76f56252-0a00-4d94-af87-38bd213914d2-000000<span class="o">)</span>
</span><span class='line'>Jul <span class="m">18</span> 11:29:06 ip-10-1-4-250 postfix/qmgr<span class="o">[</span>4392<span class="o">]</span>: 9FDCB469AA: removed
</span></code></pre></td></tr></table></div></figure>


<p>If your output looks more or less like the snippet from above, your mail should be working fine.</p>

<center>
<script type='text/javascript' src='https://ko-fi.com/widgets/widget_2.js'></script><script type='text/javascript'>kofiwidget2.init('Buy Me a Coffee', '#46b798', 'A6423ZIQ');kofiwidget2.draw();</script> 
</center>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nginx Reverse Proxy for Elasticsearch and Kibana 5 on AWS]]></title>
    <link href="http://blog.ruanbekker.com/blog/2017/09/16/nginx-reverse-proxy-for-elasticsearch-and-kibana-5-on-aws/"/>
    <updated>2017-09-16T17:24:32-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2017/09/16/nginx-reverse-proxy-for-elasticsearch-and-kibana-5-on-aws</id>
    <content type="html"><![CDATA[<p>As up untill today, there&rsquo;s currently no VPC Support for Amazon&rsquo;s Elasticsearch Service.</p>

<p>So for scenarios where you would like to allow private network traffic to Elasticsearch is impossible straight out of the box as Amazon&rsquo;s Elasticsearch Services, only sees Public Internet Traffic.</p>

<p>We will setup 2 configs, one for Kibana and one for Elasticsearch, each one having its own FQDN:</p>

<ul>
<li>Kibana: <code>http://kibana.domain.com</code></li>
<li>Elasticsearch: <code>http://elasticsearch.domain.com</code></li>
</ul>


<h2>Workaround:</h2>

<p>There&rsquo;s a couple of workarounds, which includes:</p>

<ul>
<li>Nginx Reverse Proxy</li>
<li>NAT Gateway</li>
<li>Allow IAM Users/Roles</li>
</ul>


<p>Today we will tackle the Nginx Reverse Proxy Route.</p>

<p>The benefit of this, would be to associate an EIP to the Nginx EC2 Instnace, then whitelist your EIP with Elasticsearch, so the only traffic that will be accepted will be the traffic that is coming from the Nginx Instance. We will also apply an additional layer of security, in this case we will use HTTP Basic Authentication, then also authorize network sources on a Security Group level.</p>

<h2>Installing Nginx:</h2>

<p>In this case I am using Ubuntu 16.04, so we will need to install <code>nginx</code> and <code>apache2-utils</code> for creating the Basic HTTP Auth accounts.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>apt update <span class="o">&amp;&amp;</span> apt upgrade -y
</span><span class='line'><span class="nv">$ </span>apt install nginx apache2-utils -y
</span></code></pre></td></tr></table></div></figure>


<h2>Configure Nginx:</h2>

<p>Our main config: <code>/etc/nginx/nginx.conf</code>:</p>

<figure class='code'><figcaption><span>/etc/nginx/nginx.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>user www-data<span class="p">;</span>
</span><span class='line'>worker_processes auto<span class="p">;</span>
</span><span class='line'>pid /run/nginx.pid<span class="p">;</span>
</span><span class='line'>error_log /var/log/nginx/error.log<span class="p">;</span>
</span><span class='line'>
</span><span class='line'>events <span class="o">{</span>
</span><span class='line'>  worker_connections 1024<span class="p">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>http <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="c"># Basic Settings</span>
</span><span class='line'>  sendfile on<span class="p">;</span>
</span><span class='line'>  tcp_nopush on<span class="p">;</span>
</span><span class='line'>  tcp_nodelay on<span class="p">;</span>
</span><span class='line'>  keepalive_timeout 65<span class="p">;</span>
</span><span class='line'>  types_hash_max_size 2048<span class="p">;</span>
</span><span class='line'>  server_names_hash_bucket_size 128<span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  include /etc/nginx/mime.types<span class="p">;</span>
</span><span class='line'>  default_type application/octet-stream<span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c"># Logging Settings</span>
</span><span class='line'>        log_format  main  <span class="s1">&#39;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#39;</span>
</span><span class='line'>                      <span class="s1">&#39;$status $body_bytes_sent &quot;$http_referer&quot; &#39;</span>
</span><span class='line'>                      <span class="s1">&#39;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  access_log /var/log/nginx/access.log main<span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c"># Gzip Settings</span>
</span><span class='line'>  gzip on<span class="p">;</span>
</span><span class='line'>  gzip_disable <span class="s2">&quot;msie6&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c"># Elasticsearch and Kibana Configs</span>
</span><span class='line'>  include /etc/nginx/conf.d/elasticsearch.conf<span class="p">;</span>
</span><span class='line'>  include /etc/nginx/conf.d/kibana.conf<span class="p">;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Our <code>/etc/nginx/conf.d/elasticsearch.conf</code> configuration:</p>

<figure class='code'><figcaption><span>/etc/nginx/conf.d/elasticsearch.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>server <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  listen 80<span class="p">;</span>
</span><span class='line'>  server_name elasticsearch.domain.com<span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c"># error logging</span>
</span><span class='line'>  error_log /var/log/nginx/elasticsearch_error.log<span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c"># authentication: elasticsearch</span>
</span><span class='line'>  auth_basic <span class="s2">&quot;Elasticsearch Auth&quot;</span><span class="p">;</span>
</span><span class='line'>  auth_basic_user_file /etc/nginx/.secrets_elasticsearch<span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  location / <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    proxy_http_version 1.1<span class="p">;</span>
</span><span class='line'>    proxy_set_header Host https://search-elasticsearch-name.eu-west-1.es.amazonaws.com<span class="p">;</span>
</span><span class='line'>    proxy_set_header X-Real-IP &lt;ELASTIC-IP&gt;<span class="p">;</span>
</span><span class='line'>    proxy_set_header Connection <span class="s2">&quot;Keep-Alive&quot;</span><span class="p">;</span>
</span><span class='line'>    proxy_set_header Proxy-Connection <span class="s2">&quot;Keep-Alive&quot;</span><span class="p">;</span>
</span><span class='line'>    proxy_set_header Authorization <span class="s2">&quot;&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    proxy_pass https://search-elasticsearch-name.eu-west-1.es.amazonaws.com/<span class="p">;</span>
</span><span class='line'>    proxy_redirect https://search-elasticsearch-name.eu-west-1.es.amazonaws.com/ http://&lt;ELASTIC-IP&gt;/<span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c"># ELB Health Checks</span>
</span><span class='line'>  location /status <span class="o">{</span>
</span><span class='line'>    root /usr/share/nginx/html/<span class="p">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Our <code>/etc/nginx/conf.d/kibana.conf</code> configuration:</p>

<figure class='code'><figcaption><span>/etc/nginx/conf.d/kibana.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>server <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  listen 80<span class="p">;</span>
</span><span class='line'>  server_name kibana.domain.com<span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c"># error logging</span>
</span><span class='line'>  error_log /var/log/nginx/kibana_error.log<span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c"># authentication: kibana</span>
</span><span class='line'>  auth_basic <span class="s2">&quot;Kibana Auth&quot;</span><span class="p">;</span>
</span><span class='line'>  auth_basic_user_file /etc/nginx/.secrets_kibana<span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  location / <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    proxy_http_version 1.1<span class="p">;</span>
</span><span class='line'>    proxy_set_header Host https://search.elasticsearch-name.eu-west-1.es.amazonaws.com<span class="p">;</span>
</span><span class='line'>    proxy_set_header X-Real-IP &lt;ELASTIC-IP&gt;<span class="p">;</span>
</span><span class='line'>    proxy_set_header Connection <span class="s2">&quot;Keep-Alive&quot;</span><span class="p">;</span>
</span><span class='line'>    proxy_set_header Proxy-Connection <span class="s2">&quot;Keep-Alive&quot;</span><span class="p">;</span>
</span><span class='line'>    proxy_set_header Authorization <span class="s2">&quot;&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    proxy_pass https://search.elasticsearch-name.eu-west-1.es.amazonaws.com/_plugin/kibana/<span class="p">;</span>
</span><span class='line'>    proxy_redirect https://search.elasticsearch-name.eu-west-1.es.amazonaws.com/_plugin/kibana/ http://&lt;ELASTIC-IP&gt;/kibana/<span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      location ~ <span class="o">(</span>/app/kibana<span class="p">|</span>/app/timelion<span class="p">|</span>/bundles<span class="p">|</span>/es_admin<span class="p">|</span>/plugins<span class="p">|</span>/api<span class="p">|</span>/ui<span class="p">|</span>/elasticsearch<span class="o">)</span> <span class="o">{</span>
</span><span class='line'>         proxy_pass              https://search.elasticsearch-name.eu-west-1.es.amazonaws.com<span class="p">;</span>
</span><span class='line'>         proxy_set_header        Host <span class="nv">$host</span><span class="p">;</span>
</span><span class='line'>         proxy_set_header        X-Real-IP <span class="nv">$remote_addr</span><span class="p">;</span>
</span><span class='line'>         proxy_set_header        X-Forwarded-For <span class="nv">$proxy_add_x_forwarded_for</span><span class="p">;</span>
</span><span class='line'>         proxy_set_header        X-Forwarded-Proto <span class="nv">$scheme</span><span class="p">;</span>
</span><span class='line'>         proxy_set_header        X-Forwarded-Host <span class="nv">$http_host</span><span class="p">;</span>
</span><span class='line'>         proxy_set_header      Authorization  <span class="s2">&quot;&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Once you have replaced the elasticsearch endpoint and your EPI values, we can go ahead and create the auth accounts.</p>

<h2>Create User Accounts for HTTP Basic Auth</h2>

<p>Create the 2 accounts for authentication on kibana and elasticsearch:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>htpasswd -c /etc/nginx/.secrets_elasticsearch elasticsearch-admin
</span><span class='line'><span class="nv">$ </span>htpasswd -c /etc/nginx/.secrets_kibana kibana-admin
</span></code></pre></td></tr></table></div></figure>


<h2>Restart Nginx:</h2>

<p>Restart and enable Nginx on boot:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>systemctl <span class="nb">enable </span>nginx
</span><span class='line'><span class="nv">$ </span>systemctl restart nginx
</span></code></pre></td></tr></table></div></figure>


<p>Once your Nginx Service is running, you should be able to access Kibana and Elasticsearch using the credentials that you created.</p>

<h2>Resources:</h2>

<ul>
<li><a href="https://www.nginx.com/blog/tcp-load-balancing-udp-load-balancing-nginx-tips-tricks/">https://www.nginx.com/blog/tcp-load-balancing-udp-load-balancing-nginx-tips-tricks/</a></li>
<li><a href="https://www.elastic.co/blog/playing-http-tricks-nginx">https://www.elastic.co/blog/playing-http-tricks-nginx</a></li>
<li><a href="https://sysadmins.co.za/aws-access-kibana-5-behind-elb-via-nginx-reverse-proxy-on-custom-dns/">https://sysadmins.co.za/aws-access-kibana-5-behind-elb-via-nginx-reverse-proxy-on-custom-dns/</a></li>
</ul>


<center>
<script type='text/javascript' src='https://ko-fi.com/widgets/widget_2.js'></script><script type='text/javascript'>kofiwidget2.init('Buy Me a Coffee', '#46b798', 'A6423ZIQ');kofiwidget2.draw();</script> 
</center>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AWS: IAM S3 Policy for Cyberduck to Allow Listing Buckets and Access to One Bucket]]></title>
    <link href="http://blog.ruanbekker.com/blog/2017/09/15/aws-iam-s3-policy-for-cyberduck-to-allow-listing-buckets-and-access-to-one-bucket/"/>
    <updated>2017-09-15T11:18:17-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2017/09/15/aws-iam-s3-policy-for-cyberduck-to-allow-listing-buckets-and-access-to-one-bucket</id>
    <content type="html"><![CDATA[<p>When using Cyberduck to access S3, and a account has restrictive policies, you may find error <code>Listing Directory: /</code> failed.</p>

<p>If you have restrictive IAM Policies in your account, this may be due to the fact that <code>S3:ListMyBuckets</code> is not allowed.</p>

<p>In this post we want to allow a user to list all buckets, so that Cyberduck can do the initial list after configuration / launch, and we would like to give the user access to their designated bucket.</p>

<h2>Creating the IAM Policy:</h2>

<p>We will create this IAM Policy and associate the policy to the user&rsquo;s account:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;Version&quot;</span><span class="p">:</span> <span class="s2">&quot;2012-10-17&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;Statement&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="nt">&quot;Sid&quot;</span><span class="p">:</span> <span class="s2">&quot;Stmt1480515305000&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;Effect&quot;</span><span class="p">:</span> <span class="s2">&quot;Allow&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;Action&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>                <span class="s2">&quot;s3:ListAllMyBuckets&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="s2">&quot;s3:GetBucketLocation&quot;</span>
</span><span class='line'>            <span class="p">],</span>
</span><span class='line'>            <span class="nt">&quot;Resource&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>                <span class="s2">&quot;arn:aws:s3:::*&quot;</span>
</span><span class='line'>            <span class="p">]</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="nt">&quot;Sid&quot;</span><span class="p">:</span> <span class="s2">&quot;Stmt1480515305002&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;Effect&quot;</span><span class="p">:</span> <span class="s2">&quot;Allow&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;Action&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>                <span class="s2">&quot;s3:List*&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="s2">&quot;s3:GetObject&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="s2">&quot;s3:PutObject&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="s2">&quot;s3:DeleteObject&quot;</span>
</span><span class='line'>            <span class="p">],</span>
</span><span class='line'>            <span class="nt">&quot;Resource&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>                <span class="s2">&quot;arn:aws:s3:::allowed-bucket&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="s2">&quot;arn:aws:s3:::allowed-bucket/*&quot;</span>
</span><span class='line'>            <span class="p">]</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>So here we should be able to list the buckets:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>aws --profile cyberduck s3 ls /
</span><span class='line'>2017-06-08 08:27:01 allowed-bucket
</span><span class='line'>2017-05-21 13:39:21 private-bucket
</span><span class='line'>2016-12-21 08:23:45 confidential-bucket
</span><span class='line'>2017-08-10 14:18:19 <span class="nb">test</span>-bucket
</span><span class='line'>2016-08-03 12:38:29 datalake-bucket
</span></code></pre></td></tr></table></div></figure>


<p>Able to list inside the bucket, as well as Get, Put etc.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>aws --profile cyberduck s3 ls allowed-bucket/
</span><span class='line'>                           PRE data/
</span></code></pre></td></tr></table></div></figure>


<p>Unable to list the buckets content which is expected, as we did not mention in the policy:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>aws --profile cyberduck s3 ls confidential-bucket/
</span><span class='line'>
</span><span class='line'>An error occurred <span class="o">(</span>AccessDenied<span class="o">)</span> when calling the ListObjects operation: Access Denied
</span></code></pre></td></tr></table></div></figure>


<h2>Resources:</h2>

<ul>
<li><a href="https://aws.amazon.com/blogs/security/writing-iam-policies-how-to-grant-access-to-an-amazon-s3-bucket/">https://aws.amazon.com/blogs/security/writing-iam-policies-how-to-grant-access-to-an-amazon-s3-bucket/</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Python for Image Analysis With Amazons Rekognition Service]]></title>
    <link href="http://blog.ruanbekker.com/blog/2017/09/11/using-python-for-image-analysis-with-amazons-rekognition-service/"/>
    <updated>2017-09-11T10:20:28-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2017/09/11/using-python-for-image-analysis-with-amazons-rekognition-service</id>
    <content type="html"><![CDATA[<p>Amazon&rsquo;s Rekognition Service, which falls under their Artificial Intelligence tier, makes it easy to add image analysis to your applications.</p>

<p>Today we will use Rekognition to analyze an image, to determine the percentage of detection that the service analyzes. We will be using the Python SDK to do this.</p>

<h2>Getting a Random Image:</h2>

<p>So, I got this drunk guy on the couch, which I thought we could use to analyze.</p>

<p>Image Used:
- <a href="http://imgur.com/a/CHnSu">http://imgur.com/a/CHnSu</a></p>

<blockquote class="imgur-embed-pub" lang="en" data-id="a/CHnSu"><a href="//imgur.com/CHnSu"></a></blockquote>


<script async src="//s.imgur.com/min/embed.js" charset="utf-8"></script>


<h2>Our Python Code:</h2>

<p>Our code will use boto3 to use rekognition from Amazon Web Services, detects the image, and prints out the values.</p>

<p>Note that I am not specifying any credentials, as my credentials is configured in my local credential provider, where boto will pick it up from.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">boto3</span>
</span><span class='line'>
</span><span class='line'><span class="n">BUCKET</span> <span class="o">=</span> <span class="s">&quot;rekognition-bucket&quot;</span>
</span><span class='line'><span class="n">KEY</span> <span class="o">=</span> <span class="s">&quot;images/image-02.jpg&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">detect_labels</span><span class="p">(</span><span class="n">bucket</span><span class="p">,</span> <span class="n">key</span><span class="p">,</span> <span class="n">max_labels</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span> <span class="n">min_confidence</span><span class="o">=</span><span class="mi">90</span><span class="p">,</span> <span class="n">region</span><span class="o">=</span><span class="s">&quot;eu-west-1&quot;</span><span class="p">,</span> <span class="n">profile_name</span><span class="o">=</span><span class="s">&quot;aws&quot;</span><span class="p">):</span>
</span><span class='line'>    <span class="n">rekognition</span> <span class="o">=</span> <span class="n">boto3</span><span class="o">.</span><span class="n">client</span><span class="p">(</span><span class="s">&quot;rekognition&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">response</span> <span class="o">=</span> <span class="n">rekognition</span><span class="o">.</span><span class="n">detect_labels</span><span class="p">(</span>
</span><span class='line'>        <span class="n">Image</span><span class="o">=</span><span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;S3Object&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;Bucket&quot;</span><span class="p">:</span> <span class="n">BUCKET</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;Name&quot;</span><span class="p">:</span> <span class="n">KEY</span><span class="p">,</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="n">MaxLabels</span><span class="o">=</span><span class="n">max_labels</span><span class="p">,</span>
</span><span class='line'>        <span class="n">MinConfidence</span><span class="o">=</span><span class="n">min_confidence</span><span class="p">,</span>
</span><span class='line'>    <span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">response</span><span class="p">[</span><span class="s">&#39;Labels&#39;</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="n">label</span> <span class="ow">in</span> <span class="n">detect_labels</span><span class="p">(</span><span class="n">BUCKET</span><span class="p">,</span> <span class="n">KEY</span><span class="p">):</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="s">&quot;{Name} - {Confidence}%&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="o">**</span><span class="n">label</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Running the App:</h2>

<p>Running our Python App, will result in the following:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>python rekog.py
</span><span class='line'>People - 98.9893875122%
</span><span class='line'>Person - 98.9893951416%
</span><span class='line'>Human - 98.9505844116%
</span><span class='line'>Alcohol - 98.573425293%
</span><span class='line'>Beer - 98.573425293%
</span><span class='line'>Beer Bottle - 98.573425293%
</span><span class='line'>Beverage - 98.573425293%
</span><span class='line'>Bottle - 98.573425293%
</span><span class='line'>Drink - 98.573425293%
</span><span class='line'>Couch - 98.4713821411%
</span></code></pre></td></tr></table></div></figure>


<h2>Resources:</h2>

<ul>
<li><a href="https://aws.amazon.com/rekognition/">https://aws.amazon.com/rekognition/</a></li>
<li><a href="https://gist.github.com/alexcasalboni/0f21a1889f09760f8981b643326730ff">https://gist.github.com/alexcasalboni/0f21a1889f09760f8981b643326730ff</a></li>
</ul>


<center>
        <script type='text/javascript' src='https://ko-fi.com/widgets/widget_2.js'></script><script type='text/javascript'>kofiwidget2.init('Buy Me a Coffee', '#46b798', 'A6423ZIQ');kofiwidget2.draw();</script>
</center>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup RocketChat on Docker Swarm]]></title>
    <link href="http://blog.ruanbekker.com/blog/2017/09/10/setup-rocketchat-on-docker-swarm/"/>
    <updated>2017-09-10T18:45:12-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2017/09/10/setup-rocketchat-on-docker-swarm</id>
    <content type="html"><![CDATA[<p>Rocket Chat, a Self Hosted Alternative, which is very similar to Slack.</p>

<p>We will setup a RocketChat Server which is hosted on Docker Swarm. In future posts, I will also go through the steps on working with the API, Custom Emoji&rsquo;s etc.</p>

<h2>Requirements:</h2>

<p>RocketChat uses MongoDB as its Database, we will keep the database outside of our swarm, if you don&rsquo;t already have a MongoDB Server in place, follow the <a href="http://blog.ruanbekker.com/blog/2017/09/02/setup-a-3-node-mongodb-replica-set-on-ubuntu-16/">Setup a 3 Node MongoDB</a> post to get that sorted.</p>

<p>Another requirement is to have docker swarm running, alternatively, you can also follow <a href="https://rocket.chat/docs/installation/">RocketChat&rsquo;s Documentation</a> if you prefer setting it up elsewhere.</p>

<h2>Setup Rocket Chat</h2>

<p>We will assume MongoDB is accessible via <code>mongodb.domain.com</code> on port <code>27017</code>, with a username and password.</p>

<p>Creating the RocketChat service and associate it to our <code>appnet</code> overlay network:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>docker service create --name rocketchat <span class="se">\</span>
</span><span class='line'>--replicas <span class="m">1</span> <span class="se">\</span>
</span><span class='line'>--network appnet <span class="se">\</span>
</span><span class='line'>--env <span class="nv">DEPLOY_METHOD</span><span class="o">=</span>docker <span class="se">\</span>
</span><span class='line'>--env <span class="nv">NODE_ENV</span><span class="o">=</span>production <span class="se">\</span>
</span><span class='line'>--env <span class="nv">PORT</span><span class="o">=</span><span class="m">3000</span> <span class="se">\</span>
</span><span class='line'>--env <span class="nv">MONGO_URL</span><span class="o">=</span><span class="s2">&quot;mongodb://mongoadmin:mongopass@mongodb.domain.com:27017/rocketchat?authSource=admin&quot;</span> <span class="se">\</span>
</span><span class='line'>--env <span class="nv">ROOT_URL</span><span class="o">=</span>http://rocketchat.domain.com <span class="se">\</span>
</span><span class='line'>--env <span class="nv">ADMIN_USERNAME</span><span class="o">=</span>myadmin <span class="se">\</span>
</span><span class='line'>--env <span class="nv">ADMIN_PASS</span><span class="o">=</span>secret <span class="se">\</span>
</span><span class='line'>--env <span class="nv">ADMIN_EMAIL</span><span class="o">=</span>mail@domain.com <span class="se">\</span>
</span><span class='line'>--env <span class="nv">Accounts_AvatarStorePath</span><span class="o">=</span>/app/uploads <span class="se">\</span>
</span><span class='line'>--secret rocketchat_secret <span class="se">\</span>
</span><span class='line'>rocketchat/rocket.chat
</span></code></pre></td></tr></table></div></figure>


<h2>View the RocketChat Service Logs</h2>

<p>Lets monitor the docker service logs for our rocketchat service:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker service logs -f rocketchat
</span><span class='line'>
</span><span class='line'>rocketchat.1.lnbyfjiotqpz@docker-swarm-worker-03    <span class="p">|</span> Using GridFS <span class="k">for</span> custom sounds storage
</span><span class='line'>rocketchat.1.lnbyfjiotqpz@docker-swarm-worker-03    <span class="p">|</span> Using GridFS <span class="k">for</span> custom emoji storage
</span><span class='line'>rocketchat.1.lnbyfjiotqpz@docker-swarm-worker-03    <span class="p">|</span> ufs: temp directory created at <span class="s2">&quot;/tmp/ufs&quot;</span>
</span><span class='line'>rocketchat.1.lnbyfjiotqpz@docker-swarm-worker-03    <span class="p">|</span> System startup
</span><span class='line'>rocketchat.1.lnbyfjiotqpz@docker-swarm-worker-03    <span class="p">|</span> +--------------------------------------------------------------+
</span><span class='line'>rocketchat.1.lnbyfjiotqpz@docker-swarm-worker-03    <span class="p">|</span> <span class="p">|</span>                        SERVER RUNNING                        <span class="p">|</span>
</span><span class='line'>rocketchat.1.lnbyfjiotqpz@docker-swarm-worker-03    <span class="p">|</span> +--------------------------------------------------------------+
</span><span class='line'>rocketchat.1.lnbyfjiotqpz@docker-swarm-worker-03    <span class="p">|</span> <span class="p">|</span>                                                              <span class="p">|</span>
</span><span class='line'>rocketchat.1.lnbyfjiotqpz@docker-swarm-worker-03    <span class="p">|</span> <span class="p">|</span>  Rocket.Chat Version: 0.58.2                                 <span class="p">|</span>
</span><span class='line'>rocketchat.1.lnbyfjiotqpz@docker-swarm-worker-03    <span class="p">|</span> <span class="p">|</span>       NodeJS Version: 4.8.4 - x64                            <span class="p">|</span>
</span><span class='line'>rocketchat.1.lnbyfjiotqpz@docker-swarm-worker-03    <span class="p">|</span> <span class="p">|</span>             Platform: linux                                  <span class="p">|</span>
</span><span class='line'>rocketchat.1.lnbyfjiotqpz@docker-swarm-worker-03    <span class="p">|</span> <span class="p">|</span>         Process Port: <span class="m">3000</span>                                   <span class="p">|</span>
</span><span class='line'>rocketchat.1.lnbyfjiotqpz@docker-swarm-worker-03    <span class="p">|</span> <span class="p">|</span>             Site URL: http://rocketchat.domain.com           <span class="p">|</span>
</span><span class='line'>rocketchat.1.lnbyfjiotqpz@docker-swarm-worker-03    <span class="p">|</span> <span class="p">|</span>     ReplicaSet OpLog: Disabled                               <span class="p">|</span>
</span><span class='line'>rocketchat.1.lnbyfjiotqpz@docker-swarm-worker-03    <span class="p">|</span> <span class="p">|</span>          Commit Hash: 988103d449                             <span class="p">|</span>
</span><span class='line'>rocketchat.1.lnbyfjiotqpz@docker-swarm-worker-03    <span class="p">|</span> <span class="p">|</span>        Commit Branch: HEAD                                   <span class="p">|</span>
</span><span class='line'>rocketchat.1.lnbyfjiotqpz@docker-swarm-worker-03    <span class="p">|</span> <span class="p">|</span>                                                              <span class="p">|</span>
</span><span class='line'>rocketchat.1.lnbyfjiotqpz@docker-swarm-worker-03    <span class="p">|</span> +--------------------------------------------------------------+
</span><span class='line'>rocketchat.1.lnbyfjiotqpz@docker-swarm-worker-03    <span class="p">|</span> Inserting admin user:
</span><span class='line'>rocketchat.1.lnbyfjiotqpz@docker-swarm-worker-03    <span class="p">|</span> Name: Administrator
</span><span class='line'>rocketchat.1.lnbyfjiotqpz@docker-swarm-worker-03    <span class="p">|</span> Email: mail@domain.com
</span><span class='line'>rocketchat.1.lnbyfjiotqpz@docker-swarm-worker-03    <span class="p">|</span> Username: myadmin
</span><span class='line'>rocketchat.1.lnbyfjiotqpz@docker-swarm-worker-03    <span class="p">|</span> Password: secret
</span></code></pre></td></tr></table></div></figure>


<p>Now you should be able to access Rocket Chat on the <code>ROOT_URL</code> that you have specified.</p>

<h2>Resources:</h2>

<ul>
<li><a href="https://rocket.chat/docs/installation/">https://rocket.chat/docs/installation/</a></li>
<li><a href="https://github.com/RocketChat/Docker.Official.Image">https://github.com/RocketChat/Docker.Official.Image</a></li>
<li><a href="https://rocket.chat/docs/installation/docker-containers">https://rocket.chat/docs/installation/docker-containers</a></li>
</ul>


<center>
        <script type='text/javascript' src='https://ko-fi.com/widgets/widget_2.js'></script><script type='text/javascript'>kofiwidget2.init('Buy Me a Coffee', '#46b798', 'A6423ZIQ');kofiwidget2.draw();</script>
</center>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HTTPS Termination Using LetsEncrypt With Traefik on Docker Swarm]]></title>
    <link href="http://blog.ruanbekker.com/blog/2017/09/09/https-termination-using-letsencrypt-with-traefik-on-docker-swarm/"/>
    <updated>2017-09-09T18:40:15-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2017/09/09/https-termination-using-letsencrypt-with-traefik-on-docker-swarm</id>
    <content type="html"><![CDATA[<p><img src="http://obj-cache.cloud.ruanbekker.com/traefik.png" alt="" /></p>

<p>We will setup a HTTPS Termination on Traefik for our Java Web Application using Payara Micro, that will sit behind our Traefik proxy. In this guide, I will be using GitLab&rsquo;s Private Registry for pushing my Images to.</p>

<h2>Traefik Dockerfile:</h2>

<p>Our Traefik Dockerfile:</p>

<figure class='code'><figcaption><span>Traefik Dockerfile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='docker'><span class='line'><span class="k">FROM</span> traefik
</span><span class='line'><span class="k">ADD</span> traefik.toml .
</span><span class='line'><span class="k">EXPOSE</span> <span class="m">80</span>
</span><span class='line'><span class="k">EXPOSE</span> <span class="m">8080</span>
</span><span class='line'><span class="k">EXPOSE</span> <span class="m">443</span>
</span></code></pre></td></tr></table></div></figure>


<h2>traefik.toml</h2>

<p>Our Traefik config: <code>traefik.toml</code></p>

<figure class='code'><figcaption><span>traefik.toml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='toml'><span class='line'><span class="n">defaultEntryPoints</span> <span class="o">=</span> <span class="p">[</span><span class="s">&quot;http&quot;</span><span class="p">,</span> <span class="s">&quot;https&quot;</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="n">web</span><span class="p">]</span>
</span><span class='line'><span class="n">address</span> <span class="o">=</span> <span class="s">&quot;:8080&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="n">entryPoints</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="n">entryPoints</span><span class="p">.</span><span class="n">http</span><span class="p">]</span>
</span><span class='line'><span class="n">address</span> <span class="o">=</span> <span class="s">&quot;:80&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="n">entryPoints</span><span class="p">.</span><span class="n">https</span><span class="p">]</span>
</span><span class='line'><span class="n">address</span> <span class="o">=</span> <span class="s">&quot;:443&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="n">entryPoints</span><span class="p">.</span><span class="n">https</span><span class="p">.</span><span class="n">tls</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="n">acme</span><span class="p">]</span>
</span><span class='line'><span class="n">email</span> <span class="o">=</span> <span class="s">&quot;recipient@domain.com&quot;</span>
</span><span class='line'><span class="n">storage</span> <span class="o">=</span> <span class="s">&quot;acme.json&quot;</span>
</span><span class='line'><span class="n">entryPoint</span> <span class="o">=</span> <span class="s">&quot;https&quot;</span>
</span><span class='line'><span class="n">onDemand</span> <span class="o">=</span> <span class="kc">false</span>
</span><span class='line'><span class="n">OnHostRule</span> <span class="o">=</span> <span class="kc">true</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="n">docker</span><span class="p">]</span>
</span><span class='line'><span class="n">endpoint</span> <span class="o">=</span> <span class="s">&quot;unix:///var/run/docker.sock&quot;</span>
</span><span class='line'><span class="n">domain</span> <span class="o">=</span> <span class="s">&quot;apps.domain.com&quot;</span>
</span><span class='line'><span class="n">watch</span> <span class="o">=</span> <span class="kc">true</span>
</span><span class='line'><span class="n">exposedbydefault</span> <span class="o">=</span> <span class="kc">false</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Build the Image:</h2>

<p>Login to GitLab&rsquo;s Registry, build and push the image:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker login registry.gitlab.com
</span><span class='line'><span class="nv">$ </span>docker build -t registry.gitlab.com/&lt;user&gt;/&lt;repo&gt;/traefik:latest .
</span><span class='line'><span class="nv">$ </span>docker push registry.gitlab.com/&lt;user&gt;/&lt;repo&gt;/traefik:latest
</span></code></pre></td></tr></table></div></figure>


<h2>Traefik:</h2>

<p>Create the Traefik Proxy Service:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker service create <span class="se">\</span>
</span><span class='line'>--name traefik <span class="se">\</span>
</span><span class='line'>--constraint <span class="s1">&#39;node.role==manager&#39;</span> <span class="se">\</span>
</span><span class='line'>--publish 80:80 <span class="se">\</span>
</span><span class='line'>--publish 443:443 <span class="se">\</span>
</span><span class='line'>--publish 8080:8080 <span class="se">\</span>
</span><span class='line'>--mount <span class="nb">type</span><span class="o">=</span><span class="nb">bind</span>,source<span class="o">=</span>/var/run/docker.sock,target<span class="o">=</span>/var/run/docker.sock <span class="se">\</span>
</span><span class='line'>--network appnet <span class="se">\</span>
</span><span class='line'>--with-registry-auth registry.gitlab.com/&lt;user&gt;/&lt;repo&gt;/traefik:latest <span class="se">\</span>
</span><span class='line'>--docker <span class="se">\</span>
</span><span class='line'>--docker.swarmmode <span class="se">\</span>
</span><span class='line'>--docker.domain<span class="o">=</span>apps.domain.com <span class="se">\</span>
</span><span class='line'>--docker.watch <span class="se">\</span>
</span><span class='line'>--logLevel<span class="o">=</span>DEBUG <span class="se">\</span>
</span><span class='line'>--web
</span></code></pre></td></tr></table></div></figure>


<h2>Java Web Application:</h2>

<p>Our Java Web Applications Dockerfile:</p>

<figure class='code'><figcaption><span>Dockerfile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='docker'><span class='line'><span class="k">FROM</span> payara/micro
</span><span class='line'>COPY app.war /opt/payara/deployments/app.war
</span></code></pre></td></tr></table></div></figure>


<p>Build and Push the Image to our GitLab Registry:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker build -t registry.gitlab.com/&lt;user&gt;/&lt;repo&gt;/java_web:latest .
</span><span class='line'><span class="nv">$ </span>docker push registry.gitlab.com/&lt;user&gt;/&lt;repo&gt;/java_web:latest
</span></code></pre></td></tr></table></div></figure>


<p>Create the Java Web Application on Docker Swarm, specifiying our <code>Host</code>, and also a <code>PathPrefix</code>, so that the Traefik Proxy can accept requests for the <code>Hostname</code>, and anything from <code>/app/</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker service create <span class="se">\</span>
</span><span class='line'>--name java_web <span class="se">\</span>
</span><span class='line'>--label <span class="s1">&#39;traefik.port=8080&#39;</span> <span class="se">\</span>
</span><span class='line'>--label traefik.frontend.rule<span class="o">=</span><span class="s2">&quot;Host:apps.domain.com; PathPrefix: /app/&quot;</span> <span class="se">\</span>
</span><span class='line'>--network appnet <span class="se">\</span>
</span><span class='line'>--with-registry-auth registry.gitlab.com/&lt;user&gt;/&lt;repo&gt;/java_web:latest
</span></code></pre></td></tr></table></div></figure>


<p>Now we should be able to access our Web Application on <code>https://apps.domain.com/app/</code></p>

<h2>Resources:</h2>

<ul>
<li><a href="https://gist.github.com/nknapp/20c7cd89f1f128b8425dd89cbad0b802">https://gist.github.com/nknapp/20c7cd89f1f128b8425dd89cbad0b802</a></li>
<li><a href="https://niels.nu/blog/2017/traefik-https-letsencrypt.html">https://niels.nu/blog/2017/traefik-https-letsencrypt.html</a></li>
</ul>


<center>
        <script type='text/javascript' src='https://ko-fi.com/widgets/widget_2.js'></script><script type='text/javascript'>kofiwidget2.init('Buy Me a Coffee', '#46b798', 'A6423ZIQ');kofiwidget2.draw();</script>
</center>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Run Kibana on Docker Swarm With Traefik]]></title>
    <link href="http://blog.ruanbekker.com/blog/2017/09/09/run-kibana-on-docker-swarm-with-traefik/"/>
    <updated>2017-09-09T18:33:12-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2017/09/09/run-kibana-on-docker-swarm-with-traefik</id>
    <content type="html"><![CDATA[<p>We will create a Kibana Service on Docker Swarm, that will sit behind a Traefik Reverse Proxy.</p>

<h2>Create the Overlay Network:</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker network create --driver overlay appnet
</span></code></pre></td></tr></table></div></figure>


<h2>Create the Traefik Service:</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>docker service create <span class="se">\</span>
</span><span class='line'>--name traefik <span class="se">\</span>
</span><span class='line'>--constraint <span class="s1">&#39;node.role==manager&#39;</span> <span class="se">\</span>
</span><span class='line'>--publish 80:80 <span class="se">\</span>
</span><span class='line'>--publish 443:443 <span class="se">\</span>
</span><span class='line'>--publish 8080:8080 <span class="se">\</span>
</span><span class='line'>--mount <span class="nb">type</span><span class="o">=</span><span class="nb">bind</span>,source<span class="o">=</span>/var/run/docker.sock,target<span class="o">=</span>/var/run/docker.sock <span class="se">\</span>
</span><span class='line'>--network appnet <span class="se">\</span>
</span><span class='line'>traefik:camembert <span class="se">\</span>
</span><span class='line'>--docker --docker.swarmmode  <span class="se">\</span>
</span><span class='line'>--docker.domain<span class="o">=</span>apps.domain.com <span class="se">\</span>
</span><span class='line'>--docker.watch <span class="se">\</span>
</span><span class='line'>--logLevel<span class="o">=</span>DEBUG <span class="se">\</span>
</span><span class='line'>--web
</span></code></pre></td></tr></table></div></figure>


<h2>Set DNS:</h2>

<p>Set a wildcard <code>*.apps.domain.com</code> to resolve to <code>apps.domain.com</code>, where <code>apps.domain.com</code> resolves to your swarm addresses</p>

<h2>Create Kibana:</h2>

<p>Create a Kibana Service and set the <code>ELASTICSEARCH_URL</code> to your External Elasticsearch Endpoint, take note that it uses port <code>9200</code> by default.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker service create <span class="se">\</span>
</span><span class='line'>--name kibana <span class="se">\</span>
</span><span class='line'>--label <span class="s1">&#39;traefik.port=5601&#39;</span> <span class="se">\</span>
</span><span class='line'>--network appnet <span class="se">\</span>
</span><span class='line'>--env <span class="nv">KIBANA_ELASTICSEARCH_URL</span><span class="o">=</span>elasticsearch.domain.com <span class="se">\</span>
</span><span class='line'>bitnami/kibana
</span></code></pre></td></tr></table></div></figure>


<h2>Access Kibana:</h2>

<p>Your Kibana endpoint will be available at: <code>http://kibana.apps.domain.com</code></p>

<h2>Resources:</h2>

<ul>
<li><a href="https://github.com/bitnami/bitnami-docker-kibana">https://github.com/bitnami/bitnami-docker-kibana</a></li>
<li><a href="https://docs.traefik.io/">https://docs.traefik.io/</a></li>
</ul>


<center>
    <script type='text/javascript' src='https://ko-fi.com/widgets/widget_2.js'></script><script type='text/javascript'>kofiwidget2.init('Buy Me a Coffee', '#46b798', 'A6423ZIQ');kofiwidget2.draw();</script>
</center>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Python to Write Data to a MySQL Database]]></title>
    <link href="http://blog.ruanbekker.com/blog/2017/09/09/using-python-to-write-data-to-a-mysql-database/"/>
    <updated>2017-09-09T16:39:59-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2017/09/09/using-python-to-write-data-to-a-mysql-database</id>
    <content type="html"><![CDATA[<p>From our <a href="http://blog.ruanbekker.com/blog/2017/09/09/using-python-to-read-data-from-a-mysql-database/">previous</a> post, we used python to read data from mysql. In this post we will be using the <code>random</code> library to write random data into mysql.</p>

<p>We will define our lists with the categorized data, and then using for loop, to write data into our mysql database:</p>

<h2>Create The Database:</h2>

<p>Using Python to Create the Database:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">conn</span> <span class="o">=</span> <span class="n">pdb</span><span class="o">.</span><span class="n">connect</span><span class="p">(</span><span class="n">host</span><span class="o">=</span><span class="n">db_host</span><span class="p">,</span> <span class="n">user</span><span class="o">=</span><span class="n">db_username</span><span class="p">,</span> <span class="n">passwd</span><span class="o">=</span><span class="n">db_password</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">cursor</span> <span class="o">=</span> <span class="n">conn</span><span class="o">.</span><span class="n">cursor</span><span class="p">()</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">cursor</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="s">&quot;CREATE DATABASE testdb1&quot;</span><span class="p">)</span>
</span><span class='line'><span class="il">1L</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">cursor</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="s">&quot;CREATE TABLE testdb1.myusers(name VARCHAR(50), surname VARCHAR(50), countries VARCHAR(50), job VARCHAR(20), os VARCHAR(20), car VARCHAR(20))&quot;</span><span class="p">)</span>
</span><span class='line'><span class="il">0L</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now to list our databases:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">cursor</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="s">&quot;show databases&quot;</span><span class="p">)</span>
</span><span class='line'><span class="il">12L</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">dbs</span> <span class="o">=</span> <span class="n">cursor</span><span class="o">.</span><span class="n">fetchall</span><span class="p">()</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">dbs</span><span class="p">:</span>
</span><span class='line'><span class="o">...</span>     <span class="k">print</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="s">&#39;information_schema&#39;</span><span class="p">,)</span>
</span><span class='line'><span class="p">(</span><span class="s">&#39;mysql&#39;</span><span class="p">,)</span>
</span><span class='line'><span class="p">(</span><span class="s">&#39;performance_schema&#39;</span><span class="p">,)</span>
</span><span class='line'><span class="p">(</span><span class="s">&#39;testdb1&#39;</span><span class="p">,)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Python Code to Write to MySQL</h2>

<p>We will create a <code>mysql_write.py</code> file, with the following contents to define our random data that we will write to our mysql database. The config module can be found from <a href="http://blog.ruanbekker.com/blog/2017/09/09/using-python-to-read-data-from-a-mysql-database/">this</a> post.</p>

<figure class='code'><figcaption><span>mysql_write.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">MySQLdb</span> <span class="kn">as</span> <span class="nn">pdb</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">config</span> <span class="kn">import</span> <span class="n">credentials</span> <span class="k">as</span> <span class="n">secrets</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">random</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">datetime</span>
</span><span class='line'>
</span><span class='line'><span class="n">db_host</span> <span class="o">=</span> <span class="n">secrets</span><span class="p">[</span><span class="s">&#39;mysql&#39;</span><span class="p">][</span><span class="s">&#39;host&#39;</span><span class="p">]</span>
</span><span class='line'><span class="n">db_username</span> <span class="o">=</span> <span class="n">secrets</span><span class="p">[</span><span class="s">&#39;mysql&#39;</span><span class="p">][</span><span class="s">&#39;username&#39;</span><span class="p">]</span>
</span><span class='line'><span class="n">db_password</span> <span class="o">=</span> <span class="n">secrets</span><span class="p">[</span><span class="s">&#39;mysql&#39;</span><span class="p">][</span><span class="s">&#39;password&#39;</span><span class="p">]</span>
</span><span class='line'><span class="n">db_name</span> <span class="o">=</span> <span class="n">secrets</span><span class="p">[</span><span class="s">&#39;mysql&#39;</span><span class="p">][</span><span class="s">&#39;database&#39;</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">10</span><span class="p">):</span>
</span><span class='line'>    <span class="n">a</span> <span class="o">=</span> <span class="n">random</span><span class="o">.</span><span class="n">choice</span><span class="p">(</span><span class="n">names</span><span class="p">)</span>
</span><span class='line'>    <span class="n">b</span> <span class="o">=</span> <span class="n">random</span><span class="o">.</span><span class="n">choice</span><span class="p">(</span><span class="n">surnames</span><span class="p">)</span>
</span><span class='line'>    <span class="n">c</span> <span class="o">=</span> <span class="n">random</span><span class="o">.</span><span class="n">choice</span><span class="p">(</span><span class="n">countries</span><span class="p">)</span>
</span><span class='line'>    <span class="n">d</span> <span class="o">=</span> <span class="n">random</span><span class="o">.</span><span class="n">choice</span><span class="p">(</span><span class="n">job</span><span class="p">)</span>
</span><span class='line'>    <span class="n">e</span> <span class="o">=</span> <span class="n">random</span><span class="o">.</span><span class="n">choice</span><span class="p">(</span><span class="n">os</span><span class="p">)</span>
</span><span class='line'>    <span class="n">f</span> <span class="o">=</span> <span class="n">random</span><span class="o">.</span><span class="n">choice</span><span class="p">(</span><span class="n">car</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">cursor</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="s">&quot;INSERT INTO myusers values(&#39;{name}&#39;, &#39;{surname}&#39;, &#39;{countries}&#39;, &#39;{job}&#39;, &#39;{os}&#39;, &#39;{car}&#39;);&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="n">a</span><span class="p">,</span> <span class="n">surname</span><span class="o">=</span><span class="n">b</span><span class="p">,</span> <span class="n">countries</span><span class="o">=</span><span class="n">c</span><span class="p">,</span> <span class="n">job</span><span class="o">=</span><span class="n">d</span><span class="p">,</span> <span class="n">os</span><span class="o">=</span><span class="n">e</span><span class="p">,</span> <span class="n">car</span><span class="o">=</span><span class="n">f</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="n">conn</span><span class="o">.</span><span class="n">commit</span><span class="p">()</span>
</span><span class='line'><span class="n">conn</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>After running the file: <code>python mysql_write.py</code> we should have 10 records in our database.</p>

<h2>Reading the Data from MySQLL</h2>

<p>To verify that the data is in our MySQL Database, lets logon to our mysql database:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mysql -u root -p
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">testdb1</span><span class="p">.</span><span class="n">myusers</span><span class="p">;</span>
</span><span class='line'><span class="o">+----------+----------+-----------+----------------+---------+---------------+</span>
</span><span class='line'><span class="o">|</span> <span class="n">name</span>     <span class="o">|</span> <span class="n">surname</span>  <span class="o">|</span> <span class="n">countries</span> <span class="o">|</span> <span class="n">job</span>            <span class="o">|</span> <span class="n">os</span>      <span class="o">|</span> <span class="n">car</span>           <span class="o">|</span>
</span><span class='line'><span class="o">+----------+----------+-----------+----------------+---------+---------------+</span>
</span><span class='line'><span class="o">|</span> <span class="n">James</span>    <span class="o">|</span> <span class="n">James</span>    <span class="o">|</span> <span class="n">New</span> <span class="n">York</span>  <span class="o">|</span> <span class="n">Waiter</span>         <span class="o">|</span> <span class="n">Mac</span>     <span class="o">|</span> <span class="n">Volkswagen</span>    <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">Jennifer</span> <span class="o">|</span> <span class="n">Smith</span>    <span class="o">|</span> <span class="n">New</span> <span class="n">York</span>  <span class="o">|</span> <span class="n">Scientist</span>      <span class="o">|</span> <span class="n">Windows</span> <span class="o">|</span> <span class="n">Audi</span>          <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">Michelle</span> <span class="o">|</span> <span class="n">Jacobs</span>   <span class="o">|</span> <span class="n">Italy</span>     <span class="o">|</span> <span class="n">Police</span> <span class="n">Officer</span> <span class="o">|</span> <span class="n">Mac</span>     <span class="o">|</span> <span class="n">Ford</span>          <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">Michelle</span> <span class="o">|</span> <span class="n">Anderson</span> <span class="o">|</span> <span class="n">Italy</span>     <span class="o">|</span> <span class="n">Waiter</span>         <span class="o">|</span> <span class="n">Windows</span> <span class="o">|</span> <span class="n">Ford</span>          <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">Jennifer</span> <span class="o">|</span> <span class="n">Smith</span>    <span class="o">|</span> <span class="n">England</span>   <span class="o">|</span> <span class="n">Doctor</span>         <span class="o">|</span> <span class="n">Windows</span> <span class="o">|</span> <span class="n">Toyota</span>        <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">Peter</span>    <span class="o">|</span> <span class="n">Jacobs</span>   <span class="o">|</span> <span class="n">England</span>   <span class="o">|</span> <span class="n">IT</span>             <span class="o">|</span> <span class="n">Windows</span> <span class="o">|</span> <span class="n">BMW</span>           <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">Samantha</span> <span class="o">|</span> <span class="n">James</span>    <span class="o">|</span> <span class="n">England</span>   <span class="o">|</span> <span class="n">Doctor</span>         <span class="o">|</span> <span class="n">Mac</span>     <span class="o">|</span> <span class="n">Mazda</span>         <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">Frank</span>    <span class="o">|</span> <span class="n">Phillips</span> <span class="o">|</span> <span class="n">England</span>   <span class="o">|</span> <span class="n">IT</span>             <span class="o">|</span> <span class="n">Mac</span>     <span class="o">|</span> <span class="n">BMW</span>           <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">Samantha</span> <span class="o">|</span> <span class="n">James</span>    <span class="o">|</span> <span class="n">England</span>   <span class="o">|</span> <span class="n">Banker</span>         <span class="o">|</span> <span class="n">Linux</span>   <span class="o">|</span> <span class="n">Mercedez</span><span class="o">-</span><span class="n">Benz</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">Peter</span>    <span class="o">|</span> <span class="n">Anderson</span> <span class="o">|</span> <span class="n">Sweden</span>    <span class="o">|</span> <span class="n">Doctor</span>         <span class="o">|</span> <span class="n">Windows</span> <span class="o">|</span> <span class="n">BMW</span>           <span class="o">|</span>
</span><span class='line'><span class="o">+----------+----------+-----------+----------------+---------+---------------+</span>
</span></code></pre></td></tr></table></div></figure>


<p>Next, lets use Python to do the same, create a file <code>mysql_read.py</code> with the following content:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">MySQLdb</span> <span class="kn">as</span> <span class="nn">pdb</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">config</span> <span class="kn">import</span> <span class="n">credentials</span> <span class="k">as</span> <span class="n">secrets</span>
</span><span class='line'>
</span><span class='line'><span class="n">db_host</span> <span class="o">=</span> <span class="n">secrets</span><span class="p">[</span><span class="s">&#39;mysql&#39;</span><span class="p">][</span><span class="s">&#39;host&#39;</span><span class="p">]</span>
</span><span class='line'><span class="n">db_username</span> <span class="o">=</span> <span class="n">secrets</span><span class="p">[</span><span class="s">&#39;mysql&#39;</span><span class="p">][</span><span class="s">&#39;username&#39;</span><span class="p">]</span>
</span><span class='line'><span class="n">db_password</span> <span class="o">=</span> <span class="n">secrets</span><span class="p">[</span><span class="s">&#39;mysql&#39;</span><span class="p">][</span><span class="s">&#39;password&#39;</span><span class="p">]</span>
</span><span class='line'><span class="n">db_name</span> <span class="o">=</span> <span class="n">secrets</span><span class="p">[</span><span class="s">&#39;mysql&#39;</span><span class="p">][</span><span class="s">&#39;database&#39;</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="n">conn</span> <span class="o">=</span> <span class="n">pdb</span><span class="o">.</span><span class="n">connect</span><span class="p">(</span><span class="n">host</span><span class="o">=</span><span class="n">db_host</span><span class="p">,</span> <span class="n">user</span><span class="o">=</span><span class="n">db_username</span><span class="p">,</span> <span class="n">passwd</span><span class="o">=</span><span class="n">db_password</span><span class="p">,</span> <span class="n">db</span><span class="o">=</span><span class="n">db_name</span><span class="p">)</span>
</span><span class='line'><span class="n">cursor</span> <span class="o">=</span> <span class="n">conn</span><span class="o">.</span><span class="n">cursor</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="n">cursor</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="s">&quot;select * from myusers&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">read</span> <span class="o">=</span> <span class="n">cursor</span><span class="o">.</span><span class="n">fetchall</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">read</span><span class="p">:</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">conn</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>Running the Python file, to read the data:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>python mysql_read.py
</span><span class='line'>
</span><span class='line'><span class="o">(</span><span class="s1">&#39;James&#39;</span>, <span class="s1">&#39;James&#39;</span>, <span class="s1">&#39;New York&#39;</span>, <span class="s1">&#39;Waiter&#39;</span>, <span class="s1">&#39;Mac&#39;</span>, <span class="s1">&#39;Volkswagen&#39;</span><span class="o">)</span>
</span><span class='line'><span class="o">(</span><span class="s1">&#39;Jennifer&#39;</span>, <span class="s1">&#39;Smith&#39;</span>, <span class="s1">&#39;New York&#39;</span>, <span class="s1">&#39;Scientist&#39;</span>, <span class="s1">&#39;Windows&#39;</span>, <span class="s1">&#39;Audi&#39;</span><span class="o">)</span>
</span><span class='line'><span class="o">(</span><span class="s1">&#39;Michelle&#39;</span>, <span class="s1">&#39;Jacobs&#39;</span>, <span class="s1">&#39;Italy&#39;</span>, <span class="s1">&#39;Police Officer&#39;</span>, <span class="s1">&#39;Mac&#39;</span>, <span class="s1">&#39;Ford&#39;</span><span class="o">)</span>
</span><span class='line'><span class="o">(</span><span class="s1">&#39;Michelle&#39;</span>, <span class="s1">&#39;Anderson&#39;</span>, <span class="s1">&#39;Italy&#39;</span>, <span class="s1">&#39;Waiter&#39;</span>, <span class="s1">&#39;Windows&#39;</span>, <span class="s1">&#39;Ford&#39;</span><span class="o">)</span>
</span><span class='line'><span class="o">(</span><span class="s1">&#39;Jennifer&#39;</span>, <span class="s1">&#39;Smith&#39;</span>, <span class="s1">&#39;England&#39;</span>, <span class="s1">&#39;Doctor&#39;</span>, <span class="s1">&#39;Windows&#39;</span>, <span class="s1">&#39;Toyota&#39;</span><span class="o">)</span>
</span><span class='line'><span class="o">(</span><span class="s1">&#39;Peter&#39;</span>, <span class="s1">&#39;Jacobs&#39;</span>, <span class="s1">&#39;England&#39;</span>, <span class="s1">&#39;IT&#39;</span>, <span class="s1">&#39;Windows&#39;</span>, <span class="s1">&#39;BMW&#39;</span><span class="o">)</span>
</span><span class='line'><span class="o">(</span><span class="s1">&#39;Samantha&#39;</span>, <span class="s1">&#39;James&#39;</span>, <span class="s1">&#39;England&#39;</span>, <span class="s1">&#39;Doctor&#39;</span>, <span class="s1">&#39;Mac&#39;</span>, <span class="s1">&#39;Mazda&#39;</span><span class="o">)</span>
</span><span class='line'><span class="o">(</span><span class="s1">&#39;Frank&#39;</span>, <span class="s1">&#39;Phillips&#39;</span>, <span class="s1">&#39;England&#39;</span>, <span class="s1">&#39;IT&#39;</span>, <span class="s1">&#39;Mac&#39;</span>, <span class="s1">&#39;BMW&#39;</span><span class="o">)</span>
</span><span class='line'><span class="o">(</span><span class="s1">&#39;Samantha&#39;</span>, <span class="s1">&#39;James&#39;</span>, <span class="s1">&#39;England&#39;</span>, <span class="s1">&#39;Banker&#39;</span>, <span class="s1">&#39;Linux&#39;</span>, <span class="s1">&#39;Mercedez-Benz&#39;</span><span class="o">)</span>
</span><span class='line'><span class="o">(</span><span class="s1">&#39;Peter&#39;</span>, <span class="s1">&#39;Anderson&#39;</span>, <span class="s1">&#39;Sweden&#39;</span>, <span class="s1">&#39;Doctor&#39;</span>, <span class="s1">&#39;Windows&#39;</span>, <span class="s1">&#39;BMW&#39;</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<center>
        <script type='text/javascript' src='https://ko-fi.com/widgets/widget_2.js'></script><script type='text/javascript'>kofiwidget2.init('Buy Me a Coffee', '#46b798', 'A6423ZIQ');kofiwidget2.draw();</script>
</center>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Python to Read Data From a MySQL Database]]></title>
    <link href="http://blog.ruanbekker.com/blog/2017/09/09/using-python-to-read-data-from-a-mysql-database/"/>
    <updated>2017-09-09T15:23:05-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2017/09/09/using-python-to-read-data-from-a-mysql-database</id>
    <content type="html"><![CDATA[<p>Wanted to use Python to read some data from MySQL and stumbled upon a couple of great resources, which I noted some of my output below:</p>

<h2>Install Dependencies:</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>apt install python-dev libmysqlclient-dev python-setuptools gcc
</span><span class='line'><span class="nv">$ </span>easy_install pip
</span><span class='line'><span class="nv">$ </span>pip install MySQL-python
</span></code></pre></td></tr></table></div></figure>


<h2>Download Some Sample Data:</h2>

<p>Download the world dataset for MySQL:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>wget http://downloads.mysql.com/docs/world.sql.zip
</span><span class='line'><span class="nv">$ </span>unzip world.sql.zip
</span></code></pre></td></tr></table></div></figure>


<h2>Create Database:</h2>

<p>Create the Database in MySQL for the dataset that we downloaded:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mysql -u root -p -e<span class="s1">&#39;CREATE DATABASE world;&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Import Data:</h2>

<p>Import the data into the <code>world</code> database:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mysql -u root -p world &lt; world.sql
</span></code></pre></td></tr></table></div></figure>


<h2>Create the MySQL Credentials File:</h2>

<p>Create a <code>config.py</code> file and populate the credentials in a dictionary:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">credentials</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="s">&#39;mysql&#39;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="s">&#39;host&#39;</span><span class="p">:</span> <span class="s">&#39;localhost&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&#39;username&#39;</span><span class="p">:</span> <span class="s">&#39;root&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&#39;password&#39;</span><span class="p">:</span> <span class="s">&#39;password&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&#39;database&#39;</span><span class="p">:</span> <span class="s">&#39;world&#39;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Run Queries from Python:</h2>

<p>Enter the Python interpreter and run some queries:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">MySQLdb</span> <span class="kn">as</span> <span class="nn">pdb</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">from</span> <span class="nn">config</span> <span class="kn">import</span> <span class="n">credentials</span> <span class="k">as</span> <span class="n">secrets</span>
</span><span class='line'>
</span><span class='line'><span class="c"># assignments </span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db_host</span> <span class="o">=</span> <span class="n">secrets</span><span class="p">[</span><span class="s">&#39;mysql&#39;</span><span class="p">][</span><span class="s">&#39;host&#39;</span><span class="p">]</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db_username</span> <span class="o">=</span> <span class="n">secrets</span><span class="p">[</span><span class="s">&#39;mysql&#39;</span><span class="p">][</span><span class="s">&#39;username&#39;</span><span class="p">]</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db_password</span> <span class="o">=</span> <span class="n">secrets</span><span class="p">[</span><span class="s">&#39;mysql&#39;</span><span class="p">][</span><span class="s">&#39;password&#39;</span><span class="p">]</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">db_name</span> <span class="o">=</span> <span class="n">secrets</span><span class="p">[</span><span class="s">&#39;mysql&#39;</span><span class="p">][</span><span class="s">&#39;database&#39;</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="c"># create a connection to the database</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">conn</span> <span class="o">=</span> <span class="n">pdb</span><span class="o">.</span><span class="n">connect</span><span class="p">(</span><span class="n">host</span><span class="o">=</span><span class="n">db_host</span><span class="p">,</span> <span class="n">user</span><span class="o">=</span><span class="n">db_username</span><span class="p">,</span> <span class="n">passwd</span><span class="o">=</span><span class="n">db_password</span><span class="p">,</span> <span class="n">db</span><span class="o">=</span><span class="n">db_name</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># create a object for the queries we will be using</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">cursor</span> <span class="o">=</span> <span class="n">conn</span><span class="o">.</span><span class="n">cursor</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="c"># execute the query</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">cursor</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="s">&#39;select continent, name from country where continent = &quot;Africa&quot; limit 5&#39;</span><span class="p">)</span>
</span><span class='line'><span class="il">5L</span>
</span><span class='line'>
</span><span class='line'><span class="c"># fetch the results by assigning it to the results object:</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">results</span> <span class="o">=</span> <span class="n">cursor</span><span class="o">.</span><span class="n">fetchall</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="c"># loop and print results:</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">results</span><span class="p">:</span>
</span><span class='line'><span class="o">...</span>     <span class="k">print</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'><span class="p">(</span><span class="s">&#39;Africa&#39;</span><span class="p">,</span> <span class="s">&#39;Angola&#39;</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="s">&#39;Africa&#39;</span><span class="p">,</span> <span class="s">&#39;Burundi&#39;</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="s">&#39;Africa&#39;</span><span class="p">,</span> <span class="s">&#39;Benin&#39;</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="s">&#39;Africa&#39;</span><span class="p">,</span> <span class="s">&#39;Burkina Faso&#39;</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="s">&#39;Africa&#39;</span><span class="p">,</span> <span class="s">&#39;Botswana&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># close the connection</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">conn</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Graphing Results to Plotly:</h2>

<p>A great <a href="http://moderndata.plot.ly/graph-data-from-mysql-database-in-python/">blogpost</a> that shows how to use this data to graph the results to plotly</p>

<h2>Resources:</h2>

<ul>
<li><a href="http://moderndata.plot.ly/graph-data-from-mysql-database-in-python/">http://moderndata.plot.ly/graph-data-from-mysql-database-in-python/</a></li>
<li><a href="https://stackoverflow.com/questions/11007627/python-variable-declaration">https://stackoverflow.com/questions/11007627/python-variable-declaration</a></li>
</ul>


<center>
        <script type='text/javascript' src='https://ko-fi.com/widgets/widget_2.js'></script><script type='text/javascript'>kofiwidget2.init('Buy Me a Coffee', '#46b798', 'A6423ZIQ');kofiwidget2.draw();</script>
</center>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Minios Python SDK to Interact With a Minio S3 Bucket]]></title>
    <link href="http://blog.ruanbekker.com/blog/2017/09/08/using-minios-python-sdk-to-interact-with-a-minio-s3-bucket/"/>
    <updated>2017-09-08T16:15:52-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2017/09/08/using-minios-python-sdk-to-interact-with-a-minio-s3-bucket</id>
    <content type="html"><![CDATA[<p>In our previous post, we have <a href="http://blog.ruanbekker.com/blog/2017/09/08/run-your-self-hosted-s3-service-with-minio-on-docker-swarm/">Setup Minio Server</a> which is a self-hosted alternative to Amazon&rsquo;s S3 Service.</p>

<p>We will go through some basic examples on working with the Python SDK, to interact with Minio.</p>

<h2>Installing the Minio Python Library:</h2>

<p>Ensure that Python and Pip is installed, the install the Python Minio Library:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>virtualenv -p /usr/local/bin/python2.7 .venv
</span><span class='line'><span class="nv">$ </span><span class="nb">source</span> .venv/bin/activate
</span><span class='line'><span class="o">(</span>.venv<span class="o">)</span><span class="nv">$ </span>pip install minio
</span></code></pre></td></tr></table></div></figure>


<h2>Create a Bucket:</h2>

<p>Enter the Python Interpreter and Create a S3 Bucket on your Minio Server:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">from</span> <span class="nn">minio</span> <span class="kn">import</span> <span class="n">Minio</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">client</span> <span class="o">=</span> <span class="n">Minio</span><span class="p">(</span><span class="s">&#39;10.0.0.2:9000&#39;</span><span class="p">,</span> <span class="n">access_key</span><span class="o">=</span><span class="s">&#39;ASDASDASD&#39;</span><span class="p">,</span> <span class="n">secret_key</span><span class="o">=</span><span class="s">&#39;ASDASDASD&#39;</span><span class="p">,</span> <span class="n">secure</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">client</span><span class="o">.</span><span class="n">make_bucket</span><span class="p">(</span><span class="s">&#39;pythonbucket&#39;</span><span class="p">,</span> <span class="n">location</span><span class="o">=</span><span class="s">&#39;us-west-1&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>List Buckets:</h2>

<p>I have also created a bucket from my previous post, so we should have 2 buckets:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">buckets</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="n">list_buckets</span><span class="p">()</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">for</span> <span class="n">bucket</span> <span class="ow">in</span> <span class="n">buckets</span><span class="p">:</span>
</span><span class='line'><span class="o">...</span>     <span class="k">print</span><span class="p">(</span><span class="n">bucket</span><span class="p">)</span><span class="o">.</span><span class="n">name</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'><span class="n">news3bucket</span>
</span><span class='line'><span class="n">pythonbucket</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Put Objects to your Bucket:</h2>

<p>Write a string to a file, then upload the file to 2 different destination objects. The arguments is: BucketName, Destination, Source.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">data</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">&#39;file.txt&#39;</span><span class="p">,</span> <span class="s">&#39;w&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">data</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">&#39;This is some text&#39;</span> <span class="o">+</span> <span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">data</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">client</span><span class="o">.</span><span class="n">fput_object</span><span class="p">(</span><span class="s">&#39;pythonbucket&#39;</span><span class="p">,</span> <span class="s">&#39;bucket/contents/file.txt&#39;</span><span class="p">,</span> <span class="s">&#39;file.txt&#39;</span><span class="p">)</span>
</span><span class='line'><span class="s">&#39;6b8c327f0fc6f470c030a5b6c71154c5&#39;</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">client</span><span class="o">.</span><span class="n">fput_object</span><span class="p">(</span><span class="s">&#39;pythonbucket&#39;</span><span class="p">,</span> <span class="s">&#39;bucket/contents/file2.txt&#39;</span><span class="p">,</span> <span class="s">&#39;file.txt&#39;</span><span class="p">)</span>
</span><span class='line'><span class="s">&#39;6b8c327f0fc6f470c030a5b6c71154c5&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>List Objects in your Bucket:</h2>

<p>List the objects in your bucket:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">objects</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="n">list_objects</span><span class="p">(</span><span class="s">&#39;pythonbucket&#39;</span><span class="p">,</span> <span class="n">prefix</span><span class="o">=</span><span class="s">&#39;bucket/contents/&#39;</span><span class="p">,</span> <span class="n">recursive</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">for</span> <span class="n">obj</span> <span class="ow">in</span> <span class="n">objects</span><span class="p">:</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">for</span> <span class="n">obj</span> <span class="ow">in</span> <span class="n">objects</span><span class="p">:</span>
</span><span class='line'><span class="o">...</span>     <span class="k">print</span><span class="p">(</span><span class="n">obj</span><span class="o">.</span><span class="n">object_name</span><span class="p">,</span> <span class="n">obj</span><span class="o">.</span><span class="n">size</span><span class="p">)</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'><span class="p">(</span><span class="s">&#39;bucket/contents/file.txt&#39;</span><span class="p">,</span> <span class="mi">18</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="s">&#39;bucket/contents/file2.txt&#39;</span><span class="p">,</span> <span class="mi">18</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Remove Objects from your Bucket:</h2>

<p>Remove the objects from your Bucket, the list your bucket to verify that they are removed:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">client</span><span class="o">.</span><span class="n">remove_object</span><span class="p">(</span><span class="s">&#39;pythonbucket&#39;</span><span class="p">,</span> <span class="s">&#39;bucket/contents/file.txt&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">client</span><span class="o">.</span><span class="n">remove_object</span><span class="p">(</span><span class="s">&#39;pythonbucket&#39;</span><span class="p">,</span> <span class="s">&#39;bucket/contents/file2.txt&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">for</span> <span class="n">obj</span> <span class="ow">in</span> <span class="n">objects</span><span class="p">:</span>
</span><span class='line'><span class="o">...</span>     <span class="k">print</span><span class="p">(</span><span class="n">obj</span><span class="o">.</span><span class="n">object_name</span><span class="p">,</span> <span class="n">obj</span><span class="o">.</span><span class="n">size</span><span class="p">)</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Remove the Bucket:</h2>

<p>Remove the Bucket that we created:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">client</span><span class="o">.</span><span class="n">remove_bucket</span><span class="p">(</span><span class="s">&#39;pythonbucket&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="nb">exit</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Resources:</h2>

<p>Minio has some great documentation, for more information on their SDK:</p>

<ul>
<li><a href="https://docs.minio.io/docs/python-client-api-reference">https://docs.minio.io/docs/python-client-api-reference</a></li>
</ul>


<center>
    <script type='text/javascript' src='https://ko-fi.com/widgets/widget_2.js'></script><script type='text/javascript'>kofiwidget2.init('Buy Me a Coffee', '#46b798', 'A6423ZIQ');kofiwidget2.draw();</script> 
</center>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Run Your Self-Hosted S3 Service With Minio on Docker Swarm]]></title>
    <link href="http://blog.ruanbekker.com/blog/2017/09/08/run-your-self-hosted-s3-service-with-minio-on-docker-swarm/"/>
    <updated>2017-09-08T15:29:29-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2017/09/08/run-your-self-hosted-s3-service-with-minio-on-docker-swarm</id>
    <content type="html"><![CDATA[<p>Minio is a distributed object storage server built for cloud applications, which is similar to Amazon&rsquo;s S3 Service.</p>

<p>Today, we will create the server on docker swarm, as I don&rsquo;t currently have a external data store like GlusterFS / NFS etc, I will host the data on the manager node, and set a constraint for the service so that the service can only run on the manager node.</p>

<h2>Prepare the Data Directory:</h2>

<p>I will only rely on the manager node for my data, so on my manager node:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ mkdir -p /mnt/data</span></code></pre></td></tr></table></div></figure>


<h2>Create the Service:</h2>

<p>If you have a Replicated Gluster Volume or NFS which is mounted throughout your docker swarm, you can create the directory path for it, and the update your <code>--mount</code> source path to your external data store. In my case, I will just point it to my manager node&rsquo;s <code>/mnt/data</code> path as I have setup the service to only run on the one manager node in my swarm:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ docker service create \
</span><span class='line'>--name minio \
</span><span class='line'>--network appnet \
</span><span class='line'>--replicas 1 \
</span><span class='line'>--publish 9000:9000 \
</span><span class='line'>--constraint 'node.role==manager' \
</span><span class='line'>-e "MINIO_ACCESS_KEY=AKIAASDKJASDL" \
</span><span class='line'>-e "MINIO_SECRET_KEY=AKIAASDKJASDL" \
</span><span class='line'>--mount "type=bind,source=/mnt/data,target=/data" \
</span><span class='line'>minio/minio server /data</span></code></pre></td></tr></table></div></figure>


<h2>Install the AWS CLI Tools:</h2>

<p>We will use the awscli tools to interact with our Minio Server:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ pip install awscli</span></code></pre></td></tr></table></div></figure>


<h2>Configure the Client:</h2>

<p>Configure the awscli client with the access details that we passed in our docker service:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ aws configure --profile minio
</span><span class='line'>AWS Access Key ID []: AKIAASDKJASDL
</span><span class='line'>AWS Secret Access Key []: ASLDKJASDLKJASDLKJ
</span><span class='line'>Default region name []: us-west-1
</span><span class='line'>Default output format []: json</span></code></pre></td></tr></table></div></figure>


<h2>Create the Bucket:</h2>

<p>Create a New Bucket, in this case <code>news3bucket</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>aws --profile minio --endpoint-url http://MINIO-IP:9000 s3 mb s3://news3bucket
</span><span class='line'>make_bucket: news3bucket</span></code></pre></td></tr></table></div></figure>


<h2>List Buckets:</h2>

<p>List our endpoint, to see the buckets on our server:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ aws --profile minio --endpoint-url http://MINIO-IP:9000 s3 ls /
</span><span class='line'>2017-09-08 15:01:40 news3bucket</span></code></pre></td></tr></table></div></figure>


<h2>Upload an Object to your Bucket:</h2>

<p>We will upload an image <code>awsddb-1.png</code> to our new bucket:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ aws --profile minio --endpoint-url http://MINIO-IP:9000 s3 cp awsddb-1.png s3://news3bucket/
</span><span class='line'>upload: ./awsddb-1.png to s3://news3bucket/awsddb-1.png</span></code></pre></td></tr></table></div></figure>


<h2>List Bucket:</h2>

<p>List your bucket, to see the uploaded object:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ aws --profile minio --endpoint-url http://MINIO-IP:9000 s3 ls s3://news3bucket
</span><span class='line'>2017-09-08 15:03:11      19851 awsddb-1.png</span></code></pre></td></tr></table></div></figure>


<h2>Download Object:</h2>

<p>Download the image from your Bucket, and set the local file to <code>file.png</code>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ aws --profile minio --endpoint-url http://MINIO-IP:9000 s3 cp s3://news3bucket/awsddb-1.png file.png
</span><span class='line'>download: s3://news3bucket/awsddb-1.png to ./file.png</span></code></pre></td></tr></table></div></figure>


<h2>Web Access:</h2>

<p>You can also access Minio&rsquo;s Web Interface on the port that you have exposed, in my case: <code>http://MINIO-IP:9000/minio/</code></p>

<h2>Resources:</h2>

<ul>
<li><a href="https://www.minio.io/">https://www.minio.io/</a></li>
<li><a href="https://docs.minio.io/docs/minio-docker-quickstart-guide">https://docs.minio.io/docs/minio-docker-quickstart-guide</a></li>
<li><a href="https://github.com/minio/minio/blob/master/README.md">https://github.com/minio/minio/blob/master/README.md</a></li>
<li><a href="https://github.com/arschles/minio-howto/blob/master/aws-cli-with-minio-server.md">https://github.com/arschles/minio-howto/blob/master/aws-cli-with-minio-server.md</a></li>
</ul>


<center>
    <script type='text/javascript' src='https://ko-fi.com/widgets/widget_2.js'></script><script type='text/javascript'>kofiwidget2.init('Buy Me a Coffee', '#46b798', 'A6423ZIQ');kofiwidget2.draw();</script> 
</center>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Create a Local Docker Swarm Cluster With Docker in Docker on Your Workstation]]></title>
    <link href="http://blog.ruanbekker.com/blog/2017/09/07/how-to-create-a-local-docker-swarm-cluster-with-docker-in-docker-on-your-workstation/"/>
    <updated>2017-09-07T04:03:37-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2017/09/07/how-to-create-a-local-docker-swarm-cluster-with-docker-in-docker-on-your-workstation</id>
    <content type="html"><![CDATA[<p>Creating a Docker Swarm Cluster, locally on your Workstation using Docker in Docker (DID) for testing Purposes:</p>

<h2>Project Resources:</h2>

<ul>
<li><a href="https://hub.docker.com/_/docker/">Docker in Docker</a></li>
<li><a href="https://docs.traefik.io/">Traefik</a></li>
</ul>


<h2>Create The Nodes:</h2>

<p>Create the Docker containers that will act as our Docker nodes:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker run --privileged --name docker-node1 -v /Users/ruan/docker/did/vols/node1:/var/lib/docker -d docker:dind --storage-driver<span class="o">=</span>vfs
</span><span class='line'><span class="nv">$ </span>docker run --privileged --name docker-node2 -v /Users/ruan/docker/did/vols/node2:/var/lib/docker -d docker:dind --storage-driver<span class="o">=</span>vfs
</span><span class='line'><span class="nv">$ </span>docker run --privileged --name docker-node3 -v /Users/ruan/docker/did/vols/node3:/var/lib/docker -d docker:dind --storage-driver<span class="o">=</span>vfs
</span></code></pre></td></tr></table></div></figure>


<h2>Initialize the Swarm:</h2>

<p>Log onto the manager node:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker <span class="nb">exec</span> -it docker-node1 sh
</span></code></pre></td></tr></table></div></figure>


<p>Initialize the Swarm:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker swarm init --advertise-addr eth0
</span><span class='line'>Swarm initialized: current node <span class="o">(</span>17ydtkqdwxzwea2riadxj4zbw<span class="o">)</span> is now a manager.
</span><span class='line'>
</span><span class='line'>To add a worker to this swarm, run the following <span class="nb">command</span>:
</span><span class='line'>
</span><span class='line'>    docker swarm join --token SWMTKN-1-4goolm8dvwictc7d39aonpcv6ca1pfj31q7irjga17o2srzf6f-b4k3hln6ogvjgmnbs1qxnjvj9 172.17.0.2:2377
</span><span class='line'>
</span><span class='line'>To add a manager to this swarm, run <span class="s1">&#39;docker swarm join-token manager&#39;</span> and follow the instructions.
</span></code></pre></td></tr></table></div></figure>


<p>Join the Worker Nodes to the Swarm:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker <span class="nb">exec</span> -it docker-node2 sh
</span><span class='line'>/ <span class="c"># docker swarm join --token SWMTKN-1-4mvb68vefr3dogxr6omu3uq04r4gddftdbmfomxo9pefks9siu-3t7ua7k2xigl9rwgp4dwzcxm0 172.17.0.2:2377</span>
</span><span class='line'>This node joined a swarm as a worker.
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker <span class="nb">exec</span> -it docker-node3 sh
</span><span class='line'>/ <span class="c"># docker swarm join --token SWMTKN-1-4mvb68vefr3dogxr6omu3uq04r4gddftdbmfomxo9pefks9siu-3t7ua7k2xigl9rwgp4dwzcxm0 172.17.0.2:2377</span>
</span><span class='line'>This node joined a swarm as a worker.
</span></code></pre></td></tr></table></div></figure>


<h2>List the Nodes:</h2>

<p>Log onto the Manager node and list the nodes:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker <span class="nb">exec</span> -it docker-node1 sh
</span><span class='line'>/ <span class="c"># docker node ls</span>
</span><span class='line'>ID                            HOSTNAME            STATUS              AVAILABILITY        MANAGER STATUS
</span><span class='line'>1hnq4b4w87w6trobwye5ap4sh *   5657c28bf618        Ready               Active              Leader
</span><span class='line'>wglbb029g1kczttiaf5r6iavi     b2924bb8e555        Ready               Active
</span><span class='line'>xxr9kdqy49u2tx61w31ife90j     6622a06a1b3c        Ready               Active
</span></code></pre></td></tr></table></div></figure>


<h2>Traefik:</h2>

<p>Creating a HTTP Reverse Proxy, using Traefik:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker network create --driver overlay traefik-net
</span><span class='line'><span class="nv">$ </span>docker service create <span class="se">\</span>
</span><span class='line'>--name traefik <span class="se">\</span>
</span><span class='line'>--constraint <span class="s1">&#39;node.role==manager&#39;</span> <span class="se">\</span>
</span><span class='line'>--publish 80:80 <span class="se">\</span>
</span><span class='line'>--publish 8080:8080 <span class="se">\</span>
</span><span class='line'>--mount <span class="nb">type</span><span class="o">=</span><span class="nb">bind</span>,source<span class="o">=</span>/var/run/docker.sock,target<span class="o">=</span>/var/run/docker.sock <span class="se">\</span>
</span><span class='line'>--network traefik-net <span class="se">\</span>
</span><span class='line'>traefik:camembert --docker --docker.swarmmode --docker.domain<span class="o">=</span>ruanbekker.internal --docker.watch --logLevel<span class="o">=</span>DEBUG --web
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Getting Started With Chef: Creating a Website With Apache]]></title>
    <link href="http://blog.ruanbekker.com/blog/2017/09/04/getting-started-with-chef-creating-a-website-with-apache/"/>
    <updated>2017-09-04T14:21:20-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2017/09/04/getting-started-with-chef-creating-a-website-with-apache</id>
    <content type="html"><![CDATA[<p>From my previous post we got started with <a href="http://blog.ruanbekker.com/blog/2017/09/04/getting-started-with-chef-working-with-files/">Installing the Chef Devlopment Kit</a> and using the file resource type.</p>

<p>In this post we will create a recipe that will:</p>

<ul>
<li>Update the APT Cache</li>
<li>Install the Apache2 package</li>
<li>Enables and Starts Apache2 on Boot</li>
<li>Create a index.html for our Website</li>
</ul>


<h2>Creating a Web Server:</h2>

<p>We will create our <code>webserver.rb</code> recipe, and our first section will consist of the following:</p>

<ul>
<li>Ensuring our APT Cache is up to date</li>
<li>The Frequency property indiciates 24 hours</li>
<li>The periodic action indicates that the update occurs periodically</li>
<li>Optional: the <code>:update</code> action will update the apt cache on each run</li>
<li>Installs the apache2 package (No action is specified, defaults to <code>:install</code>)</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">apt_update</span> <span class="s1">&#39;Update APT Cache Daily&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">frequency</span> <span class="mi">86_400</span>
</span><span class='line'>  <span class="n">action</span> <span class="ss">:periodic</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">package</span> <span class="s1">&#39;apache2&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Running this recipe at this moment will provide the following output:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>chef-client --local-mode webserver.rb
</span><span class='line'>..
</span><span class='line'>Converging <span class="m">2</span> resources
</span><span class='line'>Recipe: @recipe_files::/root/chef-repo/webserver.rb
</span><span class='line'>  * apt_update<span class="o">[</span>Update APT Cache Daily<span class="o">]</span> action periodic
</span><span class='line'>    - update new lists of packages
</span><span class='line'>    * directory<span class="o">[</span>/var/lib/apt/periodic<span class="o">]</span> action create <span class="o">(</span>up to date<span class="o">)</span>
</span><span class='line'>    * directory<span class="o">[</span>/etc/apt/apt.conf.d<span class="o">]</span> action create <span class="o">(</span>up to date<span class="o">)</span>
</span><span class='line'>    * file<span class="o">[</span>/etc/apt/apt.conf.d/15update-stamp<span class="o">]</span> action create_if_missing
</span><span class='line'>      - create new file /etc/apt/apt.conf.d/15update-stamp
</span><span class='line'>      - update content in file /etc/apt/apt.conf.d/15update-stamp from none to 174cdb
</span><span class='line'>      --- /etc/apt/apt.conf.d/15update-stamp    2017-09-04 16:53:31.604488306 +0000
</span><span class='line'>      +++ /etc/apt/apt.conf.d/.chef-15update-stamp20170904-5727-1p2g8zw 2017-09-04 16:53:31.604488306 +0000
</span><span class='line'>      @@ -1 +1,2 @@
</span><span class='line'>      +APT::Update::Post-Invoke-Success <span class="o">{</span><span class="s2">&quot;touch /var/lib/apt/periodic/update-success-stamp 2&gt;/dev/null || true&quot;</span><span class="p">;</span><span class="o">}</span><span class="p">;</span>
</span><span class='line'>    * execute<span class="o">[</span>apt-get -q update<span class="o">]</span> action run
</span><span class='line'>      - execute apt-get -q update
</span></code></pre></td></tr></table></div></figure>


<p>Next, we will set <code>apache2</code> to start on boot and start the service:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">apt_update</span> <span class="s1">&#39;Update APT Cache Daily&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">frequency</span> <span class="mi">86_400</span>
</span><span class='line'>  <span class="n">action</span> <span class="ss">:periodic</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">package</span> <span class="s1">&#39;apache2&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">service</span> <span class="s1">&#39;apache2&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">supports</span> <span class="ss">status</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'>  <span class="n">action</span> <span class="o">[</span><span class="ss">:enable</span><span class="p">,</span> <span class="ss">:start</span><span class="o">]</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Running our chef client, will produce the following output:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>chef-client --local-mode webserver.rb
</span><span class='line'>Converging <span class="m">3</span> resources
</span><span class='line'>Recipe: @recipe_files::/root/chef-repo/webserver.rb
</span><span class='line'>  * apt_update<span class="o">[</span>Update APT Cache Daily<span class="o">]</span> action periodic <span class="o">(</span>up to date<span class="o">)</span>
</span><span class='line'>  * apt_package<span class="o">[</span>apache2<span class="o">]</span> action install <span class="o">(</span>up to date<span class="o">)</span>
</span><span class='line'>  * service<span class="o">[</span>apache2<span class="o">]</span> action <span class="nb">enable</span> <span class="o">(</span>up to date<span class="o">)</span>
</span><span class='line'>  * service<span class="o">[</span>apache2<span class="o">]</span> action start
</span><span class='line'>    - start service service<span class="o">[</span>apache2<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Verifying that our apache2 service is started:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>/etc/init.d/apache2 status
</span><span class='line'> * apache2 is running
</span></code></pre></td></tr></table></div></figure>


<p>Next, using the file resource, we will replace the `/var/www/html/index.html' landing page with the one that we will specify in our recipe:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">apt_update</span> <span class="s1">&#39;Update APT Cache Daily&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">frequency</span> <span class="mi">86_400</span>
</span><span class='line'>  <span class="n">action</span> <span class="ss">:periodic</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">package</span> <span class="s1">&#39;apache2&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">service</span> <span class="s1">&#39;apache2&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">supports</span> <span class="ss">status</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'>  <span class="n">action</span> <span class="o">[</span><span class="ss">:enable</span><span class="p">,</span> <span class="ss">:start</span><span class="o">]</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">file</span> <span class="s1">&#39;/var/www/html/index.html&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">content</span> <span class="s1">&#39;&lt;html&gt;</span>
</span><span class='line'><span class="s1">  &lt;body&gt;</span>
</span><span class='line'><span class="s1">    &lt;h1&gt;Hello, World!&lt;/h1&gt;</span>
</span><span class='line'><span class="s1">  &lt;/body&gt;</span>
</span><span class='line'><span class="s1">&lt;/html&gt;&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>And our full <code>webserver.rb</code> recipe will look like the following:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># update cache periodically every 24 hours</span>
</span><span class='line'><span class="n">apt_update</span> <span class="s1">&#39;Update APT Cache Daily&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">frequency</span> <span class="mi">86_400</span>
</span><span class='line'>  <span class="n">action</span> <span class="ss">:periodic</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># install apache2 (:install is the default action)</span>
</span><span class='line'><span class="n">package</span> <span class="s1">&#39;apache2&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># enable apache2 on boot and start apache2</span>
</span><span class='line'><span class="n">service</span> <span class="s1">&#39;apache2&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">supports</span> <span class="ss">status</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'>  <span class="n">action</span> <span class="o">[</span><span class="ss">:enable</span><span class="p">,</span> <span class="ss">:start</span><span class="o">]</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># create a custom html page</span>
</span><span class='line'><span class="n">file</span> <span class="s1">&#39;/var/www/html/index.html&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">content</span> <span class="s1">&#39;&lt;html&gt;</span>
</span><span class='line'><span class="s1">  &lt;body&gt;</span>
</span><span class='line'><span class="s1">    &lt;h1&gt;Hello, World!&lt;/h1&gt;</span>
</span><span class='line'><span class="s1">  &lt;/body&gt;</span>
</span><span class='line'><span class="s1">&lt;/html&gt;&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Running our Chef Client against our Recipe:</h2>

<p>For the previous snippets, we took it section by section, here we will run the whole recipe:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>chef-client --local-mode webserver.rb
</span><span class='line'>...
</span><span class='line'>Converging <span class="m">4</span> resources
</span><span class='line'>Recipe: @recipe_files::/root/chef-repo/webserver.rb
</span><span class='line'>  * apt_update<span class="o">[</span>Update APT Cache Daily<span class="o">]</span> action periodic <span class="o">(</span>up to date<span class="o">)</span>
</span><span class='line'>  * apt_package<span class="o">[</span>apache2<span class="o">]</span> action install <span class="o">(</span>up to date<span class="o">)</span>
</span><span class='line'>  * service<span class="o">[</span>apache2<span class="o">]</span> action <span class="nb">enable</span> <span class="o">(</span>up to date<span class="o">)</span>
</span><span class='line'>  * service<span class="o">[</span>apache2<span class="o">]</span> action start <span class="o">(</span>up to date<span class="o">)</span>
</span><span class='line'>  * file<span class="o">[</span>/var/www/html/index.html<span class="o">]</span> action create
</span><span class='line'>    - update content in file /var/www/html/index.html from 538f31 to 9d1dca
</span><span class='line'>    --- /var/www/html/index.html        2017-09-04 16:53:55.134043652 +0000
</span><span class='line'>    +++ /var/www/html/.chef-index20170904-7451-3kt1p7.html      2017-09-04 17:00:16.306831840 +0000
</span></code></pre></td></tr></table></div></figure>


<h2>Testing our Website:</h2>

<p>And finally, testing our website:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -XGET http://localhost/
</span><span class='line'>&lt;html&gt;
</span><span class='line'>  &lt;body&gt;
</span><span class='line'>    &lt;h1&gt;Hello, World!&lt;/h1&gt;
</span><span class='line'>  &lt;/body&gt;
</span><span class='line'>&lt;/html&gt;
</span></code></pre></td></tr></table></div></figure>


<h2>Resources:</h2>

<ul>
<li><a href="https://docs.chef.io/resource_file.html">https://docs.chef.io/resource_file.html</a></li>
<li><a href="https://docs.chef.io/recipes.html">https://docs.chef.io/recipes.html</a></li>
<li><a href="https://learn.chef.io">https://learn.chef.io</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Getting Started With Chef: Working With Files]]></title>
    <link href="http://blog.ruanbekker.com/blog/2017/09/04/getting-started-with-chef-working-with-files/"/>
    <updated>2017-09-04T14:06:01-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2017/09/04/getting-started-with-chef-working-with-files</id>
    <content type="html"><![CDATA[<p>Chef: Infrastructure as Code, Automation, Configuration Management, having a service that can do that, and especially having something in place that knows what the desired state of your configurations/applications should be is definitely a plus.</p>

<p>I stumbled upon <a href="https://learn.chef.io">learn.chef.io</a> which is a great resource for learning chef, as I am learning Chef at this moment.</p>

<p>The Components of Chef consists of:</p>

<ul>
<li>Chef Workstation (ChefDK enables you to use the tools locally to test before pushing your code to the Chef Server)</li>
<li>Chef Server (Central Repository for your Cookbooks and info of every node Chef Manages)</li>
<li>Chef Client (a Node that is Managed by the Chef Server)</li>
</ul>


<p>In this post we will install the Chef Development Kit, and work with the chef-client in local-mode to create, update and delete files using the <code>file</code> resource type.</p>

<h2>Getting Started with Chef: Installation:</h2>

<p>Installing the Chef Development Kit:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo apt-get update <span class="o">&amp;&amp;</span> apt-get upgrade -y
</span><span class='line'><span class="nv">$ </span>sudo apt-get install curl git -y
</span><span class='line'><span class="nv">$ </span>curl https://omnitruck.chef.io/install.sh <span class="p">|</span> sudo bash -s -- -P chefdk -c stable -v 2.0.28
</span></code></pre></td></tr></table></div></figure>


<h2>Configure a Resource:</h2>

<p>Using <code>chef-client</code> in local mode, we will use the <code>resource: file</code> to create a recipe that will create our <code>motd</code> file</p>

<figure class='code'><figcaption><span>hello.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">file</span> <span class="s1">&#39;/tmp/motd&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">content</span> <span class="s1">&#39;hello world&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Running chef client against our recipe in local-mode:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>chef-client --local-mode hello.rb
</span><span class='line'>..
</span><span class='line'>Converging <span class="m">1</span> resources
</span><span class='line'>Recipe: @recipe_files::/root/chef-repo/hello.rb
</span><span class='line'>  * file<span class="o">[</span>/tmp/motd<span class="o">]</span> action create
</span><span class='line'>    - create new file /tmp/motd
</span><span class='line'>    - update content in file /tmp/motd from none to b94d27
</span><span class='line'>    --- /tmp/motd       2017-09-04 16:18:19.265699403 +0000
</span><span class='line'>    +++ /tmp/.chef-motd20170904-4500-54fh8w     2017-09-04 16:18:19.265699403 +0000
</span><span class='line'>    @@ -1 +1,2 @@
</span><span class='line'>    +hello world
</span></code></pre></td></tr></table></div></figure>


<p>Verify the Content:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cat /tmp/motd
</span><span class='line'>hello world
</span></code></pre></td></tr></table></div></figure>


<p>Running the command again will do nothing, as the content is in its desired state:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>chef-client --local-mode hello.rb
</span><span class='line'>..
</span><span class='line'>Converging <span class="m">1</span> resources
</span><span class='line'>Recipe: @recipe_files::/root/chef-repo/hello.rb
</span><span class='line'>  * file<span class="o">[</span>/tmp/motd<span class="o">]</span> action create <span class="o">(</span>up to date<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Changing our recipe by replacing the word <code>world</code> with <code>chef</code>, we will find that the content of our file will be updated:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>chef-client --local-mode hello.rb
</span><span class='line'>..
</span><span class='line'>Converging <span class="m">1</span> resources
</span><span class='line'>Recipe: @recipe_files::/root/chef-repo/hello.rb
</span><span class='line'>  * file<span class="o">[</span>/tmp/motd<span class="o">]</span> action create
</span><span class='line'>    - update content in file /tmp/motd from b94d27 to c38c60
</span><span class='line'>    --- /tmp/motd       2017-09-04 16:18:19.265699403 +0000
</span><span class='line'>    +++ /tmp/.chef-motd20170904-4903-wuigr      2017-09-04 16:23:21.379649145 +0000
</span><span class='line'>    @@ -1,2 +1,2 @@
</span><span class='line'>    -hello world
</span><span class='line'>    +hello chef
</span></code></pre></td></tr></table></div></figure>


<p>Let&rsquo;s overwrite the content of our <code>motd</code> file manually:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s1">&#39;hello robots&#39;</span> &gt; /tmp/motd
</span></code></pre></td></tr></table></div></figure>


<p>Running Chef Client against our recipe again, allows Chef to restore our content to the desired state that is specified in our recipe:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>chef-client --local-mode hello.rb
</span><span class='line'>..
</span><span class='line'>Converging <span class="m">1</span> resources
</span><span class='line'>Recipe: @recipe_files::/root/chef-repo/hello.rb
</span><span class='line'>  * file<span class="o">[</span>/tmp/motd<span class="o">]</span> action create
</span><span class='line'>    - update content in file /tmp/motd from <span class="m">548078</span> to c38c60
</span><span class='line'>    --- /tmp/motd       2017-09-04 16:24:29.308286834 +0000
</span><span class='line'>    +++ /tmp/.chef-motd20170904-5103-z16ssa     2017-09-04 16:24:42.528021632 +0000
</span><span class='line'>    @@ -1,2 +1,2 @@
</span><span class='line'>    -hello robots
</span><span class='line'>    +hello chef
</span></code></pre></td></tr></table></div></figure>


<p>Deleting a file from our recipe:</p>

<figure class='code'><figcaption><span>destroy.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">file</span> <span class="s1">&#39;/tmp/motd&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">action</span> <span class="ss">:delete</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now using chef client to execute against this file will remove our file:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>chef-client --local-mode destroy.rb
</span><span class='line'>Recipe: @recipe_files::/root/chef-repo/destroy.rb
</span><span class='line'>  * file<span class="o">[</span>/tmp/motd<span class="o">]</span> action delete
</span><span class='line'>    - delete file /tmp/motd
</span></code></pre></td></tr></table></div></figure>


<h2>Resources:</h2>

<ul>
<li><a href="https://docs.chef.io/resource_file.html">https://docs.chef.io/resource_file.html</a></li>
<li><a href="https://docs.chef.io/recipes.html">https://docs.chef.io/recipes.html</a></li>
<li><a href="https://learn.chef.io">https://learn.chef.io</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Splitting Characters With Python to Determine Name Surname and Email Address]]></title>
    <link href="http://blog.ruanbekker.com/blog/2017/09/04/splitting-characters-with-python-to-determine-name-surname-and-email-address/"/>
    <updated>2017-09-04T09:22:42-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2017/09/04/splitting-characters-with-python-to-determine-name-surname-and-email-address</id>
    <content type="html"><![CDATA[<p>I had a bunch of email addresses that was set in a specific format that I can strip characters from, to build up a Username, Name and Surname from the Email Address, that I could use to for dynamic reporting.</p>

<h2>Using Split in Python</h2>

<p>Here I will define the value of <code>emailadress</code> to a string, then using Python&rsquo;s <code>split()</code> function to get the values that I want:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">emailaddress</span> <span class="o">=</span> <span class="s">&quot;ruan.bekker@domain.com&quot;</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">emailaddress</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&quot;@&quot;</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="s">&#39;ruan.bekker&#39;</span><span class="p">,</span> <span class="s">&#39;domain.com&#39;</span><span class="p">]</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">username</span> <span class="o">=</span> <span class="n">emailaddress</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&quot;@&quot;</span><span class="p">,</span> <span class="mi">1</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">username</span>
</span><span class='line'><span class="s">&#39;ruan.bekker&#39;</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">username</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&quot;.&quot;</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="s">&#39;ruan&#39;</span><span class="p">,</span> <span class="s">&#39;bekker&#39;</span><span class="p">]</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">name</span> <span class="o">=</span> <span class="n">username</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&quot;.&quot;</span><span class="p">,</span> <span class="mi">1</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">capitalize</span><span class="p">()</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">surname</span> <span class="o">=</span> <span class="n">username</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&quot;.&quot;</span><span class="p">,</span> <span class="mi">1</span><span class="p">)[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">capitalize</span><span class="p">()</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">name</span>
</span><span class='line'><span class="s">&#39;Ruan&#39;</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">surname</span>
</span><span class='line'><span class="s">&#39;Bekker&#39;</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">username</span>
</span><span class='line'><span class="s">&#39;ruan.bekker&#39;</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">emailaddress</span>
</span><span class='line'><span class="s">&#39;ruan.bekker@domain.com&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Print The Values in Question:</h2>

<p>Now that we have define our keys, let&rsquo;s print the values:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="s">&quot;Name: {0}, Surname: {1}, UserName: {2}, Email Address: {3}&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="n">surname</span><span class="p">,</span> <span class="n">username</span><span class="p">,</span> <span class="n">emailaddress</span><span class="p">))</span>
</span><span class='line'><span class="n">Name</span><span class="p">:</span> <span class="n">Ruan</span><span class="p">,</span> <span class="n">Surname</span><span class="p">:</span> <span class="n">Bekker</span><span class="p">,</span> <span class="n">UserName</span><span class="p">:</span> <span class="n">ruan</span><span class="o">.</span><span class="n">bekker</span><span class="p">,</span> <span class="n">Email</span> <span class="n">Address</span><span class="p">:</span> <span class="n">ruan</span><span class="o">.</span><span class="n">bekker</span><span class="nd">@domain.com</span>
</span></code></pre></td></tr></table></div></figure>


<p>From here on you can build up for example an email function that you can pass the values to your function to get a specific job done.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup a 3 Node MongoDB Replica Set on Ubuntu 16]]></title>
    <link href="http://blog.ruanbekker.com/blog/2017/09/02/setup-a-3-node-mongodb-replica-set-on-ubuntu-16/"/>
    <updated>2017-09-02T19:29:10-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2017/09/02/setup-a-3-node-mongodb-replica-set-on-ubuntu-16</id>
    <content type="html"><![CDATA[<p>Today we will setup a 3 Node Replica Set for MongoDB on Ubuntu 16. A Replica Set is a form of data replication, so that your data resides on more than one node for data durability. We will setup the 1st node as the primary node, the second as the secondary node and the 3rd node will act as an arbiter.</p>

<p>The arbiter node can almost be mentioned as a voter node, as it will be set in place to prevent split brain.</p>

<h2>Resources:</h2>

<ul>
<li><a href="https://eladnava.com/deploy-a-highly-available-mongodb-replica-set-on-aws/">https://eladnava.com/deploy-a-highly-available-mongodb-replica-set-on-aws/</a></li>
<li><a href="https://stackoverflow.com/questions/38524150/mongodb-replica-set-with-simple-password-authentication">https://stackoverflow.com/questions/38524150/mongodb-replica-set-with-simple-password-authentication</a> (auth)</li>
<li><a href="https://stackoverflow.com/questions/14789622/mongodb-keyfile-too-open-permissions">https://stackoverflow.com/questions/14789622/mongodb-keyfile-too-open-permissions</a></li>
</ul>


<h2>Installing MongoDB on our 3 Nodes:</h2>

<p>Our case, using Ubuntu 16.04, setting up our repository and installing mongodb from our repository:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 0C49F3730359A14518585931BC711F9BA15703C6
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s2">&quot;deb [ arch=amd64,arm64 ] http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.4 multiverse&quot;</span> <span class="p">|</span> sudo tee /etc/apt/sources.list.d/mongodb-org-3.4.list
</span><span class='line'><span class="nv">$ </span>apt update
</span><span class='line'><span class="nv">$ </span>apt install -y mongodb-org -y
</span></code></pre></td></tr></table></div></figure>


<p>Preparing our Directories:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mkdir -p /srv/mongodb/rs0-0 /srv/mongodb/rs0-1 /srv/mongodb/rs0-2
</span><span class='line'><span class="nv">$ </span>mkdir -p /var/log/mongodb/rs0-0 /var/log/mongodb/rs0-1 /var/log/mongodb/rs0-2
</span></code></pre></td></tr></table></div></figure>


<p>Populating our MongoDB Configuration:</p>

<ul>
<li>MongoDB Prefers XFS File Systems when using WiredTiger.</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cat &gt; /etc/mongod.conf <span class="s">&lt;&lt; EOF</span>
</span><span class='line'><span class="s">storage:</span>
</span><span class='line'><span class="s">  dbPath: /var/lib/mongodb</span>
</span><span class='line'><span class="s">  journal:</span>
</span><span class='line'><span class="s">    enabled: false</span>
</span><span class='line'>
</span><span class='line'><span class="s">storage:</span>
</span><span class='line'><span class="s">  mmapv1:</span>
</span><span class='line'><span class="s">    smallFiles: true</span>
</span><span class='line'>
</span><span class='line'><span class="s">systemLog:</span>
</span><span class='line'><span class="s">  destination: file</span>
</span><span class='line'><span class="s">  logAppend: true</span>
</span><span class='line'><span class="s">  path: /var/log/mongodb/mongod.log</span>
</span><span class='line'>
</span><span class='line'><span class="s">net:</span>
</span><span class='line'><span class="s">  port: 27017</span>
</span><span class='line'><span class="s">  bindIp: 0.0.0.0</span>
</span><span class='line'>
</span><span class='line'><span class="s">replication:</span>
</span><span class='line'><span class="s">  replSetName: rs0</span>
</span><span class='line'>
</span><span class='line'><span class="s">security:</span>
</span><span class='line'><span class="s">  authorization: enabled</span>
</span><span class='line'><span class="s">EOF</span>
</span></code></pre></td></tr></table></div></figure>


<p>Enable MongoDB On Startup and Start MongoDB:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>systemctl <span class="nb">enable </span>mongod
</span><span class='line'><span class="nv">$ </span>systemctl restart mongod
</span></code></pre></td></tr></table></div></figure>


<h2>Setup MongoDB Replica Sets:</h2>

<p>In our setup we will have 3 nodes: (mongodb-1, mongodb-2, mongodb3) From our Primary Node, connect to MongoDB and inititalize our replica set:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mongo
</span><span class='line'>MongoDB shell version v3.4.7
</span><span class='line'>connecting to: mongodb://127.0.0.1:27017
</span><span class='line'>MongoDB server version: 3.4.7
</span><span class='line'>&gt; rs.initiate<span class="o">()</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;info2&quot;</span> : <span class="s2">&quot;no configuration specified. Using a default configuration for the set&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;me&quot;</span> : <span class="s2">&quot;mysql-1:27017&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;ok&quot;</span> : 1
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Next, add our 2 other MongoDB Nodes, remember <code>mongodb-3</code> is our arbiter node:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rs0:SECONDARY&gt; rs.add<span class="o">(</span><span class="s2">&quot;mongodb-2&quot;</span><span class="o">)</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;ok&quot;</span> : <span class="m">1</span> <span class="o">}</span>
</span><span class='line'>rs0:PRIMARY&gt; rs.add<span class="o">(</span><span class="s2">&quot;mongodb-3&quot;</span>, <span class="nb">true</span><span class="o">)</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;ok&quot;</span> : <span class="m">1</span> <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Verify the Replica Set Status:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rs0:PRIMARY&gt; rs.status<span class="o">()</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;set&quot;</span> <span class="p">:</span> <span class="s2">&quot;rs0&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;date&quot;</span> <span class="p">:</span> <span class="err">ISODate(</span><span class="s2">&quot;2017-08-27T13:17:42.469Z&quot;</span><span class="err">)</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;myState&quot;</span> <span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;term&quot;</span> <span class="p">:</span> <span class="err">NumberLong(</span><span class="mi">1</span><span class="err">)</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;heartbeatIntervalMillis&quot;</span> <span class="p">:</span> <span class="err">NumberLong(</span><span class="mi">2000</span><span class="err">)</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;optimes&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                <span class="nt">&quot;lastCommittedOpTime&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                        <span class="nt">&quot;ts&quot;</span> <span class="p">:</span> <span class="err">Timestamp(</span><span class="mi">0</span><span class="p">,</span> <span class="err">0),</span>
</span><span class='line'>                        <span class="nt">&quot;t&quot;</span> <span class="p">:</span> <span class="err">NumberLong(</span><span class="mi">-1</span><span class="err">)</span>
</span><span class='line'>                <span class="p">},</span>
</span><span class='line'>                <span class="nt">&quot;appliedOpTime&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                        <span class="nt">&quot;ts&quot;</span> <span class="p">:</span> <span class="err">Timestamp(</span><span class="mi">1503839853</span><span class="p">,</span> <span class="err">1),</span>
</span><span class='line'>                        <span class="nt">&quot;t&quot;</span> <span class="p">:</span> <span class="err">NumberLong(</span><span class="mi">1</span><span class="err">)</span>
</span><span class='line'>                <span class="p">},</span>
</span><span class='line'>                <span class="nt">&quot;durableOpTime&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                        <span class="nt">&quot;ts&quot;</span> <span class="p">:</span> <span class="err">Timestamp(</span><span class="mi">1503839722</span><span class="p">,</span> <span class="err">1),</span>
</span><span class='line'>                        <span class="nt">&quot;t&quot;</span> <span class="p">:</span> <span class="err">NumberLong(</span><span class="mi">-1</span><span class="err">)</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nt">&quot;members&quot;</span> <span class="p">:</span> <span class="p">[</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                        <span class="nt">&quot;_id&quot;</span> <span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                        <span class="nt">&quot;name&quot;</span> <span class="p">:</span> <span class="s2">&quot;mysql-1:27017&quot;</span><span class="p">,</span>
</span><span class='line'>                        <span class="nt">&quot;health&quot;</span> <span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>                        <span class="nt">&quot;state&quot;</span> <span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>                        <span class="nt">&quot;stateStr&quot;</span> <span class="p">:</span> <span class="s2">&quot;PRIMARY&quot;</span><span class="p">,</span>
</span><span class='line'>                        <span class="nt">&quot;uptime&quot;</span> <span class="p">:</span> <span class="mi">422</span><span class="p">,</span>
</span><span class='line'>                        <span class="nt">&quot;optime&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                                <span class="nt">&quot;ts&quot;</span> <span class="p">:</span> <span class="err">Timestamp(</span><span class="mi">1503839853</span><span class="p">,</span> <span class="err">1),</span>
</span><span class='line'>                                <span class="nt">&quot;t&quot;</span> <span class="p">:</span> <span class="err">NumberLong(</span><span class="mi">1</span><span class="err">)</span>
</span><span class='line'>                        <span class="p">},</span>
</span><span class='line'>                        <span class="nt">&quot;optimeDate&quot;</span> <span class="p">:</span> <span class="err">ISODate(</span><span class="s2">&quot;2017-08-27T13:17:33Z&quot;</span><span class="err">)</span><span class="p">,</span>
</span><span class='line'>                        <span class="nt">&quot;electionTime&quot;</span> <span class="p">:</span> <span class="err">Timestamp(</span><span class="mi">1503839723</span><span class="p">,</span> <span class="err">1),</span>
</span><span class='line'>                        <span class="nt">&quot;electionDate&quot;</span> <span class="p">:</span> <span class="err">ISODate(</span><span class="s2">&quot;2017-08-27T13:15:23Z&quot;</span><span class="err">)</span><span class="p">,</span>
</span><span class='line'>                        <span class="nt">&quot;configVersion&quot;</span> <span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
</span><span class='line'>                        <span class="nt">&quot;self&quot;</span> <span class="p">:</span> <span class="kc">true</span>
</span><span class='line'>                <span class="p">},</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                        <span class="nt">&quot;_id&quot;</span> <span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>                        <span class="nt">&quot;name&quot;</span> <span class="p">:</span> <span class="s2">&quot;mongodb-2:27017&quot;</span><span class="p">,</span>
</span><span class='line'>                        <span class="nt">&quot;health&quot;</span> <span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>                        <span class="nt">&quot;state&quot;</span> <span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
</span><span class='line'>                        <span class="nt">&quot;stateStr&quot;</span> <span class="p">:</span> <span class="s2">&quot;SECONDARY&quot;</span><span class="p">,</span>
</span><span class='line'>                        <span class="nt">&quot;uptime&quot;</span> <span class="p">:</span> <span class="mi">28</span><span class="p">,</span>
</span><span class='line'>                        <span class="nt">&quot;optime&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                                <span class="nt">&quot;ts&quot;</span> <span class="p">:</span> <span class="err">Timestamp(</span><span class="mi">1503839853</span><span class="p">,</span> <span class="err">1),</span>
</span><span class='line'>                                <span class="nt">&quot;t&quot;</span> <span class="p">:</span> <span class="err">NumberLong(</span><span class="mi">1</span><span class="err">)</span>
</span><span class='line'>                        <span class="p">},</span>
</span><span class='line'>                        <span class="nt">&quot;optimeDurable&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                                <span class="nt">&quot;ts&quot;</span> <span class="p">:</span> <span class="err">Timestamp(</span><span class="mi">0</span><span class="p">,</span> <span class="err">0),</span>
</span><span class='line'>                                <span class="nt">&quot;t&quot;</span> <span class="p">:</span> <span class="err">NumberLong(</span><span class="mi">-1</span><span class="err">)</span>
</span><span class='line'>                        <span class="p">},</span>
</span><span class='line'>                        <span class="nt">&quot;optimeDate&quot;</span> <span class="p">:</span> <span class="err">ISODate(</span><span class="s2">&quot;2017-08-27T13:17:33Z&quot;</span><span class="err">)</span><span class="p">,</span>
</span><span class='line'>                        <span class="nt">&quot;optimeDurableDate&quot;</span> <span class="p">:</span> <span class="err">ISODate(</span><span class="s2">&quot;1970-01-01T00:00:00Z&quot;</span><span class="err">)</span><span class="p">,</span>
</span><span class='line'>                        <span class="nt">&quot;lastHeartbeat&quot;</span> <span class="p">:</span> <span class="err">ISODate(</span><span class="s2">&quot;2017-08-27T13:17:41.707Z&quot;</span><span class="err">)</span><span class="p">,</span>
</span><span class='line'>                        <span class="nt">&quot;lastHeartbeatRecv&quot;</span> <span class="p">:</span> <span class="err">ISODate(</span><span class="s2">&quot;2017-08-27T13:17:40.699Z&quot;</span><span class="err">)</span><span class="p">,</span>
</span><span class='line'>                        <span class="nt">&quot;pingMs&quot;</span> <span class="p">:</span> <span class="err">NumberLong(</span><span class="mi">4</span><span class="err">)</span><span class="p">,</span>
</span><span class='line'>                        <span class="nt">&quot;syncingTo&quot;</span> <span class="p">:</span> <span class="s2">&quot;mysql-1:27017&quot;</span><span class="p">,</span>
</span><span class='line'>                        <span class="nt">&quot;configVersion&quot;</span> <span class="p">:</span> <span class="mi">3</span>
</span><span class='line'>                <span class="p">},</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                        <span class="nt">&quot;_id&quot;</span> <span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
</span><span class='line'>                        <span class="nt">&quot;name&quot;</span> <span class="p">:</span> <span class="s2">&quot;mongodb-3:27017&quot;</span><span class="p">,</span>
</span><span class='line'>                        <span class="nt">&quot;health&quot;</span> <span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>                        <span class="nt">&quot;state&quot;</span> <span class="p">:</span> <span class="mi">7</span><span class="p">,</span>
</span><span class='line'>                        <span class="nt">&quot;stateStr&quot;</span> <span class="p">:</span> <span class="s2">&quot;ARBITER&quot;</span><span class="p">,</span>
</span><span class='line'>                        <span class="nt">&quot;uptime&quot;</span> <span class="p">:</span> <span class="mi">8</span><span class="p">,</span>
</span><span class='line'>                        <span class="nt">&quot;lastHeartbeat&quot;</span> <span class="p">:</span> <span class="err">ISODate(</span><span class="s2">&quot;2017-08-27T13:17:41.721Z&quot;</span><span class="err">)</span><span class="p">,</span>
</span><span class='line'>                        <span class="nt">&quot;lastHeartbeatRecv&quot;</span> <span class="p">:</span> <span class="err">ISODate(</span><span class="s2">&quot;2017-08-27T13:17:38.749Z&quot;</span><span class="err">)</span><span class="p">,</span>
</span><span class='line'>                        <span class="nt">&quot;pingMs&quot;</span> <span class="p">:</span> <span class="err">NumberLong(</span><span class="mi">2</span><span class="err">)</span><span class="p">,</span>
</span><span class='line'>                        <span class="nt">&quot;configVersion&quot;</span> <span class="p">:</span> <span class="mi">3</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>        <span class="p">],</span>
</span><span class='line'>        <span class="nt">&quot;ok&quot;</span> <span class="p">:</span> <span class="mi">1</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="err">rs</span><span class="mi">0</span><span class="err">:PRIMARY&gt;</span> <span class="err">exit</span>
</span><span class='line'><span class="err">bye</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Setup Auth:</h2>

<p>Setup Authentication on our MongoDB Database, we will create the user <code>adminuser</code> and setup the password to <code>secret</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rs0:PRIMARY&gt; use admin
</span><span class='line'>switched to db admin
</span><span class='line'>
</span><span class='line'>rs0:PRIMARY&gt; db.createUser<span class="o">({</span>user: <span class="s2">&quot;adminuser&quot;</span>, <span class="nb">pwd</span>: <span class="s2">&quot;secret&quot;</span>, roles:<span class="o">[{</span>role: <span class="s2">&quot;root&quot;</span>, db: <span class="s2">&quot;admin&quot;</span><span class="o">}]})</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="err">Successfully</span> <span class="err">added</span> <span class="err">user:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;user&quot;</span> <span class="p">:</span> <span class="s2">&quot;adminuser&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;roles&quot;</span> <span class="p">:</span> <span class="p">[</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                        <span class="nt">&quot;role&quot;</span> <span class="p">:</span> <span class="s2">&quot;root&quot;</span><span class="p">,</span>
</span><span class='line'>                        <span class="nt">&quot;db&quot;</span> <span class="p">:</span> <span class="s2">&quot;admin&quot;</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>        <span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="err">rs</span><span class="mi">0</span><span class="err">:PRIMARY&gt;</span> <span class="err">exit</span>
</span></code></pre></td></tr></table></div></figure>


<p>Restart MongoDB:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>systemctl restart mongod
</span></code></pre></td></tr></table></div></figure>


<h2>Connect and Authenticate against MongoDB:</h2>

<p>Connect to your MongoDB Cluster with auth:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mongo --host mongodb.example.com --port <span class="m">27017</span> -u &lt;username&gt; -p --authenticationDatabase admin
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup HAProxy Load Balancer for MySQL Galera With IP Whitelisting and Backup Servers]]></title>
    <link href="http://blog.ruanbekker.com/blog/2017/08/31/setup-haproxy-load-balancer-for-mysql-galera-with-ip-whitelisting-and-backup-servers/"/>
    <updated>2017-08-31T19:15:50-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2017/08/31/setup-haproxy-load-balancer-for-mysql-galera-with-ip-whitelisting-and-backup-servers</id>
    <content type="html"><![CDATA[<p>Today we will setup a HAProxy Service for our 3 Node MySQL Galera Cluster</p>

<h2>Our Setup:</h2>

<ul>
<li>3 Node Galera MySQL Cluster</li>
<li>3 HAProxy Services (Each HAProxy Service Running on the MySQL Nodes)</li>
<li>MySQL Listens on Port 3307</li>
<li>HAProxy Listens on Port 3306 and Proxies through to 3307</li>
</ul>


<p>I have setup HAProxy on the same node as the MySQL Servers for my use case, but you can also setup HAProxy on a node outside the MySQL Host.</p>

<p>So essentially our MySQL Galera Cluster is a Multi Master Setup, but for now we will only accept connections from Node-A, and have Node-B and Node-C as Backup servers. Should Node-A go down, HAProxy will route connections to Node-B, and if Node-B also goes down, connections will be routed to Node-C.</p>

<p>If the Primary Node, which is Node-A recovers, connections will be restored to Node-A.</p>

<h2>Security:</h2>

<p>We use iptables to allow traffic between the nodes for port TCP/3307 and allow all traffic for Port TCP/3306, as HAProxy will allow the IP Based Access:</p>

<figure class='code'><figcaption><span>Iptables for Each Node</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>iptables -I INPUT -s <span class="o">{</span>Node-A<span class="o">}</span> -p tcp --dport <span class="m">3307</span> -j ACCEPT
</span><span class='line'><span class="nv">$ </span>iptables -I INPUT -s <span class="o">{</span>Node-B<span class="o">}</span> -p tcp --dport <span class="m">3307</span> -j ACCEPT
</span><span class='line'><span class="nv">$ </span>iptables -I INPUT -s <span class="o">{</span>Node-C<span class="o">}</span> -p tcp --dport <span class="m">3307</span> -j ACCEPT
</span><span class='line'><span class="nv">$ </span>iptables -A INPUT -p tcp --dport <span class="m">3306</span> -j ACCEPT
</span><span class='line'><span class="nv">$ </span>iptables -A INPUT -p tcp --dport <span class="m">3307</span> -j DROP
</span></code></pre></td></tr></table></div></figure>


<h2>HAProxy:</h2>

<p>Installing HAProxy on Ubuntu:</p>

<figure class='code'><figcaption><span>Install HAProxy</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo apt update
</span><span class='line'><span class="nv">$ </span>sudo apt install haproxy -y
</span></code></pre></td></tr></table></div></figure>


<p>Configure HAProxy with a Port 3306 listener, specify your source addresses that you would like to be authorized to communicate with MySQL and then specify the servers to proxy the connections to our MySQL Galera Cluster, specifying 2 backup servers:</p>

<figure class='code'><figcaption><span>/etc/haproxy/haproxy.cfg</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>global
</span><span class='line'>  log         127.0.0.1 local2
</span><span class='line'>  chroot      /var/lib/haproxy
</span><span class='line'>  pidfile     /var/run/haproxy.pid
</span><span class='line'>  maxconn     1020
</span><span class='line'>  user        haproxy
</span><span class='line'>  group       haproxy
</span><span class='line'>  daemon
</span><span class='line'>
</span><span class='line'>  stats socket /var/lib/haproxy/stats.sock mode <span class="m">600</span> level admin
</span><span class='line'>  stats timeout 2m
</span><span class='line'>
</span><span class='line'>defaults
</span><span class='line'>  mode    tcp
</span><span class='line'>  log     global
</span><span class='line'>  option  dontlognull
</span><span class='line'>  option  redispatch
</span><span class='line'>  retries                   3
</span><span class='line'>  timeout queue             45s
</span><span class='line'>  timeout connect           5s
</span><span class='line'>  timeout client            1m
</span><span class='line'>  timeout server            1m
</span><span class='line'>  timeout check             10s
</span><span class='line'>  maxconn                   1020
</span><span class='line'>
</span><span class='line'>listen stats
</span><span class='line'>  <span class="nb">bind</span>    *:80
</span><span class='line'>  mode    http
</span><span class='line'>  stats   <span class="nb">enable</span>
</span><span class='line'><span class="nb">  </span>stats   show-legends
</span><span class='line'>  stats   refresh           5s
</span><span class='line'>  stats   uri               /
</span><span class='line'>  stats   realm             Haproxy<span class="se">\ </span>Statistics
</span><span class='line'>  stats   auth              admin:secret
</span><span class='line'>  stats   admin             <span class="k">if</span> TRUE
</span><span class='line'>
</span><span class='line'>listen galera-lb
</span><span class='line'>  <span class="nb">bind</span>    *:3306
</span><span class='line'>  mode    tcp
</span><span class='line'>  acl     network_allowed src 10.10.1.0/24 10.32.15.2/32
</span><span class='line'>  tcp-request               content accept <span class="k">if</span> network_allowed
</span><span class='line'>  tcp-request               content reject
</span><span class='line'>  default_backend           galera-cluster
</span><span class='line'>
</span><span class='line'>backend galera-cluster
</span><span class='line'>  balance roundrobin
</span><span class='line'>  server  scw-mysql-1 10.0.0.2:3307  check
</span><span class='line'>  server  scw-mysql-2 10.0.0.3:3307  check backup
</span><span class='line'>  server  scw-mysql-3 10.0.0.4:3307  check backup
</span></code></pre></td></tr></table></div></figure>


<p>Start HAProxy:</p>

<figure class='code'><figcaption><span>Start HAProxy Service</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo systemctl <span class="nb">enable </span>haproxy
</span><span class='line'><span class="nv">$ </span>sudo systemctl restart haproxy
</span></code></pre></td></tr></table></div></figure>


<h2>Authorize HAProxy Hostnames to Connect to MySQL:</h2>

<p>In this case we need to allow the Hostnames to be able to connect to mysql:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">GRANT</span> <span class="k">ALL</span> <span class="k">PRIVILEGES</span> <span class="k">ON</span> <span class="o">*</span><span class="p">.</span><span class="o">*</span> <span class="k">TO</span> <span class="s1">&#39;root&#39;</span><span class="o">@</span><span class="s1">&#39;%&#39;</span> <span class="n">IDENTIFIED</span> <span class="k">BY</span> <span class="s1">&#39;secrets&#39;</span> <span class="k">WITH</span> <span class="k">GRANT</span> <span class="k">OPTION</span><span class="p">;</span>
</span><span class='line'><span class="n">mysql</span><span class="o">&gt;</span> <span class="n">FLUSH</span> <span class="k">PRIVILEGES</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Resources:</h2>

<ul>
<li><a href="https://raymii.org/s/snippets/haproxy_restrict_specific_urls_to_specific_ip_addresses.html">https://raymii.org/s/snippets/haproxy_restrict_specific_urls_to_specific_ip_addresses.html</a></li>
</ul>


<center>
        <script type='text/javascript' src='https://ko-fi.com/widgets/widget_2.js'></script><script type='text/javascript'>kofiwidget2.init('Buy Me a Coffee', '#46b798', 'A6423ZIQ');kofiwidget2.draw();</script>
</center>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Secure Your Access to Kibana 5 and Elasticsearch 5 With Nginx for AWS]]></title>
    <link href="http://blog.ruanbekker.com/blog/2017/08/31/secure-your-access-to-kibana-5-and-elasticsearch-5-with-nginx-for-aws/"/>
    <updated>2017-08-31T10:40:09-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2017/08/31/secure-your-access-to-kibana-5-and-elasticsearch-5-with-nginx-for-aws</id>
    <content type="html"><![CDATA[<p>As until now, AWS does not offer VPC Support for Elasticsearch, so this make things a bit difficult authorizing Private IP Ranges.</p>

<p>One workaround would be to setup a Nginx Reverse Proxy on AWS within the your Private VPC, associate a EIP on your Nginx EC2 Instance, then authorize your EIP on your Elasticsearch IP Access Policy.</p>

<h2>Our Setup:</h2>

<p>In this setup, we will have an Internal ELB (Elastic Load Balancer), which we will associate 1 or more EC2 Nginx Instances behind the ELB, then setup our Nginx to Revere Proxy our connections through to our Elasticsearch Endpoint.</p>

<p>We will also setup Basic HTTP Authentication for our <code>/</code> elasticsearch endpoint, and our <code>/kibana</code> endpoint. But we will keep the authentication seperate from each other, so that credentials for ES and Kibana is not the same, but depending on your use case, you can allow both endpoints to reference the same credential file.</p>

<h2>Install Nginx</h2>

<p>Depending on your Linux Distribution, the package manager may differ, I am using Amazon Linux:</p>

<figure class='code'><figcaption><span>Install Nginx</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo yum update -y
</span><span class='line'><span class="nv">$ </span>sudo yum install nginx httpd-tools -y
</span></code></pre></td></tr></table></div></figure>


<h2>Configure Nginx:</h2>

<p>Remove the default configuration and replace the <code>nginx.conf</code> with the following:</p>

<figure class='code'><figcaption><span>Remove Default Nginx Config</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo rm -r /etc/nginx/nginx.conf
</span></code></pre></td></tr></table></div></figure>


<p>Main Nginx Configuration:</p>

<figure class='code'><figcaption><span>/etc/nginx/nginx.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>user nginx<span class="p">;</span>
</span><span class='line'>worker_processes auto<span class="p">;</span>
</span><span class='line'>pid /run/nginx.pid<span class="p">;</span>
</span><span class='line'>error_log /var/log/nginx/error.log<span class="p">;</span>
</span><span class='line'>
</span><span class='line'>events <span class="o">{</span>
</span><span class='line'>  worker_connections 1024<span class="p">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>http <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="c"># Basic Settings</span>
</span><span class='line'>  sendfile on<span class="p">;</span>
</span><span class='line'>  tcp_nopush on<span class="p">;</span>
</span><span class='line'>  tcp_nodelay on<span class="p">;</span>
</span><span class='line'>  keepalive_timeout 65<span class="p">;</span>
</span><span class='line'>  types_hash_max_size 2048<span class="p">;</span>
</span><span class='line'>  server_names_hash_bucket_size 128<span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  include /etc/nginx/mime.types<span class="p">;</span>
</span><span class='line'>  default_type application/octet-stream<span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c"># Logging Settings</span>
</span><span class='line'>        log_format  main  <span class="s1">&#39;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#39;</span>
</span><span class='line'>                      <span class="s1">&#39;$status $body_bytes_sent &quot;$http_referer&quot; &#39;</span>
</span><span class='line'>                      <span class="s1">&#39;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  access_log /var/log/nginx/access.log main<span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c"># Gzip Settings</span>
</span><span class='line'>  gzip on<span class="p">;</span>
</span><span class='line'>  gzip_disable <span class="s2">&quot;msie6&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c"># Elasticsearch Config</span>
</span><span class='line'>  include /etc/nginx/conf.d/elasticsearch.conf<span class="p">;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The Reverse Proxy Configuration:</p>

<figure class='code'><figcaption><span>/etc/nginx/conf.d/elasticsearch.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>server <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  listen 80<span class="p">;</span>
</span><span class='line'>  server_name elk.mydomain.com<span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c"># error logging</span>
</span><span class='line'>  error_log /var/log/nginx/elasticsearch_error.log<span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c"># authentication: server wide</span>
</span><span class='line'>  <span class="c">#auth_basic &quot;Auth&quot;;</span>
</span><span class='line'>  <span class="c">#auth_basic_user_file /etc/nginx/.secrets;</span>
</span><span class='line'>
</span><span class='line'>  location / <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="c"># authentication: elasticsearch</span>
</span><span class='line'>    auth_basic <span class="s2">&quot;Elasticsearch Auth&quot;</span><span class="p">;</span>
</span><span class='line'>    auth_basic_user_file /etc/nginx/.secrets_elasticsearch<span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    proxy_http_version 1.1<span class="p">;</span>
</span><span class='line'>    proxy_set_header Host https://search.eu-west-1.es.amazonaws.com<span class="p">;</span>
</span><span class='line'>    proxy_set_header X-Real-IP <span class="o">{</span>NGINX-EIP<span class="o">}</span><span class="p">;</span>
</span><span class='line'>    proxy_set_header Connection <span class="s2">&quot;Keep-Alive&quot;</span><span class="p">;</span>
</span><span class='line'>    proxy_set_header Proxy-Connection <span class="s2">&quot;Keep-Alive&quot;</span><span class="p">;</span>
</span><span class='line'>    proxy_set_header Authorization <span class="s2">&quot;&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    proxy_pass https://search.eu-west-1.es.amazonaws.com/<span class="p">;</span>
</span><span class='line'>    proxy_redirect https://search.eu-west-1.es.amazonaws.com/ http://<span class="o">{</span>NGINX-EIP<span class="o">}</span>/<span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  location /kibana <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="c"># authentication: kibana</span>
</span><span class='line'>    auth_basic <span class="s2">&quot;Kibana Auth&quot;</span><span class="p">;</span>
</span><span class='line'>    auth_basic_user_file /etc/nginx/.secrets_kibana<span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    proxy_http_version 1.1<span class="p">;</span>
</span><span class='line'>    proxy_set_header Host https://search.eu-west-1.es.amazonaws.com<span class="p">;</span>
</span><span class='line'>    proxy_set_header X-Real-IP <span class="o">{</span>NGINX-EIP<span class="o">}</span><span class="p">;</span>
</span><span class='line'>    proxy_set_header Connection <span class="s2">&quot;Keep-Alive&quot;</span><span class="p">;</span>
</span><span class='line'>    proxy_set_header Proxy-Connection <span class="s2">&quot;Keep-Alive&quot;</span><span class="p">;</span>
</span><span class='line'>    proxy_set_header Authorization <span class="s2">&quot;&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    proxy_pass https://search.eu-west-1.es.amazonaws.com/_plugin/kibana/<span class="p">;</span>
</span><span class='line'>    proxy_redirect https://search.eu-west-1.es.amazonaws.com/_plugin/kibana/ http://<span class="o">{</span>NGINX_EIP<span class="o">}</span>/kibana/<span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c"># elb checks</span>
</span><span class='line'>  location /status <span class="o">{</span>
</span><span class='line'>    root /usr/share/nginx/html/<span class="p">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Setup Authentication:</h2>

<p>Setup the authentication for elasticsearch and kibana:</p>

<figure class='code'><figcaption><span>Create Auth for Kibana and Elasticsearch</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo htpasswd -c /etc/nginx/.secrets_elasticsearch admin
</span><span class='line'><span class="nv">$ </span>sudo htpasswd -c /etc/nginx/.secrets_kibana admin
</span></code></pre></td></tr></table></div></figure>


<h2>Restart Nginx and Enable on Startup</h2>

<p>Restart the nginx process and enable the process on boot:</p>

<figure class='code'><figcaption><span>Restart Nginx</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo /etc/init.d/nginx restart
</span><span class='line'><span class="nv">$ </span>sudo chkconfig nginx on
</span></code></pre></td></tr></table></div></figure>


<h2>Configure ELB:</h2>

<p>Create a New Internal ELB, set the Backend Instances on Port 80, and the healthcheck should point to <code>/status/index.html</code> as this location block does not require authentication and our ELB will be able to get a 200 reponse if all is good.
Next you can configure your Route 53 Hosted Zone, <code>elk.mydomain.com</code> to map to your ELB.</p>

<h2>End Result</h2>

<p>Now you should be able to access Elasticsearch on <code>http://elk.mydomain.com/</code> and Kibana on <code>http://elk.mydomain.com/kibana</code> after authenticating.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Reference Credentials Outside Your Main Application in Python]]></title>
    <link href="http://blog.ruanbekker.com/blog/2017/08/31/reference-credentials-outside-your-main-application-in-python/"/>
    <updated>2017-08-31T03:00:58-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2017/08/31/reference-credentials-outside-your-main-application-in-python</id>
    <content type="html"><![CDATA[<p>In this post I will show one way of referencing credentials from your application in Python, without setting them in your applications code. We will create a seperate python file which will hold our credentials, and then call them from our main application.</p>

<h2>Our Main Application</h2>

<p>This app will print our username, just for the sake of this example:</p>

<figure class='code'><figcaption><span>app.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">config</span> <span class="kn">import</span> <span class="n">credentials</span> <span class="k">as</span> <span class="n">secrets</span>
</span><span class='line'>
</span><span class='line'><span class="n">my_username</span> <span class="o">=</span> <span class="n">secrets</span><span class="p">[</span><span class="s">&#39;APP1&#39;</span><span class="p">][</span><span class="s">&#39;username&#39;</span><span class="p">]</span>
</span><span class='line'><span class="n">my_password</span> <span class="o">=</span> <span class="n">secrets</span><span class="p">[</span><span class="s">&#39;APP1&#39;</span><span class="p">][</span><span class="s">&#39;password&#39;</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="s">&quot;Hello, your username is: {username}&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">username</span><span class="o">=</span><span class="n">my_username</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Our Credentials File</h2>

<p>Then we have our file which will hold our credentials:</p>

<figure class='code'><figcaption><span>config.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">credentials</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&#39;APP1&#39;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&#39;username&#39;</span><span class="p">:</span> <span class="s">&#39;foo&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&#39;password&#39;</span><span class="p">:</span> <span class="s">&#39;bar&#39;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>That is at least one way of doing it, you could also use environment variables using the <code>os</code> module, which is described <a href="https://stackoverflow.com/a/4907053">here</a></p>

<h2>References:</h2>

<ul>
<li><a href="https://docs.python.org/2/tutorial/inputoutput.html">https://docs.python.org/2/tutorial/inputoutput.html</a></li>
<li><a href="https://docs.python.org/2/library/os.html#os.environ">https://docs.python.org/2/library/os.html#os.environ</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Change IAM Username With AWS CLI]]></title>
    <link href="http://blog.ruanbekker.com/blog/2017/08/28/change-iam-username-with-aws-cli/"/>
    <updated>2017-08-28T18:27:21-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2017/08/28/change-iam-username-with-aws-cli</id>
    <content type="html"><![CDATA[<p>You may find yourself in a position where you need to rename more than one IAM Username, and one way of doing this is using the AWS CLI tools to rename the username.</p>

<p>The benefit of this is that the user&rsquo;s access keys remains the same, any policies associated to the user, will stay on the user after the username gets renamed.</p>

<p>The only thing that changes, is ofcourse the username that the user will use when logging onto the AWS Management Console:</p>

<h2>Details of our User:</h2>

<p>We will change the IAM User <code>peter</code> to <code>peter.franklin</code>. Currently Peter&rsquo;s ACCESS_KEY will be <code>AKIA123456ABCDEF1234</code> which is configured with the profile name <code>peter</code>.</p>

<p>Lets first get details of our user before changing it:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>aws --profile admin iam get-user --user-name peter
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;User&quot;</span>: <span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;UserName&quot;</span>: <span class="s2">&quot;peter&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;PasswordLastUsed&quot;</span>: <span class="s2">&quot;2017-08-28T13:17:22Z&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;CreateDate&quot;</span>: <span class="s2">&quot;2017-08-28T13:11:25Z&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;UserId&quot;</span>: <span class="s2">&quot;ABCDEFGHIJKLMNOPQRST&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;Path&quot;</span>: <span class="s2">&quot;/&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;Arn&quot;</span>: <span class="s2">&quot;arn:aws:iam::123456789012:user/peter&quot;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Rename the IAM User</h2>

<p>Update user peter to peter.franklin:</p>

<figure class='code'><figcaption><span>Rename the IAM User</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>aws --profile aws iam update-user --user-name peter --new-user-name peter.franklin
</span></code></pre></td></tr></table></div></figure>


<p>Describe peter&rsquo;s new username:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>aws --profile aws iam get-user --user-name peter.franklin
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;User&quot;</span>: <span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;UserName&quot;</span>: <span class="s2">&quot;peter.franklin&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;PasswordLastUsed&quot;</span>: <span class="s2">&quot;2017-08-28T13:23:18Z&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;CreateDate&quot;</span>: <span class="s2">&quot;2017-08-28T13:11:25Z&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;UserId&quot;</span>: <span class="s2">&quot;ABCDEFGHIJKLNMOPQRST&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;Path&quot;</span>: <span class="s2">&quot;/&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;Arn&quot;</span>: <span class="s2">&quot;arn:aws:iam::123456789012:user/peter.franklin&quot;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Verify that access keys are the same:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>aws --profile aws iam list-access-keys --user-name peter.franklin
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;AccessKeyMetadata&quot;</span>: <span class="o">[</span>
</span><span class='line'>        <span class="o">{</span>
</span><span class='line'>            <span class="s2">&quot;UserName&quot;</span>: <span class="s2">&quot;peter.franklin&quot;</span>,
</span><span class='line'>            <span class="s2">&quot;Status&quot;</span>: <span class="s2">&quot;Active&quot;</span>,
</span><span class='line'>            <span class="s2">&quot;CreateDate&quot;</span>: <span class="s2">&quot;2017-08-28T13:11:27Z&quot;</span>,
</span><span class='line'>            <span class="s2">&quot;AccessKeyId&quot;</span>: <span class="s2">&quot;AKIA123456ABCDEF1234&quot;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">]</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>At this momemnt we can see that Peter&rsquo;s AccessKeyId is still the same, which means he does not have to update his credentials on his end.</p>

<h2>Some Useful CLI Commands:</h2>

<p>Get only the Access Key for a User:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>aws --profile admin iam list-access-keys --user-name peter.franklin <span class="p">|</span> jq -r <span class="s1">&#39;.[][].AccessKeyId&#39;</span>
</span><span class='line'>AKIA123456ABCDEF1234
</span></code></pre></td></tr></table></div></figure>


<h2>Determine when the AccessKey was last used, and for which Service:</h2>

<p>For auditing, or verifying if a AccessKeyId is being used, we can call the <code>get-access-key-last-used</code>, which will give us the last time the key was used, and also see for which service in question.</p>

<p>Let Peter create a DynamoDB Table:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>aws --profile peter dynamodb <span class="se">\</span>
</span><span class='line'>create-table --table-name test01 <span class="se">\</span>
</span><span class='line'>--attribute-definitions <span class="s2">&quot;AttributeName=username,AttributeType=S&quot;</span> <span class="se">\</span>
</span><span class='line'>--key-schema <span class="s2">&quot;AttributeName=username,KeyType=HASH&quot;</span> <span class="se">\</span>
</span><span class='line'>--provisioned-throughput <span class="s2">&quot;ReadCapacityUnits=1,WriteCapacityUnits=1&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;TableDescription&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;TableArn&quot;</span><span class="p">:</span> <span class="s2">&quot;arn:aws:dynamodb:eu-west-1:123456789012:table/test01&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;AttributeDefinitions&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="nt">&quot;AttributeName&quot;</span><span class="p">:</span> <span class="s2">&quot;username&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="nt">&quot;AttributeType&quot;</span><span class="p">:</span> <span class="s2">&quot;S&quot;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">],</span>
</span><span class='line'>        <span class="nt">&quot;ProvisionedThroughput&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="nt">&quot;NumberOfDecreasesToday&quot;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;WriteCapacityUnits&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;ReadCapacityUnits&quot;</span><span class="p">:</span> <span class="mi">1</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nt">&quot;TableSizeBytes&quot;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;TableName&quot;</span><span class="p">:</span> <span class="s2">&quot;test01&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;TableStatus&quot;</span><span class="p">:</span> <span class="s2">&quot;CREATING&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;KeySchema&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="nt">&quot;KeyType&quot;</span><span class="p">:</span> <span class="s2">&quot;HASH&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="nt">&quot;AttributeName&quot;</span><span class="p">:</span> <span class="s2">&quot;username&quot;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">],</span>
</span><span class='line'>        <span class="nt">&quot;ItemCount&quot;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;CreationDateTime&quot;</span><span class="p">:</span> <span class="mf">1503928537.671</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Get Detail on LastUsedDate:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>aws --profile admin iam get-access-key-last-used  --access-key <span class="k">$(</span>aws --profile aws iam list-access-keys --user-name peter.franklin <span class="p">|</span> jq -r <span class="s1">&#39;.[][].AccessKeyId&#39;</span><span class="k">)</span> <span class="p">|</span> jq -r <span class="s1">&#39;.[]&#39;</span>
</span><span class='line'>peter.franklin
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;Region&quot;</span>: <span class="s2">&quot;eu-west-1&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;ServiceName&quot;</span>: <span class="s2">&quot;dynamodb&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;LastUsedDate&quot;</span>: <span class="s2">&quot;2017-08-28T13:55:00Z&quot;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Only getting the LastUsedDate of the AccessKeyId:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>aws --profile admin iam get-access-key-last-used  --access-key <span class="k">$(</span>aws --profile aws iam list-access-keys --user-name peter.franklin <span class="p">|</span> jq -r <span class="s1">&#39;.[][].AccessKeyId&#39;</span><span class="k">)</span> <span class="p">|</span> jq <span class="s1">&#39;.AccessKeyLastUsed.LastUsedDate&#39;</span>
</span><span class='line'><span class="s2">&quot;2017-08-28T13:55:00Z&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Resources:</h2>

<ul>
<li><ul>
<li><a href="http://docs.aws.amazon.com/cli/latest/reference/iam/update-user.html?shortFooter=true">http://docs.aws.amazon.com/cli/latest/reference/iam/update-user.html?shortFooter=true</a></li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
</feed>
