<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Ruan Bekker's Blog]]></title>
  <link href="http://blog.ruanbekker.com/atom.xml" rel="self"/>
  <link href="http://blog.ruanbekker.com/"/>
  <updated>2018-07-20T03:37:00-04:00</updated>
  <id>http://blog.ruanbekker.com/</id>
  <author>
    <name><![CDATA[Ruan]]></name>
    <email><![CDATA[ruan@ruanbekker.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Hello World Ruby on Rails App Tutorial Using Mac]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/07/20/hello-world-ruby-on-rails-app-tutorial-using-mac/"/>
    <updated>2018-07-20T03:30:20-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/07/20/hello-world-ruby-on-rails-app-tutorial-using-mac</id>
    <content type="html"><![CDATA[<p>In this tutorial, we will setup a basic ruby on rails web app, that consists of a <code>/hello_world</code> and a <code>/status</code> controller. The hello_world controller will return <code>Hello, World</code> and our <code>/status</code> controller will return a <code>HTTP 204</code> no content response code.</p>

<h2>Setup Ruby on Rails</h2>

<p>Setup Ruby on Rails on your Mac:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ brew install rbenv ruby-build
</span><span class='line'>
</span><span class='line'>$ echo 'if which rbenv &gt; /dev/null; then eval "$(rbenv init -)"; fi' &gt;&gt; ~/.bash_profile
</span><span class='line'>$ source ~/.bash_profile
</span><span class='line'>
</span><span class='line'>$ rbenv install 2.5.0
</span><span class='line'>$ rbenv global 2.5.0
</span><span class='line'>$ ruby -v
</span><span class='line'>
</span><span class='line'>$ gem install rails -v 5.1.4
</span><span class='line'>$ benv rehash</span></code></pre></td></tr></table></div></figure>


<h2>Creating the App</h2>

<p>Create your ruby on rails application:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rails new fist-app
</span><span class='line'>$ cd first-app
</span><span class='line'>$ rails server</span></code></pre></td></tr></table></div></figure>


<h2>Route Config</h2>

<p>Our routes config:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cat config/routes.rb
</span><span class='line'>Rails.application.routes.draw do
</span><span class='line'>  # For details on the DSL available within this file, see http://guides.rubyonrails.org/routing.html
</span><span class='line'>  get 'hello_world', to: 'hello_world#call'
</span><span class='line'>  get 'status', to: 'status#call'
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<h2>Controllers</h2>

<p>Configure the hello_world controller:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cat app/controllers/hello_world_controller.rb
</span><span class='line'>
</span><span class='line'>class HelloWorldController &lt; ApplicationController
</span><span class='line'>  def call
</span><span class='line'>    render body: "Hello, World"
</span><span class='line'>  end
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<p>Configure the status controller:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cat app/controllers/status_controller.rb
</span><span class='line'>
</span><span class='line'>class StatusController &lt; ApplicationController
</span><span class='line'>  def call
</span><span class='line'>    [204, {}, ['']]
</span><span class='line'>  end
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<h2>Testing</h2>

<p>For our hello world controller:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ curl -i http://localhost:3000/hello_world
</span><span class='line'>HTTP/1.1 200 OK
</span><span class='line'>X-Frame-Options: SAMEORIGIN
</span><span class='line'>X-XSS-Protection: 1; mode=block
</span><span class='line'>X-Content-Type-Options: nosniff
</span><span class='line'>Content-Type: text/plain; charset=utf-8
</span><span class='line'>ETag: W/"565339bc4d33d72817b583024112eb7f"
</span><span class='line'>Cache-Control: max-age=0, private, must-revalidate
</span><span class='line'>X-Request-Id: 62441a6d-faa3-42d5-a5a2-bcf7eff5e917
</span><span class='line'>X-Runtime: 0.001940
</span><span class='line'>Transfer-Encoding: chunked
</span><span class='line'>Hello, World</span></code></pre></td></tr></table></div></figure>


<p>For our status controller:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -i http://localhost:3000/status
</span><span class='line'>HTTP/1.1 <span class="m">204</span> No Content
</span><span class='line'>X-Frame-Options: SAMEORIGIN
</span><span class='line'>X-XSS-Protection: 1<span class="p">;</span> <span class="nv">mode</span><span class="o">=</span>block
</span><span class='line'>X-Content-Type-Options: nosniff
</span><span class='line'>Cache-Control: no-cache
</span><span class='line'>X-Request-Id: bec91213-ff82-4fc6-8698-3ee7622b1f51
</span><span class='line'>X-Runtime: 0.075504
</span></code></pre></td></tr></table></div></figure>


<h2>Resources:</h2>

<ul>
<li><a href="https://gorails.com/setup/osx/10.12-sierra">https://gorails.com/setup/osx/10.12-sierra</a></li>
<li><a href="http://guides.rubyonrails.org/routing.html">http://guides.rubyonrails.org/routing.html</a></li>
<li><a href="https://www.railstutorial.org/book/beginning#sec-installing_rails">https://www.railstutorial.org/book/beginning#sec-installing_rails</a></li>
<li><a href="https://www.railstutorial.org/book/toy_app">https://www.railstutorial.org/book/toy_app</a></li>
<li><a href="http://codingnudge.com/2017/03/17/tutorial-how-to-run-ruby-on-rails-on-docker-part-1/">http://codingnudge.com/2017/03/17/tutorial-how-to-run-ruby-on-rails-on-docker-part-1/</a></li>
<li><a href="https://medium.com/how-i-learned-ruby-rails/how-i-trained-to-learn-rails-e08c94e2a51e">https://medium.com/how-i-learned-ruby-rails/how-i-trained-to-learn-rails-e08c94e2a51e</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Capture Geo Location Data With Python Flask and PyGeoIP]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/07/16/capture-geo-location-data-with-python-flask-and-pygeoip/"/>
    <updated>2018-07-16T17:46:01-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/07/16/capture-geo-location-data-with-python-flask-and-pygeoip</id>
    <content type="html"><![CDATA[<p>With the PyGeoIP package you can capture geo location data, which is pretty cool, for example, when you have IOT devices pushing location data to elasticsearch and visualizing the data with Kibana. That will be one example, but the possibilites are endless.</p>

<h2>Dependencies:</h2>

<p>Get the Maxmind Geo Database:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>wget -N http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz
</span><span class='line'><span class="nv">$ </span>gunzip GeoLiteCity.dat.gz
</span></code></pre></td></tr></table></div></figure>


<p>Install Python Flask and PyGeoIP:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>pip install flask pygeoip
</span></code></pre></td></tr></table></div></figure>


<h2>Getting Started with PyGeoIP:</h2>

<p>Let&rsquo;s run through a couple of examples on how to get:</p>

<ul>
<li>Country Name by IP Address and DNS</li>
<li>Country Code by IP Address and DNS</li>
<li>GeoData by IP Address</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">pygeoip</span><span class="o">,</span> <span class="nn">json</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">gi</span> <span class="o">=</span> <span class="n">pygeoip</span><span class="o">.</span><span class="n">GeoIP</span><span class="p">(</span><span class="s">&#39;GeoLiteCity.dat&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">gi</span><span class="o">.</span><span class="n">country_name_by_addr</span><span class="p">(</span><span class="s">&#39;8.8.8.8&#39;</span><span class="p">)</span>
</span><span class='line'><span class="s">&#39;United States&#39;</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">gi</span><span class="o">.</span><span class="n">country_code_by_addr</span><span class="p">(</span><span class="s">&#39;8.8.8.8&#39;</span><span class="p">)</span>
</span><span class='line'><span class="s">&#39;US&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">gi</span><span class="o">.</span><span class="n">country_name_by_name</span><span class="p">(</span><span class="s">&#39;scaleway.com&#39;</span><span class="p">)</span>
</span><span class='line'><span class="s">&#39;France&#39;</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">gi</span><span class="o">.</span><span class="n">country_code_by_name</span><span class="p">(</span><span class="s">&#39;scaleway.com&#39;</span><span class="p">)</span>
</span><span class='line'><span class="s">&#39;FR&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">gi</span><span class="o">.</span><span class="n">region_by_name</span><span class="p">(</span><span class="s">&#39;scaleway.com&#39;</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="s">&#39;region_code&#39;</span><span class="p">:</span> <span class="bp">None</span><span class="p">,</span> <span class="s">&#39;country_code&#39;</span><span class="p">:</span> <span class="s">&#39;FR&#39;</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">data</span> <span class="o">=</span> <span class="n">gi</span><span class="o">.</span><span class="n">record_by_addr</span><span class="p">(</span><span class="s">&#39;104.244.42.193&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">indent</span><span class="o">=</span><span class="mi">2</span><span class="p">))</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;city&quot;</span><span class="p">:</span> <span class="s">&quot;San Francisco&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;region_code&quot;</span><span class="p">:</span> <span class="s">&quot;CA&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;area_code&quot;</span><span class="p">:</span> <span class="mi">415</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;time_zone&quot;</span><span class="p">:</span> <span class="s">&quot;America/Los_Angeles&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;dma_code&quot;</span><span class="p">:</span> <span class="mi">807</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;metro_code&quot;</span><span class="p">:</span> <span class="s">&quot;San Francisco, CA&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;country_code3&quot;</span><span class="p">:</span> <span class="s">&quot;USA&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;latitude&quot;</span><span class="p">:</span> <span class="mf">37.775800000000004</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;postal_code&quot;</span><span class="p">:</span> <span class="s">&quot;94103&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;longitude&quot;</span><span class="p">:</span> <span class="o">-</span><span class="mf">122.4128</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;country_code&quot;</span><span class="p">:</span> <span class="s">&quot;US&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;country_name&quot;</span><span class="p">:</span> <span class="s">&quot;United States&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;continent&quot;</span><span class="p">:</span> <span class="s">&quot;NA&quot;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">data</span> <span class="o">=</span> <span class="n">gi</span><span class="o">.</span><span class="n">record_by_name</span><span class="p">(</span><span class="s">&#39;twitter.com&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">indent</span><span class="o">=</span><span class="mi">2</span><span class="p">))</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;city&quot;</span><span class="p">:</span> <span class="s">&quot;San Francisco&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;region_code&quot;</span><span class="p">:</span> <span class="s">&quot;CA&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;area_code&quot;</span><span class="p">:</span> <span class="mi">415</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;time_zone&quot;</span><span class="p">:</span> <span class="s">&quot;America/Los_Angeles&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;dma_code&quot;</span><span class="p">:</span> <span class="mi">807</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;metro_code&quot;</span><span class="p">:</span> <span class="s">&quot;San Francisco, CA&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;country_code3&quot;</span><span class="p">:</span> <span class="s">&quot;USA&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;latitude&quot;</span><span class="p">:</span> <span class="mf">37.775800000000004</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;postal_code&quot;</span><span class="p">:</span> <span class="s">&quot;94103&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;longitude&quot;</span><span class="p">:</span> <span class="o">-</span><span class="mf">122.4128</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;country_code&quot;</span><span class="p">:</span> <span class="s">&quot;US&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;country_name&quot;</span><span class="p">:</span> <span class="s">&quot;United States&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;continent&quot;</span><span class="p">:</span> <span class="s">&quot;NA&quot;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Python Flask Web App to Capture Data</h2>

<p>Let&rsquo;s create a basic Flask App that will capture the data from the client making the request to the server. In this example we will just return the data, but we can filter the data and ingest it into a database like elasticsearch, etc.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">Flask</span><span class="p">,</span> <span class="n">request</span><span class="p">,</span> <span class="n">jsonify</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">pygeoip</span><span class="o">,</span> <span class="nn">json</span>
</span><span class='line'>
</span><span class='line'><span class="n">app</span> <span class="o">=</span> <span class="n">Flask</span><span class="p">(</span><span class="n">__name__</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">geo</span> <span class="o">=</span> <span class="n">pygeoip</span><span class="o">.</span><span class="n">GeoIP</span><span class="p">(</span><span class="s">&#39;GeoLiteCity.dat&#39;</span><span class="p">,</span> <span class="n">pygeoip</span><span class="o">.</span><span class="n">MEMORY_CACHE</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@app.route</span><span class="p">(</span><span class="s">&#39;/&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">index</span><span class="p">():</span>
</span><span class='line'>    <span class="n">client_ip</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">remote_addr</span>
</span><span class='line'>    <span class="n">geo_data</span> <span class="o">=</span> <span class="n">geo</span><span class="o">.</span><span class="n">record_by_addr</span><span class="p">(</span><span class="n">client_ip</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">geo_data</span><span class="p">,</span> <span class="n">indent</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span> <span class="o">+</span> <span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
</span><span class='line'>    <span class="n">app</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="n">host</span><span class="o">=</span><span class="s">&#39;0.0.0.0&#39;</span><span class="p">,</span> <span class="n">port</span><span class="o">=</span><span class="mi">80</span><span class="p">,</span> <span class="n">debug</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Run the Server:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>python app.py
</span></code></pre></td></tr></table></div></figure>


<p>Make a request from the client over a remote connection:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl http://remote-endpoint.com
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;city&quot;</span>: <span class="s2">&quot;Cape Town&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;region_code&quot;</span>: <span class="s2">&quot;11&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;area_code&quot;</span>: 0,
</span><span class='line'>  <span class="s2">&quot;time_zone&quot;</span>: <span class="s2">&quot;Africa/Johannesburg&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;dma_code&quot;</span>: 0,
</span><span class='line'>  <span class="s2">&quot;metro_code&quot;</span>: null,
</span><span class='line'>  <span class="s2">&quot;country_code3&quot;</span>: <span class="s2">&quot;ZAF&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;latitude&quot;</span>: -01.12345,
</span><span class='line'>  <span class="s2">&quot;postal_code&quot;</span>: <span class="s2">&quot;8000&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;longitude&quot;</span>: 02.123456789,
</span><span class='line'>  <span class="s2">&quot;country_code&quot;</span>: <span class="s2">&quot;ZA&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;country_name&quot;</span>: <span class="s2">&quot;South Africa&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;continent&quot;</span>: <span class="s2">&quot;AF&quot;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Resources:</h2>

<ul>
<li><a href="http://pygeoip.readthedocs.io/en/latest/getting-started.html">PyGeoIP</a></li>
<li><a href="https://dev.maxmind.com/geoip/legacy/install/city/">MaxMind</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install Java Development Kit 10 on Ubuntu]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/07/15/install-java-development-kit-10-on-ubuntu/"/>
    <updated>2018-07-15T06:17:43-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/07/15/install-java-development-kit-10-on-ubuntu</id>
    <content type="html"><![CDATA[<p>With the announcement of improved docker container integration with Java 10, the JVM is now aware of resource constraints, as not from prior versions. More information on <a href="https://blog.docker.com/2018/04/improved-docker-container-integration-with-java-10/">this post</a></p>

<h2>Differences in Java 8 and Java 10:</h2>

<p>As you can see with Java 8:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker run -it -m512M --entrypoint bash openjdk:latest
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>docker-java-home/bin/java -XX:+PrintFlagsFinal -version <span class="p">|</span> grep MaxHeapSize
</span><span class='line'>    uintx MaxHeapSize                              :<span class="o">=</span> <span class="m">524288000</span>                          <span class="o">{</span>product<span class="o">}</span>
</span><span class='line'>openjdk version <span class="s2">&quot;1.8.0_162&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>And with Java 10:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker run -it -m512M --entrypoint bash openjdk:10-jdk
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>docker-java-home/bin/java -XX:+PrintFlagsFinal -version <span class="p">|</span> grep MaxHeapSize
</span><span class='line'>   size_t <span class="nv">MaxHeapSize</span>                              <span class="o">=</span> <span class="m">134217728</span>                                <span class="o">{</span>product<span class="o">}</span> <span class="o">{</span>ergonomic<span class="o">}</span>
</span><span class='line'>openjdk version <span class="s2">&quot;10&quot;</span> 2018-03-20
</span></code></pre></td></tr></table></div></figure>


<h2>Installing JDK 10 on Ubuntu:</h2>

<p>Installing Java Development Kit 10:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>apt update <span class="o">&amp;&amp;</span> apt upgrade -y
</span><span class='line'><span class="nv">$ </span>add-apt-repository ppa:linuxuprising/java
</span><span class='line'><span class="nv">$ </span>apt update
</span><span class='line'><span class="nv">$ </span>apt install oracle-java10-installer
</span><span class='line'><span class="nv">$ </span>apt install oracle-java10-set-default
</span></code></pre></td></tr></table></div></figure>


<p>Confirming the Java Version:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>java -version
</span><span class='line'>java version <span class="s2">&quot;10.0.1&quot;</span> 2018-04-17
</span><span class='line'>Java<span class="o">(</span>TM<span class="o">)</span> SE Runtime Environment 18.3 <span class="o">(</span>build 10.0.1+10<span class="o">)</span>
</span><span class='line'>Java HotSpot<span class="o">(</span>TM<span class="o">)</span> 64-Bit Server VM 18.3 <span class="o">(</span>build 10.0.1+10, mixed mode<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup a LAMP Stack With Ansible Using Ubuntu]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/07/08/setup-a-lamp-stack-with-ansible-using-ubuntu/"/>
    <updated>2018-07-08T17:15:15-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/07/08/setup-a-lamp-stack-with-ansible-using-ubuntu</id>
    <content type="html"><![CDATA[<p><img src="https://res.cloudinary.com/rbekker/image/upload/v1531083331/ansible_tojf8l.png" alt="" /></p>

<p>This is Part-2 of our <a href="http://blog.ruanbekker.com/blog/categories/ansible-tutorial">Ansible-Tutorial</a> and in this post we will cover how to setup a LAMP Stack on Ubuntu using Ansible. We will only have one host in our inventory, but this can be scaled easily by increasing the number of nodes in your invetory configuration file.</p>

<h2>Our Playbook:</h2>

<p>Our <code>lamp.yml</code> playbook:</p>

<figure class='code'><figcaption><span>lamp.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="nn">---</span>
</span><span class='line'><span class="c1"># Setup LAMP Stack</span>
</span><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">hosts</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">newhost</span>
</span><span class='line'>  <span class="l-Scalar-Plain">tasks</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">install lamp stack</span>
</span><span class='line'>      <span class="l-Scalar-Plain">sudo</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">yes</span>
</span><span class='line'>      <span class="l-Scalar-Plain">apt</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">name= state=present update_cache=yes</span>
</span><span class='line'>      <span class="l-Scalar-Plain">with_items</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">apache2</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">mysql-server</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">php7.0</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">php7.0-mysql</span>
</span><span class='line'>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">start services</span>
</span><span class='line'>      <span class="l-Scalar-Plain">service</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">name= state=started enabled=yes</span>
</span><span class='line'>      <span class="l-Scalar-Plain">sudo</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">yes</span>
</span><span class='line'>      <span class="l-Scalar-Plain">with_items</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">apache2</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">mysql</span>
</span><span class='line'>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">deploy index.html</span>
</span><span class='line'>      <span class="l-Scalar-Plain">sudo</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">yes</span>
</span><span class='line'>      <span class="l-Scalar-Plain">copy</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">src</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/tmp/index.html</span>
</span><span class='line'>        <span class="l-Scalar-Plain">dest</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/var/www/html/index.html</span>
</span></code></pre></td></tr></table></div></figure>


<p>Our <code>index.html</code> that will be deployed on our servers:</p>

<figure class='code'><figcaption><span>/tmp/index.html</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="cp">&lt;!DOCTYPE html&gt;</span>
</span><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'>  <span class="nt">&lt;body&gt;</span>
</span><span class='line'>    <span class="nt">&lt;h1&gt;</span>Deployed with Ansible<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Deploy your LAMP Stack:</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ansible-playbook -i inventory.ini -u root lamp.yml
</span><span class='line'>
</span><span class='line'>PLAY <span class="o">[</span>newhost<span class="o">]</span> ***************************************************************************************************************************
</span><span class='line'>
</span><span class='line'>TASK <span class="o">[</span>Gathering Facts<span class="o">]</span> *******************************************************************************************************************
</span><span class='line'>ok: <span class="o">[</span>web-1<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>TASK <span class="o">[</span>install lamp stack<span class="o">]</span> ****************************************************************************************************************
</span><span class='line'>ok: <span class="o">[</span>web-1<span class="o">]</span> <span class="o">=</span>&gt; <span class="o">(</span><span class="nv">item</span><span class="o">=[</span>u<span class="s1">&#39;apache2&#39;</span>, u<span class="s1">&#39;mysql-server&#39;</span>, u<span class="s1">&#39;php7.0&#39;</span>, u<span class="s1">&#39;php7.0-mysql&#39;</span><span class="o">])</span>
</span><span class='line'>
</span><span class='line'>TASK <span class="o">[</span>start services<span class="o">]</span> ********************************************************************************************************************
</span><span class='line'>ok: <span class="o">[</span>web-1<span class="o">]</span> <span class="o">=</span>&gt; <span class="o">(</span><span class="nv">item</span><span class="o">=</span>apache2<span class="o">)</span>
</span><span class='line'>ok: <span class="o">[</span>web-1<span class="o">]</span> <span class="o">=</span>&gt; <span class="o">(</span><span class="nv">item</span><span class="o">=</span>mysql<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>TASK <span class="o">[</span>deploy index.html<span class="o">]</span> *****************************************************************************************************************
</span><span class='line'>changed: <span class="o">[</span>web-1<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>PLAY RECAP *******************************************************************************************************************************
</span><span class='line'>web-1                      : <span class="nv">ok</span><span class="o">=</span><span class="m">4</span>    <span class="nv">changed</span><span class="o">=</span><span class="m">1</span>    <span class="nv">unreachable</span><span class="o">=</span><span class="m">0</span>    <span class="nv">failed</span><span class="o">=</span>0
</span></code></pre></td></tr></table></div></figure>


<p>Test our web server:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl http://10.0.0.4
</span><span class='line'>
</span><span class='line'>Deployed with Ansible
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Getting Started With Ansible on Ubuntu]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/07/08/getting-started-with-ansible-on-ubuntu/"/>
    <updated>2018-07-08T15:56:06-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/07/08/getting-started-with-ansible-on-ubuntu</id>
    <content type="html"><![CDATA[<p><img src="https://res.cloudinary.com/rbekker/image/upload/v1531083331/ansible_tojf8l.png" alt="" /></p>

<p><a href="">Part 1</a> - This is a getting started series on Ansible.</p>

<p>The first post will be on how to setup ansible and how to reach your nodes in order to deploy software to your nodes.</p>

<h2>Install Ansible:</h2>

<p>Ansible relies on python, so we will first install the dependencies:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>apt update <span class="o">&amp;&amp;</span> apt install python python-setuptools -y
</span><span class='line'><span class="nv">$ </span>easy_install pip
</span><span class='line'><span class="nv">$ </span>pip install ansible
</span></code></pre></td></tr></table></div></figure>


<h2>Populate the invetory configuration:</h2>

<p>Your invetory file will hold your host and variable information. Lets say we have 3 nodes that we want to deploy software to; <code>node-1</code>, <code>node-2</code> and <code>node-3</code>. We will group them under <code>nodes</code>. This will be saved under the a new file <code>inventory.init</code>:</p>

<figure class='code'><figcaption><span>inventory.ini</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>nodes<span class="o">]</span>
</span><span class='line'>node-1
</span><span class='line'>node-2
</span><span class='line'>node-3
</span></code></pre></td></tr></table></div></figure>


<p>Next we will populate information about our node names, this will be done under our <code>~/.ssh/config</code> configuration:</p>

<figure class='code'><figcaption><span>~/.ssh/config</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Host node-1
</span><span class='line'>  Hostname 10.0.0.2
</span><span class='line'>  User root
</span><span class='line'>  IdentityFile ~/.ssh/id_rsa
</span><span class='line'>  StrictHostKeyChecking no
</span><span class='line'>  UserKnownHostsFile /dev/null
</span><span class='line'>
</span><span class='line'>Host node-2
</span><span class='line'>  Hostname 10.0.0.3
</span><span class='line'>  User root
</span><span class='line'>  IdentityFile ~/.ssh/id_rsa
</span><span class='line'>  StrictHostKeyChecking no
</span><span class='line'>  UserKnownHostsFile /dev/null
</span><span class='line'>
</span><span class='line'>Host node-3
</span><span class='line'>  Hostname 10.0.0.4
</span><span class='line'>  User root
</span><span class='line'>  IdentityFile ~/.ssh/id_rsa
</span><span class='line'>  StrictHostKeyChecking no
</span><span class='line'>  UserKnownHostsFile /dev/null
</span></code></pre></td></tr></table></div></figure>


<p>Now we need to generate a ssh key for our node where we will run our ansible commands from:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ssh-keygen -b <span class="m">2048</span> -f ~/.ssh/id_rsa -t rsa -q -N <span class="s2">&quot;&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now we will copy the contents of <code>~/.ssh/id_rsa.pub</code> into our destination nodes <code>~/.ssh/authorized_keys</code> or if you have password authentication enabled, we can do <code>$ ssh-copy-id root@10.0.0.x</code> etc. Now we should be able to ssh to our nodes to <code>node-1, node-2</code> and <code>node-3</code>.</p>

<h2>Deploy Python:</h2>

<p>As Ansible requires Python, we need to bootstrap our nodes with Python. Since we are able to ssh to our nodes, we will use ansible to deploy Python to our nodes:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ansible -m raw -s -a <span class="s2">&quot;apt update &amp;&amp; apt install python -y&quot;</span> -i inventory.ini nodes
</span></code></pre></td></tr></table></div></figure>


<p>This should succeed, then we can test our connection by running the ping module:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ansible -i inventory.ini nodes -m ping
</span><span class='line'>node-2 <span class="p">|</span> <span class="nv">SUCCESS</span> <span class="o">=</span>&gt; <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;changed&quot;</span>: <span class="nb">false</span>,
</span><span class='line'>    <span class="s2">&quot;ping&quot;</span>: <span class="s2">&quot;pong&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>node-3 <span class="p">|</span> <span class="nv">SUCCESS</span> <span class="o">=</span>&gt; <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;changed&quot;</span>: <span class="nb">false</span>,
</span><span class='line'>    <span class="s2">&quot;ping&quot;</span>: <span class="s2">&quot;pong&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>node-1 <span class="p">|</span> <span class="nv">SUCCESS</span> <span class="o">=</span>&gt; <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;changed&quot;</span>: <span class="nb">false</span>,
</span><span class='line'>    <span class="s2">&quot;ping&quot;</span>: <span class="s2">&quot;pong&quot;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Run a command on your nodes:</h2>

<p>Let&rsquo;s run a cat command on all the nodes:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ansible -i inventory.ini nodes -a <span class="s2">&quot;/bin/cat /etc/hostname&quot;</span>
</span><span class='line'>node-3 <span class="p">|</span> SUCCESS <span class="p">|</span> <span class="nv">rc</span><span class="o">=</span><span class="m">0</span> &gt;&gt;
</span><span class='line'>node-3
</span><span class='line'>
</span><span class='line'>node-1 <span class="p">|</span> SUCCESS <span class="p">|</span> <span class="nv">rc</span><span class="o">=</span><span class="m">0</span> &gt;&gt;
</span><span class='line'>node-1
</span><span class='line'>
</span><span class='line'>node-2 <span class="p">|</span> SUCCESS <span class="p">|</span> <span class="nv">rc</span><span class="o">=</span><span class="m">0</span> &gt;&gt;
</span><span class='line'>node-2
</span></code></pre></td></tr></table></div></figure>


<h2>Ansible Playbooks:</h2>

<p>Let&rsquo;s run shell commands, the traditional hello world, using the ansible-playbook command. First we need a task definition, which I will name <code>shell_command-1.yml</code>:</p>

<figure class='code'><figcaption><span>shell_command.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>---
</span><span class='line'><span class="c"># Echo Static String</span>
</span><span class='line'>- hosts: nodes
</span><span class='line'>  tasks:
</span><span class='line'>  - name: <span class="nb">echo </span>static value
</span><span class='line'>    shell: /bin/echo <span class="s2">&quot;hello world&quot;</span>
</span><span class='line'>    register: echo_static
</span><span class='line'>  - debug: <span class="nv">msg</span><span class="o">=</span><span class="s2">&quot;&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now we have defined that our commands will be executed against the host group defined in our inventory.ini. Let&rsquo;s run our ansible playbook command:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ansible-playbook -i inventory.ini shell_command.yml
</span><span class='line'>
</span><span class='line'>PLAY <span class="o">[</span>nodes<span class="o">]</span> *************************************************************************************
</span><span class='line'>
</span><span class='line'>TASK <span class="o">[</span>Gathering Facts<span class="o">]</span> **********************************************************************************
</span><span class='line'>ok: <span class="o">[</span>node-1<span class="o">]</span>
</span><span class='line'>ok: <span class="o">[</span>node-2<span class="o">]</span>
</span><span class='line'>ok: <span class="o">[</span>node-3<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>TASK <span class="o">[</span><span class="nb">echo </span>static value<span class="o">]</span> ********************************************************************************
</span><span class='line'>changed: <span class="o">[</span>node-1<span class="o">]</span>
</span><span class='line'>changed: <span class="o">[</span>node-2<span class="o">]</span>
</span><span class='line'>changed: <span class="o">[</span>node-3<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>TASK <span class="o">[</span>debug<span class="o">]</span> ********************************************************************************************
</span><span class='line'>ok: <span class="o">[</span>node-1<span class="o">]</span> <span class="o">=</span>&gt; <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;msg&quot;</span>: <span class="s2">&quot;hello world&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>ok: <span class="o">[</span>node-2<span class="o">]</span> <span class="o">=</span>&gt; <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;msg&quot;</span>: <span class="s2">&quot;hello world&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>ok: <span class="o">[</span>node-3<span class="o">]</span> <span class="o">=</span>&gt; <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;msg&quot;</span>: <span class="s2">&quot;hello world&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>PLAY RECAP **********************************************************************************************
</span><span class='line'>node-1              : <span class="nv">ok</span><span class="o">=</span><span class="m">3</span>    <span class="nv">changed</span><span class="o">=</span><span class="m">1</span>    <span class="nv">unreachable</span><span class="o">=</span><span class="m">0</span>    <span class="nv">failed</span><span class="o">=</span>0
</span><span class='line'>node-2              : <span class="nv">ok</span><span class="o">=</span><span class="m">3</span>    <span class="nv">changed</span><span class="o">=</span><span class="m">1</span>    <span class="nv">unreachable</span><span class="o">=</span><span class="m">0</span>    <span class="nv">failed</span><span class="o">=</span>0
</span><span class='line'>node-3              : <span class="nv">ok</span><span class="o">=</span><span class="m">3</span>    <span class="nv">changed</span><span class="o">=</span><span class="m">1</span>    <span class="nv">unreachable</span><span class="o">=</span><span class="m">0</span>    <span class="nv">failed</span><span class="o">=</span>0
</span></code></pre></td></tr></table></div></figure>


<p>Let&rsquo;s define a variable <code>location_city = Cape Town</code> in our <code>inventory.ini</code> configuration, then we will call the variable key in our task definition:</p>

<figure class='code'><figcaption><span>inventory.ini</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>nodes<span class="o">]</span>
</span><span class='line'>node-1
</span><span class='line'>node-2
</span><span class='line'>node-3
</span><span class='line'>
</span><span class='line'><span class="o">[</span>nodes:vars<span class="o">]</span>
</span><span class='line'><span class="nv">location_city</span><span class="o">=</span><span class="s2">&quot;Cape Town&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now our task definition with our variable:</p>

<figure class='code'><figcaption><span>shell_command-2.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="nn">---</span>
</span><span class='line'><span class="c1"># Echo Variable</span>
</span><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">hosts</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nodes</span>
</span><span class='line'>  <span class="l-Scalar-Plain">tasks</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">echo variable value</span>
</span><span class='line'>    <span class="l-Scalar-Plain">shell</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/bin/echo &quot;&quot;</span>
</span><span class='line'>    <span class="l-Scalar-Plain">register</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">echo</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">debug</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">msg=&quot;&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Running our ansible-playbook:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ansible-playbook -i inventory.ini shell_command.yml
</span><span class='line'>
</span><span class='line'>PLAY <span class="o">[</span>nodes<span class="o">]</span> **************************************************************************************************************************************************************************************
</span><span class='line'>
</span><span class='line'>TASK <span class="o">[</span>Gathering Facts<span class="o">]</span> ***********************************************************************************************************************************************************************************
</span><span class='line'>ok: <span class="o">[</span>node-1<span class="o">]</span>
</span><span class='line'>ok: <span class="o">[</span>node-2<span class="o">]</span>
</span><span class='line'>ok: <span class="o">[</span>node-3<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>TASK <span class="o">[</span><span class="nb">echo </span>variable value<span class="o">]</span> *******************************************************************************************************************************************************************************
</span><span class='line'>changed: <span class="o">[</span>node-1<span class="o">]</span>
</span><span class='line'>changed: <span class="o">[</span>node-2<span class="o">]</span>
</span><span class='line'>changed: <span class="o">[</span>node-3<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>TASK <span class="o">[</span>debug<span class="o">]</span> *********************************************************************************************************************************************************************************************
</span><span class='line'>ok: <span class="o">[</span>node-1<span class="o">]</span> <span class="o">=</span>&gt; <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;msg&quot;</span>: <span class="s2">&quot;Cape Town&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>ok: <span class="o">[</span>node-2<span class="o">]</span> <span class="o">=</span>&gt; <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;msg&quot;</span>: <span class="s2">&quot;Cape Town&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>ok: <span class="o">[</span>node-3<span class="o">]</span> <span class="o">=</span>&gt; <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;msg&quot;</span>: <span class="s2">&quot;Cape Town&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>PLAY RECAP ***********************************************************************************************************************************************************************************************
</span><span class='line'>node-1              : <span class="nv">ok</span><span class="o">=</span><span class="m">3</span>    <span class="nv">changed</span><span class="o">=</span><span class="m">1</span>    <span class="nv">unreachable</span><span class="o">=</span><span class="m">0</span>    <span class="nv">failed</span><span class="o">=</span>0
</span><span class='line'>node-2              : <span class="nv">ok</span><span class="o">=</span><span class="m">3</span>    <span class="nv">changed</span><span class="o">=</span><span class="m">1</span>    <span class="nv">unreachable</span><span class="o">=</span><span class="m">0</span>    <span class="nv">failed</span><span class="o">=</span>0
</span><span class='line'>node-3              : <span class="nv">ok</span><span class="o">=</span><span class="m">3</span>    <span class="nv">changed</span><span class="o">=</span><span class="m">1</span>    <span class="nv">unreachable</span><span class="o">=</span><span class="m">0</span>    <span class="nv">failed</span><span class="o">=</span>0
</span></code></pre></td></tr></table></div></figure>


<p>This is it for this post, all posts for this tutorial will be posted under <a href="http://blog.ruanbekker.com/blog/categories/ansible-tutorial">#ansible-tutorials</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Salt and Hash Example Using Python With Bcrypt on Alpine]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/07/04/salt-and-hash-example-using-python-with-bcrypt-on-alpine/"/>
    <updated>2018-07-04T05:05:00-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/07/04/salt-and-hash-example-using-python-with-bcrypt-on-alpine</id>
    <content type="html"><![CDATA[<p>This is a post on a example of how to hash a password with a salt. A salt in cryptography is a method that applies a one way function to hash data like passwords. The advantage of using salts is to protect your sensitive data against dictionary attacks, etc. Everytime a salt is applied to the same string, the hashed string will provide a different result.</p>

<h2>Installing Bcrypt</h2>

<p>I will be using bcrypt to hash my password. I always use alpine images and this is how I got bcrypt running on alpine:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker run -it apline sh
</span><span class='line'><span class="nv">$ </span>apk add python python-dev py2-pip autoconf automake g++ make --no-cache
</span><span class='line'><span class="nv">$ </span>pip install py-bcrypt
</span></code></pre></td></tr></table></div></figure>


<p>This command should produce a <code>0 exit code</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>python -c <span class="s1">&#39;import bcrypt&#39;</span><span class="p">;</span> <span class="nb">echo</span> <span class="nv">$?</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h2>Bcrypt Example to Hash a Password</h2>

<p>Here is a example to show you the output when a salt is applied to a string, such as a password. First we will define our very weak password:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">bcrypt</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">password</span> <span class="o">=</span> <span class="s">&#39;pass123&#39;</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">password</span>
</span><span class='line'><span class="s">&#39;pass123&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>The bcrypt package has a function called <code>gensalt()</code> that accepts a parameter <code>log_rounds</code> which defines the complexity of the hashing. Lets create a hash for our password:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">bcrypt</span><span class="o">.</span><span class="n">hashpw</span><span class="p">(</span><span class="n">password</span><span class="p">,</span> <span class="n">bcrypt</span><span class="o">.</span><span class="n">gensalt</span><span class="p">(</span><span class="mi">12</span><span class="p">))</span>
</span><span class='line'><span class="s">&#39;$2a$12$iquyyyJAlA9nZwlGo0CYK.J37Qn.to/0mTtiCspNAyO8778006XZG&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">bcrypt</span><span class="o">.</span><span class="n">hashpw</span><span class="p">(</span><span class="n">password</span><span class="p">,</span> <span class="n">bcrypt</span><span class="o">.</span><span class="n">gensalt</span><span class="p">(</span><span class="mi">12</span><span class="p">))</span>
</span><span class='line'><span class="s">&#39;$2a$12$UzNjJ1W/cWqBrt5rzNkb..j.gUvrW64DbvVkNbhRDzBtbRvNInaqq&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>As you can see, the hashed string was different when we called it for the second time.</p>

<h2>Bcrypt Salt Hash and Verification Example:</h2>

<p>Thanks to <a href="https://stackoverflow.com/questions/9594125/salt-and-hash-a-password-in-python">this</a> post, here is a example on how to hash strings and how to verify the plain text password with the provided salt.</p>

<p>Our functions to create the hash and to verify the password:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">bcrypt</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">def</span> <span class="nf">get_hashed_password</span><span class="p">(</span><span class="n">plain_text_password</span><span class="p">):</span>
</span><span class='line'><span class="o">...</span>     <span class="k">return</span> <span class="n">bcrypt</span><span class="o">.</span><span class="n">hashpw</span><span class="p">(</span><span class="n">plain_text_password</span><span class="p">,</span> <span class="n">bcrypt</span><span class="o">.</span><span class="n">gensalt</span><span class="p">())</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">def</span> <span class="nf">check_password</span><span class="p">(</span><span class="n">plain_text_password</span><span class="p">,</span> <span class="n">hashed_password</span><span class="p">):</span>
</span><span class='line'><span class="o">...</span>     <span class="k">return</span> <span class="n">bcrypt</span><span class="o">.</span><span class="n">checkpw</span><span class="p">(</span><span class="n">plain_text_password</span><span class="p">,</span> <span class="n">hashed_password</span><span class="p">)</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Create a hashed string:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">get_hashed_password</span><span class="p">(</span><span class="s">&#39;mynewpassword&#39;</span><span class="p">))</span>
</span><span class='line'><span class="err">$</span><span class="mi">2</span><span class="n">a</span><span class="err">$</span><span class="mi">12</span><span class="err">$</span><span class="o">/</span><span class="n">MemcgbnwJLN8XE86VQZseVxopU6tY76KxnH</span><span class="o">/</span><span class="n">AJ0I9T9y1Ldko5gm</span>
</span></code></pre></td></tr></table></div></figure>


<p>Verify the hash with your plain text password and the salt that was created:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">check_password</span><span class="p">(</span><span class="s">&#39;mynewpassword&#39;</span><span class="p">,</span> <span class="s">&#39;$2a$12$/MemcgbnwJLN8XE86VQZseVxopU6tY76KxnH/AJ0I9T9y1Ldko5gm&#39;</span><span class="p">))</span>
</span><span class='line'><span class="bp">True</span>
</span></code></pre></td></tr></table></div></figure>


<p>When you you provide the wrong password, with the correct salt, the verification will fail:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">check_password</span><span class="p">(</span><span class="s">&#39;myOLDpassword&#39;</span><span class="p">,</span> <span class="s">&#39;$2a$12$/MemcgbnwJLN8XE86VQZseVxopU6tY76KxnH/AJ0I9T9y1Ldko5gm&#39;</span><span class="p">))</span>
</span><span class='line'><span class="bp">False</span>
</span></code></pre></td></tr></table></div></figure>


<p>When you provide the correct password with the incorrect salt, the verification will also fail:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">check_password</span><span class="p">(</span><span class="s">&#39;mynewpassword&#39;</span><span class="p">,</span> <span class="s">&#39;$2a$12$/MemcgbnwJLN8XE86VQZseVxopU6tY76KxnH/AJ0I9T9y1Ldko5gmX&#39;</span><span class="p">))</span>
</span><span class='line'><span class="bp">False</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup a PPTP VPN on Ubuntu]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/06/27/setup-a-pptp-vpn-on-ubuntu/"/>
    <updated>2018-06-27T04:18:51-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/06/27/setup-a-pptp-vpn-on-ubuntu</id>
    <content type="html"><![CDATA[<p>In this post we will setup a <a href="https://en.wikipedia.org/wiki/Point-to-Point_Tunneling_Protocol">PPTP</a> VPN on Ubuntu 16.04</p>

<h2>Disable IPv6 Networking:</h2>

<p>Edit the grub config:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vi /etc/default/grub
</span></code></pre></td></tr></table></div></figure>


<p>Make the following changes:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">GRUB_CMDLINE_LINUX_DEFAULT</span><span class="o">=</span><span class="s2">&quot;ipv6.disable=1&quot;</span>
</span><span class='line'><span class="nv">GRUB_CMDLINE_LINUX</span><span class="o">=</span><span class="s2">&quot;ipv6.disable=1&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Update Grub and Reboot:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>update-grub
</span><span class='line'><span class="nv">$ </span>reboot
</span></code></pre></td></tr></table></div></figure>


<h2>Updates and Install PPTP:</h2>

<p>Update Repositories and install PPTPD:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>apt update <span class="o">&amp;&amp;</span> apt upgrade -y
</span><span class='line'><span class="nv">$ </span>apt install pptpd -y
</span></code></pre></td></tr></table></div></figure>


<p>Configure your Authentication</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vi /etc/ppp/chap-secrets
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># client server  secret          IP addresses</span>
</span><span class='line'>youruser      pptpd   yourpass        *
</span></code></pre></td></tr></table></div></figure>


<p>Configure Local and Remote IP, in this case I want 10.1.1.2 to 10.1.5.1-254</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vi /etc/pptpd.conf
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>option /etc/ppp/pptpd-options
</span><span class='line'>logwtmp
</span><span class='line'>connections 10000
</span><span class='line'>localip 10.1.1.1
</span><span class='line'>remoteip 10.1.1.2-254,10.1.2.1-254,10.1.3.2-254,10.1.4.1-254,10.1.5.1-254
</span><span class='line'><span class="c"># for a /24 you can set</span>
</span><span class='line'><span class="c"># remoteip 10.1.1.2-254</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Enable IP Forwarding:</h2>

<p>Edit the sysctl.conf and enable IP Forwarding:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vim /etc/sysctl.conf
</span></code></pre></td></tr></table></div></figure>


<p>Populate the following value:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>net.ipv4.ip_forward<span class="o">=</span>1
</span></code></pre></td></tr></table></div></figure>


<p>Update the Changes:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sysctl -p
</span></code></pre></td></tr></table></div></figure>


<h2>Enable and Start PPTPD:</h2>

<p>Enable the service on boot and start the service:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>systemctl <span class="nb">enable </span>pptpd
</span><span class='line'><span class="nv">$ </span>systemctl start pptpd
</span><span class='line'><span class="nv">$ </span>systemctl status pptpd
</span></code></pre></td></tr></table></div></figure>


<p>Connect to your VPN.</p>

<h2>Resources:</h2>

<ul>
<li><a href="https://www.vultr.com/docs/setup-a-pptp-vpn-server-on-ubuntu">https://www.vultr.com/docs/setup-a-pptp-vpn-server-on-ubuntu</a></li>
<li><a href="https://github.com/viljoviitanen/setup-simple-pptp-vpn">https://github.com/viljoviitanen/setup-simple-pptp-vpn</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Deploy Docker Swarm Using Ansible]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/06/14/deploy-docker-swarm-using-ansible/"/>
    <updated>2018-06-14T06:05:46-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/06/14/deploy-docker-swarm-using-ansible</id>
    <content type="html"><![CDATA[<p><img src="http://obj-cache.cloud.ruanbekker.com/docker-logo.png" alt="" /></p>

<p>In this setup we will use Ansible to Deploy Docker Swarm.</p>

<p>With this setup, I have a client node, which will be my jump box, as it will be used to ssh with the docker user to my swarm nodes with passwordless ssh access.</p>

<p>The repository for the source code can be found on my <a href="https://github.com/ruanbekker/ansible-docker-swarm">Github Repository</a></p>

<h2>Pre-Check</h2>

<p>Hosts file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cat /etc/hosts
</span><span class='line'>10.0.8.2 client
</span><span class='line'>192.168.1.10 swarm-manager
</span><span class='line'>192.168.1.11 swarm-worker-1
</span><span class='line'>192.168.1.12 swarm-worker-2</span></code></pre></td></tr></table></div></figure>


<p>SSH Config:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cat ~/.ssh/config 
</span><span class='line'>Host client
</span><span class='line'>  Hostname client
</span><span class='line'>  User root
</span><span class='line'>  IdentityFile /tmp/key.pem
</span><span class='line'>  StrictHostKeyChecking no
</span><span class='line'>  UserKnownHostsFile /dev/null
</span><span class='line'>
</span><span class='line'>Host swarm-manager
</span><span class='line'>  Hostname swarm-manager
</span><span class='line'>  User root
</span><span class='line'>  IdentityFile /tmp/key.pem
</span><span class='line'>  StrictHostKeyChecking no
</span><span class='line'>  UserKnownHostsFile /dev/null
</span><span class='line'>
</span><span class='line'>Host swarm-worker-1
</span><span class='line'>  Hostname swarm-worker-1
</span><span class='line'>  User root
</span><span class='line'>  IdentityFile /tmp/key.pem
</span><span class='line'>  StrictHostKeyChecking no
</span><span class='line'>  UserKnownHostsFile /dev/null
</span><span class='line'>
</span><span class='line'>Host swarm-worker-2
</span><span class='line'>  Hostname swarm-worker-2
</span><span class='line'>  User root
</span><span class='line'>  IdentityFile /tmp/key.pem
</span><span class='line'>  StrictHostKeyChecking no
</span><span class='line'>  UserKnownHostsFile /dev/null</span></code></pre></td></tr></table></div></figure>


<p>Install Ansible:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ apt install python-setuptools -y
</span><span class='line'>$ easy_install pip
</span><span class='line'>$ pip install ansible</span></code></pre></td></tr></table></div></figure>


<p>Ensure passwordless ssh is working:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ansible -i inventory.ini -u root -m ping all
</span><span class='line'>client | SUCCESS =&gt; {
</span><span class='line'>    "changed": false, 
</span><span class='line'>    "ping": "pong"
</span><span class='line'>}
</span><span class='line'>swarm-manager | SUCCESS =&gt; {
</span><span class='line'>    "changed": false, 
</span><span class='line'>    "ping": "pong"
</span><span class='line'>}
</span><span class='line'>swarm-worker-2 | SUCCESS =&gt; {
</span><span class='line'>    "changed": false, 
</span><span class='line'>    "ping": "pong"
</span><span class='line'>}
</span><span class='line'>swarm-worker-1 | SUCCESS =&gt; {
</span><span class='line'>    "changed": false, 
</span><span class='line'>    "ping": "pong"
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h2>Deploy Docker Swarm</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ansible-playbook -i inventory.ini -u root deploy-swarm.yml 
</span><span class='line'>PLAY RECAP 
</span><span class='line'>
</span><span class='line'>client                     : ok=11   changed=3    unreachable=0    failed=0   
</span><span class='line'>swarm-manager              : ok=18   changed=4    unreachable=0    failed=0   
</span><span class='line'>swarm-worker-1             : ok=15   changed=1    unreachable=0    failed=0   
</span><span class='line'>swarm-worker-2             : ok=15   changed=1    unreachable=0    failed=0   </span></code></pre></td></tr></table></div></figure>


<p>SSH to the Swarm Manager and List the Nodes:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ docker node ls
</span><span class='line'>ID                            HOSTNAME            STATUS              AVAILABILITY        MANAGER STATUS      ENGINE VERSION
</span><span class='line'>0ead0jshzkpyrw7livudrzq9o *   swarm-manager       Ready               Active              Leader              18.03.1-ce
</span><span class='line'>iwyp6t3wcjdww0r797kwwkvvy     swarm-worker-1      Ready               Active                                  18.03.1-ce
</span><span class='line'>ytcc86ixi0kuuw5mq5xxqamt1     swarm-worker-2      Ready               Active                                  18.03.1-ce</span></code></pre></td></tr></table></div></figure>


<h2>Test Application on Swarm</h2>

<p>Create a Nginx Demo Service:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ docker network create --driver overlay appnet
</span><span class='line'>$ docker service create --name nginx --publish 80:80 --network appnet --replicas 6 nginx
</span><span class='line'>$ docker service ls
</span><span class='line'>ID                  NAME                MODE                REPLICAS            IMAGE               PORTS
</span><span class='line'>k3vwvhmiqbfk        nginx               replicated          6/6                 nginx:latest        *:80-&gt;80/tcp
</span><span class='line'>
</span><span class='line'>$ docker service ps nginx
</span><span class='line'>ID                  NAME                IMAGE               NODE                DESIRED STATE       CURRENT STATE            ERROR               PORTS
</span><span class='line'>tspsypgis3qe        nginx.1             nginx:latest        swarm-manager       Running             Running 34 seconds ago                       
</span><span class='line'>g2f0ytwb2jjg        nginx.2             nginx:latest        swarm-worker-1      Running             Running 34 seconds ago                       
</span><span class='line'>clcmew8bcvom        nginx.3             nginx:latest        swarm-manager       Running             Running 34 seconds ago                       
</span><span class='line'>q293r8zwu692        nginx.4             nginx:latest        swarm-worker-2      Running             Running 34 seconds ago                       
</span><span class='line'>sv7bqa5e08zw        nginx.5             nginx:latest        swarm-worker-1      Running             Running 34 seconds ago                       
</span><span class='line'>r7qg9nk0a9o2        nginx.6             nginx:latest        swarm-worker-2      Running             Running 34 seconds ago   </span></code></pre></td></tr></table></div></figure>


<p>Test the Application:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ curl -i http://192.168.1.10
</span><span class='line'>HTTP/1.1 200 OK
</span><span class='line'>Server: nginx/1.15.0
</span><span class='line'>Date: Thu, 14 Jun 2018 10:01:34 GMT
</span><span class='line'>Content-Type: text/html
</span><span class='line'>Content-Length: 612
</span><span class='line'>Last-Modified: Tue, 05 Jun 2018 12:00:18 GMT
</span><span class='line'>Connection: keep-alive
</span><span class='line'>ETag: "5b167b52-264"
</span><span class='line'>Accept-Ranges: bytes</span></code></pre></td></tr></table></div></figure>


<p>Delete the Service:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>$ docker service rm nginx
</span><span class='line'>nginx</span></code></pre></td></tr></table></div></figure>


<h2>Delete the Swarm:</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ansible-playbook -i inventory.ini -u root delete-swarm.yml 
</span><span class='line'>
</span><span class='line'>PLAY RECAP 
</span><span class='line'>swarm-manager              : ok=2    changed=1    unreachable=0    failed=0   
</span><span class='line'>swarm-worker-1             : ok=2    changed=1    unreachable=0    failed=0   
</span><span class='line'>swarm-worker-2             : ok=2    changed=1    unreachable=0    failed=0   </span></code></pre></td></tr></table></div></figure>


<p>Ensure the Nodes is removed from the Swarm, SSH to your Swarm Manager:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ docker node ls
</span><span class='line'>Error response from daemon: This node is not a swarm manager. Use "docker swarm init" or "docker swarm join" to connect this node to swarm and try again.</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup a 3 Node Ceph Storage Cluster on Ubuntu 16]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/06/13/setup-a-3-node-ceph-storage-cluster-on-ubuntu-16/"/>
    <updated>2018-06-13T18:22:06-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/06/13/setup-a-3-node-ceph-storage-cluster-on-ubuntu-16</id>
    <content type="html"><![CDATA[<p><img src="https://ceph.com/wp-content/uploads/2016/07/Ceph_Logo_Standard_RGB_120411_fa.png" alt="" /></p>

<p>For some time now, I wanted to do a setup of Ceph, and I finally got the time to do it. This setup was done on Ubuntu 16.04</p>

<h2>What is Ceph</h2>

<p>Ceph is a storage platform that implements object storage on a single distributed computer cluster and provides interfaces for object, block and file-level storage.</p>

<ul>
<li>Object Storage:</li>
</ul>


<p>Ceph provides seemless access to objects via native language bindings or via the REST interface, RadosGW and also compatible for applications written for S3 and Swift.</p>

<ul>
<li>Block Storage:</li>
</ul>


<p>Ceph&rsquo;s Rados Block Device (RBD) provides access to block device images that are replicated and striped across the storage cluster.</p>

<ul>
<li>File System:</li>
</ul>


<p>Ceph provides a network file system (CephFS) that aims for high performance.</p>

<h2>Our Setup</h2>

<p>We will have 4 nodes. 1 Admin node where we will deploy our cluster with, and 3 nodes that will hold the data:</p>

<ul>
<li>ceph-admin (10.0.8.2)</li>
<li>ceph-node1 (10.0.8.3)</li>
<li>ceph-node2 (10.0.8.4)</li>
<li>ceph-node3 (10.0.8.5)</li>
</ul>


<h2>Host Entries</h2>

<p>If you don&rsquo;t have dns for your servers, setup the <code>/etc/hosts</code> file so that the names can resolves to the ip addresses:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>10.0.8.2 ceph-admin
</span><span class='line'>10.0.8.3 ceph-node1
</span><span class='line'>10.0.8.4 ceph-node2
</span><span class='line'>10.0.8.5 ceph-node3
</span></code></pre></td></tr></table></div></figure>


<h2>User Accounts and Passwordless SSH</h2>

<p>Setup the <code>ceph-system</code> user accounts on all the servers:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>useradd -d /home/ceph-system -s /bin/bash -m ceph-system
</span><span class='line'><span class="nv">$ </span>passwd ceph-system
</span></code></pre></td></tr></table></div></figure>


<p>Setup the created user part of the sudoers that is able to issue sudo commands without a pssword:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s2">&quot;ceph-system ALL = (root) NOPASSWD:ALL&quot;</span> <span class="p">|</span> sudo tee /etc/sudoers.d/ceph-system
</span><span class='line'><span class="nv">$ </span>chmod <span class="m">0440</span> /etc/sudoers.d/ceph-system
</span></code></pre></td></tr></table></div></figure>


<p>Switch user to <code>ceph-system</code> and generate SSH keys and copy the keys from the <code>ceph-admin</code> server to the ceph-nodes:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo su - ceph-system
</span><span class='line'><span class="nv">$ </span>ssh-keygen -t rsa -f ~/.ssh/id_rsa -P <span class="s2">&quot;&quot;</span>
</span><span class='line'><span class="nv">$ </span>ssh-copy-id ceph-system@ceph-node1
</span><span class='line'><span class="nv">$ </span>ssh-copy-id ceph-system@ceph-node2
</span><span class='line'><span class="nv">$ </span>ssh-copy-id ceph-system@ceph-node3
</span><span class='line'><span class="nv">$ </span>ssh-copy-id ceph-system@ceph-admin
</span></code></pre></td></tr></table></div></figure>


<h2>Pre-Requisite Software:</h2>

<p>Install Python and Ceph Deploy on each node:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo apt-get install python -y
</span><span class='line'><span class="nv">$ </span>sudo apt install ceph-deploy -y
</span></code></pre></td></tr></table></div></figure>


<p>Note: Please skip this section if you have additional disks on your servers.</p>

<p>The instances that im using to test this setup only has one disk, so I will be creating loop block devices using allocated files. This is not recommended as when the disk fails, all the (files/block device images) will be gone with that. But since im demonstrating this, I will create the block devices from a file:</p>

<p>I will be creating a 12GB file on each node</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo mkdir /raw-disks
</span><span class='line'><span class="nv">$ </span>sudo dd <span class="k">if</span><span class="o">=</span>/dev/zero <span class="nv">of</span><span class="o">=</span>/raw-disks/rd0 <span class="nv">bs</span><span class="o">=</span>1M <span class="nv">count</span><span class="o">=</span>12288
</span></code></pre></td></tr></table></div></figure>


<p>The use losetup to create the loop0 block device:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo losetup /dev/loop0 /raw-disks/rd0
</span></code></pre></td></tr></table></div></figure>


<p>As you can see the loop device is showing when listing the block devices:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>lsblk
</span><span class='line'>NAME      MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
</span><span class='line'>loop0       7:0    <span class="m">0</span>   12G  <span class="m">0</span> loop
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h2>Install Ceph</h2>

<p>Now let&rsquo;s install ceph using ceph-deploy to all our nodes:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo apt update <span class="o">&amp;&amp;</span> sudo apt upgrade -y
</span><span class='line'><span class="nv">$ </span>ceph-deploy install ceph-admin ceph-node1 ceph-node2 ceph-node3
</span></code></pre></td></tr></table></div></figure>


<p>The version I was running at the time:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ceph --version
</span><span class='line'>ceph version 10.2.9
</span></code></pre></td></tr></table></div></figure>


<h2>Initialize Ceph</h2>

<p>Initialize the Cluster with 3 Monitors:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ceph-deploy new ceph-node1 ceph-node2 ceph-node3
</span></code></pre></td></tr></table></div></figure>


<p>Add the initial monitors and gather the keys from the previous command:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ceph-deploy mon create-initial
</span></code></pre></td></tr></table></div></figure>


<p>At this point, we should be able to scan the block devices on our nodes:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ceph-deploy disk list ceph-node3
</span><span class='line'><span class="o">[</span>ceph-node3<span class="o">][</span>INFO  <span class="o">]</span> Running <span class="nb">command</span>: sudo /usr/sbin/ceph-disk list
</span><span class='line'><span class="o">[</span>ceph-node3<span class="o">][</span>DEBUG <span class="o">]</span> /dev/loop0 other
</span></code></pre></td></tr></table></div></figure>


<h2>Prepare the Disks:</h2>

<p>First we will zap the block devices and then prepare to create the partitions:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ceph-deploy disk zap ceph-node1:/dev/loop0 ceph-node2:/dev/loop0 ceph-node3:/dev/loop0
</span><span class='line'><span class="nv">$ </span>ceph-deploy osd prepare ceph-node1:/dev/loop0 ceph-node2:/dev/loop0 ceph-node3:/dev/loop0
</span><span class='line'><span class="o">[</span>ceph_deploy.osd<span class="o">][</span>DEBUG <span class="o">]</span> Host ceph-node1 is now ready <span class="k">for</span> osd use.
</span><span class='line'><span class="o">[</span>ceph_deploy.osd<span class="o">][</span>DEBUG <span class="o">]</span> Host ceph-node2 is now ready <span class="k">for</span> osd use.
</span><span class='line'><span class="o">[</span>ceph_deploy.osd<span class="o">][</span>DEBUG <span class="o">]</span> Host ceph-node3 is now ready <span class="k">for</span> osd use.
</span></code></pre></td></tr></table></div></figure>


<p>When you scan the nodes for their disks, you will notice that the partitions has been created:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ceph-deploy disk list ceph-node1
</span><span class='line'><span class="o">[</span>ceph-node1<span class="o">][</span>DEBUG <span class="o">]</span> /dev/loop0p2 ceph journal, <span class="k">for</span> /dev/loop0p1
</span><span class='line'><span class="o">[</span>ceph-node1<span class="o">][</span>DEBUG <span class="o">]</span> /dev/loop0p1 ceph data, active, cluster ceph, osd.0, journal /dev/loop0p2
</span></code></pre></td></tr></table></div></figure>


<p>Now let&rsquo;s activate the OSD&rsquo;s by using the data partitions:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ceph-deploy osd activate ceph-node1:/dev/loop0p1 ceph-node2:/dev/loop0p1 ceph-node3:/dev/loop0p1
</span></code></pre></td></tr></table></div></figure>


<h2>Redistribute Keys:</h2>

<p>Copy the configuration files and admin key to your admin node and ceph data nodes:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ceph-deploy admin ceph-admin ceph-node1 ceph-node2 ceph-node3
</span></code></pre></td></tr></table></div></figure>


<p>If you would like to add more OSD&rsquo;s (not tested):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ceph-deploy disk zap ceph-node1:/dev/loop1 ceph-node2:/dev/loop1 ceph-node3:/dev/loop1
</span><span class='line'><span class="nv">$ </span>ceph-deploy osd prepare ceph-node1:/dev/loop1 ceph-node2:/dev/loop1 ceph-node3:/dev/loop1
</span><span class='line'><span class="nv">$ </span>ceph-deploy osd activate ceph-node2:/dev/loop1p1:/dev/loop1p2 ceph-node2:/dev/loop1p1:/dev/loop1p2 ceph-node3:/dev/loop1p1:/dev/loop1p2
</span><span class='line'><span class="nv">$ </span>ceph-deploy admin ceph-node1 ceph-node2 ceph-node3
</span></code></pre></td></tr></table></div></figure>


<h2>Ceph Status:</h2>

<p>Have a look at your cluster status:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo ceph -s
</span><span class='line'>    cluster 8d704c8a-ac19-4454-a89f-89a5d5b7d94d
</span><span class='line'>     health HEALTH_OK
</span><span class='line'>     monmap e1: <span class="m">3</span> mons at <span class="o">{</span>ceph-node1<span class="o">=</span>10.0.8.3:6789/0,ceph-node2<span class="o">=</span>10.0.8.4:6789/0,ceph-node3<span class="o">=</span>10.0.8.5:6789/0<span class="o">}</span>
</span><span class='line'>            election epoch 10, quorum 0,1,2 ceph-node2,ceph-node3,ceph-node1
</span><span class='line'>     osdmap e14: <span class="m">3</span> osds: <span class="m">3</span> up, <span class="m">3</span> in
</span><span class='line'>            flags sortbitwise,require_jewel_osds
</span><span class='line'>      pgmap v29: <span class="m">64</span> pgs, <span class="m">1</span> pools, <span class="m">0</span> bytes data, <span class="m">0</span> objects
</span><span class='line'>            <span class="m">100</span> MB used, <span class="m">18298</span> MB / <span class="m">18398</span> MB avail
</span><span class='line'>                  <span class="m">64</span> active+clean
</span></code></pre></td></tr></table></div></figure>


<p>Everything looks good. Also change the permissions on this file, on all the nodes in order to execute the ceph, rados commands:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo chmod +r /etc/ceph/ceph.client.admin.keyring
</span></code></pre></td></tr></table></div></figure>


<h2>Storage Pools:</h2>

<p>List your pool in your Ceph Cluster:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rados lspools
</span><span class='line'>rbd
</span></code></pre></td></tr></table></div></figure>


<p>Let&rsquo;s create a new storage pool called <code>mypool</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ceph osd pool create mypool <span class="m">32</span> <span class="m">32</span>
</span><span class='line'>pool <span class="s1">&#39;mypool&#39;</span> created
</span></code></pre></td></tr></table></div></figure>


<p>Let&rsquo;s the list the storage pools again:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rados lspools
</span><span class='line'>rbd
</span><span class='line'>mypool
</span></code></pre></td></tr></table></div></figure>


<p>You can also use the ceph command to list the pools:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ceph osd pool ls
</span><span class='line'>rbd
</span><span class='line'>mypool
</span></code></pre></td></tr></table></div></figure>


<p>Create a Block Device Image:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rbd create --size <span class="m">1024</span> mypool/disk1 --image-feature layering
</span></code></pre></td></tr></table></div></figure>


<p>List the Block Device Images under your Pool:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rbd list mypool
</span><span class='line'>disk1
</span></code></pre></td></tr></table></div></figure>


<p>Retrieve information from your image:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rbd info mypool/disk1
</span><span class='line'>rbd image <span class="s1">&#39;disk1&#39;</span>:
</span><span class='line'>        size <span class="m">1024</span> MB in <span class="m">256</span> objects
</span><span class='line'>        order <span class="m">22</span> <span class="o">(</span><span class="m">4096</span> kB objects<span class="o">)</span>
</span><span class='line'>        block_name_prefix: rbd_data.1021643c9869
</span><span class='line'>        format: 2
</span><span class='line'>        features: layering
</span><span class='line'>        flags:
</span><span class='line'>        create_timestamp: Thu Jun  <span class="m">7</span> 23:48:23 2018
</span></code></pre></td></tr></table></div></figure>


<p>Create a local mapping of the image to a block device:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo rbd map mypool/disk1
</span><span class='line'>/dev/rbd0
</span></code></pre></td></tr></table></div></figure>


<p>Now we have a block device available at <code>/dev/rbd0</code>. Go ahead and mount it to <code>/mnt</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo mount /dev/rbd0 /mnt
</span></code></pre></td></tr></table></div></figure>


<p>We can then see it when we list our mounted disk partitions:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>df -h
</span><span class='line'>Filesystem      Size  Used Avail Use% Mounted on
</span><span class='line'>/dev/sda1        19G   13G  5.2G  72% /
</span><span class='line'>/dev/rbd0       976M  1.3M  908M   1% /mnt
</span></code></pre></td></tr></table></div></figure>


<p>We can also resize the disk on the fly, let&rsquo;s resize it from 1GB to 2GB:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rbd resize mypool/disk1 --size 2048
</span><span class='line'>Resizing image: 100% complete...done.
</span></code></pre></td></tr></table></div></figure>


<p>To grow the space we can use resize2fs for ext4 partitions and xfs_growfs for xfs partitions:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo resize2fs /dev/rbd0
</span><span class='line'>resize2fs 1.42.13 <span class="o">(</span>17-May-2015<span class="o">)</span>
</span><span class='line'>Filesystem at /dev/rbd0 is mounted on /mnt<span class="p">;</span> on-line resizing required
</span><span class='line'><span class="nv">old_desc_blocks</span> <span class="o">=</span> 1, <span class="nv">new_desc_blocks</span> <span class="o">=</span> 1
</span><span class='line'>The filesystem on /dev/rbd0 is now <span class="m">524288</span> <span class="o">(</span>4k<span class="o">)</span> blocks long.
</span></code></pre></td></tr></table></div></figure>


<p>When we look at our mounted partitions, you will notice that the size of our mounted partition has been increased in size:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>df -h
</span><span class='line'>Filesystem      Size  Used Avail Use% Mounted on
</span><span class='line'>/dev/sda1        19G   13G  5.2G   72% /
</span><span class='line'>/dev/rbd0       2.0G  1.5M  1.9G   1% /mnt
</span></code></pre></td></tr></table></div></figure>


<h2>Object Storage RadosGW</h2>

<p>Let&rsquo;s create a new pool where we will store our objects:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ceph osd pool create object-pool <span class="m">32</span> 32
</span><span class='line'>pool <span class="s1">&#39;object-pool&#39;</span> created
</span></code></pre></td></tr></table></div></figure>


<p>We will now create a local file, push the file to our object storage service, then delete our local file, download the file as a file with a different name, and read the contents:</p>

<p>Create the local file:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s2">&quot;ok&quot;</span> &gt; test.txt
</span></code></pre></td></tr></table></div></figure>


<p>Push the local file to our pool in our object storage:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rados put objects/data/test.txt ./test.txt --pool object-pool
</span></code></pre></td></tr></table></div></figure>


<p>List the pool (note that this can be executed from any node):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ $ </span>rados ls --pool object-pool
</span><span class='line'>objects/data/test.txt
</span></code></pre></td></tr></table></div></figure>


<p>Delete the local file, download the file from our object storage and read the contents:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rm -rf test.txt
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>rados get objects/data/test.txt ./newfile.txt --pool object-pool
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>cat ./newfile.txt
</span><span class='line'>ok
</span></code></pre></td></tr></table></div></figure>


<p>View the disk space from our storage-pool:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rados df --pool object-pool
</span><span class='line'>pool name                 KB      objects       clones     degraded      unfound           rd        rd KB           wr        wr KB
</span><span class='line'>object-pool                <span class="m">1</span>            <span class="m">1</span>            <span class="m">0</span>            <span class="m">0</span>            <span class="m">0</span>            <span class="m">0</span>            <span class="m">0</span>            <span class="m">1</span>            1
</span><span class='line'>  total used          <span class="m">261144</span>           37
</span><span class='line'>  total avail       18579372
</span><span class='line'>  total space       18840516
</span></code></pre></td></tr></table></div></figure>


<h2>Resources:</h2>

<ul>
<li><a href="https://stackoverflow.com/questions/39589696/ceph-too-many-pgs-per-osd-all-you-need-to-know">https://stackoverflow.com/questions/39589696/ceph-too-many-pgs-per-osd-all-you-need-to-know</a></li>
<li><a href="https://github.com/lucj/swarm-rexray-ceph">https://github.com/lucj/swarm-rexray-ceph</a></li>
<li><a href="http://docs.ceph.com/docs/mimic/rbd/">http://docs.ceph.com/docs/mimic/rbd/</a></li>
<li><a href="http://docs.ceph.com/docs/mimic/radosgw/">http://docs.ceph.com/docs/mimic/radosgw/</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello World Programs in Different Languages]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/06/09/hello-world-programs-in-different-languages/"/>
    <updated>2018-06-09T21:11:00-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/06/09/hello-world-programs-in-different-languages</id>
    <content type="html"><![CDATA[<p>This post will demonstrate running hello world programs in different languages and also providing return time statistics</p>

<h2>C++</h2>

<p>Code</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;iostream&gt;</span>
</span><span class='line'><span class="n">using</span> <span class="n">namespace</span> <span class="n">std</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;Hello, World!&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Compile:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>c++ hello_cpp.cpp -o hello_cpp
</span></code></pre></td></tr></table></div></figure>


<p>Run:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">time</span> ./hello_cpp
</span><span class='line'>Hello, World!
</span><span class='line'>
</span><span class='line'>real  0m0.005s
</span><span class='line'>user  0m0.001s
</span><span class='line'>sys     0m0.001s
</span></code></pre></td></tr></table></div></figure>


<h2>Golang:</h2>

<p>Code</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Hello, World!&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Compile:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>go build hello_golang.go
</span></code></pre></td></tr></table></div></figure>


<p>Run:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">time</span> ./hello_golang
</span><span class='line'>Hello, World!
</span><span class='line'>
</span><span class='line'>real  0m0.006s
</span><span class='line'>user  0m0.001s
</span><span class='line'>sys     0m0.003s
</span></code></pre></td></tr></table></div></figure>


<h2>Python</h2>

<p>Code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/env python</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="s">&quot;Hello, World!&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Make it executable:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>chmod +x ./hello_python.py
</span></code></pre></td></tr></table></div></figure>


<p>Run:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">time</span> ./hello_python.py
</span><span class='line'>Hello, World!
</span><span class='line'>
</span><span class='line'>real  0m0.033s
</span><span class='line'>user  0m0.015s
</span><span class='line'>sys     0m0.010s
</span></code></pre></td></tr></table></div></figure>


<h2>Ruby</h2>

<p>Code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#!/usr/bin/env ruby</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Hello, World!&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Make it executable:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>chmod +x ./hello_ruby.rb
</span></code></pre></td></tr></table></div></figure>


<p>Run:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">time</span> ./hello_ruby.rb
</span><span class='line'>Hello, World!
</span><span class='line'>
</span><span class='line'>real  0m0.136s
</span><span class='line'>user  0m0.080s
</span><span class='line'>sys     0m0.024s
</span></code></pre></td></tr></table></div></figure>


<h2>Java</h2>

<p>Code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">hello_java</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Hello, World!&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Compile:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>javac hello_java.java
</span></code></pre></td></tr></table></div></figure>


<p>Run:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">time </span>java hello_java
</span><span class='line'>Hello, World!
</span><span class='line'>
</span><span class='line'>real  0m0.114s
</span><span class='line'>user  0m0.086s
</span><span class='line'>sys     0m0.023s
</span></code></pre></td></tr></table></div></figure>


<h2>Resource:</h2>

<ul>
<li><a href="https://www.lifewire.com/command-return-time-command-4054237">https://www.lifewire.com/command-return-time-command-4054237</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup a Peer to Peer VPN With VPNCloud on Ubuntu]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/06/02/setup-a-peer-to-peer-vpn-with-vpncloud-on-ubuntu/"/>
    <updated>2018-06-02T14:15:33-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/06/02/setup-a-peer-to-peer-vpn-with-vpncloud-on-ubuntu</id>
    <content type="html"><![CDATA[<p>So I got 3 Dedicated Servers each having its own Static IP and I wanted a way to build a private network between these servers.</p>

<h2>The Scenario:</h2>

<p>3 Servers with the following IP&rsquo;s (not real IP addresses):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>- Server 1: 52.1.99.10
</span><span class='line'>- Server 2: 52.1.84.20
</span><span class='line'>- Server 3: 52.1.49.30</span></code></pre></td></tr></table></div></figure>


<p>So I want to have a private network, so that I can have the following internal network:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>- Server 1: 10.0.1.1
</span><span class='line'>- Server 2: 10.0.1.2
</span><span class='line'>- Server 3: 10.0.1.3</span></code></pre></td></tr></table></div></figure>


<p>A couple of years ago, I accomplished the end goal using GRE Tunnels, which works well, but wanted to try something different.</p>

<h2>VPNCloud</h2>

<p>So I stumbled upon VPNCloud.rs, which is a peer to peer VPN. Their description, quoted from their Github page:</p>

<p>&ldquo;VpnCloud is a simple VPN over UDP. It creates a virtual network interface on the host and forwards all received data via UDP to the destination. VpnCloud establishes a fully-meshed VPN network in a peer-to-peer manner. It can work on TUN devices (IP based) and TAP devices (Ethernet based).&rdquo;</p>

<p>This is exactly what I was looking for.</p>

<h2>Setting up a 3 node Private Network:</h2>

<p>Given the IP configuration above, we will setup a Private network between our 3 hosts.</p>

<p>Do some updates then grab the package from <a href="https://github.com/dswd/vpncloud.rs/releases">Github</a> and install VPNCloud:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>apt update <span class="o">&amp;&amp;</span> apt ugprade -y
</span><span class='line'><span class="nv">$ </span>wget https://github.com/dswd/vpncloud.rs/releases/download/v0.8.1/vpncloud_0.8.1_amd64.deb
</span><span class='line'><span class="nv">$ </span>dpkg -i ./vpncloud_0.8.1_amd64.deb
</span></code></pre></td></tr></table></div></figure>


<p>Let&rsquo;s start the configuration on Server-1, this config should also be setup on the other 2 servers, the config will remain the same, except for the <code>ifup</code> command. The other servers will look like:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Server-2: -&gt; ifup: <span class="s2">&quot;ifconfig $IFNAME 10.0.1.2/24 mtu 1400&quot;</span>
</span><span class='line'>Server-3: -&gt; ifup: <span class="s2">&quot;ifconfig $IFNAME 10.0.1.3/24 mtu 1400&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Getting back to the Server-1 config:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vim /etc/vpncloud/private.net
</span></code></pre></td></tr></table></div></figure>


<p>Example Config that I am using:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># each vpn running on their own port</span>
</span><span class='line'>port: 3210
</span><span class='line'>
</span><span class='line'><span class="c"># members of our private network</span>
</span><span class='line'>peers:
</span><span class='line'>  - srv2.domain.com:3210
</span><span class='line'>  - srv3.domain.com:3210
</span><span class='line'>
</span><span class='line'><span class="c"># timeouts</span>
</span><span class='line'>peer_timeout: 1800
</span><span class='line'>dst_timeout: 300
</span><span class='line'>
</span><span class='line'><span class="c"># token that identifies the network and helps to distinguish from other networks</span>
</span><span class='line'>magic: <span class="s2">&quot;76706e01&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># pre shared key</span>
</span><span class='line'>shared_key: <span class="s2">&quot;VeryStrongPreSharedKey_ThatShouldBeChanged&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># encryption</span>
</span><span class='line'>crypto: aes256
</span><span class='line'>
</span><span class='line'><span class="c"># device info</span>
</span><span class='line'>device_name: <span class="s2">&quot;vpncloud%d&quot;</span>
</span><span class='line'>device_type: tap
</span><span class='line'>
</span><span class='line'><span class="c"># vpn modes: hub / switch / router / normal</span>
</span><span class='line'>mode: normal
</span><span class='line'>
</span><span class='line'><span class="c"># subnet to be used for our private network</span>
</span><span class='line'>subnets:
</span><span class='line'>  - 10.0.1.0/24
</span><span class='line'>
</span><span class='line'><span class="c"># command to setup the network</span>
</span><span class='line'>ifup: <span class="s2">&quot;ifconfig $IFNAME 10.0.1.1/24 mtu 1400&quot;</span>
</span><span class='line'>ifdown: <span class="s2">&quot;ifconfig $IFNAME down&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># user/group owning the process</span>
</span><span class='line'>user: <span class="s2">&quot;root&quot;</span>
</span><span class='line'>group: <span class="s2">&quot;root&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Repeat the config on the other servers.</p>

<h2>Start the VPN Service:</h2>

<p>Restart the VPNCloud Service on all the Servers:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>service vpncloud@private start
</span></code></pre></td></tr></table></div></figure>


<p>Check the status:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>service vpncloud@private status
</span></code></pre></td></tr></table></div></figure>


<p>Check if the interface is up:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ifconfig vpncloud0
</span><span class='line'>vpncloud0 Link encap:Ethernet  HWaddr aa:bb:cc:dd:ee:ff
</span><span class='line'>          inet addr:10.0.1.1  Bcast:10.0.1.255  Mask:255.255.255.0
</span><span class='line'>          UP BROADCAST RUNNING MULTICAST  MTU:1400  Metric:1
</span><span class='line'>          RX packets:55 errors:0 dropped:0 overruns:0 frame:0
</span><span class='line'>          TX packets:71 errors:0 dropped:0 overruns:0 carrier:0
</span><span class='line'>          collisions:0 txqueuelen:1000
</span><span class='line'>          RX bytes:5046 <span class="o">(</span>5.0 KB<span class="o">)</span>  TX bytes:5526 <span class="o">(</span>5.5 KB<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ping the 3rd server via the private network:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ping -c <span class="m">3</span> 10.0.1.3
</span><span class='line'>PING 10.0.1.2 <span class="o">(</span>10.0.1.3<span class="o">)</span> 56<span class="o">(</span>84<span class="o">)</span> bytes of data.
</span><span class='line'><span class="m">64</span> bytes from 10.0.1.3: <span class="nv">icmp_seq</span><span class="o">=</span><span class="m">1</span> <span class="nv">ttl</span><span class="o">=</span><span class="m">64</span> <span class="nb">time</span><span class="o">=</span>0.852 ms
</span><span class='line'><span class="m">64</span> bytes from 10.0.1.3: <span class="nv">icmp_seq</span><span class="o">=</span><span class="m">2</span> <span class="nv">ttl</span><span class="o">=</span><span class="m">64</span> <span class="nb">time</span><span class="o">=</span>0.831 ms
</span><span class='line'><span class="m">64</span> bytes from 10.0.1.3: <span class="nv">icmp_seq</span><span class="o">=</span><span class="m">3</span> <span class="nv">ttl</span><span class="o">=</span><span class="m">64</span> <span class="nb">time</span><span class="o">=</span>0.800 ms
</span><span class='line'>
</span><span class='line'>--- 10.0.1.3 ping statistics ---
</span><span class='line'><span class="m">3</span> packets transmitted, <span class="m">3</span> received, 0% packet loss, <span class="nb">time </span>2028ms
</span><span class='line'>rtt min/avg/max/mdev <span class="o">=</span> 0.800/0.827/0.852/0.039 ms
</span></code></pre></td></tr></table></div></figure>


<p>Awesome service, please check their <a href="https://github.com/dswd/vpncloud.rs">Github Repo</a> out.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Add a Authentication Header to Your Python Flask App]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/06/01/add-a-authentication-header-to-your-python-flask-app/"/>
    <updated>2018-06-01T03:28:05-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/06/01/add-a-authentication-header-to-your-python-flask-app</id>
    <content type="html"><![CDATA[<p><img src="http://obj-cache.cloud.ruanbekker.com/flask.png" alt="" /></p>

<p>We will write a simple Python Flask application that requires authentication in order to respond with a 200 HTTP Status code.</p>

<h2>Python Flask Application:</h2>

<p>Our Python Flask application will require the Header <code>x-api-key dhuejso2dj3d0</code> in the HTTP Request, to give us a 200 HTTP Status code, if not, we will respond with a 401 Unauthorized Response:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">Flask</span><span class="p">,</span> <span class="n">request</span><span class="p">,</span> <span class="n">jsonify</span>
</span><span class='line'>
</span><span class='line'><span class="n">app</span> <span class="o">=</span> <span class="n">Flask</span><span class="p">(</span><span class="n">__name__</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@app.route</span><span class="p">(</span><span class="s">&#39;/&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">index</span><span class="p">():</span>
</span><span class='line'>    <span class="n">headers</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">headers</span>
</span><span class='line'>    <span class="n">auth</span> <span class="o">=</span> <span class="n">headers</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&quot;X-Api-Key&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">auth</span> <span class="o">==</span> <span class="s">&#39;asoidewfoef&#39;</span><span class="p">:</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">jsonify</span><span class="p">({</span><span class="s">&quot;message&quot;</span><span class="p">:</span> <span class="s">&quot;OK: Authorized&quot;</span><span class="p">}),</span> <span class="mi">200</span>
</span><span class='line'>    <span class="k">else</span><span class="p">:</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">jsonify</span><span class="p">({</span><span class="s">&quot;message&quot;</span><span class="p">:</span> <span class="s">&quot;ERROR: Unauthorized&quot;</span><span class="p">}),</span> <span class="mi">401</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
</span><span class='line'>    <span class="n">app</span><span class="o">.</span><span class="n">run</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>To get the headers, you can use <code>headers.get("X-Api-Key")</code> or <code>headers["X-Api-Key"]</code></p>

<p>Create a virtual environment, install flask and run the app:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>virtualenv .venv
</span><span class='line'><span class="nv">$ </span><span class="nb">source</span> .venv/bin/activate
</span><span class='line'><span class="nv">$ </span>python app.py
</span><span class='line'> * Serving Flask app <span class="s2">&quot;app&quot;</span> <span class="o">(</span>lazy loading<span class="o">)</span>
</span><span class='line'> * Environment: production
</span><span class='line'>   WARNING: Do not use the development server in a production environment.
</span><span class='line'>   Use a production WSGI server instead.
</span><span class='line'> * Debug mode: off
</span><span class='line'> * Running on http://127.0.0.1:5000/ <span class="o">(</span>Press CTRL+C to quit<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Requests to our App:</h2>

<p>Let&rsquo;s first make a request with no headers, which should then give us a 401 Unautorhized response:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -i http://localhost:5000
</span><span class='line'>
</span><span class='line'>HTTP/1.0 <span class="m">401</span> UNAUTHORIZED
</span><span class='line'>Content-Type: application/json
</span><span class='line'>Content-Length: 33
</span><span class='line'>Server: Werkzeug/0.14.1 Python/3.6.5
</span><span class='line'>Date: Fri, <span class="m">01</span> Jun <span class="m">2018</span> 07:26:25 GMT
</span><span class='line'>
</span><span class='line'><span class="o">{</span><span class="s2">&quot;message&quot;</span>:<span class="s2">&quot;ERROR: Unauthorized&quot;</span><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>Now let&rsquo;s include the authentication token in our headers. If the string is the same as the one in the code, we should see a 200 HTTP Response:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -i -H <span class="s1">&#39;x-api-key: asoidewfoef&#39;</span> http://localhost:5000
</span><span class='line'>
</span><span class='line'>HTTP/1.0 <span class="m">200</span> OK
</span><span class='line'>Content-Type: application/json
</span><span class='line'>Content-Length: 29
</span><span class='line'>Server: Werkzeug/0.14.1 Python/3.6.5
</span><span class='line'>Date: Fri, <span class="m">01</span> Jun <span class="m">2018</span> 07:27:03 GMT
</span><span class='line'>
</span><span class='line'><span class="o">{</span><span class="s2">&quot;message&quot;</span>:<span class="s2">&quot;OK: Authorized&quot;</span><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Note:</h2>

<p>From a best practice, its not a good decision to hard code sensitive details in your code, but rather read that from an encrypted database and store that in your applications environment variables, and let your application read from the environment variables, something like that :D</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Clearing Up Disk Space on Docker Swarm by Removing Unused Data With Prune]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/06/01/clearing-up-disk-space-on-docker-swarm-by-removing-unused-data-with-prune/"/>
    <updated>2018-06-01T02:19:21-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/06/01/clearing-up-disk-space-on-docker-swarm-by-removing-unused-data-with-prune</id>
    <content type="html"><![CDATA[<p><img src="http://obj-cache.cloud.ruanbekker.com/docker-logo.png" alt="" /></p>

<p>After some time, your system can run out of disk space when running a lot of containers / volumes etc. You will find that at times, you will have a lot of unused containers, stopped containers, unused images, unused networks that is just sitting there, which consumes data on your nodes.</p>

<p>One way to clean them is by using <code>docker system prune</code>.</p>

<h2>Check Docker Disk Space</h2>

<p>The command below will show the amount of disk space consumed, and how much is reclaimable:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker system df
</span><span class='line'>TYPE                TOTAL               ACTIVE              SIZE                RECLAIMABLE
</span><span class='line'>Images              <span class="m">229</span>                 <span class="m">125</span>                 23.94GB             14.65GB <span class="o">(</span>61%<span class="o">)</span>
</span><span class='line'>Containers          <span class="m">322</span>                 <span class="m">16</span>                  8.229GB             8.222GB <span class="o">(</span>99%<span class="o">)</span>
</span><span class='line'>Local Volumes       <span class="m">77</span>                  <span class="m">41</span>                  698MB               19.13MB <span class="o">(</span>2%<span class="o">)</span>
</span><span class='line'>Build Cache                                                 0B                  0B
</span></code></pre></td></tr></table></div></figure>


<h2>Removing Unsued Data:</h2>

<p>By using Prune, we can remove the unused resources that is consuming data:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker system prune
</span><span class='line'>
</span><span class='line'>WARNING! This will remove:
</span><span class='line'>        - all stopped containers
</span><span class='line'>        - all networks not used by at least one container
</span><span class='line'>        - all dangling images
</span><span class='line'>        - all build cache
</span><span class='line'>Are you sure you want to <span class="k">continue</span>? <span class="o">[</span>y/N<span class="o">]</span> y
</span><span class='line'>
</span><span class='line'>Deleted Containers:
</span><span class='line'>a3d7db158e065d0c86160fd5d688875f8b7435848ea91db57ed007
</span><span class='line'>47890dcfea4a105f43e790dd8ad3c6d7c4ad7e738186c034d7a46b
</span><span class='line'>
</span><span class='line'>Deleted Networks:
</span><span class='line'>traefik-net
</span><span class='line'>app_appnet
</span><span class='line'>
</span><span class='line'>Deleted Images:
</span><span class='line'>deleted: sha256:5b9909c10e93afec
</span><span class='line'>deleted: sha256:d81eesdfihweo3rk
</span><span class='line'>
</span><span class='line'>Total reclaimed space: 14.18GB
</span></code></pre></td></tr></table></div></figure>


<p>For related <a href="https://goo.gl/L2NYxU">Docker</a> posts.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SSH Tools That Comes in Handy When Dealing With Multiple Servers]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/05/31/ssh-tools-that-comes-in-handy-when-dealing-with-multiple-servers/"/>
    <updated>2018-05-31T05:18:11-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/05/31/ssh-tools-that-comes-in-handy-when-dealing-with-multiple-servers</id>
    <content type="html"><![CDATA[<p>When dealing with a lot of servers where you need to ssh to different servers and especially if they require different authentication from different private ssh keys, it kinda gets annoying specifying the private key you need, when you want to SSH to them.</p>

<h2>SSH Config</h2>

<p>SSH Config: <code>~/.ssh/config</code> is powerful!</p>

<p>In this config file, you can specify the remote host, the key, user and the alias, so that when you want to SSH to it, you dont have to use the fully qualified domain name or IP address.</p>

<p>Let&rsquo;s take for example our server-a with the following details:</p>

<ul>
<li>FQDN: host1.eu.compute.domain.coom</li>
<li>User: james</li>
<li>PrivateKeyFile: /path/to/key.pem</li>
<li>Disable Strict Host Checking</li>
</ul>


<p>So to access that host, you would use the following command (without ssh config):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ssh -oStrictHostKeyChecking<span class="o">=</span>no -oUserKnownHostsFile<span class="o">=</span>/dev/null -i /path/to/key.pem james@host1.eu.compute.domain.com
</span></code></pre></td></tr></table></div></figure>


<p>Now with SSH Config, open up the config file:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vim ~/.ssh/config
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>and declare the host details:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Host host1
</span><span class='line'>  Hostname host1.eu.compute.domain.com
</span><span class='line'>  User james
</span><span class='line'>  IdentityFile /path/to/key.pem
</span><span class='line'>  StrictHostKeyChecking no
</span><span class='line'>  UserKnownHostsFile /dev/null
</span></code></pre></td></tr></table></div></figure>


<p>Now, if we need to SSH to it, we can do it as simply as:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ssh host1
</span></code></pre></td></tr></table></div></figure>


<p>as it will pull in the configs from the config that is described from the host alias that you calling from the argument of the ssh binary.</p>

<h2>SSH Agent</h2>

<p>Another handy tool is <code>ssh-agent</code>, if you have password encryption on your key, everytime you need to ssh, a password will be prompted. A way to get around this is to use the ssh-agent.</p>

<p>We also want to set a TTL to the ssh-agent, as we don&rsquo;t want it to run forever (unless you want it to). In this case I will let the ssh-agent exit after 2 hours. It will also only run in the shell session from where you execute it. Lets start up our ssh-agent:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">eval</span> <span class="k">$(</span>ssh-agent -t 7200<span class="k">)</span>
</span><span class='line'>Agent pid <span class="m">88760</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now add the private key to the ssh-agent. If your private key is password protected, it will prompt you for the password and after successful verification the key will be added:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ssh-add /path/to/key.pem
</span><span class='line'>Identity added: /path/to/key.pem <span class="o">(</span>/path/to/key.pem<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Multiple Github Accounts:</h2>

<p>Here is a great post on how to work with different GitHub Accounts:
- <a href="https://gist.github.com/jexchan/2351996">https://gist.github.com/jexchan/2351996</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Wildcard SSL Certificate With Letsencrypt on Docker Swarm Using Traefik]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/05/28/wildcard-ssl-certificate-with-letsencrypt-on-docker-swarm-using-traefik/"/>
    <updated>2018-05-28T17:36:17-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/05/28/wildcard-ssl-certificate-with-letsencrypt-on-docker-swarm-using-traefik</id>
    <content type="html"><![CDATA[<p><img src="http://obj-cache.cloud.ruanbekker.com/traefik.png" alt="" /></p>

<p>With Letsencrypt supporting Wildcard certificates is really awesome. Now, we can setup traefik to listen on 443, acting as a reverse proxy and is doing HTTPS Termination to our Applications thats running in our Swarm.</p>

<h2>Architectural Design:</h2>

<p>At the moment we have 3 Manager Nodes, and 5 Worker Nodes:</p>

<ul>
<li>Using a Dummy Domain example.com which is set to the 3 Public IP&rsquo;s of our Manager Nodes</li>
<li>DNS is set for: <code>example.com</code> A Record to: <code>52.10.1.10</code>, <code>52.10.1.11</code>, <code>52.10.1.12</code></li>
<li>DNS is set for: <code>*.example.com</code> CNAME to <code>example.com</code></li>
<li>Any application that is spawned into our Swarm, will be labeled with a <code>traefik.frontend.rule</code> which will be routed to the service and redirected from HTTP to HTTPS</li>
</ul>


<h2>Create the Overlay Network:</h2>

<p>Create the overlay network that will be used for our stack:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker network create --driver overlay appnet
</span></code></pre></td></tr></table></div></figure>


<h2>Create the Compose Files for our Stacks:</h2>

<p>Create the Traefik Service Compose file, we will deploy it in Global Mode, constraint to our Manager Nodes, so that every manager node has a copy of traefik running.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cat &gt; traefik-compose.yml <span class="s">&lt;&lt; EOF</span>
</span><span class='line'>
</span><span class='line'><span class="s">version: &quot;3.4&quot;</span>
</span><span class='line'><span class="s">services:</span>
</span><span class='line'><span class="s">  proxy:</span>
</span><span class='line'><span class="s">    image: traefik:latest</span>
</span><span class='line'><span class="s">    command:</span>
</span><span class='line'><span class="s">      - &quot;--api&quot;</span>
</span><span class='line'><span class="s">      - &quot;--entrypoints=Name:http Address::80 Redirect.EntryPoint:https&quot;</span>
</span><span class='line'><span class="s">      - &quot;--entrypoints=Name:https Address::443 TLS&quot;</span>
</span><span class='line'><span class="s">      - &quot;--defaultentrypoints=http,https&quot;</span>
</span><span class='line'><span class="s">      - &quot;--acme&quot;</span>
</span><span class='line'><span class="s">      - &quot;--acme.storage=/etc/traefik/acme/acme.json&quot;</span>
</span><span class='line'><span class="s">      - &quot;--acme.entryPoint=https&quot;</span>
</span><span class='line'><span class="s">      - &quot;--acme.httpChallenge.entryPoint=http&quot;</span>
</span><span class='line'><span class="s">      - &quot;--acme.onHostRule=true&quot;</span>
</span><span class='line'><span class="s">      - &quot;--acme.onDemand=false&quot;</span>
</span><span class='line'><span class="s">      - &quot;--acme.email=me@example.com&quot;</span>
</span><span class='line'><span class="s">      - &quot;--docker&quot;</span>
</span><span class='line'><span class="s">      - &quot;--docker.swarmMode&quot;</span>
</span><span class='line'><span class="s">      - &quot;--docker.domain=example.com&quot;</span>
</span><span class='line'><span class="s">      - &quot;--docker.watch&quot;</span>
</span><span class='line'><span class="s">    volumes:</span>
</span><span class='line'><span class="s">      - /var/run/docker.sock:/var/run/docker.sock</span>
</span><span class='line'><span class="s">      - /mnt/traefik/acme.json:/etc/traefik/acme/acme.json</span>
</span><span class='line'><span class="s">    networks:</span>
</span><span class='line'><span class="s">      - appnet</span>
</span><span class='line'><span class="s">    ports:</span>
</span><span class='line'><span class="s">      - target: 80</span>
</span><span class='line'><span class="s">        published: 80</span>
</span><span class='line'><span class="s">        mode: host</span>
</span><span class='line'><span class="s">      - target: 443</span>
</span><span class='line'><span class="s">        published: 443</span>
</span><span class='line'><span class="s">        mode: host</span>
</span><span class='line'><span class="s">      - target: 8080</span>
</span><span class='line'><span class="s">        published: 8080</span>
</span><span class='line'><span class="s">        mode: host</span>
</span><span class='line'><span class="s">    deploy:</span>
</span><span class='line'><span class="s">      mode: global</span>
</span><span class='line'><span class="s">      placement:</span>
</span><span class='line'><span class="s">        constraints:</span>
</span><span class='line'><span class="s">          - node.role == manager</span>
</span><span class='line'><span class="s">      update_config:</span>
</span><span class='line'><span class="s">        parallelism: 1</span>
</span><span class='line'><span class="s">        delay: 10s</span>
</span><span class='line'><span class="s">      restart_policy:</span>
</span><span class='line'><span class="s">        condition: on-failure</span>
</span><span class='line'><span class="s">networks:</span>
</span><span class='line'><span class="s">  appnet:</span>
</span><span class='line'><span class="s">    external: true</span>
</span><span class='line'>
</span><span class='line'><span class="s">EOF</span>
</span></code></pre></td></tr></table></div></figure>


<p>Create the Application Compose file, in this example we will be deploying a Ghost Blog:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cat &gt; ghost-compose.yml <span class="s">&lt;&lt; EOF</span>
</span><span class='line'>
</span><span class='line'><span class="s">version: &#39;3.4&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="s">services:</span>
</span><span class='line'><span class="s">  blog:</span>
</span><span class='line'><span class="s">    image: ghost:1.22.7-alpine</span>
</span><span class='line'><span class="s">    networks:</span>
</span><span class='line'><span class="s">      - appnet</span>
</span><span class='line'><span class="s">    deploy:</span>
</span><span class='line'><span class="s">      mode: replicated</span>
</span><span class='line'><span class="s">      replicas: 1</span>
</span><span class='line'><span class="s">      placement:</span>
</span><span class='line'><span class="s">        constraints: </span>
</span><span class='line'><span class="s">          - node.role == worker</span>
</span><span class='line'><span class="s">      labels:</span>
</span><span class='line'><span class="s">        - &quot;traefik.backend.loadbalancer.sticky=false&quot;</span>
</span><span class='line'><span class="s">        - &quot;traefik.backend.loadbalancer.swarm=true&quot;</span>
</span><span class='line'><span class="s">        - &quot;traefik.backend=blog-1&quot;</span>
</span><span class='line'><span class="s">        - &quot;traefik.docker.network=appnet&quot;</span>
</span><span class='line'><span class="s">        - &quot;traefik.entrypoints=https&quot;</span>
</span><span class='line'><span class="s">        - &quot;traefik.frontend.passHostHeader=true&quot;</span>
</span><span class='line'><span class="s">        - &quot;traefik.frontend.rule=Host:blog.example.com&quot;</span>
</span><span class='line'><span class="s">        - &quot;traefik.port=2368&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="s">networks:</span>
</span><span class='line'><span class="s">  appnet:</span>
</span><span class='line'><span class="s">    external: true</span>
</span><span class='line'>
</span><span class='line'><span class="s">EOF</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Prepare the Path for Traefik:</h2>

<p>We have a <a href="https://sysadmins.co.za/tag/glusterfs/">replicated volume</a> under our <code>/mnt</code> partition, so that all our managers can read from that path, create the file and provide the sufficient permissions:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mkdir -p /mnt/traefik
</span><span class='line'><span class="nv">$ </span>touch /mnt/traefik/acme.json
</span><span class='line'><span class="nv">$ </span>chmod <span class="m">600</span> /mnt/traefik/acme.json
</span></code></pre></td></tr></table></div></figure>


<h2>Deploy the Stacks:</h2>

<p>Deploy the Traefik Stack:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker stack deploy -c traefik-compose.yml traefik
</span></code></pre></td></tr></table></div></figure>


<p>Wait until the services are deployed:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker stack services traefik
</span><span class='line'>ID                  NAME                MODE                REPLICAS            IMAGE               PORTS
</span><span class='line'>f8ru5gbcgd2v        traefik_proxy       global              3/3                 traefik:latest
</span></code></pre></td></tr></table></div></figure>


<p>Deploy the Application Stack:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker stack deploy -c ghost-compose.yml apps
</span></code></pre></td></tr></table></div></figure>


<p>Verify that the Application Stack has been deployed:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker stack services apps
</span><span class='line'>ID                  NAME                MODE                REPLICAS            IMAGE                          PORTS
</span><span class='line'>516zlfs2cfdv        apps_blog           replicated          1/1                 ghost:1.22.7-alpine
</span></code></pre></td></tr></table></div></figure>


<p>At the moment we will have 2 stacks in our Swarm:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker stack ls
</span><span class='line'>NAME                SERVICES
</span><span class='line'>apps                1
</span><span class='line'>traefik             1
</span></code></pre></td></tr></table></div></figure>


<h2>Test the Application:</h2>

<p>Let&rsquo;s test our blog to see if we get redirected to <a href="HTTPS:">HTTPS:</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -iL http://blog.example.com
</span><span class='line'>HTTP/1.1 <span class="m">302</span> Found
</span><span class='line'>Location: https://blog.example.com:443/
</span><span class='line'>Date: Mon, <span class="m">28</span> May <span class="m">2018</span> 22:02:41 GMT
</span><span class='line'>Content-Length: 5
</span><span class='line'>Content-Type: text/plain<span class="p">;</span> <span class="nv">charset</span><span class="o">=</span>utf-8
</span><span class='line'>
</span><span class='line'>HTTP/1.1 <span class="m">200</span> OK
</span><span class='line'>Cache-Control: public, max-age<span class="o">=</span>0
</span><span class='line'>Content-Type: text/html<span class="p">;</span> <span class="nv">charset</span><span class="o">=</span>utf-8
</span><span class='line'>Date: Mon, <span class="m">28</span> May <span class="m">2018</span> 22:02:42 GMT
</span><span class='line'>Etag: W/<span class="s2">&quot;4166-J2ooSIa8gtTkYjbnr7vnPUFlRJI&quot;</span>
</span><span class='line'>Vary: Accept-Encoding
</span><span class='line'>X-Powered-By: Express
</span><span class='line'>Transfer-Encoding: chunked
</span></code></pre></td></tr></table></div></figure>


<p>Works like a charm! Traefik FTW!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Web Forms With Python Flask and the WTForms Module With Bootstrap]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/05/27/web-forms-with-python-flask-and-the-wtforms-module-with-bootstrap/"/>
    <updated>2018-05-27T17:44:41-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/05/27/web-forms-with-python-flask-and-the-wtforms-module-with-bootstrap</id>
    <content type="html"><![CDATA[<p><img src="http://obj-cache.cloud.ruanbekker.com/flask.png" alt="" /></p>

<p>Quick demo with Web Forms using the WTForms module in Python Flask.</p>

<h2>Requirements:</h2>

<p>Install the required dependencies:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>pip install flask wtforms
</span></code></pre></td></tr></table></div></figure>


<h2>Application:</h2>

<p>The Application code of the Web Forms Application. Note that we are also using validation, as we want the user to complete all the fields. I am also including a function that logs to the directory where the application is running, for previewing the data that was logged.</p>

<figure class='code'><figcaption><span>app.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">random</span> <span class="kn">import</span> <span class="n">randint</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">time</span> <span class="kn">import</span> <span class="n">strftime</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">Flask</span><span class="p">,</span> <span class="n">render_template</span><span class="p">,</span> <span class="n">flash</span><span class="p">,</span> <span class="n">request</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">wtforms</span> <span class="kn">import</span> <span class="n">Form</span><span class="p">,</span> <span class="n">TextField</span><span class="p">,</span> <span class="n">TextAreaField</span><span class="p">,</span> <span class="n">validators</span><span class="p">,</span> <span class="n">StringField</span><span class="p">,</span> <span class="n">SubmitField</span>
</span><span class='line'>
</span><span class='line'><span class="n">DEBUG</span> <span class="o">=</span> <span class="bp">True</span>
</span><span class='line'><span class="n">app</span> <span class="o">=</span> <span class="n">Flask</span><span class="p">(</span><span class="n">__name__</span><span class="p">)</span>
</span><span class='line'><span class="n">app</span><span class="o">.</span><span class="n">config</span><span class="o">.</span><span class="n">from_object</span><span class="p">(</span><span class="n">__name__</span><span class="p">)</span>
</span><span class='line'><span class="n">app</span><span class="o">.</span><span class="n">config</span><span class="p">[</span><span class="s">&#39;SECRET_KEY&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s">&#39;SjdnUends821Jsdlkvxh391ksdODnejdDw&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">ReusableForm</span><span class="p">(</span><span class="n">Form</span><span class="p">):</span>
</span><span class='line'>    <span class="n">name</span> <span class="o">=</span> <span class="n">TextField</span><span class="p">(</span><span class="s">&#39;Name:&#39;</span><span class="p">,</span> <span class="n">validators</span><span class="o">=</span><span class="p">[</span><span class="n">validators</span><span class="o">.</span><span class="n">required</span><span class="p">()])</span>
</span><span class='line'>    <span class="n">surname</span> <span class="o">=</span> <span class="n">TextField</span><span class="p">(</span><span class="s">&#39;Surname:&#39;</span><span class="p">,</span> <span class="n">validators</span><span class="o">=</span><span class="p">[</span><span class="n">validators</span><span class="o">.</span><span class="n">required</span><span class="p">()])</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">get_time</span><span class="p">():</span>
</span><span class='line'>    <span class="n">time</span> <span class="o">=</span> <span class="n">strftime</span><span class="p">(</span><span class="s">&quot;%Y-%m-</span><span class="si">%d</span><span class="s">T%H:%M&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">time</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">write_to_disk</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="n">surname</span><span class="p">,</span> <span class="n">email</span><span class="p">):</span>
</span><span class='line'>    <span class="n">data</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">&#39;file.log&#39;</span><span class="p">,</span> <span class="s">&#39;a&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">timestamp</span> <span class="o">=</span> <span class="n">get_time</span><span class="p">()</span>
</span><span class='line'>    <span class="n">data</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">&#39;DateStamp={}, Name={}, Surname={}, Email={} </span><span class="se">\n</span><span class="s">&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">timestamp</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">surname</span><span class="p">,</span> <span class="n">email</span><span class="p">))</span>
</span><span class='line'>    <span class="n">data</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@app.route</span><span class="p">(</span><span class="s">&quot;/&quot;</span><span class="p">,</span> <span class="n">methods</span><span class="o">=</span><span class="p">[</span><span class="s">&#39;GET&#39;</span><span class="p">,</span> <span class="s">&#39;POST&#39;</span><span class="p">])</span>
</span><span class='line'><span class="k">def</span> <span class="nf">hello</span><span class="p">():</span>
</span><span class='line'>    <span class="n">form</span> <span class="o">=</span> <span class="n">ReusableForm</span><span class="p">(</span><span class="n">request</span><span class="o">.</span><span class="n">form</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="c">#print(form.errors)</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">request</span><span class="o">.</span><span class="n">method</span> <span class="o">==</span> <span class="s">&#39;POST&#39;</span><span class="p">:</span>
</span><span class='line'>        <span class="n">name</span><span class="o">=</span><span class="n">request</span><span class="o">.</span><span class="n">form</span><span class="p">[</span><span class="s">&#39;name&#39;</span><span class="p">]</span>
</span><span class='line'>        <span class="n">surname</span><span class="o">=</span><span class="n">request</span><span class="o">.</span><span class="n">form</span><span class="p">[</span><span class="s">&#39;surname&#39;</span><span class="p">]</span>
</span><span class='line'>  <span class="n">email</span><span class="o">=</span><span class="n">request</span><span class="o">.</span><span class="n">form</span><span class="p">[</span><span class="s">&#39;email&#39;</span><span class="p">]</span>
</span><span class='line'>  <span class="n">password</span><span class="o">=</span><span class="n">request</span><span class="o">.</span><span class="n">form</span><span class="p">[</span><span class="s">&#39;password&#39;</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="n">form</span><span class="o">.</span><span class="n">validate</span><span class="p">():</span>
</span><span class='line'>            <span class="n">write_to_disk</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="n">surname</span><span class="p">,</span> <span class="n">email</span><span class="p">)</span>
</span><span class='line'>            <span class="n">flash</span><span class="p">(</span><span class="s">&#39;Hello: {} {}&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="n">surname</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">else</span><span class="p">:</span>
</span><span class='line'>            <span class="n">flash</span><span class="p">(</span><span class="s">&#39;Error: All Fields are Required&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">render_template</span><span class="p">(</span><span class="s">&#39;index.html&#39;</span><span class="p">,</span> <span class="n">form</span><span class="o">=</span><span class="n">form</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&quot;__main__&quot;</span><span class="p">:</span>
</span><span class='line'>    <span class="n">app</span><span class="o">.</span><span class="n">run</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<h2>HTML Template:</h2>

<p><code>templates/index.html</code></p>

<script src="https://gist.github.com/ruanbekker/f552f1e57aeb038e8c10b148ed1e4c2b.js"></script>


<p>This will result in a basic web form like this:</p>

<p><img src="https://i.snag.gy/3x98UV.jpg" alt="" /></p>

<h2>Resources:</h2>

<ul>
<li><a href="https://getbootstrap.com/docs/4.1/components/alerts/">https://getbootstrap.com/docs/4.1/components/alerts/</a></li>
<li><a href="https://pythonspot.com/en/download-flask-examples/">https://pythonspot.com/en/download-flask-examples/</a></li>
<li><a href="https://flask-wtf.readthedocs.io/en/stable/quickstart.html">https://flask-wtf.readthedocs.io/en/stable/quickstart.html</a></li>
<li><a href="https://pythonspot.com/flask-web-forms/">https://pythonspot.com/flask-web-forms/</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Generate Random Characters With Python Using Random and String Modules]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/05/23/generate-random-characters-with-python-using-random-and-string-modules/"/>
    <updated>2018-05-23T06:29:06-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/05/23/generate-random-characters-with-python-using-random-and-string-modules</id>
    <content type="html"><![CDATA[<p>When generating random characters for whatever reason, passwords, secrets-keys etc, you could use the <code>uuid</code> module, which looks like this:</p>

<figure class='code'><figcaption><span>Random String with UUID</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">from</span> <span class="nn">uuid</span> <span class="kn">import</span> <span class="n">uuid4</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="s">&quot;Your string is: {0}&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">uuid4</span><span class="p">())</span> <span class="p">)</span>
</span><span class='line'><span class="n">Your</span> <span class="n">string</span> <span class="ow">is</span><span class="p">:</span> <span class="mi">53</span><span class="n">a6e1a7</span><span class="o">-</span><span class="n">a2c7</span><span class="o">-</span><span class="mi">488</span><span class="n">e</span><span class="o">-</span><span class="n">bed9</span><span class="o">-</span><span class="n">d76662de9c5f</span>
</span></code></pre></td></tr></table></div></figure>


<p>But if you want to be more specific, like digits, letters, capitalization etc, you can use the <code>string</code> and <code>random</code> modules to do so. First we will generate a random string containing only letters:</p>

<figure class='code'><figcaption><span>Random String with letters</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">from</span> <span class="nn">string</span> <span class="kn">import</span> <span class="n">ascii_letters</span><span class="p">,</span> <span class="n">punctuation</span><span class="p">,</span> <span class="n">digits</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">from</span> <span class="nn">random</span> <span class="kn">import</span> <span class="n">choice</span><span class="p">,</span> <span class="n">randint</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="nb">min</span> <span class="o">=</span> <span class="mi">12</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="nb">max</span> <span class="o">=</span> <span class="mi">15</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">string_format</span> <span class="o">=</span> <span class="n">ascii_letters</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">generated_string</span> <span class="o">=</span> <span class="s">&quot;&quot;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">choice</span><span class="p">(</span><span class="n">string_format</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">randint</span><span class="p">(</span><span class="nb">min</span><span class="p">,</span> <span class="nb">max</span><span class="p">)))</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="s">&quot;Your String is: {0}&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">generated_string</span><span class="p">))</span>
</span><span class='line'><span class="n">Your</span> <span class="n">String</span> <span class="ow">is</span><span class="p">:</span> <span class="n">zNeUFluvZwED</span>
</span></code></pre></td></tr></table></div></figure>


<p>As you can see, you have a randomized string which will be always at least 12 characters and max 15 characters, which is lower and upper case. You can also use the <code>lower</code> and <code>upper</code> functions if you want to capitalize or lower case your string:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">generated_string</span><span class="o">.</span><span class="n">lower</span><span class="p">()</span>
</span><span class='line'><span class="s">&#39;zneufluvzwed&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">generated_string</span><span class="o">.</span><span class="n">upper</span><span class="p">()</span>
</span><span class='line'><span class="s">&#39;ZNEUFLUVZWED&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Let&rsquo;s add some logic so that we can have a more randomized characters with digits, punctuations etc:</p>

<figure class='code'><figcaption><span>Random String with Letters, Punctuations and Digits</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">from</span> <span class="nn">string</span> <span class="kn">import</span> <span class="n">ascii_letters</span><span class="p">,</span> <span class="n">punctuation</span><span class="p">,</span> <span class="n">digits</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">from</span> <span class="nn">random</span> <span class="kn">import</span> <span class="n">choice</span><span class="p">,</span> <span class="n">randint</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="nb">min</span> <span class="o">=</span> <span class="mi">12</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="nb">max</span> <span class="o">=</span> <span class="mi">15</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">string_format</span> <span class="o">=</span> <span class="n">ascii_letters</span> <span class="o">+</span> <span class="n">punctuation</span> <span class="o">+</span> <span class="n">digits</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">generated_string</span> <span class="o">=</span> <span class="s">&quot;&quot;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">choice</span><span class="p">(</span><span class="n">string_format</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">randint</span><span class="p">(</span><span class="nb">min</span><span class="p">,</span> <span class="nb">max</span><span class="p">)))</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="s">&quot;Your String is: {0}&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">generated_string</span><span class="p">))</span>
</span><span class='line'><span class="n">Your</span> <span class="n">String</span> <span class="ow">is</span><span class="p">:</span> <span class="n">Bu</span><span class="o">&gt;</span><span class="p">}</span><span class="n">x_</span><span class="o">/-</span><span class="n">H5</span><span class="p">)</span><span class="n">fLAr</span>
</span></code></pre></td></tr></table></div></figure>


<p>More <a href="https://goo.gl/G9VRpe">Python</a> related blog posts.</p>

<center>
  <script type='text/javascript' src='https://ko-fi.com/widgets/widget_2.js'></script>
  <script type='text/javascript'>kofiwidget2.init('Buy Me a Coffee', '#46b798', 'A6423ZIQ');kofiwidget2.draw();</script>
</center>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Manage Scaleway Instances via Their API Like a Boss With Their Command Line Tool Scw]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/05/09/manage-scaleway-instances-via-their-api-like-a-boss-with-their-command-line-tool-scw/"/>
    <updated>2018-05-09T12:31:11-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/05/09/manage-scaleway-instances-via-their-api-like-a-boss-with-their-command-line-tool-scw</id>
    <content type="html"><![CDATA[<p><img src="https://preview.ibb.co/bBRhn7/scw.png" alt="" /></p>

<p>Let&rsquo;s set things straight: I am a command line fan boy, If I can do the things I have to do with a command line interface, i&rsquo;m happy! And that means automation ftw! :D</p>

<h2>Scaleway Command Line Interface:</h2>

<p>I have been using Scaleway for about 2 years now, and absolutely loving their services! So I recently found their <a href="https://github.com/scaleway/scaleway-cli">command line interface utility: scw</a>, which is written in golang and has a very similar feel to docker.</p>

<h2>Install the SCW CLI Tool:</h2>

<p>A golang environment is needed and I will be using docker to drop myself into a golang environment and then install the scw utility:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker run -it golang:alpine sh
</span><span class='line'><span class="nv">$ </span>apk update
</span><span class='line'><span class="nv">$ </span>apk add openssl git openssh curl
</span><span class='line'><span class="nv">$ </span>go get -u github.com/scaleway/scaleway-cli/cmd/scw
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>Verify that it was installed:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>scw --version
</span><span class='line'>scw version v1.16+dev, build
</span></code></pre></td></tr></table></div></figure>


<p>Awesome sauce!</p>

<h2>Authentication:</h2>

<p>When we authenticate to Scaleway, it will prompt you to upload your public ssh key, as I am doing this in a container I have no ssh keys, so therefore will generate one before I authenticate.</p>

<p>Generate the SSH Key:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ssh-keygen -t rsa
</span><span class='line'>Generating public/private rsa key pair.
</span><span class='line'>Enter file in which to save the key <span class="o">(</span>/root/.ssh/id_rsa<span class="o">)</span>:
</span><span class='line'>Enter passphrase <span class="o">(</span>empty <span class="k">for</span> no passphrase<span class="o">)</span>:
</span><span class='line'>Enter same passphrase again:
</span><span class='line'>Your identification has been saved in /root/.ssh/id_rsa.
</span><span class='line'>Your public key has been saved in /root/.ssh/id_rsa.pub.
</span></code></pre></td></tr></table></div></figure>


<p>Now loging to Scaleway using the cli tools:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>scw login
</span><span class='line'>Login <span class="o">(</span>cloud.scaleway.com<span class="o">)</span>: &lt;youremail@domain.com&gt;
</span><span class='line'>Password:
</span><span class='line'>Do you want to upload an SSH key ?
</span><span class='line'><span class="o">[</span>0<span class="o">]</span> I don<span class="err">&#39;</span>t want to upload a key !
</span><span class='line'><span class="o">[</span>1<span class="o">]</span> id_rsa.pub
</span><span class='line'>Which <span class="o">[</span>id<span class="o">]</span>: 1
</span><span class='line'>
</span><span class='line'>You are now authenticated on Scaleway.com as Ruan.
</span><span class='line'>You can list your existing servers using <span class="sb">`</span>scw ps<span class="sb">`</span> or create a new one using <span class="sb">`</span>scw run ubuntu-xenial<span class="sb">`</span>.
</span><span class='line'>You can get a list of all available commands using <span class="sb">`</span>scw -h<span class="sb">`</span> and get more usage examples on github.com/scaleway/scaleway-cli.
</span><span class='line'>Happy cloud riding.
</span></code></pre></td></tr></table></div></figure>


<p>Sweeet!</p>

<p><img src="https://pics.me.me/hacker-voice-im-in-24303160.png" alt="" /></p>

<h2>Getting Info from Scaleway</h2>

<p>List Instance Types:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>scw products servers
</span><span class='line'>COMMERCIAL TYPE     ARCH     CPUs      RAM  BAREMETAL
</span><span class='line'>ARM64-128GB        arm64       <span class="m">64</span>   <span class="m">137</span> GB      <span class="nb">false</span>
</span><span class='line'>ARM64-16GB         arm64       <span class="m">16</span>    <span class="m">17</span> GB      <span class="nb">false</span>
</span><span class='line'>ARM64-2GB          arm64        <span class="m">4</span>   2.1 GB      <span class="nb">false</span>
</span><span class='line'>ARM64-32GB         arm64       <span class="m">32</span>    <span class="m">34</span> GB      <span class="nb">false</span>
</span><span class='line'>ARM64-4GB          arm64        <span class="m">6</span>   4.3 GB      <span class="nb">false</span>
</span><span class='line'>ARM64-64GB         arm64       <span class="m">48</span>    <span class="m">69</span> GB      <span class="nb">false</span>
</span><span class='line'>ARM64-8GB          arm64        <span class="m">8</span>   8.6 GB      <span class="nb">false</span>
</span><span class='line'>C1                   arm        <span class="m">4</span>   2.1 GB       <span class="nb">true</span>
</span><span class='line'>C2L               x86_64        <span class="m">8</span>    <span class="m">34</span> GB       <span class="nb">true</span>
</span><span class='line'>C2M               x86_64        <span class="m">8</span>    <span class="m">17</span> GB       <span class="nb">true</span>
</span><span class='line'>C2S               x86_64        <span class="m">4</span>   8.6 GB       <span class="nb">true</span>
</span><span class='line'>START1-L          x86_64        <span class="m">8</span>   8.6 GB      <span class="nb">false</span>
</span><span class='line'>START1-M          x86_64        <span class="m">4</span>   4.3 GB      <span class="nb">false</span>
</span><span class='line'>START1-S          x86_64        <span class="m">2</span>   2.1 GB      <span class="nb">false</span>
</span><span class='line'>START1-XS         x86_64        <span class="m">1</span>   1.1 GB      <span class="nb">false</span>
</span><span class='line'>VC1L              x86_64        <span class="m">6</span>   8.6 GB      <span class="nb">false</span>
</span><span class='line'>VC1M              x86_64        <span class="m">4</span>   4.3 GB      <span class="nb">false</span>
</span><span class='line'>VC1S              x86_64        <span class="m">2</span>   2.1 GB      <span class="nb">false</span>
</span><span class='line'>X64-120GB         x86_64       <span class="m">12</span>   <span class="m">129</span> GB      <span class="nb">false</span>
</span><span class='line'>X64-15GB          x86_64        <span class="m">6</span>    <span class="m">16</span> GB      <span class="nb">false</span>
</span><span class='line'>X64-30GB          x86_64        <span class="m">8</span>    <span class="m">32</span> GB      <span class="nb">false</span>
</span><span class='line'>X64-60GB          x86_64       <span class="m">10</span>    <span class="m">64</span> GB      <span class="nb">false</span>
</span></code></pre></td></tr></table></div></figure>


<p>Get a list of available Images, in my case I am just looking for Ubuntu:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>scw images <span class="p">|</span> grep -i ubuntu
</span><span class='line'>Ubuntu_Bionic               latest              a21bb700            <span class="m">11</span> days             <span class="o">[</span>ams1 par1<span class="o">]</span>         <span class="o">[</span>x86_64<span class="o">]</span>
</span><span class='line'>Ubuntu_Mini_Xenial_25G      latest              bc75c00b            <span class="m">13</span> days             <span class="o">[</span>ams1 par1<span class="o">]</span>         <span class="o">[</span>x86_64<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>List Running Instances:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>scw ps
</span><span class='line'>SERVER ID           IMAGE                       ZONE                CREATED             STATUS              PORTS               NAME                  COMMERCIAL TYPE
</span><span class='line'>abc123de            Ubuntu_Xenial_16_04_lates   ams1                <span class="m">5</span> weeks             running             xx.xx.xx.xx         scw-elasticsearch-01  ARM64-4GB
</span><span class='line'>abc456de            ruan-docker-swarm-17_03     par1                <span class="m">10</span> months           running             xx.xx.xxx.xxx       scw-swarm-manager-01  VC1M
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<p>List All Instances (Running, Stopped, Started, etc):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>scw ps -a
</span><span class='line'>SERVER ID           IMAGE                       ZONE                CREATED             STATUS              PORTS               NAME                  COMMERCIAL TYPE
</span><span class='line'>abc123df            Ubuntu_Xenial_16_04_lates   ams1                <span class="m">5</span> weeks             stopped             xx.xx.xx.xx         scw-elasticsearch-02  ARM64-4GB
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<p>List Instances with a filter based on its name:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>scw ps -f <span class="nv">name</span><span class="o">=</span>scw-swarm-worker-02
</span><span class='line'>SERVER ID           IMAGE               ZONE                CREATED             STATUS              PORTS               NAME                COMMERCIAL TYPE
</span><span class='line'>1234abcd            Ubuntu_Xenial       par1                <span class="m">8</span> minutes           running             xx.xx.xxx.xxx       scw-swarm-worker-2  START1-XS
</span></code></pre></td></tr></table></div></figure>


<p>List the Latest Instance that was created:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>scw ps -l
</span><span class='line'>SERVER ID           IMAGE               ZONE                CREATED             STATUS              PORTS               NAME                COMMERCIAL TYPE
</span><span class='line'>1234abce            Ubuntu_Xenial       par1                <span class="m">6</span> minutes           running             xx.xx.xxx.xxx       scw-swarm-worker-3  START1-XS
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h2>Create Instances:</h2>

<p>In my scenario, I would like to create a instance named <code>docker-swarm-worker-4</code> with the instance type <code>START1-XS</code> in the Paris datacenter, and I will be using my key that I have uploaded, also the image id that I passed, was retrieved when listing for images:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>scw --region<span class="o">=</span>par1 create --commercial-type<span class="o">=</span>START1-XS --ip-address<span class="o">=</span>dynamic --ipv6<span class="o">=</span><span class="nb">false</span> --name<span class="o">=</span><span class="s2">&quot;docker-swarm-worker-4&quot;</span> --tmp-ssh-key<span class="o">=</span><span class="nb">false  </span>bc75c00b
</span><span class='line'>&lt;response: random uuid string&gt;
</span></code></pre></td></tr></table></div></figure>


<p>Now that the instance is created, we can start it by calling either the name or the id:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>scw start docker-swarm-worker-4
</span></code></pre></td></tr></table></div></figure>


<p>To verify the status of the instance, we can do:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>scw ps -l
</span><span class='line'>SERVER ID           IMAGE               ZONE                CREATED             STATUS              PORTS               NAME                   COMMERCIAL TYPE
</span><span class='line'>102abc34            Ubuntu_Xenial                           <span class="m">28</span> seconds          starting                                docker-swarm-worker-4  START1-XS
</span></code></pre></td></tr></table></div></figure>


<p>At this moment it is still starting, after waiting a minute or so, run it again:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>scw ps -l
</span><span class='line'>SERVER ID           IMAGE               ZONE                CREATED             STATUS              PORTS               NAME                   COMMERCIAL TYPE
</span><span class='line'>102abc34            Ubuntu_Xenial       par1                About a minute      running             xx.xx.xx.xx         docker-swarm-worker-4  START1-XS
</span></code></pre></td></tr></table></div></figure>


<p>As we can see its in a running state, so we are good to access our instance. You have 2 options to access your server, via exec and ssh.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>scw <span class="nb">exec </span>docker-swarm-worker-4 /bin/bash
</span><span class='line'>root@docker-swarm-worker-4:~
</span></code></pre></td></tr></table></div></figure>


<p>or via SSH:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ssh root@xx.xx.xx.xx
</span><span class='line'>root@docker-swarm-worker-4:~
</span></code></pre></td></tr></table></div></figure>


<p>If you would like to access your server without uploading your SSH key to your account, you can pass <code>--tmp-ssh-key=true</code> as in:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>scw --region<span class="o">=</span>par1 create --commercial-type<span class="o">=</span>START1-XS --ip-address<span class="o">=</span>dynamic --ipv6<span class="o">=</span><span class="nb">false</span> --name<span class="o">=</span><span class="s2">&quot;scw-temp-instance&quot;</span> --tmp-ssh-key<span class="o">=</span><span class="nb">true  </span>bc75c00b
</span></code></pre></td></tr></table></div></figure>


<h2>Terminating Resources:</h2>

<p>This wil stop, terminate the instance with the associated volumes and reserved ip</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>scw stop --terminate<span class="o">=</span><span class="nb">true </span>scw-temp-instance
</span><span class='line'>scw-temp-instance
</span></code></pre></td></tr></table></div></figure>


<p>If you had to remove a volume that is not needed, or unused:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>scw rmi <span class="nb">test</span>-1-snapshot-&lt;long-string&gt;--2018-04-26_12:42
</span></code></pre></td></tr></table></div></figure>


<p>To logout:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>scw <span class="nb">logout</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Resources:</h2>

<p>Have a look at <a href="https://github.com/scaleway/scaleway-cli">Scaleway-CLI Documentation</a> and their <a href="https://www.scaleway.com/">Website</a> for more info, and have a look at their new <code>START1-XS</code> instance types, that is only 1.99 Euro&rsquo;s, that is insane!</p>

<p>Personally love what they are doing, feel free to head over to their <a href="https://www.scaleway.com/pricing/">pricing page</a> to see some sweet deals!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Temporary IAM Credentials From EC2 Instance Metadata Using Python]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/05/09/temporary-iam-credentials-from-ec2-instance-metadata-using-python/"/>
    <updated>2018-05-09T12:14:11-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/05/09/temporary-iam-credentials-from-ec2-instance-metadata-using-python</id>
    <content type="html"><![CDATA[<p>From a Best Practice Perspective its good not having to pass sensitive information around, and especially not hard coding them.</p>

<h2>Best Practice: Security</h2>

<p>One good way is to use SSM with KMS to Encrypt/Decrypt them, but since EC2 has a <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp.html">Metadata Service</a> available, we can make use of that to retrieve <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp.html">temporary credentials</a>. One requirement though, is that the instance will require an IAM Role where the code will be executed on. The IAM Role also needs to have sufficient privileges to be able to execute, whatever you need to do.</p>

<p>The <a href="https://12factor.net/">12 Factor</a> Methodology however states to use config in your environment variables, but from the application logic, its easy to save it in our environment.</p>

<h2>Scenario: Applications on AWS EC2</h2>

<p>When you run applications on Amazon EC2 the nodes has access to the EC2 Metadata Service, so in this case our IAM Role has a Policy that authorizes GetItem on our DynamoDB table, therefore we can define our code with no sensitive information, as the code will do all the work to get the credentials and use the credentials to access DynamoDB.</p>

<h2>Use Temporary Credentials to Read from DynamoDB</h2>

<p>In this example we will get the temporary credentials from the metadata service, then define the temporary credentials in our session to authorize our request against dynamodb to read from our table:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">boto3</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">from</span> <span class="nn">botocore.utils</span> <span class="kn">import</span> <span class="n">InstanceMetadataFetcher</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">from</span> <span class="nn">botocore.credentials</span> <span class="kn">import</span> <span class="n">InstanceMetadataProvider</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">provider</span> <span class="o">=</span> <span class="n">InstanceMetadataProvider</span><span class="p">(</span><span class="n">iam_role_fetcher</span><span class="o">=</span><span class="n">InstanceMetadataFetcher</span><span class="p">(</span><span class="n">timeout</span><span class="o">=</span><span class="mi">1000</span><span class="p">,</span> <span class="n">num_attempts</span><span class="o">=</span><span class="mi">2</span><span class="p">))</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">creds</span> <span class="o">=</span> <span class="n">provider</span><span class="o">.</span><span class="n">load</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">session</span> <span class="o">=</span> <span class="n">boto3</span><span class="o">.</span><span class="n">Session</span><span class="p">(</span>
</span><span class='line'>    <span class="n">aws_access_key_id</span><span class="o">=</span><span class="n">creds</span><span class="o">.</span><span class="n">access_key</span><span class="p">,</span>
</span><span class='line'>    <span class="n">aws_secret_access_key</span><span class="o">=</span><span class="n">creds</span><span class="o">.</span><span class="n">secret_key</span><span class="p">,</span>
</span><span class='line'>    <span class="n">aws_session_token</span><span class="o">=</span><span class="n">creds</span><span class="o">.</span><span class="n">token</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">ddb</span> <span class="o">=</span> <span class="n">session</span><span class="o">.</span><span class="n">client</span><span class="p">(</span><span class="s">&#39;dynamodb&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="n">ddb</span><span class="o">.</span><span class="n">get_item</span><span class="p">(</span>
</span><span class='line'>    <span class="n">TableName</span><span class="o">=</span><span class="s">&#39;my-dynamodb-table&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">Key</span><span class="o">=</span><span class="p">{</span>
</span><span class='line'>        <span class="s">&#39;node_type&#39;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&#39;S&#39;</span><span class="p">:</span> <span class="s">&#39;primary_manager&#39;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">response</span><span class="p">[</span><span class="s">&#39;Item&#39;</span><span class="p">][</span><span class="s">&#39;ip&#39;</span><span class="p">][</span><span class="s">&#39;S&#39;</span><span class="p">])</span>
</span><span class='line'><span class="s">&#39;10.0.0.32</span>
</span></code></pre></td></tr></table></div></figure>


<p>Also, when you are logged onto the EC2 instance, you can use curl to see the temporary credentials information:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ iam_role_name</span><span class="o">=</span><span class="k">$(</span>curl -s http://169.254.169.254/latest/meta-data/iam/security-credentials/<span class="k">)</span>
</span><span class='line'><span class="nv">$ </span>curl -s http://169.254.169.254/latest/meta-data/iam/security-credentials/<span class="k">${</span><span class="nv">iam_role_name</span><span class="k">}</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;Code&quot;</span> : <span class="s2">&quot;Success&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;LastUpdated&quot;</span> : <span class="s2">&quot;2018-05-09T14:25:48Z&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;Type&quot;</span> : <span class="s2">&quot;AWS-HMAC&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;AccessKeyId&quot;</span> : <span class="s2">&quot;&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;SecretAccessKey&quot;</span> : <span class="s2">&quot;&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;Token&quot;</span> : <span class="s2">&quot;&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;Expiration&quot;</span> : <span class="s2">&quot;2018-05-09T20:46:55Z&quot;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use Python Requests to Interact With the iTunes API to Search for Music Info]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/05/08/use-python-requests-to-interact-with-the-itunes-api-to-search-for-music-info/"/>
    <updated>2018-05-08T17:01:11-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/05/08/use-python-requests-to-interact-with-the-itunes-api-to-search-for-music-info</id>
    <content type="html"><![CDATA[<p>Tutorial on using Python Requests and using Apple iTunes Music API, where we will be doing the following:</p>

<ul>
<li>Basics of using the Requests module</li>
<li>Query iTunes API on Songs by Artist</li>
<li>Query iTunes API on Artists Info</li>
<li>Query iTunes API on All Albums by Artist</li>
<li>Query iTunes API on Top 5 Albums</li>
<li>Query iTunes API on Multipe Artists</li>
</ul>


<h2>Resources:</h2>

<ul>
<li><a href="http://docs.python-requests.org/en/master/">Python Requests</a></li>
<li><a href="https://affiliate.itunes.apple.com/resources/documentation/itunes-store-web-service-search-api/">iTunes API</a></li>
</ul>


<h2>Install the Request Module:</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ virtualenv -p /usr/bin/python .venv
</span><span class='line'>$ source .venv/bin/activate
</span><span class='line'>$ pip install requests</span></code></pre></td></tr></table></div></figure>


<h2>Basic Usage of Requests:</h2>

<p>In this demonstration we will only use the GET HTTP Method.</p>

<p>Make the GET Request to the endpoint:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">requests</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;https://itunes.apple.com/search?term=guns+and+roses&amp;limit=1&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>View the HTTP Status Code of the Response:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span><span class="o">.</span><span class="n">status_code</span>
</span><span class='line'><span class="mi">200</span>
</span></code></pre></td></tr></table></div></figure>


<p>To view some of the status codes of the request library:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">requests</span><span class="o">.</span><span class="n">codes</span><span class="o">.</span><span class="n">ok</span>
</span><span class='line'><span class="mi">200</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">requests</span><span class="o">.</span><span class="n">codes</span><span class="o">.</span><span class="n">no_content</span>
</span><span class='line'><span class="mi">204</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">requests</span><span class="o">.</span><span class="n">codes</span><span class="o">.</span><span class="n">temporary_redirect</span>
</span><span class='line'><span class="mi">307</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">requests</span><span class="o">.</span><span class="n">codes</span><span class="o">.</span><span class="n">permanent_redirect</span>
</span><span class='line'><span class="mi">308</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">requests</span><span class="o">.</span><span class="n">codes</span><span class="o">.</span><span class="n">bad</span>
</span><span class='line'><span class="mi">400</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">requests</span><span class="o">.</span><span class="n">codes</span><span class="o">.</span><span class="n">not_found</span>
</span><span class='line'><span class="mi">404</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">requests</span><span class="o">.</span><span class="n">codes</span><span class="o">.</span><span class="n">bad_gateway</span>
</span><span class='line'><span class="mi">502</span>
</span></code></pre></td></tr></table></div></figure>


<p>Call <code>.ok</code> for the status lookup, the boolean answer will indicate if it responded with a <code>200 OK</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span><span class="o">.</span><span class="n">ok</span>
</span><span class='line'><span class="bp">True</span>
</span></code></pre></td></tr></table></div></figure>


<p>Measure the amount of time the request took:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span><span class="o">.</span><span class="n">elapsed</span><span class="o">.</span><span class="n">total_seconds</span><span class="p">()</span>
</span><span class='line'><span class="mf">0.706043</span>
</span></code></pre></td></tr></table></div></figure>


<p>View the content of the response:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span><span class="o">.</span><span class="n">content</span>
</span><span class='line'><span class="s">&#39;</span><span class="se">\n\n\n</span><span class="s">{</span><span class="se">\n</span><span class="s"> &quot;resultCount&quot;:1,</span><span class="se">\n</span><span class="s"> &quot;results&quot;: [</span><span class="se">\n</span><span class="s">{&quot;wrapperType&quot;:&quot;track&quot;, &quot;kind&quot;:&quot;song&quot;, &quot;artistId&quot;:106621, &quot;collectionId&quot;:5669937, &quot;trackId&quot;:5669911, &quot;artistName&quot;:&quot;Guns N</span><span class="se">\&#39;</span><span class="s"> Roses&quot;, &quot;collectionName&quot;:&quot;Greatest Hits&quot;, &quot;trackName&quot;:&quot;Sweet Child O</span><span class="se">\&#39;</span><span class="s"> Mine&quot;, &quot;collectionCensoredName&quot;:&quot;Greatest Hits&quot;, &quot;trackCensoredName&quot;:&quot;Sweet Child O</span><span class="se">\&#39;</span><span class="s"> Mine&quot;, &quot;artistViewUrl&quot;:&quot;https://itunes.apple.com/us/artist/guns-n-roses/106621?uo=4&quot;, &quot;collectionViewUrl&quot;:&quot;https://itunes.apple.com/us/album/sweet-child-o-mine/5669937?i=5669911&amp;uo=4&quot;, &quot;trackViewUrl&quot;:&quot;https://itunes.apple.com/us/album/sweet-child-o-mine/5669937?i=5669911&amp;uo=4&quot;, </span><span class="se">\n</span><span class="s">&quot;previewUrl&quot;:&quot;https://audio-ssl.itunes.apple.com/apple-assets-us-std-000001/Music6/v4/f2/7d/73/f27d7346-de92-bdc6-e148-56a3da406005/mzaf_2747902348777129728.plus.aac.p.m4a&quot;, &quot;artworkUrl30&quot;:&quot;https://is3-ssl.mzstatic.com/image/thumb/Music/v4/3c/18/87/3c188735-e462-3c99-92eb-50fb06afa73f/source/30x30bb.jpg&quot;, &quot;artworkUrl60&quot;:&quot;https://is3-ssl.mzstatic.com/image/thumb/Music/v4/3c/18/87/3c188735-e462-3c99-92eb-50fb06afa73f/source/60x60bb.jpg&quot;, &quot;artworkUrl100&quot;:&quot;https://is3-ssl.mzstatic.com/image/thumb/Music/v4/3c/18/87/3c188735-e462-3c99-92eb-50fb06afa73f/source/100x100bb.jpg&quot;, &quot;collectionPrice&quot;:9.99, &quot;trackPrice&quot;:1.29, &quot;releaseDate&quot;:&quot;1987-07-21T07:00:00Z&quot;, &quot;collectionExplicitness&quot;:&quot;notExplicit&quot;, &quot;trackExplicitness&quot;:&quot;notExplicit&quot;, &quot;discCount&quot;:1, &quot;discNumber&quot;:1, &quot;trackCount&quot;:14, &quot;trackNumber&quot;:2, &quot;trackTimeMillis&quot;:355267, &quot;country&quot;:&quot;USA&quot;, &quot;currency&quot;:&quot;USD&quot;, &quot;primaryGenreName&quot;:&quot;Rock&quot;, &quot;isStreamable&quot;:true}]</span><span class="se">\n</span><span class="s">}</span><span class="se">\n\n\n</span><span class="s">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>View the content in json format:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span><span class="o">.</span><span class="n">json</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span><span class="s">u&#39;resultCount&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s">u&#39;results&#39;</span><span class="p">:</span> <span class="p">[{</span><span class="s">u&#39;collectionExplicitness&#39;</span><span class="p">:</span> <span class="s">u&#39;notExplicit&#39;</span><span class="p">,</span> <span class="s">u&#39;releaseDate&#39;</span><span class="p">:</span> <span class="s">u&#39;1987-07-21T07:00:00Z&#39;</span><span class="p">,</span> <span class="s">u&#39;currency&#39;</span><span class="p">:</span> <span class="s">u&#39;USD&#39;</span><span class="p">,</span> <span class="s">u&#39;artistId&#39;</span><span class="p">:</span> <span class="mi">106621</span><span class="p">,</span> <span class="s">u&#39;previewUrl&#39;</span><span class="p">:</span> <span class="s">u&#39;https://audio-ssl.itunes.apple.com/apple-assets-us-std-000001/Music6/v4/f2/7d/73/f27d7346-de92-bdc6-e148-56a3da406005/mzaf_2747902348777129728.plus.aac.p.m4a&#39;</span><span class="p">,</span> <span class="s">u&#39;trackPrice&#39;</span><span class="p">:</span> <span class="mf">1.29</span><span class="p">,</span> <span class="s">u&#39;isStreamable&#39;</span><span class="p">:</span> <span class="bp">True</span><span class="p">,</span> <span class="s">u&#39;trackViewUrl&#39;</span><span class="p">:</span> <span class="s">u&#39;https://itunes.apple.com/us/album/sweet-child-o-mine/5669937?i=5669911&amp;uo=4&#39;</span><span class="p">,</span> <span class="s">u&#39;collectionName&#39;</span><span class="p">:</span> <span class="s">u&#39;Greatest Hits&#39;</span><span class="p">,</span> <span class="s">u&#39;collectionId&#39;</span><span class="p">:</span> <span class="mi">5669937</span><span class="p">,</span> <span class="s">u&#39;trackId&#39;</span><span class="p">:</span> <span class="mi">5669911</span><span class="p">,</span> <span class="s">u&#39;collectionViewUrl&#39;</span><span class="p">:</span> <span class="s">u&#39;https://itunes.apple.com/us/album/sweet-child-o-mine/5669937?i=5669911&amp;uo=4&#39;</span><span class="p">,</span> <span class="s">u&#39;trackCount&#39;</span><span class="p">:</span> <span class="mi">14</span><span class="p">,</span> <span class="s">u&#39;trackNumber&#39;</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="s">u&#39;discNumber&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s">u&#39;collectionPrice&#39;</span><span class="p">:</span> <span class="mf">9.99</span><span class="p">,</span> <span class="s">u&#39;trackCensoredName&#39;</span><span class="p">:</span> <span class="s">u&quot;Sweet Child O&#39; Mine&quot;</span><span class="p">,</span> <span class="s">u&#39;trackName&#39;</span><span class="p">:</span> <span class="s">u&quot;Sweet Child O&#39; Mine&quot;</span><span class="p">,</span> <span class="s">u&#39;trackTimeMillis&#39;</span><span class="p">:</span> <span class="mi">355267</span><span class="p">,</span> <span class="s">u&#39;primaryGenreName&#39;</span><span class="p">:</span> <span class="s">u&#39;Rock&#39;</span><span class="p">,</span> <span class="s">u&#39;artistViewUrl&#39;</span><span class="p">:</span> <span class="s">u&#39;https://itunes.apple.com/us/artist/guns-n-roses/106621?uo=4&#39;</span><span class="p">,</span> <span class="s">u&#39;kind&#39;</span><span class="p">:</span> <span class="s">u&#39;song&#39;</span><span class="p">,</span> <span class="s">u&#39;country&#39;</span><span class="p">:</span> <span class="s">u&#39;USA&#39;</span><span class="p">,</span> <span class="s">u&#39;wrapperType&#39;</span><span class="p">:</span> <span class="s">u&#39;track&#39;</span><span class="p">,</span> <span class="s">u&#39;artworkUrl100&#39;</span><span class="p">:</span> <span class="s">u&#39;https://is3-ssl.mzstatic.com/image/thumb/Music/v4/3c/18/87/3c188735-e462-3c99-92eb-50fb06afa73f/source/100x100bb.jpg&#39;</span><span class="p">,</span> <span class="s">u&#39;collectionCensoredName&#39;</span><span class="p">:</span> <span class="s">u&#39;Greatest Hits&#39;</span><span class="p">,</span> <span class="s">u&#39;artistName&#39;</span><span class="p">:</span> <span class="s">u&quot;Guns N&#39; Roses&quot;</span><span class="p">,</span> <span class="s">u&#39;artworkUrl60&#39;</span><span class="p">:</span> <span class="s">u&#39;https://is3-ssl.mzstatic.com/image/thumb/Music/v4/3c/18/87/3c188735-e462-3c99-92eb-50fb06afa73f/source/60x60bb.jpg&#39;</span><span class="p">,</span> <span class="s">u&#39;trackExplicitness&#39;</span><span class="p">:</span> <span class="s">u&#39;notExplicit&#39;</span><span class="p">,</span> <span class="s">u&#39;artworkUrl30&#39;</span><span class="p">:</span> <span class="s">u&#39;https://is3-ssl.mzstatic.com/image/thumb/Music/v4/3c/18/87/3c188735-e462-3c99-92eb-50fb06afa73f/source/30x30bb.jpg&#39;</span><span class="p">,</span> <span class="s">u&#39;discCount&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">}]}</span>
</span></code></pre></td></tr></table></div></figure>


<p>View the request headers:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">response</span><span class="o">.</span><span class="n">headers</span>
</span><span class='line'><span class="p">{</span><span class="s">&#39;Content-Length&#39;</span><span class="p">:</span> <span class="s">&#39;650&#39;</span><span class="p">,</span> <span class="s">&#39;x-apple-translated-wo-url&#39;</span><span class="p">:</span> <span class="s">&#39;/WebObjects/MZStoreServices.woa/ws/wsSearch?term=guns+and+roses&amp;limit=1&amp;urlDesc=&#39;</span><span class="p">,</span> <span class="s">&#39;Access-Control-Allow-Origin&#39;</span><span class="p">:</span> <span class="s">&#39;*&#39;</span><span class="p">,</span> <span class="s">&#39;x-webobjects-loadaverage&#39;</span><span class="p">:</span> <span class="s">&#39;0&#39;</span><span class="p">,</span> <span class="s">&#39;X-Cache&#39;</span><span class="p">:</span> <span class="s">&#39;TCP_MISS from a2-21-98-60.deploy.akamaitechnologies.com (AkamaiGHost/9.3.0.3-22245996) (-)&#39;</span><span class="p">,</span> <span class="s">&#39;x-content-type-options&#39;</span><span class="p">:</span> <span class="s">&#39;nosniff&#39;</span><span class="p">,</span> <span class="s">&#39;x-apple-orig-url&#39;</span><span class="p">:</span> <span class="s">&#39;https://itunes.apple.com/search?term=guns+and+roses&amp;limit=1&#39;</span><span class="p">,</span> <span class="s">&#39;x-apple-jingle-correlation-key&#39;</span><span class="p">:</span> <span class="s">&#39;GUOFR25MGUUK5J7LUKI6UUFUWM&#39;</span><span class="p">,</span> <span class="s">&#39;x-apple-application-site&#39;</span><span class="p">:</span> <span class="s">&#39;ST11&#39;</span><span class="p">,</span> <span class="s">&#39;Date&#39;</span><span class="p">:</span> <span class="s">&#39;Tue, 08 May 2018 20:50:39 GMT&#39;</span><span class="p">,</span> <span class="s">&#39;apple-tk&#39;</span><span class="p">:</span> <span class="s">&#39;false&#39;</span><span class="p">,</span> <span class="s">&#39;content-disposition&#39;</span><span class="p">:</span> <span class="s">&#39;attachment; filename=1.txt&#39;</span><span class="p">,</span> <span class="s">&#39;Connection&#39;</span><span class="p">:</span> <span class="s">&#39;keep-alive&#39;</span><span class="p">,</span> <span class="s">&#39;apple-seq&#39;</span><span class="p">:</span> <span class="s">&#39;0&#39;</span><span class="p">,</span> <span class="s">&#39;x-apple-application-instance&#39;</span><span class="p">:</span> <span class="s">&#39;2001318&#39;</span><span class="p">,</span> <span class="s">&#39;X-Apple-Partner&#39;</span><span class="p">:</span> <span class="s">&#39;origin.0&#39;</span><span class="p">,</span> <span class="s">&#39;Content-Encoding&#39;</span><span class="p">:</span> <span class="s">&#39;gzip&#39;</span><span class="p">,</span> <span class="s">&#39;strict-transport-security&#39;</span><span class="p">:</span> <span class="s">&#39;max-age=31536000&#39;</span><span class="p">,</span> <span class="s">&#39;Vary&#39;</span><span class="p">:</span> <span class="s">&#39;Accept-Encoding&#39;</span><span class="p">,</span> <span class="s">&#39;apple-timing-app&#39;</span><span class="p">:</span> <span class="s">&#39;109 ms&#39;</span><span class="p">,</span> <span class="s">&#39;X-True-Cache-Key&#39;</span><span class="p">:</span> <span class="s">&#39;/L/itunes.apple.com/search ci2=limit=1&amp;term=guns+and+roses__&#39;</span><span class="p">,</span> <span class="s">&#39;X-Cache-Remote&#39;</span><span class="p">:</span> <span class="s">&#39;TCP_MISS from a23-57-75-64.deploy.akamaitechnologies.com (AkamaiGHost/9.3.0.3-22245996) (-)&#39;</span><span class="p">,</span> <span class="s">&#39;Cache-Control&#39;</span><span class="p">:</span> <span class="s">&#39;max-age=86400&#39;</span><span class="p">,</span> <span class="s">&#39;x-apple-request-uuid&#39;</span><span class="p">:</span> <span class="s">&#39;351c58eb-ac35-28ae-a7eb-a291ea50b4b3&#39;</span><span class="p">,</span> <span class="s">&#39;Content-Type&#39;</span><span class="p">:</span> <span class="s">&#39;text/javascript; charset=utf-8&#39;</span><span class="p">,</span> <span class="s">&#39;apple-originating-system&#39;</span><span class="p">:</span> <span class="s">&#39;MZStoreServices&#39;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Python Requests and the iTunes API:</h2>

<p>Search for the Artist Guns and Roses and limit the output to 1 Song:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">requests</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">json</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="s">&#39;https://itunes.apple.com/search?term=guns+and+roses&amp;limit=1&#39;</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">b</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">a</span><span class="p">)</span><span class="o">.</span><span class="n">json</span><span class="p">()</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="n">indent</span><span class="o">=</span><span class="mi">2</span><span class="p">))</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;resultCount&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;results&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;collectionExplicitness&quot;</span><span class="p">:</span> <span class="s">&quot;notExplicit&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;releaseDate&quot;</span><span class="p">:</span> <span class="s">&quot;1987-07-21T07:00:00Z&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;currency&quot;</span><span class="p">:</span> <span class="s">&quot;USD&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artistId&quot;</span><span class="p">:</span> <span class="mi">106621</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;previewUrl&quot;</span><span class="p">:</span> <span class="s">&quot;https://audio-ssl.itunes.apple.com/apple-assets-us-std-000001/Music6/v4/f2/7d/73/f27d7346-de92-bdc6-e148-56a3da406005/mzaf_2747902348777129728.plus.aac.p.m4a&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;trackPrice&quot;</span><span class="p">:</span> <span class="mf">1.29</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;isStreamable&quot;</span><span class="p">:</span> <span class="n">true</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;trackViewUrl&quot;</span><span class="p">:</span> <span class="s">&quot;https://itunes.apple.com/us/album/sweet-child-o-mine/5669937?i=5669911&amp;uo=4&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;collectionName&quot;</span><span class="p">:</span> <span class="s">&quot;Greatest Hits&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;collectionId&quot;</span><span class="p">:</span> <span class="mi">5669937</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;trackId&quot;</span><span class="p">:</span> <span class="mi">5669911</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;collectionViewUrl&quot;</span><span class="p">:</span> <span class="s">&quot;https://itunes.apple.com/us/album/sweet-child-o-mine/5669937?i=5669911&amp;uo=4&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;trackCount&quot;</span><span class="p">:</span> <span class="mi">14</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;trackNumber&quot;</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;discNumber&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;collectionPrice&quot;</span><span class="p">:</span> <span class="mf">9.99</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;trackCensoredName&quot;</span><span class="p">:</span> <span class="s">&quot;Sweet Child O&#39; Mine&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;trackName&quot;</span><span class="p">:</span> <span class="s">&quot;Sweet Child O&#39; Mine&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;trackTimeMillis&quot;</span><span class="p">:</span> <span class="mi">355267</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;primaryGenreName&quot;</span><span class="p">:</span> <span class="s">&quot;Rock&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artistViewUrl&quot;</span><span class="p">:</span> <span class="s">&quot;https://itunes.apple.com/us/artist/guns-n-roses/106621?uo=4&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;kind&quot;</span><span class="p">:</span> <span class="s">&quot;song&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;country&quot;</span><span class="p">:</span> <span class="s">&quot;USA&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;wrapperType&quot;</span><span class="p">:</span> <span class="s">&quot;track&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artworkUrl100&quot;</span><span class="p">:</span> <span class="s">&quot;https://is3-ssl.mzstatic.com/image/thumb/Music/v4/3c/18/87/3c188735-e462-3c99-92eb-50fb06afa73f/source/100x100bb.jpg&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;collectionCensoredName&quot;</span><span class="p">:</span> <span class="s">&quot;Greatest Hits&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artistName&quot;</span><span class="p">:</span> <span class="s">&quot;Guns N&#39; Roses&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artworkUrl60&quot;</span><span class="p">:</span> <span class="s">&quot;https://is3-ssl.mzstatic.com/image/thumb/Music/v4/3c/18/87/3c188735-e462-3c99-92eb-50fb06afa73f/source/60x60bb.jpg&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;trackExplicitness&quot;</span><span class="p">:</span> <span class="s">&quot;notExplicit&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artworkUrl30&quot;</span><span class="p">:</span> <span class="s">&quot;https://is3-ssl.mzstatic.com/image/thumb/Music/v4/3c/18/87/3c188735-e462-3c99-92eb-50fb06afa73f/source/30x30bb.jpg&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;discCount&quot;</span><span class="p">:</span> <span class="mi">1</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>From the response we got a <code>"artistId": 106621</code>, lets query the API on the ArtistId, to get info of the Artist:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="s">&#39;https://itunes.apple.com/lookup?id=106621&#39;</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">b</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">a</span><span class="p">)</span><span class="o">.</span><span class="n">json</span><span class="p">()</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="n">indent</span><span class="o">=</span><span class="mi">2</span><span class="p">))</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;resultCount&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;results&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;artistType&quot;</span><span class="p">:</span> <span class="s">&quot;Artist&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;amgArtistId&quot;</span><span class="p">:</span> <span class="mi">4416</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;wrapperType&quot;</span><span class="p">:</span> <span class="s">&quot;artist&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artistId&quot;</span><span class="p">:</span> <span class="mi">106621</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artistLinkUrl&quot;</span><span class="p">:</span> <span class="s">&quot;https://itunes.apple.com/us/artist/guns-n-roses/106621?uo=4&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artistName&quot;</span><span class="p">:</span> <span class="s">&quot;Guns N&#39; Roses&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;primaryGenreId&quot;</span><span class="p">:</span> <span class="mi">21</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;primaryGenreName&quot;</span><span class="p">:</span> <span class="s">&quot;Rock&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Query all the Albums by Artist by using the ArtistId and Entity for Album:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="s">&#39;https://itunes.apple.com/lookup?id=106621&amp;entity=album&#39;</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">b</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">a</span><span class="p">)</span><span class="o">.</span><span class="n">json</span><span class="p">()</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="n">indent</span><span class="o">=</span><span class="mi">2</span><span class="p">))</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;resultCount&quot;</span><span class="p">:</span> <span class="mi">13</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;results&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;artistType&quot;</span><span class="p">:</span> <span class="s">&quot;Artist&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;amgArtistId&quot;</span><span class="p">:</span> <span class="mi">4416</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;wrapperType&quot;</span><span class="p">:</span> <span class="s">&quot;artist&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artistId&quot;</span><span class="p">:</span> <span class="mi">106621</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artistLinkUrl&quot;</span><span class="p">:</span> <span class="s">&quot;https://itunes.apple.com/us/artist/guns-n-roses/106621?uo=4&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artistName&quot;</span><span class="p">:</span> <span class="s">&quot;Guns N&#39; Roses&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;primaryGenreId&quot;</span><span class="p">:</span> <span class="mi">21</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;primaryGenreName&quot;</span><span class="p">:</span> <span class="s">&quot;Rock&quot;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;artistViewUrl&quot;</span><span class="p">:</span> <span class="s">&quot;https://itunes.apple.com/us/artist/guns-n-roses/106621?uo=4&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;releaseDate&quot;</span><span class="p">:</span> <span class="s">&quot;2004-01-01T08:00:00Z&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;collectionType&quot;</span><span class="p">:</span> <span class="s">&quot;Compilation&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;collectionName&quot;</span><span class="p">:</span> <span class="s">&quot;Greatest Hits&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;amgArtistId&quot;</span><span class="p">:</span> <span class="mi">4416</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;copyright&quot;</span><span class="p">:</span> <span class="s">&quot;</span><span class="se">\u2117</span><span class="s"> 2004 Geffen Records&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;collectionId&quot;</span><span class="p">:</span> <span class="mi">5669937</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artworkUrl60&quot;</span><span class="p">:</span> <span class="s">&quot;https://is3-ssl.mzstatic.com/image/thumb/Music/v4/3c/18/87/3c188735-e462-3c99-92eb-50fb06afa73f/source/60x60bb.jpg&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;wrapperType&quot;</span><span class="p">:</span> <span class="s">&quot;collection&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;collectionViewUrl&quot;</span><span class="p">:</span> <span class="s">&quot;https://itunes.apple.com/us/album/greatest-hits/5669937?uo=4&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artistId&quot;</span><span class="p">:</span> <span class="mi">106621</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;collectionCensoredName&quot;</span><span class="p">:</span> <span class="s">&quot;Greatest Hits&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artworkUrl100&quot;</span><span class="p">:</span> <span class="s">&quot;https://is3-ssl.mzstatic.com/image/thumb/Music/v4/3c/18/87/3c188735-e462-3c99-92eb-50fb06afa73f/source/100x100bb.jpg&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;trackCount&quot;</span><span class="p">:</span> <span class="mi">14</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;currency&quot;</span><span class="p">:</span> <span class="s">&quot;USD&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artistName&quot;</span><span class="p">:</span> <span class="s">&quot;Guns N&#39; Roses&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;country&quot;</span><span class="p">:</span> <span class="s">&quot;USA&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;primaryGenreName&quot;</span><span class="p">:</span> <span class="s">&quot;Rock&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;collectionExplicitness&quot;</span><span class="p">:</span> <span class="s">&quot;notExplicit&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;collectionPrice&quot;</span><span class="p">:</span> <span class="mf">9.99</span>
</span><span class='line'>    <span class="p">},</span>
</span></code></pre></td></tr></table></div></figure>


<p>Get the Top 5 Albums by the Artist:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="s">&#39;https://itunes.apple.com/lookup?id=106621&amp;entity=album&amp;limit=5&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>How to get AMG ID (all music id):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="s">&#39;https://itunes.apple.com/search?term=jack+johnson&amp;limit=2&#39;</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">b</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">a</span><span class="p">)</span><span class="o">.</span><span class="n">json</span><span class="p">()</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="n">indent</span><span class="o">=</span><span class="mi">2</span><span class="p">))</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;resultCount&quot;</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;results&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;collectionExplicitness&quot;</span><span class="p">:</span> <span class="s">&quot;notExplicit&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;releaseDate&quot;</span><span class="p">:</span> <span class="s">&quot;2005-03-01T08:00:00Z&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;currency&quot;</span><span class="p">:</span> <span class="s">&quot;USD&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artistId&quot;</span><span class="p">:</span> <span class="mi">909253</span><span class="p">,</span>
</span></code></pre></td></tr></table></div></figure>


<p>Query Multiple Artists by using the amgId&rsquo;s:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="s">&#39;https://itunes.apple.com/lookup?amgArtistId=468749,5723&#39;</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">b</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">a</span><span class="p">)</span><span class="o">.</span><span class="n">json</span><span class="p">()</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="n">indent</span><span class="o">=</span><span class="mi">2</span><span class="p">))</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;resultCount&quot;</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;results&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;artistType&quot;</span><span class="p">:</span> <span class="s">&quot;Artist&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;amgArtistId&quot;</span><span class="p">:</span> <span class="mi">468749</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;wrapperType&quot;</span><span class="p">:</span> <span class="s">&quot;artist&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artistId&quot;</span><span class="p">:</span> <span class="mi">909253</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artistLinkUrl&quot;</span><span class="p">:</span> <span class="s">&quot;https://itunes.apple.com/us/artist/jack-johnson/909253?uo=4&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artistName&quot;</span><span class="p">:</span> <span class="s">&quot;Jack Johnson&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;primaryGenreId&quot;</span><span class="p">:</span> <span class="mi">21</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;primaryGenreName&quot;</span><span class="p">:</span> <span class="s">&quot;Rock&quot;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;artistType&quot;</span><span class="p">:</span> <span class="s">&quot;Artist&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;amgArtistId&quot;</span><span class="p">:</span> <span class="mi">5723</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;wrapperType&quot;</span><span class="p">:</span> <span class="s">&quot;artist&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artistId&quot;</span><span class="p">:</span> <span class="mi">78500</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artistLinkUrl&quot;</span><span class="p">:</span> <span class="s">&quot;https://itunes.apple.com/us/artist/u2/78500?uo=4&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artistName&quot;</span><span class="p">:</span> <span class="s">&quot;U2&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;primaryGenreId&quot;</span><span class="p">:</span> <span class="mi">21</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;primaryGenreName&quot;</span><span class="p">:</span> <span class="s">&quot;Rock&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>If we Query the ArtistId from the previous response we will get the same artist:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="s">&#39;https://itunes.apple.com/lookup?id=909253&#39;</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">b</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">a</span><span class="p">)</span><span class="o">.</span><span class="n">json</span><span class="p">()</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="n">indent</span><span class="o">=</span><span class="mi">2</span><span class="p">))</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;resultCount&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;results&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;artistType&quot;</span><span class="p">:</span> <span class="s">&quot;Artist&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;amgArtistId&quot;</span><span class="p">:</span> <span class="mi">468749</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;wrapperType&quot;</span><span class="p">:</span> <span class="s">&quot;artist&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artistId&quot;</span><span class="p">:</span> <span class="mi">909253</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artistLinkUrl&quot;</span><span class="p">:</span> <span class="s">&quot;https://itunes.apple.com/us/artist/jack-johnson/909253?uo=4&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;artistName&quot;</span><span class="p">:</span> <span class="s">&quot;Jack Johnson&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;primaryGenreId&quot;</span><span class="p">:</span> <span class="mi">21</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;primaryGenreName&quot;</span><span class="p">:</span> <span class="s">&quot;Rock&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Only get the Artist Name:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;</span> <span class="n">b</span>
</span><span class='line'><span class="p">{</span><span class="s">u&#39;resultCount&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s">u&#39;results&#39;</span><span class="p">:</span> <span class="p">[{</span><span class="s">u&#39;artistType&#39;</span><span class="p">:</span> <span class="s">u&#39;Artist&#39;</span><span class="p">,</span> <span class="s">u&#39;amgArtistId&#39;</span><span class="p">:</span> <span class="mi">468749</span><span class="p">,</span> <span class="s">u&#39;wrapperType&#39;</span><span class="p">:</span> <span class="s">u&#39;artist&#39;</span><span class="p">,</span> <span class="s">u&#39;artistId&#39;</span><span class="p">:</span> <span class="mi">909253</span><span class="p">,</span> <span class="s">u&#39;artistLinkUrl&#39;</span><span class="p">:</span> <span class="s">u&#39;https://itunes.apple.com/us/artist/jack-johnson/909253?uo=4&#39;</span><span class="p">,</span> <span class="s">u&#39;artistName&#39;</span><span class="p">:</span> <span class="s">u&#39;Jack Johnson&#39;</span><span class="p">,</span> <span class="s">u&#39;primaryGenreId&#39;</span><span class="p">:</span> <span class="mi">21</span><span class="p">,</span> <span class="s">u&#39;primaryGenreName&#39;</span><span class="p">:</span> <span class="s">u&#39;Rock&#39;</span><span class="p">}]}</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">b</span><span class="p">[</span><span class="s">&#39;results&#39;</span><span class="p">][</span><span class="mi">0</span><span class="p">][</span><span class="s">&#39;artistName&#39;</span><span class="p">]</span>
</span><span class='line'><span class="s">u&#39;Jack Johnson&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Printing out the Artist Name and Genre with String Formatting:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="s">&#39;Artist: {artist_name}, Genre: {genre_name}&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">artist_name</span><span class="o">=</span><span class="n">b</span><span class="p">[</span><span class="s">&#39;results&#39;</span><span class="p">][</span><span class="mi">0</span><span class="p">][</span><span class="s">&#39;artistName&#39;</span><span class="p">],</span> <span class="n">genre_name</span><span class="o">=</span><span class="n">b</span><span class="p">[</span><span class="s">&#39;results&#39;</span><span class="p">][</span><span class="mi">0</span><span class="p">][</span><span class="s">&#39;primaryGenreName&#39;</span><span class="p">]))</span>
</span><span class='line'><span class="n">Artist</span><span class="p">:</span> <span class="n">Jack</span> <span class="n">Johnson</span><span class="p">,</span> <span class="n">Genre</span><span class="p">:</span> <span class="n">Rock</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
