<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Ruan Bekker's Blog]]></title>
  <link href="http://blog.ruanbekker.com/atom.xml" rel="self"/>
  <link href="http://blog.ruanbekker.com/"/>
  <updated>2018-08-16T01:35:14-04:00</updated>
  <id>http://blog.ruanbekker.com/</id>
  <author>
    <name><![CDATA[Ruan]]></name>
    <email><![CDATA[ruan@ruanbekker.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Get Blogpost Titles Links and Tags From a RSS Link Using Python Feedparser]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/08/15/get-blogpost-titles-links-and-tags-from-a-rss-link-using-python-feedparser/"/>
    <updated>2018-08-15T18:14:54-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/08/15/get-blogpost-titles-links-and-tags-from-a-rss-link-using-python-feedparser</id>
    <content type="html"><![CDATA[<p><img src="https://objects.ruanbekker.com/assets/images/python-logo.png" alt="" /></p>

<p>I wanted to get metadata from my other blog <a href="https://sysadmins.co.za">sysadmins.co.za</a>, such as each post&rsquo;s title, link and tags using the RSS link. I stumbled upon <code>feedparser</code>, where I will use it to scrape all the posts details from the link and append it to a list, which I can then use to ingest it into a database or something like that.</p>

<h2>Installing Dependencies:</h2>

<p>Install feedparser and requests:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>pip install feedparser requests
</span></code></pre></td></tr></table></div></figure>


<h2>The Python Code:</h2>

<p>I&rsquo;m not too sure at this point how to get pagination going, so I&rsquo;ve set a range to check, and if a status code of <code>200</code> is received, it will check if the title is in the list that I defined, if not, it will append it to the list.</p>

<p>At the end of the loop, the script will return the list that was defined, which will provide the info mentioned earlier:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">feedparser</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">time</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">requests</span>
</span><span class='line'>
</span><span class='line'><span class="n">rss_url</span> <span class="o">=</span> <span class="s">&quot;https://sysadmins.co.za/rss&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">posts</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">get_posts_for_ghost</span><span class="p">(</span><span class="n">rss_url</span><span class="p">):</span>
</span><span class='line'>    <span class="n">response</span> <span class="o">=</span> <span class="n">feedparser</span><span class="o">.</span><span class="n">parse</span><span class="p">(</span><span class="n">rss_url</span><span class="p">)</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">each</span> <span class="ow">in</span> <span class="n">response</span><span class="p">[</span><span class="s">&#39;entries&#39;</span><span class="p">]:</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">each</span><span class="p">[</span><span class="s">&#39;title&#39;</span><span class="p">]</span> <span class="ow">in</span> <span class="p">[</span><span class="n">x</span><span class="p">[</span><span class="s">&#39;title&#39;</span><span class="p">]</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">posts</span><span class="p">]:</span>
</span><span class='line'>            <span class="k">pass</span>
</span><span class='line'>        <span class="k">else</span><span class="p">:</span>
</span><span class='line'>            <span class="n">posts</span><span class="o">.</span><span class="n">append</span><span class="p">({</span>
</span><span class='line'>                <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="n">each</span><span class="p">[</span><span class="s">&#39;title&#39;</span><span class="p">],</span>
</span><span class='line'>                <span class="s">&quot;link&quot;</span><span class="p">:</span> <span class="n">each</span><span class="p">[</span><span class="s">&#39;links&#39;</span><span class="p">][</span><span class="mi">0</span><span class="p">][</span><span class="s">&#39;href&#39;</span><span class="p">],</span>
</span><span class='line'>                <span class="s">&quot;tags&quot;</span><span class="p">:</span> <span class="p">[</span><span class="n">x</span><span class="p">[</span><span class="s">&#39;term&#39;</span><span class="p">]</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">each</span><span class="p">[</span><span class="s">&#39;tags&#39;</span><span class="p">]],</span>
</span><span class='line'>                <span class="s">&quot;date&quot;</span><span class="p">:</span> <span class="n">time</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s">&#39;%Y-%m-</span><span class="si">%d</span><span class="s">&#39;</span><span class="p">,</span> <span class="n">each</span><span class="p">[</span><span class="s">&#39;published_parsed&#39;</span><span class="p">])</span>
</span><span class='line'>            <span class="p">})</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">posts</span>
</span><span class='line'>
</span><span class='line'><span class="n">count</span> <span class="o">=</span> <span class="mi">12</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">count</span><span class="p">):</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&quot;{0}/{1}/&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">rss_url</span><span class="p">,</span> <span class="n">count</span><span class="p">))</span><span class="o">.</span><span class="n">status_code</span> <span class="o">==</span> <span class="mi">200</span><span class="p">:</span>
</span><span class='line'>        <span class="k">print</span><span class="p">(</span><span class="s">&quot;get succeeded, count at: {}&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">count</span><span class="p">))</span>
</span><span class='line'>        <span class="n">get_posts_for_ghost</span><span class="p">(</span><span class="s">&quot;{0}/{1}/&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">rss_url</span><span class="p">,</span> <span class="n">count</span><span class="p">))</span>
</span><span class='line'>        <span class="n">count</span> <span class="o">-=</span> <span class="mi">1</span>
</span><span class='line'>    <span class="k">else</span><span class="p">:</span>
</span><span class='line'>        <span class="k">print</span><span class="p">(</span><span class="s">&quot;got 404, count at: {}&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">count</span><span class="p">))</span>
</span><span class='line'>        <span class="n">count</span> <span class="o">-=</span> <span class="mi">1</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">get_posts_for_ghost</span><span class="p">(</span><span class="n">rss_url</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="n">posts</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Running the script:</h2>

<p>Running the script will look something like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>python rssfeed.py
</span><span class='line'>got 404, count at: 12
</span><span class='line'>got 404, count at: 11
</span><span class='line'>got 404, count at: 10
</span><span class='line'>get succeeded, count at: 9
</span><span class='line'>get succeeded, count at: 8
</span><span class='line'>get succeeded, count at: 7
</span><span class='line'>get succeeded, count at: 6
</span><span class='line'>get succeeded, count at: 5
</span><span class='line'>get succeeded, count at: 4
</span><span class='line'>get succeeded, count at: 3
</span><span class='line'>get succeeded, count at: 2
</span><span class='line'>get succeeded, count at: 1
</span><span class='line'><span class="o">[</span>
</span><span class='line'>  <span class="o">{</span>
</span><span class='line'>    <span class="s1">&#39;title&#39;</span>: <span class="s1">&#39;Tutorial on DynamoDB using Bash and the AWS CLI Tools to Interact with a Music Dataset&#39;</span>,
</span><span class='line'>    <span class="s1">&#39;link&#39;</span>: <span class="s1">&#39;https://sysadmins.co.za/tutorial-on-dynamodb-using-bash-and-the-aws-cli-tools-to-interact-with-a-music-dataset/&#39;</span>,
</span><span class='line'>    <span class="s1">&#39;tags&#39;</span>: <span class="o">[</span><span class="s1">&#39;DynamoDB&#39;</span>, <span class="s1">&#39;Bash&#39;</span>, <span class="s1">&#39;AWS&#39;</span><span class="o">]</span>,
</span><span class='line'>    <span class="s1">&#39;date&#39;</span>: <span class="s1">&#39;2018-08-15&#39;</span>
</span><span class='line'>  <span class="o">}</span>,
</span><span class='line'>  <span class="o">{</span>
</span><span class='line'>    <span class="s1">&#39;title&#39;</span>: <span class="s1">&#39;Setup a PPTP VPN on Ubuntu 16&#39;</span>,
</span><span class='line'>    <span class="s1">&#39;link&#39;</span>: <span class="s1">&#39;https://sysadmins.co.za/setup-a-pptp-vpn-on-ubuntu-16/&#39;</span>,
</span><span class='line'>    <span class="s1">&#39;tags&#39;</span>: <span class="o">[</span><span class="s1">&#39;Networking&#39;</span>, <span class="s1">&#39;VPN&#39;</span><span class="o">]</span>,
</span><span class='line'>    <span class="s1">&#39;date&#39;</span>: <span class="s1">&#39;2018-06-27&#39;</span>
</span><span class='line'>  <span class="o">}</span>,
</span><span class='line'>  ...
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tutorial on DynamoDB Using Bash and the AWS CLI Tools to Interact With a Music Dataset]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/08/14/tutorial-on-dynamodb-using-bash-and-the-aws-cli-tools-to-interact-with-a-music-dataset/"/>
    <updated>2018-08-14T16:33:22-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/08/14/tutorial-on-dynamodb-using-bash-and-the-aws-cli-tools-to-interact-with-a-music-dataset</id>
    <content type="html"><![CDATA[<p><img src="https://objects.ruanbekker.com/assets/images/aws-logo.png" alt="" /></p>

<p>In this tutorial we will be using Amazons DynamoDB (DynamoDB Local) to host a sample dataset consisting of music data that I retrieved from the iTunes API, which we will be using the aws cli tools to interact with the data.</p>

<p>We will be doing the following:</p>

<ul>
<li>Use Docker to provision a Local DynamoDB Server</li>
<li>Create a DynamoDB Table with a Hash and Range Key</li>
<li>List the Table</li>
<li>Create a Item in DynamoDB</li>
<li>Read a Item from DynamoDB</li>
<li>Read a Item from DynamoDB by specifying the details you would like to read</li>
<li>Batch Write multiple items to DynamoDB</li>
<li>Scan all your Items from DynamoDB</li>
<li>Query by Artist</li>
<li>Query by Artist and Song</li>
<li>Query all the Songs from an Artist starting with a specific letter</li>
<li>Indexes</li>
<li>Delete the Table</li>
</ul>


<p>If you are just getting started with DynamoDB, I recommend having a look at <a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Introduction.html">Amazons DynamoDB Documentation</a> Page first.</p>

<h2>The Music Dataset:</h2>

<p>I used the <a href="https://affiliate.itunes.apple.com/resources/documentation/itunes-store-web-service-search-api/">iTunes API</a> to get the music metadata, but I also have a post on <a href="http://blog.ruanbekker.com/blog/2018/05/08/use-python-requests-to-interact-with-the-itunes-api-to-search-for-music-info/">how to query the iTunes API</a> to get data from them to use.</p>

<p>a Quick way in Python to get the top 10 songs from Guns and Roses, will look like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="s">&#39;https://itunes.apple.com/search?term=guns+and+roses&amp;limit=10&#39;</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">b</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">a</span><span class="p">)</span><span class="o">.</span><span class="n">json</span><span class="p">()</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="n">indent</span><span class="o">=</span><span class="mi">2</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Create the DynamoDB Local Server on Docker:</h2>

<p>If you have a AWS Account you can provision your table from there, but if you want to test it locally, you can provision a local DynamoDB Server using Docker:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="err">$</span> <span class="n">docker</span> <span class="n">run</span> <span class="o">-</span><span class="n">it</span> <span class="o">-</span><span class="n">p</span> <span class="mi">8000</span><span class="p">:</span><span class="mi">8000</span> <span class="o">--</span><span class="n">name</span> <span class="n">dynamodb</span><span class="o">-</span><span class="n">local</span> <span class="n">rbekker87</span><span class="o">/</span><span class="n">dynamodb</span><span class="o">-</span><span class="n">local</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Install the AWS CLI Tools:</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>pip install awscli
</span><span class='line'><span class="nv">$ </span>aws configure
</span><span class='line'><span class="c"># you can enter random data if you are using dynamodb-local</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Create the DynamoDB Table:</h2>

<p>Create a DynamoDB Table named <code>MusicCollection</code> with a <code>Artist (HASH)</code> and <code>SongTitle (RANGE)</code> key attributes:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>aws dynamodb create-table --table-name MusicCollection <span class="se">\</span>
</span><span class='line'>  --attribute-definitions <span class="nv">AttributeName</span><span class="o">=</span>Artist,AttributeType<span class="o">=</span>S <span class="nv">AttributeName</span><span class="o">=</span>SongTitle,AttributeType<span class="o">=</span>S <span class="se">\</span>
</span><span class='line'>  --key-schema <span class="nv">AttributeName</span><span class="o">=</span>Artist,KeyType<span class="o">=</span>HASH <span class="nv">AttributeName</span><span class="o">=</span>SongTitle,KeyType<span class="o">=</span>RANGE <span class="se">\</span>
</span><span class='line'>  --provisioned-throughput <span class="nv">ReadCapacityUnits</span><span class="o">=</span>5,WriteCapacityUnits<span class="o">=</span><span class="m">5</span> <span class="se">\</span>
</span><span class='line'>  --endpoint-url http://localhost:8000
</span><span class='line'>
</span><span class='line'>Response:
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;TableDescription&quot;</span>: <span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;TableArn&quot;</span>: <span class="s2">&quot;arn:aws:dynamodb:ddblocal:000000000000:table/MusicCollection&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;AttributeDefinitions&quot;</span>: <span class="o">[</span>
</span><span class='line'>            <span class="o">{</span>
</span><span class='line'>                <span class="s2">&quot;AttributeName&quot;</span>: <span class="s2">&quot;Artist&quot;</span>,
</span><span class='line'>                <span class="s2">&quot;AttributeType&quot;</span>: <span class="s2">&quot;S&quot;</span>
</span><span class='line'>            <span class="o">}</span>,
</span><span class='line'>            <span class="o">{</span>
</span><span class='line'>                <span class="s2">&quot;AttributeName&quot;</span>: <span class="s2">&quot;SongTitle&quot;</span>,
</span><span class='line'>                <span class="s2">&quot;AttributeType&quot;</span>: <span class="s2">&quot;S&quot;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">]</span>,
</span><span class='line'>        <span class="s2">&quot;ProvisionedThroughput&quot;</span>: <span class="o">{</span>
</span><span class='line'>            <span class="s2">&quot;NumberOfDecreasesToday&quot;</span>: 0,
</span><span class='line'>            <span class="s2">&quot;WriteCapacityUnits&quot;</span>: 5,
</span><span class='line'>            <span class="s2">&quot;LastIncreaseDateTime&quot;</span>: 0.0,
</span><span class='line'>            <span class="s2">&quot;ReadCapacityUnits&quot;</span>: 5,
</span><span class='line'>            <span class="s2">&quot;LastDecreaseDateTime&quot;</span>: 0.0
</span><span class='line'>        <span class="o">}</span>,
</span><span class='line'>        <span class="s2">&quot;TableSizeBytes&quot;</span>: 0,
</span><span class='line'>        <span class="s2">&quot;TableName&quot;</span>: <span class="s2">&quot;MusicCollection&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;TableStatus&quot;</span>: <span class="s2">&quot;ACTIVE&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;KeySchema&quot;</span>: <span class="o">[</span>
</span><span class='line'>            <span class="o">{</span>
</span><span class='line'>                <span class="s2">&quot;KeyType&quot;</span>: <span class="s2">&quot;HASH&quot;</span>,
</span><span class='line'>                <span class="s2">&quot;AttributeName&quot;</span>: <span class="s2">&quot;Artist&quot;</span>
</span><span class='line'>            <span class="o">}</span>,
</span><span class='line'>            <span class="o">{</span>
</span><span class='line'>                <span class="s2">&quot;KeyType&quot;</span>: <span class="s2">&quot;RANGE&quot;</span>,
</span><span class='line'>                <span class="s2">&quot;AttributeName&quot;</span>: <span class="s2">&quot;SongTitle&quot;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">]</span>,
</span><span class='line'>        <span class="s2">&quot;ItemCount&quot;</span>: 0,
</span><span class='line'>        <span class="s2">&quot;CreationDateTime&quot;</span>: 1525339294.186
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Listing the Tables:</h2>

<p>List the DynamoDB Table that you created:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>aws dynamodb list-tables --endpoint-url http://localhost:8000
</span><span class='line'>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;TableNames&quot;</span>: <span class="o">[</span>
</span><span class='line'>        <span class="s2">&quot;MusicCollection&quot;</span>
</span><span class='line'>    <span class="o">]</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Create a Item in DynamoDB:</h2>

<p>Add a song from the band <code>Bring me the Horizon</code> called <code>Sleepwalking</code> from the album <code>Sempiternal</code> to the table by using the <code>PutItem</code> call:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>aws dynamodb --endpoint-url http://localhost:8000 put-item --table-name MusicCollection <span class="se">\</span>
</span><span class='line'>  --item <span class="s1">&#39;{&quot;Artist&quot;: {&quot;S&quot;: &quot;Bring me the Horizon&quot;}, &quot;SongTitle&quot;: {&quot;S&quot;: &quot;Sleepwalking&quot;}, &quot;AlbumTitle&quot;: {&quot;S&quot;: &quot;Sempiternal&quot;}}&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Read a Item from DynamoDB</h2>

<p>Get the Song Details from the Table by using the <code>GetItem</code> call:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>aws dynamodb --endpoint-url http://localhost:8000 get-item --table-name MusicCollection <span class="se">\</span>
</span><span class='line'>  --key  <span class="s1">&#39;{&quot;Artist&quot;: {&quot;S&quot;: &quot;Bring me the Horizon&quot;}, &quot;SongTitle&quot;: {&quot;S&quot;: &quot;Sleepwalking&quot;}}&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;Item&quot;</span>: <span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;Artist&quot;</span>: <span class="o">{</span>
</span><span class='line'>            <span class="s2">&quot;S&quot;</span>: <span class="s2">&quot;Bring me the Horizon&quot;</span>
</span><span class='line'>        <span class="o">}</span>,
</span><span class='line'>        <span class="s2">&quot;SongTitle&quot;</span>: <span class="o">{</span>
</span><span class='line'>            <span class="s2">&quot;S&quot;</span>: <span class="s2">&quot;Sleepwalking&quot;</span>
</span><span class='line'>        <span class="o">}</span>,
</span><span class='line'>        <span class="s2">&quot;AlbumTitle&quot;</span>: <span class="o">{</span>
</span><span class='line'>            <span class="s2">&quot;S&quot;</span>: <span class="s2">&quot;Sempiternal&quot;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>To only get specific attributes we can use <code>--aatributes-to-get</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>aws dynamodb --endpoint-url http://localhost:8000 get-item --table-name MusicCollection <span class="se">\</span>
</span><span class='line'>  --attributes-to-get <span class="s1">&#39;[&quot;AlbumTitle&quot;, &quot;SongTitle&quot;]&#39;</span> <span class="se">\</span>
</span><span class='line'>  --key  <span class="s1">&#39;{&quot;Artist&quot;: {&quot;S&quot;: &quot;Bring me the Horizon&quot;}, &quot;SongTitle&quot;: {&quot;S&quot;: &quot;Sleepwalking&quot;}}&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;Item&quot;</span>: <span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;SongTitle&quot;</span>: <span class="o">{</span>
</span><span class='line'>            <span class="s2">&quot;S&quot;</span>: <span class="s2">&quot;Sleepwalking&quot;</span>
</span><span class='line'>        <span class="o">}</span>,
</span><span class='line'>        <span class="s2">&quot;AlbumTitle&quot;</span>: <span class="o">{</span>
</span><span class='line'>            <span class="s2">&quot;S&quot;</span>: <span class="s2">&quot;Sempiternal&quot;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>However, AWS Recommends to use the <code>--projection-expression</code> parameter:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>aws dynamodb --endpoint-url http://localhost:8000 get-item --table-name MusicCollection <span class="se">\</span>
</span><span class='line'>  --projection-expression <span class="s2">&quot;AlbumTitle, SongTitle&quot;</span> <span class="se">\</span>
</span><span class='line'>  --key  <span class="s1">&#39;{&quot;Artist&quot;: {&quot;S&quot;: &quot;Bring me the Horizon&quot;}, &quot;SongTitle&quot;: {&quot;S&quot;: &quot;Sleepwalking&quot;}}&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;Item&quot;</span>: <span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;SongTitle&quot;</span>: <span class="o">{</span>
</span><span class='line'>            <span class="s2">&quot;S&quot;</span>: <span class="s2">&quot;Sleepwalking&quot;</span>
</span><span class='line'>        <span class="o">}</span>,
</span><span class='line'>        <span class="s2">&quot;AlbumTitle&quot;</span>: <span class="o">{</span>
</span><span class='line'>            <span class="s2">&quot;S&quot;</span>: <span class="s2">&quot;Sempiternal&quot;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LegacyConditionalParameters.AttributesToGet.html">https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LegacyConditionalParameters.AttributesToGet.html</a></li>
</ul>


<h2>Batch Write</h2>

<p>Now lets use the <a href="https://affiliate.itunes.apple.com/resources/documentation/itunes-store-web-service-search-api/">iTunes API</a> to get a collection of some songs, which I will dump into a <a href="https://github.com/ruanbekker/dynamodb-local-docker/blob/master/demo/batch-write-songs.json">json file on github</a>. So now that we have a json file with a collection of songs from multiple artists, we can go ahead and write it into our table using the <code>BatchWriteItem</code> call:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>wget https://raw.githubusercontent.com/ruanbekker/dynamodb-local-docker/master/demo/batch-write-songs.json
</span><span class='line'><span class="nv">$ </span>aws dynamodb batch-write-item --request-items file://music-table/batch-write-songs.json --endpoint-url http://localhost:8000
</span></code></pre></td></tr></table></div></figure>


<h2>Scan the Table:</h2>

<p>This can be a very expensive call, as a <code>Scan</code> will return all the items from your table, and depending on the size of your table, you could be throttled, but since we are using dynamodb local and only having 16 items in our table, we can do a scan to return all the items in our table:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>aws dynamodb --endpoint-url http://localhost:8000 scan --table-name MusicCollection
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;Count&quot;</span>: 16,
</span></code></pre></td></tr></table></div></figure>


<h2>Query</h2>

<p>Let&rsquo;s start using the <code>Query</code> call to get all the songs from the Artist: AC/DC</p>

<ul>
<li><a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LegacyConditionalParameters.QueryFilter.html">https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LegacyConditionalParameters.QueryFilter.html</a></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>aws dynamodb --endpoint-url http://localhost:8000 query --select ALL_ATTRIBUTES <span class="se">\</span>
</span><span class='line'>  --table-name MusicCollection <span class="se">\</span>
</span><span class='line'>  --key-condition-expression <span class="s2">&quot;Artist = :a&quot;</span> <span class="se">\</span>
</span><span class='line'>  --expression-attribute-values  <span class="s1">&#39;{&quot;:a&quot;:{&quot;S&quot;:&quot;AC/DC&quot;}}&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;Count&quot;</span>: 3,
</span><span class='line'>    <span class="s2">&quot;Items&quot;</span>: <span class="o">[</span>
</span><span class='line'>        <span class="o">{</span>
</span><span class='line'>            <span class="s2">&quot;Artist&quot;</span>: <span class="o">{</span>
</span><span class='line'>                <span class="s2">&quot;S&quot;</span>: <span class="s2">&quot;AC/DC&quot;</span>
</span><span class='line'>            <span class="o">}</span>,
</span><span class='line'>            <span class="s2">&quot;SongTitle&quot;</span>: <span class="o">{</span>
</span><span class='line'>                <span class="s2">&quot;S&quot;</span>: <span class="s2">&quot;Back In Black&quot;</span>
</span><span class='line'>            <span class="o">}</span>,
</span><span class='line'>            <span class="s2">&quot;AlbumTitle&quot;</span>: <span class="o">{</span>
</span><span class='line'>                <span class="s2">&quot;S&quot;</span>: <span class="s2">&quot;Back In Black&quot;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>,
</span><span class='line'>        <span class="o">{</span>
</span><span class='line'>            <span class="s2">&quot;Artist&quot;</span>: <span class="o">{</span>
</span><span class='line'>                <span class="s2">&quot;S&quot;</span>: <span class="s2">&quot;AC/DC&quot;</span>
</span><span class='line'>            <span class="o">}</span>,
</span><span class='line'>            <span class="s2">&quot;SongTitle&quot;</span>: <span class="o">{</span>
</span><span class='line'>                <span class="s2">&quot;S&quot;</span>: <span class="s2">&quot;Thunderstruck&quot;</span>
</span><span class='line'>            <span class="o">}</span>,
</span><span class='line'>            <span class="s2">&quot;AlbumTitle&quot;</span>: <span class="o">{</span>
</span><span class='line'>                <span class="s2">&quot;S&quot;</span>: <span class="s2">&quot;The Razors Edge&quot;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>,
</span><span class='line'>        <span class="o">{</span>
</span><span class='line'>            <span class="s2">&quot;Artist&quot;</span>: <span class="o">{</span>
</span><span class='line'>                <span class="s2">&quot;S&quot;</span>: <span class="s2">&quot;AC/DC&quot;</span>
</span><span class='line'>            <span class="o">}</span>,
</span><span class='line'>            <span class="s2">&quot;SongTitle&quot;</span>: <span class="o">{</span>
</span><span class='line'>                <span class="s2">&quot;S&quot;</span>: <span class="s2">&quot;You Shook Me All Night Long&quot;</span>
</span><span class='line'>            <span class="o">}</span>,
</span><span class='line'>            <span class="s2">&quot;AlbumTitle&quot;</span>: <span class="o">{</span>
</span><span class='line'>                <span class="s2">&quot;S&quot;</span>: <span class="s2">&quot;Back in Black&quot;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">]</span>,
</span><span class='line'>    <span class="s2">&quot;ScannedCount&quot;</span>: 3,
</span><span class='line'>    <span class="s2">&quot;ConsumedCapacity&quot;</span>: null
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Query to get the details of a specific Song from a specific Artist:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>aws dynamodb --endpoint-url http://localhost:8000 query --select ALL_ATTRIBUTES <span class="se">\</span>
</span><span class='line'>  --table-name MusicCollection <span class="se">\</span>
</span><span class='line'>  --key-condition-expression <span class="s2">&quot;Artist = :a and SongTitle = :t&quot;</span> <span class="se">\</span>
</span><span class='line'>  --expression-attribute-values  <span class="s1">&#39;{ &quot;:a&quot;: {&quot;S&quot;: &quot;AC/DC&quot;}, &quot;:t&quot;: {&quot;S&quot;: &quot;You Shook Me All Night Long&quot;}}&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;Count&quot;</span>: 1,
</span><span class='line'>    <span class="s2">&quot;Items&quot;</span>: <span class="o">[</span>
</span><span class='line'>        <span class="o">{</span>
</span><span class='line'>            <span class="s2">&quot;Artist&quot;</span>: <span class="o">{</span>
</span><span class='line'>                <span class="s2">&quot;S&quot;</span>: <span class="s2">&quot;AC/DC&quot;</span>
</span><span class='line'>            <span class="o">}</span>,
</span><span class='line'>            <span class="s2">&quot;SongTitle&quot;</span>: <span class="o">{</span>
</span><span class='line'>                <span class="s2">&quot;S&quot;</span>: <span class="s2">&quot;You Shook Me All Night Long&quot;</span>
</span><span class='line'>            <span class="o">}</span>,
</span><span class='line'>            <span class="s2">&quot;AlbumTitle&quot;</span>: <span class="o">{</span>
</span><span class='line'>                <span class="s2">&quot;S&quot;</span>: <span class="s2">&quot;Back in Black&quot;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">]</span>,
</span><span class='line'>    <span class="s2">&quot;ScannedCount&quot;</span>: 1,
</span><span class='line'>    <span class="s2">&quot;ConsumedCapacity&quot;</span>: null
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Query to get all the songs from the Beatles that starts with the letter &lsquo;H&rsquo;:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>aws dynamodb --endpoint-url http://localhost:8000 query --select ALL_ATTRIBUTES <span class="se">\</span>
</span><span class='line'>  --table-name MusicCollection <span class="se">\</span>
</span><span class='line'>  --key-condition-expression <span class="s2">&quot;Artist = :a and begins_with(SongTitle, :t)&quot;</span> <span class="se">\</span>
</span><span class='line'>  --expression-attribute-values  <span class="s1">&#39;{&quot;:a&quot;:{&quot;S&quot;:&quot;The Beatles&quot;}, &quot;:t&quot;: {&quot;S&quot;: &quot;h&quot;}}&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;Count&quot;</span>: 2,
</span><span class='line'>    <span class="s2">&quot;Items&quot;</span>: <span class="o">[</span>
</span><span class='line'>        <span class="o">{</span>
</span><span class='line'>            <span class="s2">&quot;Artist&quot;</span>: <span class="o">{</span>
</span><span class='line'>                <span class="s2">&quot;S&quot;</span>: <span class="s2">&quot;The Beatles&quot;</span>
</span><span class='line'>            <span class="o">}</span>,
</span><span class='line'>            <span class="s2">&quot;SongTitle&quot;</span>: <span class="o">{</span>
</span><span class='line'>                <span class="s2">&quot;S&quot;</span>: <span class="s2">&quot;Happy Day&quot;</span>
</span><span class='line'>            <span class="o">}</span>,
</span><span class='line'>            <span class="s2">&quot;AlbumTitle&quot;</span>: <span class="o">{</span>
</span><span class='line'>                <span class="s2">&quot;S&quot;</span>: <span class="s2">&quot;The Beatles 1967-1970 (The Blue Album)&quot;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>,
</span><span class='line'>        <span class="o">{</span>
</span><span class='line'>            <span class="s2">&quot;Artist&quot;</span>: <span class="o">{</span>
</span><span class='line'>                <span class="s2">&quot;S&quot;</span>: <span class="s2">&quot;The Beatles&quot;</span>
</span><span class='line'>            <span class="o">}</span>,
</span><span class='line'>            <span class="s2">&quot;SongTitle&quot;</span>: <span class="o">{</span>
</span><span class='line'>                <span class="s2">&quot;S&quot;</span>: <span class="s2">&quot;Help!&quot;</span>
</span><span class='line'>            <span class="o">}</span>,
</span><span class='line'>            <span class="s2">&quot;AlbumTitle&quot;</span>: <span class="o">{</span>
</span><span class='line'>                <span class="s2">&quot;S&quot;</span>: <span class="s2">&quot;The Beatles Box Set&quot;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">]</span>,
</span><span class='line'>    <span class="s2">&quot;ScannedCount&quot;</span>: 2,
</span><span class='line'>    <span class="s2">&quot;ConsumedCapacity&quot;</span>: null
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>So our table consists of Artist (HASH) and SongTitle (RANGE), so we can only query based on those attributes. You will find when you try to query on a attribute that is not part of the KeySchema, a exception will be received:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>aws dynamodb --endpoint-url http://localhost:8000 query --select ALL_ATTRIBUTES --table-name MusicCollection --key-condition-expression <span class="s2">&quot;Artist = :a and AlbumTitle = :t&quot;</span> --expression-attribute-values  <span class="s1">&#39;{&quot;:a&quot;:{&quot;S&quot;:&quot;AC/DC&quot;}, &quot;:t&quot;: {&quot;S&quot;: &quot;Back in Black&quot;}}&#39;</span>
</span><span class='line'>
</span><span class='line'>An error occurred <span class="o">(</span>ValidationException<span class="o">)</span> when calling the Query operation: Query condition missed key schema element
</span></code></pre></td></tr></table></div></figure>


<p>So how do we query on a attribute that is not part of the KeySchema? Let&rsquo;s say you want to query all the songs from a Artist and a specific Album.</p>

<h2>Global Secondary Indexes:</h2>

<p>Add Global Secondary Index, with the Attributes: Artist and AlbumTitle.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>aws dynamodb --endpoint-url http://localhost:8000 update-table --table-name MusicCollection <span class="se">\</span>
</span><span class='line'>  --attribute-definitions <span class="nv">AttributeName</span><span class="o">=</span>Artist,AttributeType<span class="o">=</span>S <span class="nv">AttributeName</span><span class="o">=</span>SongTitle,AttributeType<span class="o">=</span>S <span class="nv">AttributeName</span><span class="o">=</span>AlbumTitle,AttributeType<span class="o">=</span>S <span class="se">\</span>
</span><span class='line'>  --global-secondary-index-updates <span class="s2">&quot;Create={&quot;</span>IndexName<span class="s2">&quot;=&quot;</span>album-index<span class="s2">&quot;, &quot;</span>KeySchema<span class="s2">&quot;=[ {&quot;</span>AttributeName<span class="s2">&quot;=&quot;</span>Artist<span class="s2">&quot;, &quot;</span>KeyType<span class="s2">&quot;=&quot;</span>HASH<span class="s2">&quot;}, {&quot;</span>AttributeName<span class="s2">&quot;=&quot;</span>AlbumTitle<span class="s2">&quot;, &quot;</span>KeyType<span class="s2">&quot;=&quot;</span>RANGE<span class="s2">&quot; }], &quot;</span>Projection<span class="s2">&quot;={&quot;</span>ProjectionType<span class="s2">&quot;=&quot;</span>INCLUDE<span class="s2">&quot;, &quot;</span>NonKeyAttributes<span class="s2">&quot;=&quot;</span>AlbumTitle<span class="s2">&quot;}, &quot;</span>ProvisionedThroughput<span class="s2">&quot;= {&quot;</span>ReadCapacityUnits<span class="s2">&quot;=1, &quot;</span>WriteCapacityUnits<span class="s2">&quot;=1} }&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;TableDescription&quot;</span>: <span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;TableArn&quot;</span>: <span class="s2">&quot;arn:aws:dynamodb:ddblocal:000000000000:table/MusicCollection&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;AttributeDefinitions&quot;</span>: <span class="o">[</span>
</span><span class='line'>            <span class="o">{</span>
</span><span class='line'>                <span class="s2">&quot;AttributeName&quot;</span>: <span class="s2">&quot;Artist&quot;</span>,
</span><span class='line'>                <span class="s2">&quot;AttributeType&quot;</span>: <span class="s2">&quot;S&quot;</span>
</span><span class='line'>            <span class="o">}</span>,
</span><span class='line'>            <span class="o">{</span>
</span><span class='line'>                <span class="s2">&quot;AttributeName&quot;</span>: <span class="s2">&quot;SongTitle&quot;</span>,
</span><span class='line'>                <span class="s2">&quot;AttributeType&quot;</span>: <span class="s2">&quot;S&quot;</span>
</span><span class='line'>            <span class="o">}</span>,
</span><span class='line'>            <span class="o">{</span>
</span><span class='line'>                <span class="s2">&quot;AttributeName&quot;</span>: <span class="s2">&quot;AlbumTitle&quot;</span>,
</span><span class='line'>                <span class="s2">&quot;AttributeType&quot;</span>: <span class="s2">&quot;S&quot;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">]</span>,
</span><span class='line'>        <span class="s2">&quot;GlobalSecondaryIndexes&quot;</span>: <span class="o">[</span>
</span><span class='line'>            <span class="o">{</span>
</span><span class='line'>                <span class="s2">&quot;IndexName&quot;</span>: <span class="s2">&quot;album-index&quot;</span>,
</span><span class='line'>                <span class="s2">&quot;Projection&quot;</span>: <span class="o">{</span>
</span><span class='line'>                    <span class="s2">&quot;ProjectionType&quot;</span>: <span class="s2">&quot;INCLUDE&quot;</span>,
</span><span class='line'>                    <span class="s2">&quot;NonKeyAttributes&quot;</span>: <span class="o">[</span>
</span><span class='line'>                        <span class="s2">&quot;AlbumTitle&quot;</span>
</span><span class='line'>                    <span class="o">]</span>
</span><span class='line'>                <span class="o">}</span>,
</span><span class='line'>                <span class="s2">&quot;ProvisionedThroughput&quot;</span>: <span class="o">{</span>
</span><span class='line'>                    <span class="s2">&quot;WriteCapacityUnits&quot;</span>: 1,
</span><span class='line'>                    <span class="s2">&quot;ReadCapacityUnits&quot;</span>: 1
</span><span class='line'>                <span class="o">}</span>,
</span><span class='line'>                <span class="s2">&quot;IndexStatus&quot;</span>: <span class="s2">&quot;CREATING&quot;</span>,
</span><span class='line'>                <span class="s2">&quot;Backfilling&quot;</span>: <span class="nb">false</span>,
</span><span class='line'>                <span class="s2">&quot;KeySchema&quot;</span>: <span class="o">[</span>
</span><span class='line'>                    <span class="o">{</span>
</span><span class='line'>                        <span class="s2">&quot;KeyType&quot;</span>: <span class="s2">&quot;HASH&quot;</span>,
</span><span class='line'>                        <span class="s2">&quot;AttributeName&quot;</span>: <span class="s2">&quot;Artist&quot;</span>
</span><span class='line'>                    <span class="o">}</span>,
</span><span class='line'>                    <span class="o">{</span>
</span><span class='line'>                        <span class="s2">&quot;KeyType&quot;</span>: <span class="s2">&quot;RANGE&quot;</span>,
</span><span class='line'>                        <span class="s2">&quot;AttributeName&quot;</span>: <span class="s2">&quot;AlbumTitle&quot;</span>
</span><span class='line'>                    <span class="o">}</span>
</span><span class='line'>                <span class="o">]</span>,
</span><span class='line'>                <span class="s2">&quot;IndexArn&quot;</span>: <span class="s2">&quot;arn:aws:dynamodb:ddblocal:000000000000:table/MusicCollection/index/album-index&quot;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">]</span>,
</span><span class='line'>        <span class="s2">&quot;ProvisionedThroughput&quot;</span>: <span class="o">{</span>
</span><span class='line'>            <span class="s2">&quot;NumberOfDecreasesToday&quot;</span>: 0,
</span><span class='line'>            <span class="s2">&quot;WriteCapacityUnits&quot;</span>: 5,
</span><span class='line'>            <span class="s2">&quot;LastIncreaseDateTime&quot;</span>: 0.0,
</span><span class='line'>            <span class="s2">&quot;ReadCapacityUnits&quot;</span>: 5,
</span><span class='line'>            <span class="s2">&quot;LastDecreaseDateTime&quot;</span>: 0.0
</span><span class='line'>        <span class="o">}</span>,
</span><span class='line'>        <span class="s2">&quot;TableSizeBytes&quot;</span>: 984,
</span><span class='line'>        <span class="s2">&quot;TableName&quot;</span>: <span class="s2">&quot;MusicCollection&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;TableStatus&quot;</span>: <span class="s2">&quot;ACTIVE&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;KeySchema&quot;</span>: <span class="o">[</span>
</span><span class='line'>            <span class="o">{</span>
</span><span class='line'>                <span class="s2">&quot;KeyType&quot;</span>: <span class="s2">&quot;HASH&quot;</span>,
</span><span class='line'>                <span class="s2">&quot;AttributeName&quot;</span>: <span class="s2">&quot;Artist&quot;</span>
</span><span class='line'>            <span class="o">}</span>,
</span><span class='line'>            <span class="o">{</span>
</span><span class='line'>                <span class="s2">&quot;KeyType&quot;</span>: <span class="s2">&quot;RANGE&quot;</span>,
</span><span class='line'>                <span class="s2">&quot;AttributeName&quot;</span>: <span class="s2">&quot;SongTitle&quot;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">]</span>,
</span><span class='line'>        <span class="s2">&quot;ItemCount&quot;</span>: 15,
</span><span class='line'>        <span class="s2">&quot;CreationDateTime&quot;</span>: 1525339294.186
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now when we use the same query, but we specify our index, we will get the data:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>aws dynamodb --endpoint-url http://localhost:8000 query <span class="se">\</span>
</span><span class='line'>  --select ALL_ATTRIBUTES <span class="se">\</span>
</span><span class='line'>  --table-name MusicCollection <span class="se">\</span>
</span><span class='line'>  --index-name album-index <span class="se">\</span>
</span><span class='line'>  --key-condition-expression <span class="s2">&quot;Artist = :a and AlbumTitle = :t&quot;</span> <span class="se">\</span>
</span><span class='line'>  --expression-attribute-values  <span class="s1">&#39;{&quot;:a&quot;:{&quot;S&quot;:&quot;AC/DC&quot;}, &quot;:t&quot;: {&quot;S&quot;: &quot;Back in Black&quot;}}&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;Count&quot;</span>: 1,
</span><span class='line'>    <span class="s2">&quot;Items&quot;</span>: <span class="o">[</span>
</span><span class='line'>        <span class="o">{</span>
</span><span class='line'>            <span class="s2">&quot;Artist&quot;</span>: <span class="o">{</span>
</span><span class='line'>                <span class="s2">&quot;S&quot;</span>: <span class="s2">&quot;AC/DC&quot;</span>
</span><span class='line'>            <span class="o">}</span>,
</span><span class='line'>            <span class="s2">&quot;SongTitle&quot;</span>: <span class="o">{</span>
</span><span class='line'>                <span class="s2">&quot;S&quot;</span>: <span class="s2">&quot;You Shook Me All Night Long&quot;</span>
</span><span class='line'>            <span class="o">}</span>,
</span><span class='line'>            <span class="s2">&quot;AlbumTitle&quot;</span>: <span class="o">{</span>
</span><span class='line'>                <span class="s2">&quot;S&quot;</span>: <span class="s2">&quot;Back in Black&quot;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">]</span>,
</span><span class='line'>    <span class="s2">&quot;ScannedCount&quot;</span>: 1,
</span><span class='line'>    <span class="s2">&quot;ConsumedCapacity&quot;</span>: null
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Delete the Table:</h2>

<p>Delete the Table that we created:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>aws dynamodb --endpoint-url http://localhost:8000 delete-table --table-name MusicCollection
</span></code></pre></td></tr></table></div></figure>


<h2>Resources:</h2>

<ul>
<li><a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/SQLtoNoSQL.ReadData.Query.html">https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/SQLtoNoSQL.ReadData.Query.html</a></li>
<li><a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/SQLtoNoSQL.Indexes.html">https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/SQLtoNoSQL.Indexes.html</a></li>
<li><a href="https://affiliate.itunes.apple.com/resources/documentation/itunes-store-web-service-search-api/">https://affiliate.itunes.apple.com/resources/documentation/itunes-store-web-service-search-api/</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby Tutorial Series Setup and Variables]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/08/09/ruby-tutorial-series-setup-and-variables/"/>
    <updated>2018-08-09T21:11:52-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/08/09/ruby-tutorial-series-setup-and-variables</id>
    <content type="html"><![CDATA[<p><img src="https://objects.ruanbekker.com/assets/images/ruby-variables-logo.png" alt="" /></p>

<p>In this post we will setup our Ruby environment, then start printing out values to the console and will also be touching on variables.</p>

<h2>Ruby Environment:</h2>

<p>I have a Docker image built on Alpine, the resources can be found via:</p>

<ul>
<li><a href="https://hub.docker.com/r/rbekker87/alpine-ruby">DockerHub</a></li>
<li><a href="https://github.com/ruanbekker/dockerhub-sources/blob/master/alpine-ruby/Dockerfile">GitHub</a></li>
</ul>


<p>To setup a Ruby environment on your workstation, I would recommend using <a href="https://github.com/rbenv/rbenv">https://github.com/rbenv/rbenv</a>.</p>

<h2>Drop into a Ruby Shell:</h2>

<p>I will be using Docker to drop into a ruby container:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker run -it rbekker87/alpine-ruby:2.5 sh
</span><span class='line'>
</span><span class='line'>       ______       _____
</span><span class='line'>______ ___  /__________<span class="o">(</span>_<span class="o">)</span>___________
</span><span class='line'>_  __ <span class="sb">`</span>/_  /___  __ <span class="se">\_</span>  /__  __ <span class="se">\ </span> _ <span class="se">\</span>
</span><span class='line'>/ /_/ /_  / __  /_/ /  / _  / / /  __/
</span><span class='line'><span class="se">\_</span>_,_/ /_/  _  .___//_/  /_/ /_/<span class="se">\_</span>__/
</span><span class='line'>            /_/
</span><span class='line'>
</span><span class='line'>Alpine Build:
</span><span class='line'>Container Hostname: 8a4dfc590dd0
</span><span class='line'>Checkout my Docker Blogs:
</span><span class='line'>- https://sysadmins.co.za/tag/docker
</span><span class='line'>- http://blog.ruanbekker.com/blog/categories/docker
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>irb
</span><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:001:0&gt;
</span></code></pre></td></tr></table></div></figure>


<p>If you have the <code>irb</code> output, you should be good to go.</p>

<h2>Strings and Integers</h2>

<p>You will find when you enter a string, which is represented as one or more characters enclosed within quotation marks:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:001:0&gt; <span class="s2">&quot;hello&quot;</span>
</span><span class='line'><span class="o">=</span>&gt; <span class="s2">&quot;hello&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>The integers will be without the quotation marks, when we introduce anything within quotation marks, ruby will read it as a string. So for a integer, lets provide ruby with a number and the number will be returned to the shell:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:002:0&gt; <span class="nv">1</span>
</span><span class='line'><span class="o">=</span>&gt; 1
</span></code></pre></td></tr></table></div></figure>


<p>Using mathematical symbols like the <code>+</code> will either sum the two values when they are integers, or concatenate when they are strings.</p>

<p>Let&rsquo;s start with strings: we will add the string <code>hello</code> and <code>world</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:003:0&gt; <span class="s2">&quot;hello&quot;</span> + <span class="s2">&quot;world&quot;</span>
</span><span class='line'><span class="o">=</span>&gt; <span class="s2">&quot;helloworld&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now let&rsquo;s add two numbers together, <code>10</code> and <code>20</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:004:0&gt; <span class="m">10</span> + <span class="nv">20</span>
</span><span class='line'><span class="o">=</span>&gt; 30
</span></code></pre></td></tr></table></div></figure>


<p>As you can see, it did a calculation on the two numbers as they were treated as integeres. But what happens when we add them as strings?</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:005:0&gt; <span class="s2">&quot;10&quot;</span> + <span class="s2">&quot;20&quot;</span>
</span><span class='line'><span class="o">=</span>&gt; <span class="s2">&quot;1020&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Adding them as strings, will concatenate them.</p>

<h2>String Methods</h2>

<p>Ruby&rsquo;s strings has many built in methods, which makes it convenient manipulating data, let me go through a couple that I am working with:</p>

<p>Getting the length of the string:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:006:0&gt; <span class="s2">&quot;hello&quot;</span>.length
</span><span class='line'>5
</span></code></pre></td></tr></table></div></figure>


<p>Is the string empty?</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:007:0&gt; <span class="s2">&quot;hello&quot;</span>.empty?
</span><span class='line'><span class="o">=</span>&gt; <span class="nb">false</span>
</span></code></pre></td></tr></table></div></figure>


<p>Getting the index position of 0 of the string:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:008:0&gt; <span class="s2">&quot;hello&quot;</span><span class="o">[</span>0<span class="o">]</span>
</span><span class='line'><span class="o">=</span>&gt; <span class="s2">&quot;h&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Getting a array of your string:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:009:0&gt; <span class="s2">&quot;hello&quot;</span>.chars
</span><span class='line'><span class="o">=</span>&gt; <span class="o">[</span><span class="s2">&quot;h&quot;</span>, <span class="s2">&quot;e&quot;</span>, <span class="s2">&quot;l&quot;</span>, <span class="s2">&quot;l&quot;</span>, <span class="s2">&quot;o&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Returning your string in Uppercase:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:010:0&gt; <span class="s2">&quot;hello&quot;</span>.upcase
</span><span class='line'><span class="o">=</span>&gt; <span class="s2">&quot;HELLO&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Returning your string in Lowercase:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:011:0&gt; <span class="s2">&quot;HELLO&quot;</span>.downcase
</span><span class='line'><span class="o">=</span>&gt; <span class="s2">&quot;hello&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Capitalize your String:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:012:0&gt; <span class="s2">&quot;hello&quot;</span>.capitalize
</span><span class='line'><span class="o">=</span>&gt; <span class="s2">&quot;Hello&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Swap the case of your string:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:013:0&gt; <span class="s2">&quot;Hello&quot;</span>.swapcase
</span><span class='line'><span class="o">=</span>&gt; <span class="s2">&quot;hELLO&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Variables</h2>

<p>Let&rsquo;s define variables to the static content that we used above.</p>

<p>Let&rsquo;s define our key: <code>word</code> to the value: of <code>hello, world</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:019:0&gt; <span class="nv">word</span> <span class="o">=</span> <span class="s2">&quot;hello, world&quot;</span>
</span><span class='line'><span class="o">=</span>&gt; <span class="s2">&quot;hello, world&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Accessing the variables value:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:020:0&gt; <span class="nv">word</span>
</span><span class='line'><span class="o">=</span>&gt; <span class="s2">&quot;hello, world&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>We can also use <code>puts</code>, which stands for <code>put string</code>, which prints out the value to the terminal:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:021:0&gt; puts word
</span><span class='line'>hello, world
</span></code></pre></td></tr></table></div></figure>


<p>We can also, format our variable so that we can add something like a exclamation mark:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:022:0&gt; puts <span class="s2">&quot;#{word}!&quot;</span>
</span><span class='line'>hello, world!
</span></code></pre></td></tr></table></div></figure>


<p>Let&rsquo;s do the same with integers:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:023:0&gt; <span class="nv">num_1</span> <span class="o">=</span> <span class="nv">10</span>
</span><span class='line'><span class="o">=</span>&gt; 10
</span><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:024:0&gt; <span class="nv">num_2</span> <span class="o">=</span> <span class="nv">20</span>
</span><span class='line'><span class="o">=</span>&gt; 20
</span></code></pre></td></tr></table></div></figure>


<p>Now when we calculate the numbers using variables, you will find the expected result of 30:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:025:0&gt; num_1 + <span class="nv">num_2</span>
</span><span class='line'><span class="o">=</span>&gt; 30
</span></code></pre></td></tr></table></div></figure>


<p>or:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:026:0&gt; num_1 + num_2
</span><span class='line'>puts <span class="s2">&quot;#{num_1 + num_2}&quot;</span>
</span><span class='line'>30
</span></code></pre></td></tr></table></div></figure>


<h2>Variables are Mutable:</h2>

<p>Remember that variables are mutable, so they can be changed after they have been set, lets take age for example:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:027:0&gt; <span class="nv">age</span> <span class="o">=</span> 20
</span><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:028:0&gt; puts age
</span><span class='line'>20
</span><span class='line'>
</span><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:029:0&gt; <span class="nv">age</span> <span class="o">=</span> 22
</span><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:030:0&gt; puts age
</span><span class='line'>22
</span></code></pre></td></tr></table></div></figure>


<h2>Strings and Integers:</h2>

<p>What happens when we add strings and integers together in one line:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:038:0&gt; <span class="nv">name</span> <span class="o">=</span> <span class="s2">&quot;ruan&quot;</span>
</span><span class='line'><span class="o">=</span>&gt; <span class="s2">&quot;ruan&quot;</span>
</span><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:039:0&gt; <span class="nv">id</span> <span class="o">=</span> <span class="nv">120398</span>
</span><span class='line'><span class="o">=</span>&gt; 120398
</span><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:040:0&gt; puts <span class="s2">&quot;#{name + id}&quot;</span>
</span><span class='line'>Traceback <span class="o">(</span>most recent call last<span class="o">)</span>:
</span><span class='line'>        3: from /usr/bin/irb:11:in <span class="sb">`</span>&lt;main&gt;<span class="s1">&#39;</span>
</span><span class='line'><span class="s1">        2: from (irb):40</span>
</span><span class='line'><span class="s1">        1: from (irb):40:in `+&#39;</span>
</span><span class='line'>TypeError <span class="o">(</span>no implicit conversion of Integer into String<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>That is because we cant concatenate strings with integers, so we will need to convert the integer to a string, we do that with the <code>to_s</code> method:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:041:0&gt; puts <span class="s2">&quot;#{name + id.to_s}&quot;</span>
</span><span class='line'>ruan120398
</span></code></pre></td></tr></table></div></figure>


<p>And if we want to define that to a variable:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:042:0&gt; <span class="nv">userid</span> <span class="o">=</span> <span class="s2">&quot;#{name + id.to_s}&quot;</span>
</span><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:043:0&gt; <span class="nv">userid</span>
</span><span class='line'><span class="o">=</span>&gt; <span class="s2">&quot;ruan120398&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Working with rb files:</h2>

<p>We can add this together in a file with a <code>.rb</code> extension and call the file as an argument with ruby, as a script:</p>

<p>Create the file, in my case <code>test.rb</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vim test.rb
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">user</span> <span class="o">=</span> <span class="s2">&quot;ruan&quot;</span>
</span><span class='line'><span class="n">idnumber</span> <span class="o">=</span> <span class="mi">23049823</span>
</span><span class='line'><span class="n">userid</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">user</span> <span class="o">+</span> <span class="n">idnumber</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">userid</span><span class="si">}</span><span class="s2">&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Running the ruby file:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ruby test.rb
</span><span class='line'>ruan23049823
</span></code></pre></td></tr></table></div></figure>


<h2>Resources:</h2>

<ul>
<li><a href="https://www.digitalocean.com/community/tutorials/how-to-work-with-string-methods-in-ruby">1</a></li>
<li><a href="https://learnrubythehardway.org/book/ex3.html">2</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby Programming Tutorial Series]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/08/09/ruby-programming-tutorial-series/"/>
    <updated>2018-08-09T20:59:34-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/08/09/ruby-programming-tutorial-series</id>
    <content type="html"><![CDATA[<p><img src="https://objects.ruanbekker.com/assets/images/ruby-tutorial-logo.png" alt="" /></p>

<p>Welcome! This will be a multi post ruby tutorial programming series, as I am on a mission learning ruby.</p>

<h2>Outline of the Series:</h2>

<p>This may change, but the path will look like this:</p>

<ul>
<li>Setup, The Terminal and Variables</li>
<li>Arrays</li>
<li>Data Types</li>
<li>Objects, Classes and Methods</li>
</ul>


<p>All posts associated to this tutorial series will be tagged as <a href="http://blog.ruanbekker.com/blog/tags/ruby-tutorial-series">#ruby-tutorial-series</a></p>

<p>Resources:</p>

<ul>
<li><a href="http://ruby-for-beginners.rubymonstas.org/index.html">RFB</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Build a REST API War File for Payara With Java Springboot and Maven Part 1]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/08/09/build-a-rest-api-war-file-for-payara-with-java-springboot-and-maven-part-1/"/>
    <updated>2018-08-09T20:43:34-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/08/09/build-a-rest-api-war-file-for-payara-with-java-springboot-and-maven-part-1</id>
    <content type="html"><![CDATA[<p><img src="https://objects.ruanbekker.com/assets/images/payara-logo.png" alt="" /></p>

<p>This is a command line approach to create a java web app for payara that takes war files, which we will be using in conjunction with springboot and apache maven.</p>

<h2>Setup Java and Apache Maven:</h2>

<p>Setup Java 1.8:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>apt update
</span><span class='line'><span class="nv">$ </span>apt install wget openssl vim software-properties-common -y
</span><span class='line'><span class="nv">$ </span>add-apt-repository ppa:webupd8team/java -y
</span><span class='line'><span class="nv">$ </span>apt-key adv --keyserver keyserver.ubuntu.com --recv-keys C2518248EEA14886
</span><span class='line'><span class="nv">$ </span>apt update <span class="o">&amp;&amp;</span> apt install oracle-java8-installer -y
</span></code></pre></td></tr></table></div></figure>


<p>Setup Apache Maven:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /opt
</span><span class='line'><span class="nv">$ </span>curl -SL  http://www-eu.apache.org/dist/maven/maven-3/3.5.4/binaries/apache-maven-3.5.4-bin.tar.gz <span class="p">|</span> tar -xz
</span><span class='line'><span class="nv">$ </span>mv apache-maven-3.5.4 maven
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s1">&#39;M2_HOME=/opt/maven&#39;</span> &gt; /etc/profile.d/mavenenv.sh
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s1">&#39;export PATH=${M2_HOME}/bin:${PATH}&#39;</span> &gt;&gt; /etc/profile.d/mavenenv.sh
</span><span class='line'><span class="nv">$ </span>chmod +x /etc/profile.d/mavenenv.sh
</span><span class='line'><span class="nv">$ </span><span class="nb">source</span> /etc/profile.d/mavenenv.sh
</span></code></pre></td></tr></table></div></figure>


<p>Ensure Java and Maven is installed:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>java -version
</span><span class='line'>java version <span class="s2">&quot;1.8.0_181&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>mvn -version
</span><span class='line'>Apache Maven 3.5.4
</span></code></pre></td></tr></table></div></figure>


<h2>Prepare the directories:</h2>

<p>Prepare the directories where we will be working with our application&rsquo;s source code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mkdir -p /root/app
</span><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /root/app
</span><span class='line'><span class="nv">$ </span>mkdir -p src/main/webapp/WEB-INF
</span><span class='line'><span class="nv">$ </span>mkdir -p src/main/java/fish/payara/spring/boot/<span class="o">{</span>controller,domain<span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>The source code:</h2>

<p>The <code>pom.xml</code> file:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vim pom.xml
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;project</span> <span class="na">xmlns=</span><span class="s">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
</span><span class='line'>         <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://maven.apache.org/POM/4.0.0http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;modelVersion&gt;</span>4.0.0<span class="nt">&lt;/modelVersion&gt;</span>
</span><span class='line'>    <span class="nt">&lt;groupId&gt;</span>fish.payara.appserver<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>    <span class="nt">&lt;artifactId&gt;</span>payara-micro-with-spring-boot-rest<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>    <span class="nt">&lt;version&gt;</span>1.0<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>    <span class="nt">&lt;packaging&gt;</span>war<span class="nt">&lt;/packaging&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;build&gt;</span>
</span><span class='line'>        <span class="nt">&lt;plugins&gt;</span>
</span><span class='line'>            <span class="nt">&lt;plugin&gt;</span>
</span><span class='line'>                <span class="nt">&lt;groupId&gt;</span>org.apache.maven.plugins<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>                <span class="nt">&lt;artifactId&gt;</span>maven-compiler-plugin<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>                <span class="nt">&lt;configuration&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;compilerArguments&gt;</span>
</span><span class='line'>                        <span class="nt">&lt;source&gt;</span>1.8<span class="nt">&lt;/source&gt;</span>
</span><span class='line'>                        <span class="nt">&lt;target&gt;</span>1.8<span class="nt">&lt;/target&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;/compilerArguments&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/configuration&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/plugin&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/plugins&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/build&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;dependencyManagement&gt;</span>
</span><span class='line'>        <span class="nt">&lt;dependencies&gt;</span>
</span><span class='line'>            <span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>                <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>                <span class="nt">&lt;artifactId&gt;</span>spring-boot-dependencies<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>                <span class="nt">&lt;version&gt;</span>1.2.6.RELEASE<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>                <span class="nt">&lt;type&gt;</span>pom<span class="nt">&lt;/type&gt;</span>
</span><span class='line'>                <span class="nt">&lt;scope&gt;</span>import<span class="nt">&lt;/scope&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/dependencies&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/dependencyManagement&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;dependencies&gt;</span>
</span><span class='line'>        <span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>            <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>            <span class="nt">&lt;artifactId&gt;</span>spring-boot-starter-web<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>            <span class="nt">&lt;exclusions&gt;</span>
</span><span class='line'>                <span class="nt">&lt;exclusion&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;artifactId&gt;</span>spring-boot-starter-tomcat<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/exclusion&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/exclusions&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'>        <span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>            <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>            <span class="nt">&lt;artifactId&gt;</span>spring-boot-starter-actuator<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>        <span class="nt">&lt;groupId&gt;</span>org.springframework.batch<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>        <span class="nt">&lt;artifactId&gt;</span>spring-batch-test<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>        <span class="nt">&lt;scope&gt;</span>import<span class="nt">&lt;/scope&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'>
</span><span class='line'>        <span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>            <span class="nt">&lt;groupId&gt;</span>org.crsh<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>            <span class="nt">&lt;artifactId&gt;</span>crsh.plugins<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>            <span class="nt">&lt;version&gt;</span>1.2.11<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>            <span class="nt">&lt;type&gt;</span>pom<span class="nt">&lt;/type&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'>
</span><span class='line'>        <span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>            <span class="nt">&lt;groupId&gt;</span>javax.servlet<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>            <span class="nt">&lt;artifactId&gt;</span>javax.servlet-api<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>            <span class="nt">&lt;version&gt;</span>3.1.0<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>            <span class="nt">&lt;scope&gt;</span>provided<span class="nt">&lt;/scope&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/dependencies&gt;</span>
</span><span class='line'><span class="nt">&lt;/project&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>The <code>web.xml</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vim src/main/webapp/WEB-INF/web.xml
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;web-app</span>
</span><span class='line'>    <span class="na">xmlns=</span><span class="s">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span> <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
</span><span class='line'>    <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://xmlns.jcp.org/xml/ns/javaeehttp://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd&quot;</span>
</span><span class='line'>    <span class="na">version=</span><span class="s">&quot;3.1&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;/web-app&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>The <code>Application.java</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vim src/main/java/fish/payara/spring/boot/Application.java
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">fish</span><span class="o">.</span><span class="na">payara</span><span class="o">.</span><span class="na">spring</span><span class="o">.</span><span class="na">boot</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.boot.SpringApplication</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.boot.autoconfigure.SpringBootApplication</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.boot.builder.SpringApplicationBuilder</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.boot.context.web.SpringBootServletInitializer</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@SpringBootApplication</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Application</span> <span class="kd">extends</span> <span class="n">SpringBootServletInitializer</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">protected</span> <span class="n">SpringApplicationBuilder</span> <span class="nf">configure</span><span class="o">(</span><span class="n">SpringApplicationBuilder</span> <span class="n">application</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">application</span><span class="o">.</span><span class="na">sources</span><span class="o">(</span><span class="n">Application</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">Application</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The <code>Person.java</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vim src/main/java/fish/payara/spring/boot/domain/Person.java
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">fish</span><span class="o">.</span><span class="na">payara</span><span class="o">.</span><span class="na">spring</span><span class="o">.</span><span class="na">boot</span><span class="o">.</span><span class="na">domain</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Person</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="kt">int</span> <span class="n">id</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">String</span> <span class="n">name</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">String</span> <span class="n">lastName</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">String</span> <span class="n">email</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="nf">Person</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="nf">Person</span><span class="o">(</span><span class="kt">int</span> <span class="n">id</span><span class="o">,</span> <span class="n">String</span> <span class="n">name</span><span class="o">,</span> <span class="n">String</span> <span class="n">lastName</span><span class="o">,</span> <span class="n">String</span> <span class="n">email</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">id</span> <span class="o">=</span> <span class="n">id</span><span class="o">;</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">lastName</span> <span class="o">=</span> <span class="n">lastName</span><span class="o">;</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">email</span> <span class="o">=</span> <span class="n">email</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getId</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">id</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setId</span><span class="o">(</span><span class="kt">int</span> <span class="n">id</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">id</span> <span class="o">=</span> <span class="n">id</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="n">String</span> <span class="nf">getName</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">name</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setName</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="n">String</span> <span class="nf">getLastName</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">lastName</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setLastName</span><span class="o">(</span><span class="n">String</span> <span class="n">lastName</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">lastName</span> <span class="o">=</span> <span class="n">lastName</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="n">String</span> <span class="nf">getEmail</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">email</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setEmail</span><span class="o">(</span><span class="n">String</span> <span class="n">email</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">email</span> <span class="o">=</span> <span class="n">email</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The <code>PersonRestController.java</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>src/main/java/fish/payara/spring/boot/controller/PersonRestController.java
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">fish</span><span class="o">.</span><span class="na">payara</span><span class="o">.</span><span class="na">spring</span><span class="o">.</span><span class="na">boot</span><span class="o">.</span><span class="na">controller</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">fish.payara.spring.boot.domain.Person</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.RequestMapping</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.RestController</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.annotation.PostConstruct</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.Collection</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.HashMap</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.Map</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@RestController</span>
</span><span class='line'><span class="nd">@RequestMapping</span><span class="o">(</span><span class="s">&quot;/person&quot;</span><span class="o">)</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">PersonRestController</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">Map</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">,</span> <span class="n">Person</span><span class="o">&gt;</span> <span class="n">personMap</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;&gt;();</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@PostConstruct</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">init</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">personMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="k">new</span> <span class="nf">Person</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="s">&quot;Ruan&quot;</span><span class="o">,</span> <span class="s">&quot;Bekker&quot;</span><span class="o">,</span> <span class="s">&quot;ruan@gmail.com&quot;</span><span class="o">));</span>
</span><span class='line'>        <span class="n">personMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="k">new</span> <span class="nf">Person</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="s">&quot;Steve&quot;</span><span class="o">,</span> <span class="s">&quot;James&quot;</span><span class="o">,</span> <span class="s">&quot;steve@gmail.com&quot;</span><span class="o">));</span>
</span><span class='line'>        <span class="n">personMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="mi">3</span><span class="o">,</span> <span class="k">new</span> <span class="nf">Person</span><span class="o">(</span><span class="mi">3</span><span class="o">,</span> <span class="s">&quot;Frank&quot;</span><span class="o">,</span> <span class="s">&quot;Phillips&quot;</span><span class="o">,</span> <span class="s">&quot;frank@gmail.com&quot;</span><span class="o">));</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@RequestMapping</span><span class="o">(</span><span class="s">&quot;/all&quot;</span><span class="o">)</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">Collection</span><span class="o">&lt;</span><span class="n">Person</span><span class="o">&gt;</span> <span class="nf">getAll</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">personMap</span><span class="o">.</span><span class="na">values</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Build with Maven:</h2>

<p>Build the war file with maven:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mvn clean package
</span><span class='line'>
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Packaging webapp
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Assembling webapp <span class="o">[</span>payara-micro-with-spring-boot-rest<span class="o">]</span> in <span class="o">[</span>/root/app/target/payara-micro-with-spring-boot-rest-1.0<span class="o">]</span>
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Processing war project
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Copying webapp resources <span class="o">[</span>/root/app/src/main/webapp<span class="o">]</span>
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Webapp assembled in <span class="o">[</span><span class="m">113</span> msecs<span class="o">]</span>
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Building war: /root/app/target/payara-micro-with-spring-boot-rest-1.0.war
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> WEB-INF/web.xml already added, skipping
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> ------------------------------------------------------------------------
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> BUILD SUCCESS
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> ------------------------------------------------------------------------
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Total <span class="nb">time</span>: 18.662 s
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Finished at: 2018-08-04T10:46:50Z
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> ------------------------------------------------------------------------
</span></code></pre></td></tr></table></div></figure>


<p>You will find your war file under:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ls target/
</span><span class='line'>classes  maven-archiver  maven-status  payara-micro-with-spring-boot-rest-1.0  payara-micro-with-spring-boot-rest-1.0.war
</span></code></pre></td></tr></table></div></figure>


<p>You can change the name in the <code>pom.xml</code>, but since we already built it, lets rename the file to something shorter:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mv /root/app/target/payara-micro-with-spring-boot-rest-1.0.war /root/app/target/webapp.war
</span></code></pre></td></tr></table></div></figure>


<h2>Deploy your Application with Payara Micro:</h2>

<p>Deploy your application with docker:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker run -it -p 8080:8080 -v /root/app/target:/opt/payara/deployments payara/micro --deploy /opt/payara/deployments/webapp.war
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  .   ____          _            __ _ _
</span><span class='line'> /<span class="se">\\</span> / ___<span class="s1">&#39;_ __ _ _(_)_ __  __ _ \ \ \ \</span>
</span><span class='line'><span class="s1">( ( )\___ | &#39;</span>_ <span class="p">|</span> <span class="s1">&#39;_| | &#39;</span>_ <span class="se">\/</span> _<span class="sb">`</span> <span class="p">|</span> <span class="se">\ \ \ \</span>
</span><span class='line'> <span class="se">\\</span>/  ___<span class="o">)</span><span class="p">|</span> <span class="p">|</span>_<span class="o">)</span><span class="p">|</span> <span class="p">|</span> <span class="p">|</span> <span class="p">|</span> <span class="p">|</span> <span class="o">||</span> <span class="o">(</span>_<span class="p">|</span> <span class="p">|</span>  <span class="o">)</span> <span class="o">)</span> <span class="o">)</span> <span class="o">)</span>
</span><span class='line'>  <span class="err">&#39;</span>  <span class="p">|</span>____<span class="p">|</span> .__<span class="p">|</span>_<span class="p">|</span> <span class="p">|</span>_<span class="p">|</span>_<span class="p">|</span> <span class="p">|</span>_<span class="se">\_</span>_, <span class="p">|</span> / / / /
</span><span class='line'> <span class="o">=========</span><span class="p">|</span>_<span class="p">|</span><span class="o">==============</span><span class="p">|</span>___/<span class="o">=</span>/_/_/_/
</span><span class='line'> :: Spring Boot ::        <span class="o">(</span>v1.2.6.RELEASE<span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;Instance Configuration&quot;</span>: <span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;Host&quot;</span>: <span class="s2">&quot;4e90ecf6a1a7&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;Http Port(s)&quot;</span>: <span class="s2">&quot;8080&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;Https Port(s)&quot;</span>: <span class="s2">&quot;&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;Instance Name&quot;</span>: <span class="s2">&quot;Cloudy-Chub&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;Instance Group&quot;</span>: <span class="s2">&quot;MicroShoal&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;Hazelcast Member UUID&quot;</span>: <span class="s2">&quot;a1af817d-473b-4fa7-9ee9-7d53291a35a2&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;Deployed&quot;</span>: <span class="o">[</span>
</span><span class='line'>            <span class="o">{</span>
</span><span class='line'>                <span class="s2">&quot;Name&quot;</span>: <span class="s2">&quot;webapp&quot;</span>,
</span><span class='line'>                <span class="s2">&quot;Type&quot;</span>: <span class="s2">&quot;war&quot;</span>,
</span><span class='line'>                <span class="s2">&quot;Context Root&quot;</span>: <span class="s2">&quot;/webapp&quot;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">]</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>2018-08-04 11:26:39.655  INFO <span class="m">1</span> --- <span class="o">[</span>           main<span class="o">]</span> PayaraMicro                              :
</span><span class='line'>Payara Micro URLs:
</span><span class='line'>http://4e90ecf6a1a7:8080/webapp
</span></code></pre></td></tr></table></div></figure>


<h2>Testing</h2>

<p>Let&rsquo;s hit our app&rsquo;s health endpoint to test:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -s http://localhost:8080/webapp/health <span class="p">|</span> jq .
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;status&quot;</span>: <span class="s2">&quot;UP&quot;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now to interact with our API:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -s http://localhost:8080/webapp/person/all <span class="p">|</span> jq .
</span><span class='line'><span class="o">[</span>
</span><span class='line'>  <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;id&quot;</span>: 1,
</span><span class='line'>    <span class="s2">&quot;name&quot;</span>: <span class="s2">&quot;Ruan&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;lastName&quot;</span>: <span class="s2">&quot;Bekker&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;email&quot;</span>: <span class="s2">&quot;ruan@gmail.com&quot;</span>
</span><span class='line'>  <span class="o">}</span>,
</span><span class='line'>  <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;id&quot;</span>: 2,
</span><span class='line'>    <span class="s2">&quot;name&quot;</span>: <span class="s2">&quot;Steve&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;lastName&quot;</span>: <span class="s2">&quot;James&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;email&quot;</span>: <span class="s2">&quot;steve@gmail.com&quot;</span>
</span><span class='line'>  <span class="o">}</span>,
</span><span class='line'>  <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;id&quot;</span>: 3,
</span><span class='line'>    <span class="s2">&quot;name&quot;</span>: <span class="s2">&quot;Frank&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;lastName&quot;</span>: <span class="s2">&quot;Phillips&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;email&quot;</span>: <span class="s2">&quot;frank@gmail.com&quot;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Payara also provides a <code>/metrics</code> endpoint:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -s http://localhost:8080/webapp/metrics <span class="p">|</span> jq .
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;mem&quot;</span>: 219648,
</span><span class='line'>  <span class="s2">&quot;mem.free&quot;</span>: 67104,
</span><span class='line'>  <span class="s2">&quot;processors&quot;</span>: 4,
</span><span class='line'>  <span class="s2">&quot;instance.uptime&quot;</span>: 369749,
</span><span class='line'>  <span class="s2">&quot;uptime&quot;</span>: 390417,
</span><span class='line'>  <span class="s2">&quot;systemload.average&quot;</span>: 0.14697265625,
</span><span class='line'>  <span class="s2">&quot;heap.committed&quot;</span>: 219648,
</span><span class='line'>  <span class="s2">&quot;heap.init&quot;</span>: 32768,
</span><span class='line'>  <span class="s2">&quot;heap.used&quot;</span>: 152543,
</span><span class='line'>  <span class="s2">&quot;heap&quot;</span>: 455168,
</span><span class='line'>  <span class="s2">&quot;threads.peak&quot;</span>: 98,
</span><span class='line'>  <span class="s2">&quot;threads.daemon&quot;</span>: 37,
</span><span class='line'>  <span class="s2">&quot;threads&quot;</span>: 72,
</span><span class='line'>  <span class="s2">&quot;classes&quot;</span>: 16951,
</span><span class='line'>  <span class="s2">&quot;classes.loaded&quot;</span>: 16951,
</span><span class='line'>  <span class="s2">&quot;classes.unloaded&quot;</span>: 0,
</span><span class='line'>  <span class="s2">&quot;gc.ps_scavenge.count&quot;</span>: 42,
</span><span class='line'>  <span class="s2">&quot;gc.ps_scavenge.time&quot;</span>: 515,
</span><span class='line'>  <span class="s2">&quot;gc.ps_marksweep.count&quot;</span>: 4,
</span><span class='line'>  <span class="s2">&quot;gc.ps_marksweep.time&quot;</span>: 634,
</span><span class='line'>  <span class="s2">&quot;counter.status.200.health&quot;</span>: 1,
</span><span class='line'>  <span class="s2">&quot;counter.status.200.mappings&quot;</span>: 2,
</span><span class='line'>  <span class="s2">&quot;counter.status.200.person.all&quot;</span>: 2,
</span><span class='line'>  <span class="s2">&quot;counter.status.404.error&quot;</span>: 5,
</span><span class='line'>  <span class="s2">&quot;gauge.response.error&quot;</span>: 6,
</span><span class='line'>  <span class="s2">&quot;gauge.response.health&quot;</span>: 120,
</span><span class='line'>  <span class="s2">&quot;gauge.response.mappings&quot;</span>: 3,
</span><span class='line'>  <span class="s2">&quot;gauge.response.person.all&quot;</span>: 9
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>And to get a mapping of all the endpoints:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -s http://localhost:8080/webapp/mappings <span class="p">|</span> jq .
</span></code></pre></td></tr></table></div></figure>


<p>If you decided to deploy as a jar, you can use the payara-micro jar to deploy the war file:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>java -jar payara-micro-5.182.jar --deploy target/webapp.war
</span></code></pre></td></tr></table></div></figure>


<p>For more info on this, have a look at their <a href="https://blog.payara.fish/creating-rest-web-services-with-spring-boot-hosted-on-payara-micro">website</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello World Web App With Java Springboot and Maven]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/08/03/hello-world-web-app-with-java-springboot-and-maven/"/>
    <updated>2018-08-03T08:31:58-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/08/03/hello-world-web-app-with-java-springboot-and-maven</id>
    <content type="html"><![CDATA[<p>In this post we will setup a Java Hello World Web App, using Maven and SpringBoot on Ubuntu 16. I will create all the needed files in this tutorial, but you can head to start.spring.io to generate the zip for you.</p>

<h2>Setup Java</h2>

<p>Setup Java 1.8:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>apt update
</span><span class='line'><span class="nv">$ </span>apt install wget openssl vim software-properties-common -y
</span><span class='line'><span class="nv">$ </span>add-apt-repository ppa:webupd8team/java -y
</span><span class='line'><span class="nv">$ </span>apt-key adv --keyserver keyserver.ubuntu.com --recv-keys C2518248EEA14886
</span><span class='line'><span class="nv">$ </span>apt update <span class="o">&amp;&amp;</span> apt install oracle-java8-installer -y
</span></code></pre></td></tr></table></div></figure>


<p>Ensure that Java is installed:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>java -version
</span><span class='line'>java version <span class="s2">&quot;1.8.0_181&quot;</span>
</span><span class='line'>Java<span class="o">(</span>TM<span class="o">)</span> SE Runtime Environment <span class="o">(</span>build 1.8.0_181-b13<span class="o">)</span>
</span><span class='line'>Java HotSpot<span class="o">(</span>TM<span class="o">)</span> 64-Bit Server VM <span class="o">(</span>build 25.181-b13, mixed mode<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Install Apache Maven:</h2>

<p>Maven is a build automation tool used primarily for Java projects. Let&rsquo;s setup Maven:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /opt
</span><span class='line'><span class="nv">$ </span>curl -SL  http://www-eu.apache.org/dist/maven/maven-3/3.5.4/binaries/apache-maven-3.5.4-bin.tar.gz <span class="p">|</span> tar -xz
</span><span class='line'><span class="nv">$ </span>mv apache-maven-3.5.4 maven
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s1">&#39;M2_HOME=/opt/maven&#39;</span> &gt; /etc/profile.d/mavenenv.sh
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s1">&#39;export PATH=${M2_HOME}/bin:${PATH}&#39;</span> &gt;&gt; /etc/profile.d/mavenenv.sh
</span><span class='line'><span class="nv">$ </span>chmod +x /etc/profile.d/mavenenv.sh
</span><span class='line'><span class="nv">$ </span><span class="nb">source</span> /etc/profile.d/mavenenv.sh
</span></code></pre></td></tr></table></div></figure>


<p>Verify that Maven is installed:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mvn -version
</span><span class='line'>Apache Maven 3.5.4 <span class="o">(</span>1edded0938998edf8bf061f1ceb3cfdeccf443fe<span class="p">;</span> 2018-06-17T18:33:14Z<span class="o">)</span>
</span><span class='line'>Maven home: /opt/maven
</span><span class='line'>Java version: 1.8.0_181, vendor: Oracle Corporation, runtime: /usr/lib/jvm/java-8-oracle/jre
</span><span class='line'>Default locale: en_US, platform encoding: ANSI_X3.4-1968
</span><span class='line'>OS name: <span class="s2">&quot;linux&quot;</span>, version: <span class="s2">&quot;4.9.87-linuxkit-aufs&quot;</span>, arch: <span class="s2">&quot;amd64&quot;</span>, family: <span class="s2">&quot;unix&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Setup the Application:</h2>

<p>Create the home directory:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mkdir myapp <span class="o">&amp;&amp;</span> <span class="nb">cd </span>myapp
</span></code></pre></td></tr></table></div></figure>


<p>Create the directory structure:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mkdir -p src/main/java/hello
</span></code></pre></td></tr></table></div></figure>


<p>Create and Edit the pom.xml:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vim pom.xml
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;project</span> <span class="na">xmlns=</span><span class="s">&quot;http://maven.apache.org/POM/4.0.0&quot;</span>
</span><span class='line'>         <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
</span><span class='line'>         <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;modelVersion&gt;</span>4.0.0<span class="nt">&lt;/modelVersion&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;groupId&gt;</span>hello<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>    <span class="nt">&lt;artifactId&gt;</span>myapp<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>    <span class="nt">&lt;version&gt;</span>1.0<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;parent&gt;</span>
</span><span class='line'>        <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>        <span class="nt">&lt;artifactId&gt;</span>spring-boot-starter-parent<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>        <span class="nt">&lt;version&gt;</span>1.5.9.RELEASE<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/parent&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;dependencies&gt;</span>
</span><span class='line'>        <span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>            <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>            <span class="nt">&lt;artifactId&gt;</span>spring-boot-starter-web<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/dependencies&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;properties&gt;</span>
</span><span class='line'>        <span class="nt">&lt;java.version&gt;</span>1.8<span class="nt">&lt;/java.version&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/properties&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;build&gt;</span>
</span><span class='line'>        <span class="nt">&lt;plugins&gt;</span>
</span><span class='line'>            <span class="nt">&lt;plugin&gt;</span>
</span><span class='line'>                <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>                <span class="nt">&lt;artifactId&gt;</span>spring-boot-maven-plugin<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/plugin&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/plugins&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/build&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;/project&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Create the Main Application Class:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vim src/main/java/hello/MainApplicationClass.java
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">hello</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.boot.SpringApplication</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.boot.autoconfigure.SpringBootApplication</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@SpringBootApplication</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MainApplicationClass</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">MainApplicationClass</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Create the Route Controller:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vim src/main/java/hello/HelloController.java
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">hello</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.RequestMapping</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.RestController</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@RestController</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">HelloController</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@RequestMapping</span><span class="o">(</span><span class="s">&quot;/&quot;</span><span class="o">)</span>
</span><span class='line'>        <span class="kd">public</span> <span class="n">String</span> <span class="nf">index</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="s">&quot;This is the index!\n&quot;</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>    <span class="nd">@RequestMapping</span><span class="o">(</span><span class="s">&quot;/hello&quot;</span><span class="o">)</span>
</span><span class='line'>        <span class="kd">public</span> <span class="n">String</span> <span class="nf">index2</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">return</span> <span class="s">&quot;Hello, World!\n&quot;</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Build and Compile:</h2>

<p>This will download all the dependencies and build the jar file:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mvn clean package
</span></code></pre></td></tr></table></div></figure>


<h2>Start and Test the Application:</h2>

<p>Run the application:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>java -jar target/myapp-1.0.jar
</span><span class='line'>
</span><span class='line'>  .   ____          _            __ _ _
</span><span class='line'> /<span class="se">\\</span> / ___<span class="s1">&#39;_ __ _ _(_)_ __  __ _ \ \ \ \</span>
</span><span class='line'><span class="s1">( ( )\___ | &#39;</span>_ <span class="p">|</span> <span class="s1">&#39;_| | &#39;</span>_ <span class="se">\/</span> _<span class="sb">`</span> <span class="p">|</span> <span class="se">\ \ \ \</span>
</span><span class='line'> <span class="se">\\</span>/  ___<span class="o">)</span><span class="p">|</span> <span class="p">|</span>_<span class="o">)</span><span class="p">|</span> <span class="p">|</span> <span class="p">|</span> <span class="p">|</span> <span class="p">|</span> <span class="o">||</span> <span class="o">(</span>_<span class="p">|</span> <span class="p">|</span>  <span class="o">)</span> <span class="o">)</span> <span class="o">)</span> <span class="o">)</span>
</span><span class='line'>  <span class="err">&#39;</span>  <span class="p">|</span>____<span class="p">|</span> .__<span class="p">|</span>_<span class="p">|</span> <span class="p">|</span>_<span class="p">|</span>_<span class="p">|</span> <span class="p">|</span>_<span class="se">\_</span>_, <span class="p">|</span> / / / /
</span><span class='line'> <span class="o">=========</span><span class="p">|</span>_<span class="p">|</span><span class="o">==============</span><span class="p">|</span>___/<span class="o">=</span>/_/_/_/
</span><span class='line'> :: Spring Boot ::        <span class="o">(</span>v1.5.9.RELEASE<span class="o">)</span>
</span><span class='line'>...
</span><span class='line'>2018-08-03 12:31:06.967  INFO <span class="m">5594</span> --- <span class="o">[</span>           main<span class="o">]</span> hello.MainApplicationClass               : Started MainApplicationClass in 3.656 seconds <span class="o">(</span>JVM running <span class="k">for</span> 4.243<span class="o">)</span>
</span><span class='line'>^
</span></code></pre></td></tr></table></div></figure>


<p>Test the Application:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl http://localhost:8080/
</span><span class='line'>This is the index!
</span></code></pre></td></tr></table></div></figure>


<p>And for our <code>/hello</code> route:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl http://localhost:8080/hello
</span><span class='line'>Hello, World!
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello World Ruby on Rails App Tutorial Using Mac]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/07/20/hello-world-ruby-on-rails-app-tutorial-using-mac/"/>
    <updated>2018-07-20T03:30:20-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/07/20/hello-world-ruby-on-rails-app-tutorial-using-mac</id>
    <content type="html"><![CDATA[<p>In this tutorial, we will setup a basic ruby on rails web app, that consists of a <code>/hello_world</code> and a <code>/status</code> controller. The hello_world controller will return <code>Hello, World</code> and our <code>/status</code> controller will return a <code>HTTP 204</code> no content response code.</p>

<h2>Setup Ruby on Rails</h2>

<p>Setup Ruby on Rails on your Mac:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ brew install rbenv ruby-build
</span><span class='line'>
</span><span class='line'>$ echo 'if which rbenv &gt; /dev/null; then eval "$(rbenv init -)"; fi' &gt;&gt; ~/.bash_profile
</span><span class='line'>$ source ~/.bash_profile
</span><span class='line'>
</span><span class='line'>$ rbenv install 2.5.0
</span><span class='line'>$ rbenv global 2.5.0
</span><span class='line'>$ ruby -v
</span><span class='line'>
</span><span class='line'>$ gem install rails -v 5.1.4
</span><span class='line'>$ benv rehash</span></code></pre></td></tr></table></div></figure>


<h2>Creating the App</h2>

<p>Create your ruby on rails application:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rails new fist-app
</span><span class='line'>$ cd first-app
</span><span class='line'>$ rails server</span></code></pre></td></tr></table></div></figure>


<h2>Route Config</h2>

<p>Our routes config:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cat config/routes.rb
</span><span class='line'>Rails.application.routes.draw do
</span><span class='line'>  # For details on the DSL available within this file, see http://guides.rubyonrails.org/routing.html
</span><span class='line'>  get 'hello_world', to: 'hello_world#call'
</span><span class='line'>  get 'status', to: 'status#call'
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<h2>Controllers</h2>

<p>Configure the hello_world controller:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cat app/controllers/hello_world_controller.rb
</span><span class='line'>
</span><span class='line'>class HelloWorldController &lt; ApplicationController
</span><span class='line'>  def call
</span><span class='line'>    render body: "Hello, World"
</span><span class='line'>  end
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<p>Configure the status controller:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cat app/controllers/status_controller.rb
</span><span class='line'>
</span><span class='line'>class StatusController &lt; ApplicationController
</span><span class='line'>  def call
</span><span class='line'>    [204, {}, ['']]
</span><span class='line'>  end
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<h2>Testing</h2>

<p>For our hello world controller:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ curl -i http://localhost:3000/hello_world
</span><span class='line'>HTTP/1.1 200 OK
</span><span class='line'>X-Frame-Options: SAMEORIGIN
</span><span class='line'>X-XSS-Protection: 1; mode=block
</span><span class='line'>X-Content-Type-Options: nosniff
</span><span class='line'>Content-Type: text/plain; charset=utf-8
</span><span class='line'>ETag: W/"565339bc4d33d72817b583024112eb7f"
</span><span class='line'>Cache-Control: max-age=0, private, must-revalidate
</span><span class='line'>X-Request-Id: 62441a6d-faa3-42d5-a5a2-bcf7eff5e917
</span><span class='line'>X-Runtime: 0.001940
</span><span class='line'>Transfer-Encoding: chunked
</span><span class='line'>Hello, World</span></code></pre></td></tr></table></div></figure>


<p>For our status controller:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -i http://localhost:3000/status
</span><span class='line'>HTTP/1.1 <span class="m">204</span> No Content
</span><span class='line'>X-Frame-Options: SAMEORIGIN
</span><span class='line'>X-XSS-Protection: 1<span class="p">;</span> <span class="nv">mode</span><span class="o">=</span>block
</span><span class='line'>X-Content-Type-Options: nosniff
</span><span class='line'>Cache-Control: no-cache
</span><span class='line'>X-Request-Id: bec91213-ff82-4fc6-8698-3ee7622b1f51
</span><span class='line'>X-Runtime: 0.075504
</span></code></pre></td></tr></table></div></figure>


<h2>Resources:</h2>

<ul>
<li><a href="https://gorails.com/setup/osx/10.12-sierra">https://gorails.com/setup/osx/10.12-sierra</a></li>
<li><a href="http://guides.rubyonrails.org/routing.html">http://guides.rubyonrails.org/routing.html</a></li>
<li><a href="https://www.railstutorial.org/book/beginning#sec-installing_rails">https://www.railstutorial.org/book/beginning#sec-installing_rails</a></li>
<li><a href="https://www.railstutorial.org/book/toy_app">https://www.railstutorial.org/book/toy_app</a></li>
<li><a href="http://codingnudge.com/2017/03/17/tutorial-how-to-run-ruby-on-rails-on-docker-part-1/">http://codingnudge.com/2017/03/17/tutorial-how-to-run-ruby-on-rails-on-docker-part-1/</a></li>
<li><a href="https://medium.com/how-i-learned-ruby-rails/how-i-trained-to-learn-rails-e08c94e2a51e">https://medium.com/how-i-learned-ruby-rails/how-i-trained-to-learn-rails-e08c94e2a51e</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Capture Geo Location Data With Python Flask and PyGeoIP]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/07/16/capture-geo-location-data-with-python-flask-and-pygeoip/"/>
    <updated>2018-07-16T17:46:01-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/07/16/capture-geo-location-data-with-python-flask-and-pygeoip</id>
    <content type="html"><![CDATA[<p>With the PyGeoIP package you can capture geo location data, which is pretty cool, for example, when you have IOT devices pushing location data to elasticsearch and visualizing the data with Kibana. That will be one example, but the possibilites are endless.</p>

<h2>Dependencies:</h2>

<p>Get the Maxmind Geo Database:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>wget -N http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz
</span><span class='line'><span class="nv">$ </span>gunzip GeoLiteCity.dat.gz
</span></code></pre></td></tr></table></div></figure>


<p>Install Python Flask and PyGeoIP:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>pip install flask pygeoip
</span></code></pre></td></tr></table></div></figure>


<h2>Getting Started with PyGeoIP:</h2>

<p>Let&rsquo;s run through a couple of examples on how to get:</p>

<ul>
<li>Country Name by IP Address and DNS</li>
<li>Country Code by IP Address and DNS</li>
<li>GeoData by IP Address</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">pygeoip</span><span class="o">,</span> <span class="nn">json</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">gi</span> <span class="o">=</span> <span class="n">pygeoip</span><span class="o">.</span><span class="n">GeoIP</span><span class="p">(</span><span class="s">&#39;GeoLiteCity.dat&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">gi</span><span class="o">.</span><span class="n">country_name_by_addr</span><span class="p">(</span><span class="s">&#39;8.8.8.8&#39;</span><span class="p">)</span>
</span><span class='line'><span class="s">&#39;United States&#39;</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">gi</span><span class="o">.</span><span class="n">country_code_by_addr</span><span class="p">(</span><span class="s">&#39;8.8.8.8&#39;</span><span class="p">)</span>
</span><span class='line'><span class="s">&#39;US&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">gi</span><span class="o">.</span><span class="n">country_name_by_name</span><span class="p">(</span><span class="s">&#39;scaleway.com&#39;</span><span class="p">)</span>
</span><span class='line'><span class="s">&#39;France&#39;</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">gi</span><span class="o">.</span><span class="n">country_code_by_name</span><span class="p">(</span><span class="s">&#39;scaleway.com&#39;</span><span class="p">)</span>
</span><span class='line'><span class="s">&#39;FR&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">gi</span><span class="o">.</span><span class="n">region_by_name</span><span class="p">(</span><span class="s">&#39;scaleway.com&#39;</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="s">&#39;region_code&#39;</span><span class="p">:</span> <span class="bp">None</span><span class="p">,</span> <span class="s">&#39;country_code&#39;</span><span class="p">:</span> <span class="s">&#39;FR&#39;</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">data</span> <span class="o">=</span> <span class="n">gi</span><span class="o">.</span><span class="n">record_by_addr</span><span class="p">(</span><span class="s">&#39;104.244.42.193&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">indent</span><span class="o">=</span><span class="mi">2</span><span class="p">))</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;city&quot;</span><span class="p">:</span> <span class="s">&quot;San Francisco&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;region_code&quot;</span><span class="p">:</span> <span class="s">&quot;CA&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;area_code&quot;</span><span class="p">:</span> <span class="mi">415</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;time_zone&quot;</span><span class="p">:</span> <span class="s">&quot;America/Los_Angeles&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;dma_code&quot;</span><span class="p">:</span> <span class="mi">807</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;metro_code&quot;</span><span class="p">:</span> <span class="s">&quot;San Francisco, CA&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;country_code3&quot;</span><span class="p">:</span> <span class="s">&quot;USA&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;latitude&quot;</span><span class="p">:</span> <span class="mf">37.775800000000004</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;postal_code&quot;</span><span class="p">:</span> <span class="s">&quot;94103&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;longitude&quot;</span><span class="p">:</span> <span class="o">-</span><span class="mf">122.4128</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;country_code&quot;</span><span class="p">:</span> <span class="s">&quot;US&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;country_name&quot;</span><span class="p">:</span> <span class="s">&quot;United States&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;continent&quot;</span><span class="p">:</span> <span class="s">&quot;NA&quot;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">data</span> <span class="o">=</span> <span class="n">gi</span><span class="o">.</span><span class="n">record_by_name</span><span class="p">(</span><span class="s">&#39;twitter.com&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">indent</span><span class="o">=</span><span class="mi">2</span><span class="p">))</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;city&quot;</span><span class="p">:</span> <span class="s">&quot;San Francisco&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;region_code&quot;</span><span class="p">:</span> <span class="s">&quot;CA&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;area_code&quot;</span><span class="p">:</span> <span class="mi">415</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;time_zone&quot;</span><span class="p">:</span> <span class="s">&quot;America/Los_Angeles&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;dma_code&quot;</span><span class="p">:</span> <span class="mi">807</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;metro_code&quot;</span><span class="p">:</span> <span class="s">&quot;San Francisco, CA&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;country_code3&quot;</span><span class="p">:</span> <span class="s">&quot;USA&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;latitude&quot;</span><span class="p">:</span> <span class="mf">37.775800000000004</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;postal_code&quot;</span><span class="p">:</span> <span class="s">&quot;94103&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;longitude&quot;</span><span class="p">:</span> <span class="o">-</span><span class="mf">122.4128</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;country_code&quot;</span><span class="p">:</span> <span class="s">&quot;US&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;country_name&quot;</span><span class="p">:</span> <span class="s">&quot;United States&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;continent&quot;</span><span class="p">:</span> <span class="s">&quot;NA&quot;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Python Flask Web App to Capture Data</h2>

<p>Let&rsquo;s create a basic Flask App that will capture the data from the client making the request to the server. In this example we will just return the data, but we can filter the data and ingest it into a database like elasticsearch, etc.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">Flask</span><span class="p">,</span> <span class="n">request</span><span class="p">,</span> <span class="n">jsonify</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">pygeoip</span><span class="o">,</span> <span class="nn">json</span>
</span><span class='line'>
</span><span class='line'><span class="n">app</span> <span class="o">=</span> <span class="n">Flask</span><span class="p">(</span><span class="n">__name__</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">geo</span> <span class="o">=</span> <span class="n">pygeoip</span><span class="o">.</span><span class="n">GeoIP</span><span class="p">(</span><span class="s">&#39;GeoLiteCity.dat&#39;</span><span class="p">,</span> <span class="n">pygeoip</span><span class="o">.</span><span class="n">MEMORY_CACHE</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@app.route</span><span class="p">(</span><span class="s">&#39;/&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">index</span><span class="p">():</span>
</span><span class='line'>    <span class="n">client_ip</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">remote_addr</span>
</span><span class='line'>    <span class="n">geo_data</span> <span class="o">=</span> <span class="n">geo</span><span class="o">.</span><span class="n">record_by_addr</span><span class="p">(</span><span class="n">client_ip</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">geo_data</span><span class="p">,</span> <span class="n">indent</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span> <span class="o">+</span> <span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
</span><span class='line'>    <span class="n">app</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="n">host</span><span class="o">=</span><span class="s">&#39;0.0.0.0&#39;</span><span class="p">,</span> <span class="n">port</span><span class="o">=</span><span class="mi">80</span><span class="p">,</span> <span class="n">debug</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Run the Server:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>python app.py
</span></code></pre></td></tr></table></div></figure>


<p>Make a request from the client over a remote connection:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl http://remote-endpoint.com
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;city&quot;</span>: <span class="s2">&quot;Cape Town&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;region_code&quot;</span>: <span class="s2">&quot;11&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;area_code&quot;</span>: 0,
</span><span class='line'>  <span class="s2">&quot;time_zone&quot;</span>: <span class="s2">&quot;Africa/Johannesburg&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;dma_code&quot;</span>: 0,
</span><span class='line'>  <span class="s2">&quot;metro_code&quot;</span>: null,
</span><span class='line'>  <span class="s2">&quot;country_code3&quot;</span>: <span class="s2">&quot;ZAF&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;latitude&quot;</span>: -01.12345,
</span><span class='line'>  <span class="s2">&quot;postal_code&quot;</span>: <span class="s2">&quot;8000&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;longitude&quot;</span>: 02.123456789,
</span><span class='line'>  <span class="s2">&quot;country_code&quot;</span>: <span class="s2">&quot;ZA&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;country_name&quot;</span>: <span class="s2">&quot;South Africa&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;continent&quot;</span>: <span class="s2">&quot;AF&quot;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Resources:</h2>

<ul>
<li><a href="http://pygeoip.readthedocs.io/en/latest/getting-started.html">PyGeoIP</a></li>
<li><a href="https://dev.maxmind.com/geoip/legacy/install/city/">MaxMind</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install Java Development Kit 10 on Ubuntu]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/07/15/install-java-development-kit-10-on-ubuntu/"/>
    <updated>2018-07-15T06:17:43-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/07/15/install-java-development-kit-10-on-ubuntu</id>
    <content type="html"><![CDATA[<p>With the announcement of improved docker container integration with Java 10, the JVM is now aware of resource constraints, as not from prior versions. More information on <a href="https://blog.docker.com/2018/04/improved-docker-container-integration-with-java-10/">this post</a></p>

<h2>Differences in Java 8 and Java 10:</h2>

<p>As you can see with Java 8:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker run -it -m512M --entrypoint bash openjdk:latest
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>docker-java-home/bin/java -XX:+PrintFlagsFinal -version <span class="p">|</span> grep MaxHeapSize
</span><span class='line'>    uintx MaxHeapSize                              :<span class="o">=</span> <span class="m">524288000</span>                          <span class="o">{</span>product<span class="o">}</span>
</span><span class='line'>openjdk version <span class="s2">&quot;1.8.0_162&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>And with Java 10:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker run -it -m512M --entrypoint bash openjdk:10-jdk
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>docker-java-home/bin/java -XX:+PrintFlagsFinal -version <span class="p">|</span> grep MaxHeapSize
</span><span class='line'>   size_t <span class="nv">MaxHeapSize</span>                              <span class="o">=</span> <span class="m">134217728</span>                                <span class="o">{</span>product<span class="o">}</span> <span class="o">{</span>ergonomic<span class="o">}</span>
</span><span class='line'>openjdk version <span class="s2">&quot;10&quot;</span> 2018-03-20
</span></code></pre></td></tr></table></div></figure>


<h2>Installing JDK 10 on Ubuntu:</h2>

<p>Installing Java Development Kit 10:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>apt update <span class="o">&amp;&amp;</span> apt upgrade -y
</span><span class='line'><span class="nv">$ </span>add-apt-repository ppa:linuxuprising/java
</span><span class='line'><span class="nv">$ </span>apt update
</span><span class='line'><span class="nv">$ </span>apt install oracle-java10-installer
</span><span class='line'><span class="nv">$ </span>apt install oracle-java10-set-default
</span></code></pre></td></tr></table></div></figure>


<p>Confirming the Java Version:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>java -version
</span><span class='line'>java version <span class="s2">&quot;10.0.1&quot;</span> 2018-04-17
</span><span class='line'>Java<span class="o">(</span>TM<span class="o">)</span> SE Runtime Environment 18.3 <span class="o">(</span>build 10.0.1+10<span class="o">)</span>
</span><span class='line'>Java HotSpot<span class="o">(</span>TM<span class="o">)</span> 64-Bit Server VM 18.3 <span class="o">(</span>build 10.0.1+10, mixed mode<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup a LAMP Stack With Ansible Using Ubuntu]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/07/08/setup-a-lamp-stack-with-ansible-using-ubuntu/"/>
    <updated>2018-07-08T17:15:15-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/07/08/setup-a-lamp-stack-with-ansible-using-ubuntu</id>
    <content type="html"><![CDATA[<p><img src="https://res.cloudinary.com/rbekker/image/upload/v1531083331/ansible_tojf8l.png" alt="" /></p>

<p>This is Part-2 of our <a href="http://blog.ruanbekker.com/blog/categories/ansible-tutorial">Ansible-Tutorial</a> and in this post we will cover how to setup a LAMP Stack on Ubuntu using Ansible. We will only have one host in our inventory, but this can be scaled easily by increasing the number of nodes in your invetory configuration file.</p>

<h2>Our Playbook:</h2>

<p>Our <code>lamp.yml</code> playbook:</p>

<figure class='code'><figcaption><span>lamp.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="nn">---</span>
</span><span class='line'><span class="c1"># Setup LAMP Stack</span>
</span><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">hosts</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">newhost</span>
</span><span class='line'>  <span class="l-Scalar-Plain">tasks</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">install lamp stack</span>
</span><span class='line'>      <span class="l-Scalar-Plain">sudo</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">yes</span>
</span><span class='line'>      <span class="l-Scalar-Plain">apt</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">name= state=present update_cache=yes</span>
</span><span class='line'>      <span class="l-Scalar-Plain">with_items</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">apache2</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">mysql-server</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">php7.0</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">php7.0-mysql</span>
</span><span class='line'>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">start services</span>
</span><span class='line'>      <span class="l-Scalar-Plain">service</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">name= state=started enabled=yes</span>
</span><span class='line'>      <span class="l-Scalar-Plain">sudo</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">yes</span>
</span><span class='line'>      <span class="l-Scalar-Plain">with_items</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">apache2</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">mysql</span>
</span><span class='line'>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">deploy index.html</span>
</span><span class='line'>      <span class="l-Scalar-Plain">sudo</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">yes</span>
</span><span class='line'>      <span class="l-Scalar-Plain">copy</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">src</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/tmp/index.html</span>
</span><span class='line'>        <span class="l-Scalar-Plain">dest</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/var/www/html/index.html</span>
</span></code></pre></td></tr></table></div></figure>


<p>Our <code>index.html</code> that will be deployed on our servers:</p>

<figure class='code'><figcaption><span>/tmp/index.html</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="cp">&lt;!DOCTYPE html&gt;</span>
</span><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'>  <span class="nt">&lt;body&gt;</span>
</span><span class='line'>    <span class="nt">&lt;h1&gt;</span>Deployed with Ansible<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Deploy your LAMP Stack:</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ansible-playbook -i inventory.ini -u root lamp.yml
</span><span class='line'>
</span><span class='line'>PLAY <span class="o">[</span>newhost<span class="o">]</span> ***************************************************************************************************************************
</span><span class='line'>
</span><span class='line'>TASK <span class="o">[</span>Gathering Facts<span class="o">]</span> *******************************************************************************************************************
</span><span class='line'>ok: <span class="o">[</span>web-1<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>TASK <span class="o">[</span>install lamp stack<span class="o">]</span> ****************************************************************************************************************
</span><span class='line'>ok: <span class="o">[</span>web-1<span class="o">]</span> <span class="o">=</span>&gt; <span class="o">(</span><span class="nv">item</span><span class="o">=[</span>u<span class="s1">&#39;apache2&#39;</span>, u<span class="s1">&#39;mysql-server&#39;</span>, u<span class="s1">&#39;php7.0&#39;</span>, u<span class="s1">&#39;php7.0-mysql&#39;</span><span class="o">])</span>
</span><span class='line'>
</span><span class='line'>TASK <span class="o">[</span>start services<span class="o">]</span> ********************************************************************************************************************
</span><span class='line'>ok: <span class="o">[</span>web-1<span class="o">]</span> <span class="o">=</span>&gt; <span class="o">(</span><span class="nv">item</span><span class="o">=</span>apache2<span class="o">)</span>
</span><span class='line'>ok: <span class="o">[</span>web-1<span class="o">]</span> <span class="o">=</span>&gt; <span class="o">(</span><span class="nv">item</span><span class="o">=</span>mysql<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>TASK <span class="o">[</span>deploy index.html<span class="o">]</span> *****************************************************************************************************************
</span><span class='line'>changed: <span class="o">[</span>web-1<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>PLAY RECAP *******************************************************************************************************************************
</span><span class='line'>web-1                      : <span class="nv">ok</span><span class="o">=</span><span class="m">4</span>    <span class="nv">changed</span><span class="o">=</span><span class="m">1</span>    <span class="nv">unreachable</span><span class="o">=</span><span class="m">0</span>    <span class="nv">failed</span><span class="o">=</span>0
</span></code></pre></td></tr></table></div></figure>


<p>Test our web server:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl http://10.0.0.4
</span><span class='line'>
</span><span class='line'>Deployed with Ansible
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Getting Started With Ansible on Ubuntu]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/07/08/getting-started-with-ansible-on-ubuntu/"/>
    <updated>2018-07-08T15:56:06-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/07/08/getting-started-with-ansible-on-ubuntu</id>
    <content type="html"><![CDATA[<p><img src="https://res.cloudinary.com/rbekker/image/upload/v1531083331/ansible_tojf8l.png" alt="" /></p>

<p><a href="">Part 1</a> - This is a getting started series on Ansible.</p>

<p>The first post will be on how to setup ansible and how to reach your nodes in order to deploy software to your nodes.</p>

<h2>Install Ansible:</h2>

<p>Ansible relies on python, so we will first install the dependencies:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>apt update <span class="o">&amp;&amp;</span> apt install python python-setuptools -y
</span><span class='line'><span class="nv">$ </span>easy_install pip
</span><span class='line'><span class="nv">$ </span>pip install ansible
</span></code></pre></td></tr></table></div></figure>


<h2>Populate the invetory configuration:</h2>

<p>Your invetory file will hold your host and variable information. Lets say we have 3 nodes that we want to deploy software to; <code>node-1</code>, <code>node-2</code> and <code>node-3</code>. We will group them under <code>nodes</code>. This will be saved under the a new file <code>inventory.init</code>:</p>

<figure class='code'><figcaption><span>inventory.ini</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>nodes<span class="o">]</span>
</span><span class='line'>node-1
</span><span class='line'>node-2
</span><span class='line'>node-3
</span></code></pre></td></tr></table></div></figure>


<p>Next we will populate information about our node names, this will be done under our <code>~/.ssh/config</code> configuration:</p>

<figure class='code'><figcaption><span>~/.ssh/config</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Host node-1
</span><span class='line'>  Hostname 10.0.0.2
</span><span class='line'>  User root
</span><span class='line'>  IdentityFile ~/.ssh/id_rsa
</span><span class='line'>  StrictHostKeyChecking no
</span><span class='line'>  UserKnownHostsFile /dev/null
</span><span class='line'>
</span><span class='line'>Host node-2
</span><span class='line'>  Hostname 10.0.0.3
</span><span class='line'>  User root
</span><span class='line'>  IdentityFile ~/.ssh/id_rsa
</span><span class='line'>  StrictHostKeyChecking no
</span><span class='line'>  UserKnownHostsFile /dev/null
</span><span class='line'>
</span><span class='line'>Host node-3
</span><span class='line'>  Hostname 10.0.0.4
</span><span class='line'>  User root
</span><span class='line'>  IdentityFile ~/.ssh/id_rsa
</span><span class='line'>  StrictHostKeyChecking no
</span><span class='line'>  UserKnownHostsFile /dev/null
</span></code></pre></td></tr></table></div></figure>


<p>Now we need to generate a ssh key for our node where we will run our ansible commands from:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ssh-keygen -b <span class="m">2048</span> -f ~/.ssh/id_rsa -t rsa -q -N <span class="s2">&quot;&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now we will copy the contents of <code>~/.ssh/id_rsa.pub</code> into our destination nodes <code>~/.ssh/authorized_keys</code> or if you have password authentication enabled, we can do <code>$ ssh-copy-id root@10.0.0.x</code> etc. Now we should be able to ssh to our nodes to <code>node-1, node-2</code> and <code>node-3</code>.</p>

<h2>Deploy Python:</h2>

<p>As Ansible requires Python, we need to bootstrap our nodes with Python. Since we are able to ssh to our nodes, we will use ansible to deploy Python to our nodes:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ansible -m raw -s -a <span class="s2">&quot;apt update &amp;&amp; apt install python -y&quot;</span> -i inventory.ini nodes
</span></code></pre></td></tr></table></div></figure>


<p>This should succeed, then we can test our connection by running the ping module:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ansible -i inventory.ini nodes -m ping
</span><span class='line'>node-2 <span class="p">|</span> <span class="nv">SUCCESS</span> <span class="o">=</span>&gt; <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;changed&quot;</span>: <span class="nb">false</span>,
</span><span class='line'>    <span class="s2">&quot;ping&quot;</span>: <span class="s2">&quot;pong&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>node-3 <span class="p">|</span> <span class="nv">SUCCESS</span> <span class="o">=</span>&gt; <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;changed&quot;</span>: <span class="nb">false</span>,
</span><span class='line'>    <span class="s2">&quot;ping&quot;</span>: <span class="s2">&quot;pong&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>node-1 <span class="p">|</span> <span class="nv">SUCCESS</span> <span class="o">=</span>&gt; <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;changed&quot;</span>: <span class="nb">false</span>,
</span><span class='line'>    <span class="s2">&quot;ping&quot;</span>: <span class="s2">&quot;pong&quot;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Run a command on your nodes:</h2>

<p>Let&rsquo;s run a cat command on all the nodes:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ansible -i inventory.ini nodes -a <span class="s2">&quot;/bin/cat /etc/hostname&quot;</span>
</span><span class='line'>node-3 <span class="p">|</span> SUCCESS <span class="p">|</span> <span class="nv">rc</span><span class="o">=</span><span class="m">0</span> &gt;&gt;
</span><span class='line'>node-3
</span><span class='line'>
</span><span class='line'>node-1 <span class="p">|</span> SUCCESS <span class="p">|</span> <span class="nv">rc</span><span class="o">=</span><span class="m">0</span> &gt;&gt;
</span><span class='line'>node-1
</span><span class='line'>
</span><span class='line'>node-2 <span class="p">|</span> SUCCESS <span class="p">|</span> <span class="nv">rc</span><span class="o">=</span><span class="m">0</span> &gt;&gt;
</span><span class='line'>node-2
</span></code></pre></td></tr></table></div></figure>


<h2>Ansible Playbooks:</h2>

<p>Let&rsquo;s run shell commands, the traditional hello world, using the ansible-playbook command. First we need a task definition, which I will name <code>shell_command-1.yml</code>:</p>

<figure class='code'><figcaption><span>shell_command.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>---
</span><span class='line'><span class="c"># Echo Static String</span>
</span><span class='line'>- hosts: nodes
</span><span class='line'>  tasks:
</span><span class='line'>  - name: <span class="nb">echo </span>static value
</span><span class='line'>    shell: /bin/echo <span class="s2">&quot;hello world&quot;</span>
</span><span class='line'>    register: echo_static
</span><span class='line'>  - debug: <span class="nv">msg</span><span class="o">=</span><span class="s2">&quot;&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now we have defined that our commands will be executed against the host group defined in our inventory.ini. Let&rsquo;s run our ansible playbook command:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ansible-playbook -i inventory.ini shell_command.yml
</span><span class='line'>
</span><span class='line'>PLAY <span class="o">[</span>nodes<span class="o">]</span> *************************************************************************************
</span><span class='line'>
</span><span class='line'>TASK <span class="o">[</span>Gathering Facts<span class="o">]</span> **********************************************************************************
</span><span class='line'>ok: <span class="o">[</span>node-1<span class="o">]</span>
</span><span class='line'>ok: <span class="o">[</span>node-2<span class="o">]</span>
</span><span class='line'>ok: <span class="o">[</span>node-3<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>TASK <span class="o">[</span><span class="nb">echo </span>static value<span class="o">]</span> ********************************************************************************
</span><span class='line'>changed: <span class="o">[</span>node-1<span class="o">]</span>
</span><span class='line'>changed: <span class="o">[</span>node-2<span class="o">]</span>
</span><span class='line'>changed: <span class="o">[</span>node-3<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>TASK <span class="o">[</span>debug<span class="o">]</span> ********************************************************************************************
</span><span class='line'>ok: <span class="o">[</span>node-1<span class="o">]</span> <span class="o">=</span>&gt; <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;msg&quot;</span>: <span class="s2">&quot;hello world&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>ok: <span class="o">[</span>node-2<span class="o">]</span> <span class="o">=</span>&gt; <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;msg&quot;</span>: <span class="s2">&quot;hello world&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>ok: <span class="o">[</span>node-3<span class="o">]</span> <span class="o">=</span>&gt; <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;msg&quot;</span>: <span class="s2">&quot;hello world&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>PLAY RECAP **********************************************************************************************
</span><span class='line'>node-1              : <span class="nv">ok</span><span class="o">=</span><span class="m">3</span>    <span class="nv">changed</span><span class="o">=</span><span class="m">1</span>    <span class="nv">unreachable</span><span class="o">=</span><span class="m">0</span>    <span class="nv">failed</span><span class="o">=</span>0
</span><span class='line'>node-2              : <span class="nv">ok</span><span class="o">=</span><span class="m">3</span>    <span class="nv">changed</span><span class="o">=</span><span class="m">1</span>    <span class="nv">unreachable</span><span class="o">=</span><span class="m">0</span>    <span class="nv">failed</span><span class="o">=</span>0
</span><span class='line'>node-3              : <span class="nv">ok</span><span class="o">=</span><span class="m">3</span>    <span class="nv">changed</span><span class="o">=</span><span class="m">1</span>    <span class="nv">unreachable</span><span class="o">=</span><span class="m">0</span>    <span class="nv">failed</span><span class="o">=</span>0
</span></code></pre></td></tr></table></div></figure>


<p>Let&rsquo;s define a variable <code>location_city = Cape Town</code> in our <code>inventory.ini</code> configuration, then we will call the variable key in our task definition:</p>

<figure class='code'><figcaption><span>inventory.ini</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>nodes<span class="o">]</span>
</span><span class='line'>node-1
</span><span class='line'>node-2
</span><span class='line'>node-3
</span><span class='line'>
</span><span class='line'><span class="o">[</span>nodes:vars<span class="o">]</span>
</span><span class='line'><span class="nv">location_city</span><span class="o">=</span><span class="s2">&quot;Cape Town&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now our task definition with our variable:</p>

<figure class='code'><figcaption><span>shell_command-2.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="nn">---</span>
</span><span class='line'><span class="c1"># Echo Variable</span>
</span><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">hosts</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nodes</span>
</span><span class='line'>  <span class="l-Scalar-Plain">tasks</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">echo variable value</span>
</span><span class='line'>    <span class="l-Scalar-Plain">shell</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/bin/echo &quot;&quot;</span>
</span><span class='line'>    <span class="l-Scalar-Plain">register</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">echo</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">debug</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">msg=&quot;&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Running our ansible-playbook:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ansible-playbook -i inventory.ini shell_command.yml
</span><span class='line'>
</span><span class='line'>PLAY <span class="o">[</span>nodes<span class="o">]</span> **************************************************************************************************************************************************************************************
</span><span class='line'>
</span><span class='line'>TASK <span class="o">[</span>Gathering Facts<span class="o">]</span> ***********************************************************************************************************************************************************************************
</span><span class='line'>ok: <span class="o">[</span>node-1<span class="o">]</span>
</span><span class='line'>ok: <span class="o">[</span>node-2<span class="o">]</span>
</span><span class='line'>ok: <span class="o">[</span>node-3<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>TASK <span class="o">[</span><span class="nb">echo </span>variable value<span class="o">]</span> *******************************************************************************************************************************************************************************
</span><span class='line'>changed: <span class="o">[</span>node-1<span class="o">]</span>
</span><span class='line'>changed: <span class="o">[</span>node-2<span class="o">]</span>
</span><span class='line'>changed: <span class="o">[</span>node-3<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>TASK <span class="o">[</span>debug<span class="o">]</span> *********************************************************************************************************************************************************************************************
</span><span class='line'>ok: <span class="o">[</span>node-1<span class="o">]</span> <span class="o">=</span>&gt; <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;msg&quot;</span>: <span class="s2">&quot;Cape Town&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>ok: <span class="o">[</span>node-2<span class="o">]</span> <span class="o">=</span>&gt; <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;msg&quot;</span>: <span class="s2">&quot;Cape Town&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>ok: <span class="o">[</span>node-3<span class="o">]</span> <span class="o">=</span>&gt; <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;msg&quot;</span>: <span class="s2">&quot;Cape Town&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>PLAY RECAP ***********************************************************************************************************************************************************************************************
</span><span class='line'>node-1              : <span class="nv">ok</span><span class="o">=</span><span class="m">3</span>    <span class="nv">changed</span><span class="o">=</span><span class="m">1</span>    <span class="nv">unreachable</span><span class="o">=</span><span class="m">0</span>    <span class="nv">failed</span><span class="o">=</span>0
</span><span class='line'>node-2              : <span class="nv">ok</span><span class="o">=</span><span class="m">3</span>    <span class="nv">changed</span><span class="o">=</span><span class="m">1</span>    <span class="nv">unreachable</span><span class="o">=</span><span class="m">0</span>    <span class="nv">failed</span><span class="o">=</span>0
</span><span class='line'>node-3              : <span class="nv">ok</span><span class="o">=</span><span class="m">3</span>    <span class="nv">changed</span><span class="o">=</span><span class="m">1</span>    <span class="nv">unreachable</span><span class="o">=</span><span class="m">0</span>    <span class="nv">failed</span><span class="o">=</span>0
</span></code></pre></td></tr></table></div></figure>


<p>This is it for this post, all posts for this tutorial will be posted under <a href="http://blog.ruanbekker.com/blog/categories/ansible-tutorial">#ansible-tutorials</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Salt and Hash Example Using Python With Bcrypt on Alpine]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/07/04/salt-and-hash-example-using-python-with-bcrypt-on-alpine/"/>
    <updated>2018-07-04T05:05:00-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/07/04/salt-and-hash-example-using-python-with-bcrypt-on-alpine</id>
    <content type="html"><![CDATA[<p>This is a post on a example of how to hash a password with a salt. A salt in cryptography is a method that applies a one way function to hash data like passwords. The advantage of using salts is to protect your sensitive data against dictionary attacks, etc. Everytime a salt is applied to the same string, the hashed string will provide a different result.</p>

<h2>Installing Bcrypt</h2>

<p>I will be using bcrypt to hash my password. I always use alpine images and this is how I got bcrypt running on alpine:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker run -it apline sh
</span><span class='line'><span class="nv">$ </span>apk add python python-dev py2-pip autoconf automake g++ make --no-cache
</span><span class='line'><span class="nv">$ </span>pip install py-bcrypt
</span></code></pre></td></tr></table></div></figure>


<p>This command should produce a <code>0 exit code</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>python -c <span class="s1">&#39;import bcrypt&#39;</span><span class="p">;</span> <span class="nb">echo</span> <span class="nv">$?</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h2>Bcrypt Example to Hash a Password</h2>

<p>Here is a example to show you the output when a salt is applied to a string, such as a password. First we will define our very weak password:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">bcrypt</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">password</span> <span class="o">=</span> <span class="s">&#39;pass123&#39;</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">password</span>
</span><span class='line'><span class="s">&#39;pass123&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>The bcrypt package has a function called <code>gensalt()</code> that accepts a parameter <code>log_rounds</code> which defines the complexity of the hashing. Lets create a hash for our password:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">bcrypt</span><span class="o">.</span><span class="n">hashpw</span><span class="p">(</span><span class="n">password</span><span class="p">,</span> <span class="n">bcrypt</span><span class="o">.</span><span class="n">gensalt</span><span class="p">(</span><span class="mi">12</span><span class="p">))</span>
</span><span class='line'><span class="s">&#39;$2a$12$iquyyyJAlA9nZwlGo0CYK.J37Qn.to/0mTtiCspNAyO8778006XZG&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">bcrypt</span><span class="o">.</span><span class="n">hashpw</span><span class="p">(</span><span class="n">password</span><span class="p">,</span> <span class="n">bcrypt</span><span class="o">.</span><span class="n">gensalt</span><span class="p">(</span><span class="mi">12</span><span class="p">))</span>
</span><span class='line'><span class="s">&#39;$2a$12$UzNjJ1W/cWqBrt5rzNkb..j.gUvrW64DbvVkNbhRDzBtbRvNInaqq&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>As you can see, the hashed string was different when we called it for the second time.</p>

<h2>Bcrypt Salt Hash and Verification Example:</h2>

<p>Thanks to <a href="https://stackoverflow.com/questions/9594125/salt-and-hash-a-password-in-python">this</a> post, here is a example on how to hash strings and how to verify the plain text password with the provided salt.</p>

<p>Our functions to create the hash and to verify the password:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">bcrypt</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">def</span> <span class="nf">get_hashed_password</span><span class="p">(</span><span class="n">plain_text_password</span><span class="p">):</span>
</span><span class='line'><span class="o">...</span>     <span class="k">return</span> <span class="n">bcrypt</span><span class="o">.</span><span class="n">hashpw</span><span class="p">(</span><span class="n">plain_text_password</span><span class="p">,</span> <span class="n">bcrypt</span><span class="o">.</span><span class="n">gensalt</span><span class="p">())</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">def</span> <span class="nf">check_password</span><span class="p">(</span><span class="n">plain_text_password</span><span class="p">,</span> <span class="n">hashed_password</span><span class="p">):</span>
</span><span class='line'><span class="o">...</span>     <span class="k">return</span> <span class="n">bcrypt</span><span class="o">.</span><span class="n">checkpw</span><span class="p">(</span><span class="n">plain_text_password</span><span class="p">,</span> <span class="n">hashed_password</span><span class="p">)</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Create a hashed string:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">get_hashed_password</span><span class="p">(</span><span class="s">&#39;mynewpassword&#39;</span><span class="p">))</span>
</span><span class='line'><span class="err">$</span><span class="mi">2</span><span class="n">a</span><span class="err">$</span><span class="mi">12</span><span class="err">$</span><span class="o">/</span><span class="n">MemcgbnwJLN8XE86VQZseVxopU6tY76KxnH</span><span class="o">/</span><span class="n">AJ0I9T9y1Ldko5gm</span>
</span></code></pre></td></tr></table></div></figure>


<p>Verify the hash with your plain text password and the salt that was created:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">check_password</span><span class="p">(</span><span class="s">&#39;mynewpassword&#39;</span><span class="p">,</span> <span class="s">&#39;$2a$12$/MemcgbnwJLN8XE86VQZseVxopU6tY76KxnH/AJ0I9T9y1Ldko5gm&#39;</span><span class="p">))</span>
</span><span class='line'><span class="bp">True</span>
</span></code></pre></td></tr></table></div></figure>


<p>When you you provide the wrong password, with the correct salt, the verification will fail:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">check_password</span><span class="p">(</span><span class="s">&#39;myOLDpassword&#39;</span><span class="p">,</span> <span class="s">&#39;$2a$12$/MemcgbnwJLN8XE86VQZseVxopU6tY76KxnH/AJ0I9T9y1Ldko5gm&#39;</span><span class="p">))</span>
</span><span class='line'><span class="bp">False</span>
</span></code></pre></td></tr></table></div></figure>


<p>When you provide the correct password with the incorrect salt, the verification will also fail:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">check_password</span><span class="p">(</span><span class="s">&#39;mynewpassword&#39;</span><span class="p">,</span> <span class="s">&#39;$2a$12$/MemcgbnwJLN8XE86VQZseVxopU6tY76KxnH/AJ0I9T9y1Ldko5gmX&#39;</span><span class="p">))</span>
</span><span class='line'><span class="bp">False</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup a PPTP VPN on Ubuntu]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/06/27/setup-a-pptp-vpn-on-ubuntu/"/>
    <updated>2018-06-27T04:18:51-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/06/27/setup-a-pptp-vpn-on-ubuntu</id>
    <content type="html"><![CDATA[<p>In this post we will setup a <a href="https://en.wikipedia.org/wiki/Point-to-Point_Tunneling_Protocol">PPTP</a> VPN on Ubuntu 16.04</p>

<h2>Disable IPv6 Networking:</h2>

<p>Edit the grub config:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vi /etc/default/grub
</span></code></pre></td></tr></table></div></figure>


<p>Make the following changes:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">GRUB_CMDLINE_LINUX_DEFAULT</span><span class="o">=</span><span class="s2">&quot;ipv6.disable=1&quot;</span>
</span><span class='line'><span class="nv">GRUB_CMDLINE_LINUX</span><span class="o">=</span><span class="s2">&quot;ipv6.disable=1&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Update Grub and Reboot:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>update-grub
</span><span class='line'><span class="nv">$ </span>reboot
</span></code></pre></td></tr></table></div></figure>


<h2>Updates and Install PPTP:</h2>

<p>Update Repositories and install PPTPD:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>apt update <span class="o">&amp;&amp;</span> apt upgrade -y
</span><span class='line'><span class="nv">$ </span>apt install pptpd -y
</span></code></pre></td></tr></table></div></figure>


<p>Configure your Authentication</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vi /etc/ppp/chap-secrets
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># client server  secret          IP addresses</span>
</span><span class='line'>youruser      pptpd   yourpass        *
</span></code></pre></td></tr></table></div></figure>


<p>Configure Local and Remote IP, in this case I want 10.1.1.2 to 10.1.5.1-254</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vi /etc/pptpd.conf
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>option /etc/ppp/pptpd-options
</span><span class='line'>logwtmp
</span><span class='line'>connections 10000
</span><span class='line'>localip 10.1.1.1
</span><span class='line'>remoteip 10.1.1.2-254,10.1.2.1-254,10.1.3.2-254,10.1.4.1-254,10.1.5.1-254
</span><span class='line'><span class="c"># for a /24 you can set</span>
</span><span class='line'><span class="c"># remoteip 10.1.1.2-254</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Enable IP Forwarding:</h2>

<p>Edit the sysctl.conf and enable IP Forwarding:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vim /etc/sysctl.conf
</span></code></pre></td></tr></table></div></figure>


<p>Populate the following value:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>net.ipv4.ip_forward<span class="o">=</span>1
</span></code></pre></td></tr></table></div></figure>


<p>Update the Changes:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sysctl -p
</span></code></pre></td></tr></table></div></figure>


<h2>Enable and Start PPTPD:</h2>

<p>Enable the service on boot and start the service:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>systemctl <span class="nb">enable </span>pptpd
</span><span class='line'><span class="nv">$ </span>systemctl start pptpd
</span><span class='line'><span class="nv">$ </span>systemctl status pptpd
</span></code></pre></td></tr></table></div></figure>


<p>Connect to your VPN.</p>

<h2>Resources:</h2>

<ul>
<li><a href="https://www.vultr.com/docs/setup-a-pptp-vpn-server-on-ubuntu">https://www.vultr.com/docs/setup-a-pptp-vpn-server-on-ubuntu</a></li>
<li><a href="https://github.com/viljoviitanen/setup-simple-pptp-vpn">https://github.com/viljoviitanen/setup-simple-pptp-vpn</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Deploy Docker Swarm Using Ansible]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/06/14/deploy-docker-swarm-using-ansible/"/>
    <updated>2018-06-14T06:05:46-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/06/14/deploy-docker-swarm-using-ansible</id>
    <content type="html"><![CDATA[<p><img src="http://obj-cache.cloud.ruanbekker.com/docker-logo.png" alt="" /></p>

<p>In this setup we will use Ansible to Deploy Docker Swarm.</p>

<p>With this setup, I have a client node, which will be my jump box, as it will be used to ssh with the docker user to my swarm nodes with passwordless ssh access.</p>

<p>The repository for the source code can be found on my <a href="https://github.com/ruanbekker/ansible-docker-swarm">Github Repository</a></p>

<h2>Pre-Check</h2>

<p>Hosts file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cat /etc/hosts
</span><span class='line'>10.0.8.2 client
</span><span class='line'>192.168.1.10 swarm-manager
</span><span class='line'>192.168.1.11 swarm-worker-1
</span><span class='line'>192.168.1.12 swarm-worker-2</span></code></pre></td></tr></table></div></figure>


<p>SSH Config:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cat ~/.ssh/config 
</span><span class='line'>Host client
</span><span class='line'>  Hostname client
</span><span class='line'>  User root
</span><span class='line'>  IdentityFile /tmp/key.pem
</span><span class='line'>  StrictHostKeyChecking no
</span><span class='line'>  UserKnownHostsFile /dev/null
</span><span class='line'>
</span><span class='line'>Host swarm-manager
</span><span class='line'>  Hostname swarm-manager
</span><span class='line'>  User root
</span><span class='line'>  IdentityFile /tmp/key.pem
</span><span class='line'>  StrictHostKeyChecking no
</span><span class='line'>  UserKnownHostsFile /dev/null
</span><span class='line'>
</span><span class='line'>Host swarm-worker-1
</span><span class='line'>  Hostname swarm-worker-1
</span><span class='line'>  User root
</span><span class='line'>  IdentityFile /tmp/key.pem
</span><span class='line'>  StrictHostKeyChecking no
</span><span class='line'>  UserKnownHostsFile /dev/null
</span><span class='line'>
</span><span class='line'>Host swarm-worker-2
</span><span class='line'>  Hostname swarm-worker-2
</span><span class='line'>  User root
</span><span class='line'>  IdentityFile /tmp/key.pem
</span><span class='line'>  StrictHostKeyChecking no
</span><span class='line'>  UserKnownHostsFile /dev/null</span></code></pre></td></tr></table></div></figure>


<p>Install Ansible:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ apt install python-setuptools -y
</span><span class='line'>$ easy_install pip
</span><span class='line'>$ pip install ansible</span></code></pre></td></tr></table></div></figure>


<p>Ensure passwordless ssh is working:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ansible -i inventory.ini -u root -m ping all
</span><span class='line'>client | SUCCESS =&gt; {
</span><span class='line'>    "changed": false, 
</span><span class='line'>    "ping": "pong"
</span><span class='line'>}
</span><span class='line'>swarm-manager | SUCCESS =&gt; {
</span><span class='line'>    "changed": false, 
</span><span class='line'>    "ping": "pong"
</span><span class='line'>}
</span><span class='line'>swarm-worker-2 | SUCCESS =&gt; {
</span><span class='line'>    "changed": false, 
</span><span class='line'>    "ping": "pong"
</span><span class='line'>}
</span><span class='line'>swarm-worker-1 | SUCCESS =&gt; {
</span><span class='line'>    "changed": false, 
</span><span class='line'>    "ping": "pong"
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h2>Deploy Docker Swarm</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ansible-playbook -i inventory.ini -u root deploy-swarm.yml 
</span><span class='line'>PLAY RECAP 
</span><span class='line'>
</span><span class='line'>client                     : ok=11   changed=3    unreachable=0    failed=0   
</span><span class='line'>swarm-manager              : ok=18   changed=4    unreachable=0    failed=0   
</span><span class='line'>swarm-worker-1             : ok=15   changed=1    unreachable=0    failed=0   
</span><span class='line'>swarm-worker-2             : ok=15   changed=1    unreachable=0    failed=0   </span></code></pre></td></tr></table></div></figure>


<p>SSH to the Swarm Manager and List the Nodes:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ docker node ls
</span><span class='line'>ID                            HOSTNAME            STATUS              AVAILABILITY        MANAGER STATUS      ENGINE VERSION
</span><span class='line'>0ead0jshzkpyrw7livudrzq9o *   swarm-manager       Ready               Active              Leader              18.03.1-ce
</span><span class='line'>iwyp6t3wcjdww0r797kwwkvvy     swarm-worker-1      Ready               Active                                  18.03.1-ce
</span><span class='line'>ytcc86ixi0kuuw5mq5xxqamt1     swarm-worker-2      Ready               Active                                  18.03.1-ce</span></code></pre></td></tr></table></div></figure>


<h2>Test Application on Swarm</h2>

<p>Create a Nginx Demo Service:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ docker network create --driver overlay appnet
</span><span class='line'>$ docker service create --name nginx --publish 80:80 --network appnet --replicas 6 nginx
</span><span class='line'>$ docker service ls
</span><span class='line'>ID                  NAME                MODE                REPLICAS            IMAGE               PORTS
</span><span class='line'>k3vwvhmiqbfk        nginx               replicated          6/6                 nginx:latest        *:80-&gt;80/tcp
</span><span class='line'>
</span><span class='line'>$ docker service ps nginx
</span><span class='line'>ID                  NAME                IMAGE               NODE                DESIRED STATE       CURRENT STATE            ERROR               PORTS
</span><span class='line'>tspsypgis3qe        nginx.1             nginx:latest        swarm-manager       Running             Running 34 seconds ago                       
</span><span class='line'>g2f0ytwb2jjg        nginx.2             nginx:latest        swarm-worker-1      Running             Running 34 seconds ago                       
</span><span class='line'>clcmew8bcvom        nginx.3             nginx:latest        swarm-manager       Running             Running 34 seconds ago                       
</span><span class='line'>q293r8zwu692        nginx.4             nginx:latest        swarm-worker-2      Running             Running 34 seconds ago                       
</span><span class='line'>sv7bqa5e08zw        nginx.5             nginx:latest        swarm-worker-1      Running             Running 34 seconds ago                       
</span><span class='line'>r7qg9nk0a9o2        nginx.6             nginx:latest        swarm-worker-2      Running             Running 34 seconds ago   </span></code></pre></td></tr></table></div></figure>


<p>Test the Application:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ curl -i http://192.168.1.10
</span><span class='line'>HTTP/1.1 200 OK
</span><span class='line'>Server: nginx/1.15.0
</span><span class='line'>Date: Thu, 14 Jun 2018 10:01:34 GMT
</span><span class='line'>Content-Type: text/html
</span><span class='line'>Content-Length: 612
</span><span class='line'>Last-Modified: Tue, 05 Jun 2018 12:00:18 GMT
</span><span class='line'>Connection: keep-alive
</span><span class='line'>ETag: "5b167b52-264"
</span><span class='line'>Accept-Ranges: bytes</span></code></pre></td></tr></table></div></figure>


<p>Delete the Service:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>$ docker service rm nginx
</span><span class='line'>nginx</span></code></pre></td></tr></table></div></figure>


<h2>Delete the Swarm:</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ansible-playbook -i inventory.ini -u root delete-swarm.yml 
</span><span class='line'>
</span><span class='line'>PLAY RECAP 
</span><span class='line'>swarm-manager              : ok=2    changed=1    unreachable=0    failed=0   
</span><span class='line'>swarm-worker-1             : ok=2    changed=1    unreachable=0    failed=0   
</span><span class='line'>swarm-worker-2             : ok=2    changed=1    unreachable=0    failed=0   </span></code></pre></td></tr></table></div></figure>


<p>Ensure the Nodes is removed from the Swarm, SSH to your Swarm Manager:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ docker node ls
</span><span class='line'>Error response from daemon: This node is not a swarm manager. Use "docker swarm init" or "docker swarm join" to connect this node to swarm and try again.</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup a 3 Node Ceph Storage Cluster on Ubuntu 16]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/06/13/setup-a-3-node-ceph-storage-cluster-on-ubuntu-16/"/>
    <updated>2018-06-13T18:22:06-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/06/13/setup-a-3-node-ceph-storage-cluster-on-ubuntu-16</id>
    <content type="html"><![CDATA[<p><img src="https://ceph.com/wp-content/uploads/2016/07/Ceph_Logo_Standard_RGB_120411_fa.png" alt="" /></p>

<p>For some time now, I wanted to do a setup of Ceph, and I finally got the time to do it. This setup was done on Ubuntu 16.04</p>

<h2>What is Ceph</h2>

<p>Ceph is a storage platform that implements object storage on a single distributed computer cluster and provides interfaces for object, block and file-level storage.</p>

<ul>
<li>Object Storage:</li>
</ul>


<p>Ceph provides seemless access to objects via native language bindings or via the REST interface, RadosGW and also compatible for applications written for S3 and Swift.</p>

<ul>
<li>Block Storage:</li>
</ul>


<p>Ceph&rsquo;s Rados Block Device (RBD) provides access to block device images that are replicated and striped across the storage cluster.</p>

<ul>
<li>File System:</li>
</ul>


<p>Ceph provides a network file system (CephFS) that aims for high performance.</p>

<h2>Our Setup</h2>

<p>We will have 4 nodes. 1 Admin node where we will deploy our cluster with, and 3 nodes that will hold the data:</p>

<ul>
<li>ceph-admin (10.0.8.2)</li>
<li>ceph-node1 (10.0.8.3)</li>
<li>ceph-node2 (10.0.8.4)</li>
<li>ceph-node3 (10.0.8.5)</li>
</ul>


<h2>Host Entries</h2>

<p>If you don&rsquo;t have dns for your servers, setup the <code>/etc/hosts</code> file so that the names can resolves to the ip addresses:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>10.0.8.2 ceph-admin
</span><span class='line'>10.0.8.3 ceph-node1
</span><span class='line'>10.0.8.4 ceph-node2
</span><span class='line'>10.0.8.5 ceph-node3
</span></code></pre></td></tr></table></div></figure>


<h2>User Accounts and Passwordless SSH</h2>

<p>Setup the <code>ceph-system</code> user accounts on all the servers:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>useradd -d /home/ceph-system -s /bin/bash -m ceph-system
</span><span class='line'><span class="nv">$ </span>passwd ceph-system
</span></code></pre></td></tr></table></div></figure>


<p>Setup the created user part of the sudoers that is able to issue sudo commands without a pssword:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s2">&quot;ceph-system ALL = (root) NOPASSWD:ALL&quot;</span> <span class="p">|</span> sudo tee /etc/sudoers.d/ceph-system
</span><span class='line'><span class="nv">$ </span>chmod <span class="m">0440</span> /etc/sudoers.d/ceph-system
</span></code></pre></td></tr></table></div></figure>


<p>Switch user to <code>ceph-system</code> and generate SSH keys and copy the keys from the <code>ceph-admin</code> server to the ceph-nodes:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo su - ceph-system
</span><span class='line'><span class="nv">$ </span>ssh-keygen -t rsa -f ~/.ssh/id_rsa -P <span class="s2">&quot;&quot;</span>
</span><span class='line'><span class="nv">$ </span>ssh-copy-id ceph-system@ceph-node1
</span><span class='line'><span class="nv">$ </span>ssh-copy-id ceph-system@ceph-node2
</span><span class='line'><span class="nv">$ </span>ssh-copy-id ceph-system@ceph-node3
</span><span class='line'><span class="nv">$ </span>ssh-copy-id ceph-system@ceph-admin
</span></code></pre></td></tr></table></div></figure>


<h2>Pre-Requisite Software:</h2>

<p>Install Python and Ceph Deploy on each node:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo apt-get install python -y
</span><span class='line'><span class="nv">$ </span>sudo apt install ceph-deploy -y
</span></code></pre></td></tr></table></div></figure>


<p>Note: Please skip this section if you have additional disks on your servers.</p>

<p>The instances that im using to test this setup only has one disk, so I will be creating loop block devices using allocated files. This is not recommended as when the disk fails, all the (files/block device images) will be gone with that. But since im demonstrating this, I will create the block devices from a file:</p>

<p>I will be creating a 12GB file on each node</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo mkdir /raw-disks
</span><span class='line'><span class="nv">$ </span>sudo dd <span class="k">if</span><span class="o">=</span>/dev/zero <span class="nv">of</span><span class="o">=</span>/raw-disks/rd0 <span class="nv">bs</span><span class="o">=</span>1M <span class="nv">count</span><span class="o">=</span>12288
</span></code></pre></td></tr></table></div></figure>


<p>The use losetup to create the loop0 block device:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo losetup /dev/loop0 /raw-disks/rd0
</span></code></pre></td></tr></table></div></figure>


<p>As you can see the loop device is showing when listing the block devices:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>lsblk
</span><span class='line'>NAME      MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
</span><span class='line'>loop0       7:0    <span class="m">0</span>   12G  <span class="m">0</span> loop
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h2>Install Ceph</h2>

<p>Now let&rsquo;s install ceph using ceph-deploy to all our nodes:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo apt update <span class="o">&amp;&amp;</span> sudo apt upgrade -y
</span><span class='line'><span class="nv">$ </span>ceph-deploy install ceph-admin ceph-node1 ceph-node2 ceph-node3
</span></code></pre></td></tr></table></div></figure>


<p>The version I was running at the time:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ceph --version
</span><span class='line'>ceph version 10.2.9
</span></code></pre></td></tr></table></div></figure>


<h2>Initialize Ceph</h2>

<p>Initialize the Cluster with 3 Monitors:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ceph-deploy new ceph-node1 ceph-node2 ceph-node3
</span></code></pre></td></tr></table></div></figure>


<p>Add the initial monitors and gather the keys from the previous command:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ceph-deploy mon create-initial
</span></code></pre></td></tr></table></div></figure>


<p>At this point, we should be able to scan the block devices on our nodes:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ceph-deploy disk list ceph-node3
</span><span class='line'><span class="o">[</span>ceph-node3<span class="o">][</span>INFO  <span class="o">]</span> Running <span class="nb">command</span>: sudo /usr/sbin/ceph-disk list
</span><span class='line'><span class="o">[</span>ceph-node3<span class="o">][</span>DEBUG <span class="o">]</span> /dev/loop0 other
</span></code></pre></td></tr></table></div></figure>


<h2>Prepare the Disks:</h2>

<p>First we will zap the block devices and then prepare to create the partitions:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ceph-deploy disk zap ceph-node1:/dev/loop0 ceph-node2:/dev/loop0 ceph-node3:/dev/loop0
</span><span class='line'><span class="nv">$ </span>ceph-deploy osd prepare ceph-node1:/dev/loop0 ceph-node2:/dev/loop0 ceph-node3:/dev/loop0
</span><span class='line'><span class="o">[</span>ceph_deploy.osd<span class="o">][</span>DEBUG <span class="o">]</span> Host ceph-node1 is now ready <span class="k">for</span> osd use.
</span><span class='line'><span class="o">[</span>ceph_deploy.osd<span class="o">][</span>DEBUG <span class="o">]</span> Host ceph-node2 is now ready <span class="k">for</span> osd use.
</span><span class='line'><span class="o">[</span>ceph_deploy.osd<span class="o">][</span>DEBUG <span class="o">]</span> Host ceph-node3 is now ready <span class="k">for</span> osd use.
</span></code></pre></td></tr></table></div></figure>


<p>When you scan the nodes for their disks, you will notice that the partitions has been created:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ceph-deploy disk list ceph-node1
</span><span class='line'><span class="o">[</span>ceph-node1<span class="o">][</span>DEBUG <span class="o">]</span> /dev/loop0p2 ceph journal, <span class="k">for</span> /dev/loop0p1
</span><span class='line'><span class="o">[</span>ceph-node1<span class="o">][</span>DEBUG <span class="o">]</span> /dev/loop0p1 ceph data, active, cluster ceph, osd.0, journal /dev/loop0p2
</span></code></pre></td></tr></table></div></figure>


<p>Now let&rsquo;s activate the OSD&rsquo;s by using the data partitions:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ceph-deploy osd activate ceph-node1:/dev/loop0p1 ceph-node2:/dev/loop0p1 ceph-node3:/dev/loop0p1
</span></code></pre></td></tr></table></div></figure>


<h2>Redistribute Keys:</h2>

<p>Copy the configuration files and admin key to your admin node and ceph data nodes:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ceph-deploy admin ceph-admin ceph-node1 ceph-node2 ceph-node3
</span></code></pre></td></tr></table></div></figure>


<p>If you would like to add more OSD&rsquo;s (not tested):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ceph-deploy disk zap ceph-node1:/dev/loop1 ceph-node2:/dev/loop1 ceph-node3:/dev/loop1
</span><span class='line'><span class="nv">$ </span>ceph-deploy osd prepare ceph-node1:/dev/loop1 ceph-node2:/dev/loop1 ceph-node3:/dev/loop1
</span><span class='line'><span class="nv">$ </span>ceph-deploy osd activate ceph-node2:/dev/loop1p1:/dev/loop1p2 ceph-node2:/dev/loop1p1:/dev/loop1p2 ceph-node3:/dev/loop1p1:/dev/loop1p2
</span><span class='line'><span class="nv">$ </span>ceph-deploy admin ceph-node1 ceph-node2 ceph-node3
</span></code></pre></td></tr></table></div></figure>


<h2>Ceph Status:</h2>

<p>Have a look at your cluster status:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo ceph -s
</span><span class='line'>    cluster 8d704c8a-ac19-4454-a89f-89a5d5b7d94d
</span><span class='line'>     health HEALTH_OK
</span><span class='line'>     monmap e1: <span class="m">3</span> mons at <span class="o">{</span>ceph-node1<span class="o">=</span>10.0.8.3:6789/0,ceph-node2<span class="o">=</span>10.0.8.4:6789/0,ceph-node3<span class="o">=</span>10.0.8.5:6789/0<span class="o">}</span>
</span><span class='line'>            election epoch 10, quorum 0,1,2 ceph-node2,ceph-node3,ceph-node1
</span><span class='line'>     osdmap e14: <span class="m">3</span> osds: <span class="m">3</span> up, <span class="m">3</span> in
</span><span class='line'>            flags sortbitwise,require_jewel_osds
</span><span class='line'>      pgmap v29: <span class="m">64</span> pgs, <span class="m">1</span> pools, <span class="m">0</span> bytes data, <span class="m">0</span> objects
</span><span class='line'>            <span class="m">100</span> MB used, <span class="m">18298</span> MB / <span class="m">18398</span> MB avail
</span><span class='line'>                  <span class="m">64</span> active+clean
</span></code></pre></td></tr></table></div></figure>


<p>Everything looks good. Also change the permissions on this file, on all the nodes in order to execute the ceph, rados commands:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo chmod +r /etc/ceph/ceph.client.admin.keyring
</span></code></pre></td></tr></table></div></figure>


<h2>Storage Pools:</h2>

<p>List your pool in your Ceph Cluster:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rados lspools
</span><span class='line'>rbd
</span></code></pre></td></tr></table></div></figure>


<p>Let&rsquo;s create a new storage pool called <code>mypool</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ceph osd pool create mypool <span class="m">32</span> <span class="m">32</span>
</span><span class='line'>pool <span class="s1">&#39;mypool&#39;</span> created
</span></code></pre></td></tr></table></div></figure>


<p>Let&rsquo;s the list the storage pools again:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rados lspools
</span><span class='line'>rbd
</span><span class='line'>mypool
</span></code></pre></td></tr></table></div></figure>


<p>You can also use the ceph command to list the pools:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ceph osd pool ls
</span><span class='line'>rbd
</span><span class='line'>mypool
</span></code></pre></td></tr></table></div></figure>


<p>Create a Block Device Image:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rbd create --size <span class="m">1024</span> mypool/disk1 --image-feature layering
</span></code></pre></td></tr></table></div></figure>


<p>List the Block Device Images under your Pool:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rbd list mypool
</span><span class='line'>disk1
</span></code></pre></td></tr></table></div></figure>


<p>Retrieve information from your image:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rbd info mypool/disk1
</span><span class='line'>rbd image <span class="s1">&#39;disk1&#39;</span>:
</span><span class='line'>        size <span class="m">1024</span> MB in <span class="m">256</span> objects
</span><span class='line'>        order <span class="m">22</span> <span class="o">(</span><span class="m">4096</span> kB objects<span class="o">)</span>
</span><span class='line'>        block_name_prefix: rbd_data.1021643c9869
</span><span class='line'>        format: 2
</span><span class='line'>        features: layering
</span><span class='line'>        flags:
</span><span class='line'>        create_timestamp: Thu Jun  <span class="m">7</span> 23:48:23 2018
</span></code></pre></td></tr></table></div></figure>


<p>Create a local mapping of the image to a block device:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo rbd map mypool/disk1
</span><span class='line'>/dev/rbd0
</span></code></pre></td></tr></table></div></figure>


<p>Now we have a block device available at <code>/dev/rbd0</code>. Go ahead and mount it to <code>/mnt</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo mount /dev/rbd0 /mnt
</span></code></pre></td></tr></table></div></figure>


<p>We can then see it when we list our mounted disk partitions:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>df -h
</span><span class='line'>Filesystem      Size  Used Avail Use% Mounted on
</span><span class='line'>/dev/sda1        19G   13G  5.2G  72% /
</span><span class='line'>/dev/rbd0       976M  1.3M  908M   1% /mnt
</span></code></pre></td></tr></table></div></figure>


<p>We can also resize the disk on the fly, let&rsquo;s resize it from 1GB to 2GB:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rbd resize mypool/disk1 --size 2048
</span><span class='line'>Resizing image: 100% complete...done.
</span></code></pre></td></tr></table></div></figure>


<p>To grow the space we can use resize2fs for ext4 partitions and xfs_growfs for xfs partitions:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo resize2fs /dev/rbd0
</span><span class='line'>resize2fs 1.42.13 <span class="o">(</span>17-May-2015<span class="o">)</span>
</span><span class='line'>Filesystem at /dev/rbd0 is mounted on /mnt<span class="p">;</span> on-line resizing required
</span><span class='line'><span class="nv">old_desc_blocks</span> <span class="o">=</span> 1, <span class="nv">new_desc_blocks</span> <span class="o">=</span> 1
</span><span class='line'>The filesystem on /dev/rbd0 is now <span class="m">524288</span> <span class="o">(</span>4k<span class="o">)</span> blocks long.
</span></code></pre></td></tr></table></div></figure>


<p>When we look at our mounted partitions, you will notice that the size of our mounted partition has been increased in size:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>df -h
</span><span class='line'>Filesystem      Size  Used Avail Use% Mounted on
</span><span class='line'>/dev/sda1        19G   13G  5.2G   72% /
</span><span class='line'>/dev/rbd0       2.0G  1.5M  1.9G   1% /mnt
</span></code></pre></td></tr></table></div></figure>


<h2>Object Storage RadosGW</h2>

<p>Let&rsquo;s create a new pool where we will store our objects:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ceph osd pool create object-pool <span class="m">32</span> 32
</span><span class='line'>pool <span class="s1">&#39;object-pool&#39;</span> created
</span></code></pre></td></tr></table></div></figure>


<p>We will now create a local file, push the file to our object storage service, then delete our local file, download the file as a file with a different name, and read the contents:</p>

<p>Create the local file:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s2">&quot;ok&quot;</span> &gt; test.txt
</span></code></pre></td></tr></table></div></figure>


<p>Push the local file to our pool in our object storage:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rados put objects/data/test.txt ./test.txt --pool object-pool
</span></code></pre></td></tr></table></div></figure>


<p>List the pool (note that this can be executed from any node):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ $ </span>rados ls --pool object-pool
</span><span class='line'>objects/data/test.txt
</span></code></pre></td></tr></table></div></figure>


<p>Delete the local file, download the file from our object storage and read the contents:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rm -rf test.txt
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>rados get objects/data/test.txt ./newfile.txt --pool object-pool
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>cat ./newfile.txt
</span><span class='line'>ok
</span></code></pre></td></tr></table></div></figure>


<p>View the disk space from our storage-pool:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rados df --pool object-pool
</span><span class='line'>pool name                 KB      objects       clones     degraded      unfound           rd        rd KB           wr        wr KB
</span><span class='line'>object-pool                <span class="m">1</span>            <span class="m">1</span>            <span class="m">0</span>            <span class="m">0</span>            <span class="m">0</span>            <span class="m">0</span>            <span class="m">0</span>            <span class="m">1</span>            1
</span><span class='line'>  total used          <span class="m">261144</span>           37
</span><span class='line'>  total avail       18579372
</span><span class='line'>  total space       18840516
</span></code></pre></td></tr></table></div></figure>


<h2>Resources:</h2>

<ul>
<li><a href="https://stackoverflow.com/questions/39589696/ceph-too-many-pgs-per-osd-all-you-need-to-know">https://stackoverflow.com/questions/39589696/ceph-too-many-pgs-per-osd-all-you-need-to-know</a></li>
<li><a href="https://github.com/lucj/swarm-rexray-ceph">https://github.com/lucj/swarm-rexray-ceph</a></li>
<li><a href="http://docs.ceph.com/docs/mimic/rbd/">http://docs.ceph.com/docs/mimic/rbd/</a></li>
<li><a href="http://docs.ceph.com/docs/mimic/radosgw/">http://docs.ceph.com/docs/mimic/radosgw/</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello World Programs in Different Languages]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/06/09/hello-world-programs-in-different-languages/"/>
    <updated>2018-06-09T21:11:00-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/06/09/hello-world-programs-in-different-languages</id>
    <content type="html"><![CDATA[<p>This post will demonstrate running hello world programs in different languages and also providing return time statistics</p>

<h2>C++</h2>

<p>Code</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;iostream&gt;</span>
</span><span class='line'><span class="n">using</span> <span class="n">namespace</span> <span class="n">std</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;Hello, World!&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Compile:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>c++ hello_cpp.cpp -o hello_cpp
</span></code></pre></td></tr></table></div></figure>


<p>Run:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">time</span> ./hello_cpp
</span><span class='line'>Hello, World!
</span><span class='line'>
</span><span class='line'>real  0m0.005s
</span><span class='line'>user  0m0.001s
</span><span class='line'>sys     0m0.001s
</span></code></pre></td></tr></table></div></figure>


<h2>Golang:</h2>

<p>Code</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Hello, World!&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Compile:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>go build hello_golang.go
</span></code></pre></td></tr></table></div></figure>


<p>Run:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">time</span> ./hello_golang
</span><span class='line'>Hello, World!
</span><span class='line'>
</span><span class='line'>real  0m0.006s
</span><span class='line'>user  0m0.001s
</span><span class='line'>sys     0m0.003s
</span></code></pre></td></tr></table></div></figure>


<h2>Python</h2>

<p>Code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/env python</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="s">&quot;Hello, World!&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Make it executable:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>chmod +x ./hello_python.py
</span></code></pre></td></tr></table></div></figure>


<p>Run:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">time</span> ./hello_python.py
</span><span class='line'>Hello, World!
</span><span class='line'>
</span><span class='line'>real  0m0.033s
</span><span class='line'>user  0m0.015s
</span><span class='line'>sys     0m0.010s
</span></code></pre></td></tr></table></div></figure>


<h2>Ruby</h2>

<p>Code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#!/usr/bin/env ruby</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Hello, World!&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Make it executable:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>chmod +x ./hello_ruby.rb
</span></code></pre></td></tr></table></div></figure>


<p>Run:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">time</span> ./hello_ruby.rb
</span><span class='line'>Hello, World!
</span><span class='line'>
</span><span class='line'>real  0m0.136s
</span><span class='line'>user  0m0.080s
</span><span class='line'>sys     0m0.024s
</span></code></pre></td></tr></table></div></figure>


<h2>Java</h2>

<p>Code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">hello_java</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Hello, World!&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Compile:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>javac hello_java.java
</span></code></pre></td></tr></table></div></figure>


<p>Run:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">time </span>java hello_java
</span><span class='line'>Hello, World!
</span><span class='line'>
</span><span class='line'>real  0m0.114s
</span><span class='line'>user  0m0.086s
</span><span class='line'>sys     0m0.023s
</span></code></pre></td></tr></table></div></figure>


<h2>Resource:</h2>

<ul>
<li><a href="https://www.lifewire.com/command-return-time-command-4054237">https://www.lifewire.com/command-return-time-command-4054237</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup a Peer to Peer VPN With VPNCloud on Ubuntu]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/06/02/setup-a-peer-to-peer-vpn-with-vpncloud-on-ubuntu/"/>
    <updated>2018-06-02T14:15:33-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/06/02/setup-a-peer-to-peer-vpn-with-vpncloud-on-ubuntu</id>
    <content type="html"><![CDATA[<p>So I got 3 Dedicated Servers each having its own Static IP and I wanted a way to build a private network between these servers.</p>

<h2>The Scenario:</h2>

<p>3 Servers with the following IP&rsquo;s (not real IP addresses):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>- Server 1: 52.1.99.10
</span><span class='line'>- Server 2: 52.1.84.20
</span><span class='line'>- Server 3: 52.1.49.30</span></code></pre></td></tr></table></div></figure>


<p>So I want to have a private network, so that I can have the following internal network:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>- Server 1: 10.0.1.1
</span><span class='line'>- Server 2: 10.0.1.2
</span><span class='line'>- Server 3: 10.0.1.3</span></code></pre></td></tr></table></div></figure>


<p>A couple of years ago, I accomplished the end goal using GRE Tunnels, which works well, but wanted to try something different.</p>

<h2>VPNCloud</h2>

<p>So I stumbled upon VPNCloud.rs, which is a peer to peer VPN. Their description, quoted from their Github page:</p>

<p>&ldquo;VpnCloud is a simple VPN over UDP. It creates a virtual network interface on the host and forwards all received data via UDP to the destination. VpnCloud establishes a fully-meshed VPN network in a peer-to-peer manner. It can work on TUN devices (IP based) and TAP devices (Ethernet based).&rdquo;</p>

<p>This is exactly what I was looking for.</p>

<h2>Setting up a 3 node Private Network:</h2>

<p>Given the IP configuration above, we will setup a Private network between our 3 hosts.</p>

<p>Do some updates then grab the package from <a href="https://github.com/dswd/vpncloud.rs/releases">Github</a> and install VPNCloud:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>apt update <span class="o">&amp;&amp;</span> apt ugprade -y
</span><span class='line'><span class="nv">$ </span>wget https://github.com/dswd/vpncloud.rs/releases/download/v0.8.1/vpncloud_0.8.1_amd64.deb
</span><span class='line'><span class="nv">$ </span>dpkg -i ./vpncloud_0.8.1_amd64.deb
</span></code></pre></td></tr></table></div></figure>


<p>Let&rsquo;s start the configuration on Server-1, this config should also be setup on the other 2 servers, the config will remain the same, except for the <code>ifup</code> command. The other servers will look like:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Server-2: -&gt; ifup: <span class="s2">&quot;ifconfig $IFNAME 10.0.1.2/24 mtu 1400&quot;</span>
</span><span class='line'>Server-3: -&gt; ifup: <span class="s2">&quot;ifconfig $IFNAME 10.0.1.3/24 mtu 1400&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Getting back to the Server-1 config:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vim /etc/vpncloud/private.net
</span></code></pre></td></tr></table></div></figure>


<p>Example Config that I am using:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># each vpn running on their own port</span>
</span><span class='line'>port: 3210
</span><span class='line'>
</span><span class='line'><span class="c"># members of our private network</span>
</span><span class='line'>peers:
</span><span class='line'>  - srv2.domain.com:3210
</span><span class='line'>  - srv3.domain.com:3210
</span><span class='line'>
</span><span class='line'><span class="c"># timeouts</span>
</span><span class='line'>peer_timeout: 1800
</span><span class='line'>dst_timeout: 300
</span><span class='line'>
</span><span class='line'><span class="c"># token that identifies the network and helps to distinguish from other networks</span>
</span><span class='line'>magic: <span class="s2">&quot;76706e01&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># pre shared key</span>
</span><span class='line'>shared_key: <span class="s2">&quot;VeryStrongPreSharedKey_ThatShouldBeChanged&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># encryption</span>
</span><span class='line'>crypto: aes256
</span><span class='line'>
</span><span class='line'><span class="c"># device info</span>
</span><span class='line'>device_name: <span class="s2">&quot;vpncloud%d&quot;</span>
</span><span class='line'>device_type: tap
</span><span class='line'>
</span><span class='line'><span class="c"># vpn modes: hub / switch / router / normal</span>
</span><span class='line'>mode: normal
</span><span class='line'>
</span><span class='line'><span class="c"># subnet to be used for our private network</span>
</span><span class='line'>subnets:
</span><span class='line'>  - 10.0.1.0/24
</span><span class='line'>
</span><span class='line'><span class="c"># command to setup the network</span>
</span><span class='line'>ifup: <span class="s2">&quot;ifconfig $IFNAME 10.0.1.1/24 mtu 1400&quot;</span>
</span><span class='line'>ifdown: <span class="s2">&quot;ifconfig $IFNAME down&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># user/group owning the process</span>
</span><span class='line'>user: <span class="s2">&quot;root&quot;</span>
</span><span class='line'>group: <span class="s2">&quot;root&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Repeat the config on the other servers.</p>

<h2>Start the VPN Service:</h2>

<p>Restart the VPNCloud Service on all the Servers:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>service vpncloud@private start
</span></code></pre></td></tr></table></div></figure>


<p>Check the status:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>service vpncloud@private status
</span></code></pre></td></tr></table></div></figure>


<p>Check if the interface is up:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ifconfig vpncloud0
</span><span class='line'>vpncloud0 Link encap:Ethernet  HWaddr aa:bb:cc:dd:ee:ff
</span><span class='line'>          inet addr:10.0.1.1  Bcast:10.0.1.255  Mask:255.255.255.0
</span><span class='line'>          UP BROADCAST RUNNING MULTICAST  MTU:1400  Metric:1
</span><span class='line'>          RX packets:55 errors:0 dropped:0 overruns:0 frame:0
</span><span class='line'>          TX packets:71 errors:0 dropped:0 overruns:0 carrier:0
</span><span class='line'>          collisions:0 txqueuelen:1000
</span><span class='line'>          RX bytes:5046 <span class="o">(</span>5.0 KB<span class="o">)</span>  TX bytes:5526 <span class="o">(</span>5.5 KB<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ping the 3rd server via the private network:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ping -c <span class="m">3</span> 10.0.1.3
</span><span class='line'>PING 10.0.1.2 <span class="o">(</span>10.0.1.3<span class="o">)</span> 56<span class="o">(</span>84<span class="o">)</span> bytes of data.
</span><span class='line'><span class="m">64</span> bytes from 10.0.1.3: <span class="nv">icmp_seq</span><span class="o">=</span><span class="m">1</span> <span class="nv">ttl</span><span class="o">=</span><span class="m">64</span> <span class="nb">time</span><span class="o">=</span>0.852 ms
</span><span class='line'><span class="m">64</span> bytes from 10.0.1.3: <span class="nv">icmp_seq</span><span class="o">=</span><span class="m">2</span> <span class="nv">ttl</span><span class="o">=</span><span class="m">64</span> <span class="nb">time</span><span class="o">=</span>0.831 ms
</span><span class='line'><span class="m">64</span> bytes from 10.0.1.3: <span class="nv">icmp_seq</span><span class="o">=</span><span class="m">3</span> <span class="nv">ttl</span><span class="o">=</span><span class="m">64</span> <span class="nb">time</span><span class="o">=</span>0.800 ms
</span><span class='line'>
</span><span class='line'>--- 10.0.1.3 ping statistics ---
</span><span class='line'><span class="m">3</span> packets transmitted, <span class="m">3</span> received, 0% packet loss, <span class="nb">time </span>2028ms
</span><span class='line'>rtt min/avg/max/mdev <span class="o">=</span> 0.800/0.827/0.852/0.039 ms
</span></code></pre></td></tr></table></div></figure>


<p>Awesome service, please check their <a href="https://github.com/dswd/vpncloud.rs">Github Repo</a> out.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Add a Authentication Header to Your Python Flask App]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/06/01/add-a-authentication-header-to-your-python-flask-app/"/>
    <updated>2018-06-01T03:28:05-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/06/01/add-a-authentication-header-to-your-python-flask-app</id>
    <content type="html"><![CDATA[<p><img src="http://obj-cache.cloud.ruanbekker.com/flask.png" alt="" /></p>

<p>We will write a simple Python Flask application that requires authentication in order to respond with a 200 HTTP Status code.</p>

<h2>Python Flask Application:</h2>

<p>Our Python Flask application will require the Header <code>x-api-key dhuejso2dj3d0</code> in the HTTP Request, to give us a 200 HTTP Status code, if not, we will respond with a 401 Unauthorized Response:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">Flask</span><span class="p">,</span> <span class="n">request</span><span class="p">,</span> <span class="n">jsonify</span>
</span><span class='line'>
</span><span class='line'><span class="n">app</span> <span class="o">=</span> <span class="n">Flask</span><span class="p">(</span><span class="n">__name__</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@app.route</span><span class="p">(</span><span class="s">&#39;/&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">index</span><span class="p">():</span>
</span><span class='line'>    <span class="n">headers</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">headers</span>
</span><span class='line'>    <span class="n">auth</span> <span class="o">=</span> <span class="n">headers</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&quot;X-Api-Key&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">auth</span> <span class="o">==</span> <span class="s">&#39;asoidewfoef&#39;</span><span class="p">:</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">jsonify</span><span class="p">({</span><span class="s">&quot;message&quot;</span><span class="p">:</span> <span class="s">&quot;OK: Authorized&quot;</span><span class="p">}),</span> <span class="mi">200</span>
</span><span class='line'>    <span class="k">else</span><span class="p">:</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">jsonify</span><span class="p">({</span><span class="s">&quot;message&quot;</span><span class="p">:</span> <span class="s">&quot;ERROR: Unauthorized&quot;</span><span class="p">}),</span> <span class="mi">401</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
</span><span class='line'>    <span class="n">app</span><span class="o">.</span><span class="n">run</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>To get the headers, you can use <code>headers.get("X-Api-Key")</code> or <code>headers["X-Api-Key"]</code></p>

<p>Create a virtual environment, install flask and run the app:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>virtualenv .venv
</span><span class='line'><span class="nv">$ </span><span class="nb">source</span> .venv/bin/activate
</span><span class='line'><span class="nv">$ </span>python app.py
</span><span class='line'> * Serving Flask app <span class="s2">&quot;app&quot;</span> <span class="o">(</span>lazy loading<span class="o">)</span>
</span><span class='line'> * Environment: production
</span><span class='line'>   WARNING: Do not use the development server in a production environment.
</span><span class='line'>   Use a production WSGI server instead.
</span><span class='line'> * Debug mode: off
</span><span class='line'> * Running on http://127.0.0.1:5000/ <span class="o">(</span>Press CTRL+C to quit<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Requests to our App:</h2>

<p>Let&rsquo;s first make a request with no headers, which should then give us a 401 Unautorhized response:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -i http://localhost:5000
</span><span class='line'>
</span><span class='line'>HTTP/1.0 <span class="m">401</span> UNAUTHORIZED
</span><span class='line'>Content-Type: application/json
</span><span class='line'>Content-Length: 33
</span><span class='line'>Server: Werkzeug/0.14.1 Python/3.6.5
</span><span class='line'>Date: Fri, <span class="m">01</span> Jun <span class="m">2018</span> 07:26:25 GMT
</span><span class='line'>
</span><span class='line'><span class="o">{</span><span class="s2">&quot;message&quot;</span>:<span class="s2">&quot;ERROR: Unauthorized&quot;</span><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>Now let&rsquo;s include the authentication token in our headers. If the string is the same as the one in the code, we should see a 200 HTTP Response:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -i -H <span class="s1">&#39;x-api-key: asoidewfoef&#39;</span> http://localhost:5000
</span><span class='line'>
</span><span class='line'>HTTP/1.0 <span class="m">200</span> OK
</span><span class='line'>Content-Type: application/json
</span><span class='line'>Content-Length: 29
</span><span class='line'>Server: Werkzeug/0.14.1 Python/3.6.5
</span><span class='line'>Date: Fri, <span class="m">01</span> Jun <span class="m">2018</span> 07:27:03 GMT
</span><span class='line'>
</span><span class='line'><span class="o">{</span><span class="s2">&quot;message&quot;</span>:<span class="s2">&quot;OK: Authorized&quot;</span><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Note:</h2>

<p>From a best practice, its not a good decision to hard code sensitive details in your code, but rather read that from an encrypted database and store that in your applications environment variables, and let your application read from the environment variables, something like that :D</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Clearing Up Disk Space on Docker Swarm by Removing Unused Data With Prune]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/06/01/clearing-up-disk-space-on-docker-swarm-by-removing-unused-data-with-prune/"/>
    <updated>2018-06-01T02:19:21-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/06/01/clearing-up-disk-space-on-docker-swarm-by-removing-unused-data-with-prune</id>
    <content type="html"><![CDATA[<p><img src="http://obj-cache.cloud.ruanbekker.com/docker-logo.png" alt="" /></p>

<p>After some time, your system can run out of disk space when running a lot of containers / volumes etc. You will find that at times, you will have a lot of unused containers, stopped containers, unused images, unused networks that is just sitting there, which consumes data on your nodes.</p>

<p>One way to clean them is by using <code>docker system prune</code>.</p>

<h2>Check Docker Disk Space</h2>

<p>The command below will show the amount of disk space consumed, and how much is reclaimable:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker system df
</span><span class='line'>TYPE                TOTAL               ACTIVE              SIZE                RECLAIMABLE
</span><span class='line'>Images              <span class="m">229</span>                 <span class="m">125</span>                 23.94GB             14.65GB <span class="o">(</span>61%<span class="o">)</span>
</span><span class='line'>Containers          <span class="m">322</span>                 <span class="m">16</span>                  8.229GB             8.222GB <span class="o">(</span>99%<span class="o">)</span>
</span><span class='line'>Local Volumes       <span class="m">77</span>                  <span class="m">41</span>                  698MB               19.13MB <span class="o">(</span>2%<span class="o">)</span>
</span><span class='line'>Build Cache                                                 0B                  0B
</span></code></pre></td></tr></table></div></figure>


<h2>Removing Unsued Data:</h2>

<p>By using Prune, we can remove the unused resources that is consuming data:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker system prune
</span><span class='line'>
</span><span class='line'>WARNING! This will remove:
</span><span class='line'>        - all stopped containers
</span><span class='line'>        - all networks not used by at least one container
</span><span class='line'>        - all dangling images
</span><span class='line'>        - all build cache
</span><span class='line'>Are you sure you want to <span class="k">continue</span>? <span class="o">[</span>y/N<span class="o">]</span> y
</span><span class='line'>
</span><span class='line'>Deleted Containers:
</span><span class='line'>a3d7db158e065d0c86160fd5d688875f8b7435848ea91db57ed007
</span><span class='line'>47890dcfea4a105f43e790dd8ad3c6d7c4ad7e738186c034d7a46b
</span><span class='line'>
</span><span class='line'>Deleted Networks:
</span><span class='line'>traefik-net
</span><span class='line'>app_appnet
</span><span class='line'>
</span><span class='line'>Deleted Images:
</span><span class='line'>deleted: sha256:5b9909c10e93afec
</span><span class='line'>deleted: sha256:d81eesdfihweo3rk
</span><span class='line'>
</span><span class='line'>Total reclaimed space: 14.18GB
</span></code></pre></td></tr></table></div></figure>


<p>For related <a href="https://goo.gl/L2NYxU">Docker</a> posts.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SSH Tools That Comes in Handy When Dealing With Multiple Servers]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/05/31/ssh-tools-that-comes-in-handy-when-dealing-with-multiple-servers/"/>
    <updated>2018-05-31T05:18:11-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/05/31/ssh-tools-that-comes-in-handy-when-dealing-with-multiple-servers</id>
    <content type="html"><![CDATA[<p>When dealing with a lot of servers where you need to ssh to different servers and especially if they require different authentication from different private ssh keys, it kinda gets annoying specifying the private key you need, when you want to SSH to them.</p>

<h2>SSH Config</h2>

<p>SSH Config: <code>~/.ssh/config</code> is powerful!</p>

<p>In this config file, you can specify the remote host, the key, user and the alias, so that when you want to SSH to it, you dont have to use the fully qualified domain name or IP address.</p>

<p>Let&rsquo;s take for example our server-a with the following details:</p>

<ul>
<li>FQDN: host1.eu.compute.domain.coom</li>
<li>User: james</li>
<li>PrivateKeyFile: /path/to/key.pem</li>
<li>Disable Strict Host Checking</li>
</ul>


<p>So to access that host, you would use the following command (without ssh config):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ssh -oStrictHostKeyChecking<span class="o">=</span>no -oUserKnownHostsFile<span class="o">=</span>/dev/null -i /path/to/key.pem james@host1.eu.compute.domain.com
</span></code></pre></td></tr></table></div></figure>


<p>Now with SSH Config, open up the config file:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vim ~/.ssh/config
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>and declare the host details:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Host host1
</span><span class='line'>  Hostname host1.eu.compute.domain.com
</span><span class='line'>  User james
</span><span class='line'>  IdentityFile /path/to/key.pem
</span><span class='line'>  StrictHostKeyChecking no
</span><span class='line'>  UserKnownHostsFile /dev/null
</span></code></pre></td></tr></table></div></figure>


<p>Now, if we need to SSH to it, we can do it as simply as:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ssh host1
</span></code></pre></td></tr></table></div></figure>


<p>as it will pull in the configs from the config that is described from the host alias that you calling from the argument of the ssh binary.</p>

<h2>SSH Agent</h2>

<p>Another handy tool is <code>ssh-agent</code>, if you have password encryption on your key, everytime you need to ssh, a password will be prompted. A way to get around this is to use the ssh-agent.</p>

<p>We also want to set a TTL to the ssh-agent, as we don&rsquo;t want it to run forever (unless you want it to). In this case I will let the ssh-agent exit after 2 hours. It will also only run in the shell session from where you execute it. Lets start up our ssh-agent:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">eval</span> <span class="k">$(</span>ssh-agent -t 7200<span class="k">)</span>
</span><span class='line'>Agent pid <span class="m">88760</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now add the private key to the ssh-agent. If your private key is password protected, it will prompt you for the password and after successful verification the key will be added:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ssh-add /path/to/key.pem
</span><span class='line'>Identity added: /path/to/key.pem <span class="o">(</span>/path/to/key.pem<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Multiple Github Accounts:</h2>

<p>Here is a great post on how to work with different GitHub Accounts:
- <a href="https://gist.github.com/jexchan/2351996">https://gist.github.com/jexchan/2351996</a></p>
]]></content>
  </entry>
  
</feed>
