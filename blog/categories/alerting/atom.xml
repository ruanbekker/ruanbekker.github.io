<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Alerting | Ruan Bekker's Blog]]></title>
  <link href="https://blog.ruanbekker.com/blog/categories/alerting/atom.xml" rel="self"/>
  <link href="https://blog.ruanbekker.com/"/>
  <updated>2022-03-20T19:03:40-04:00</updated>
  <id>https://blog.ruanbekker.com/</id>
  <author>
    <name><![CDATA[Ruan]]></name>
    <email><![CDATA[ruan@ruanbekker.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Installing Elastalert for Elasticsearch on Amazon Linux]]></title>
    <link href="https://blog.ruanbekker.com/blog/2017/11/07/installing-elastalert-for-elasticsearch-on-amazon-linux/"/>
    <updated>2017-11-07T07:53:33-05:00</updated>
    <id>https://blog.ruanbekker.com/blog/2017/11/07/installing-elastalert-for-elasticsearch-on-amazon-linux</id>
    <content type="html"><![CDATA[<p>Elastalert, a service for Alerting with Elasticsearch:</p>

<ul>
<li><a href="https://github.com/Yelp/elastalert">https://github.com/Yelp/elastalert</a></li>
</ul>


<h2>Setting up Elastalert</h2>

<p>We will setup Elastalert for Elasticsearch on Amazon Linux which is a RHEL Based Distribution.</p>

<p>Setting up dependencies</p>

<pre><code class="bash">$ sudo su
# yum update -y
# yum install git python-devel lib-devel libevent-devel bzip2-devel openssl-devel ncurses-devel zlib zlib-devel xz-devel gcc -y
# yum install python-setuptools -y
# easy_install pip
# pip install virtualenv
# virtualenv .venv
# source .venv/bin/activate
# pip install pip --upgrade
# pip install setuptools --upgrade
</code></pre>

<p>Clone Elastalert Repository and Install Dependencies:</p>

<pre><code class="bash">$ cd /opt/
$ git clone https://github.com/Yelp/elastalert
$ cd elastalert/
$ pip install -r requirements.txt
</code></pre>

<p>Configs:</p>

<pre><code class="bash">$ cp config.yaml.example config.yaml
$ vim config.yaml
$ vim example_rules/example_frequency.yaml
</code></pre>

<p>After opening the config, populate the configuration where needed.</p>

<p>Installation of elastalert:</p>

<pre><code class="bash">$ python setup.py install
$ elastalert-create-index
</code></pre>

<p>Running elastalert:</p>

<pre><code class="bash">$ python -m elastalert.elastalert --verbose --rule example_frequency.yaml
INFO:elastalert:Starting up
</code></pre>

<p><a href="https://en.wikipedia.org/wiki/Systemd">Systemd</a> Unit File:</p>

<pre><code class=""># /etc/systemd/system/elastalert.service
[Unit]
Description=Elastalert
# executed after this
After=syslog.target
After=network.target

[Service]
Type=simple
User=root
Group=root
WorkingDirectory=/opt/elastalert
Environment="SOME_KEY_1=value" "SOME_KEY_2=value2"
# restart on unexpected exits
Restart=always
# first argument must be an absolute path, rest are arguments to it
ExecStart=/usr/bin/python -m elastalert.elastalert --verbose --rule example_frequency.yaml
# startup/shutdown grace period
TimeoutSec=60

[Install]
# executed before this
WantedBy=multi-user.target
# Thanks:
# https://cloudership.com/blog/2016/4/8/init-scripts-for-web-apps-on-linux-and-why-you-should-be-using-them
</code></pre>

<p>Reload, enable and start:</p>

<pre><code class="bash">$ systemctl daemon-reload
$ systemctl enable elastalert.service
$ systemctl start elastalert.service
</code></pre>
]]></content>
  </entry>
  
</feed>
