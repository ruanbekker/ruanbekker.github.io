<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Cloud | Ruan Bekker's Blog]]></title>
  <link href="https://blog.ruanbekker.com/blog/categories/cloud/atom.xml" rel="self"/>
  <link href="https://blog.ruanbekker.com/"/>
  <updated>2021-10-10T17:01:38-04:00</updated>
  <id>https://blog.ruanbekker.com/</id>
  <author>
    <name><![CDATA[Ruan]]></name>
    <email><![CDATA[ruan@ruanbekker.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Resizing Hetzner Cloud Block Storage Volumes on the Fly]]></title>
    <link href="https://blog.ruanbekker.com/blog/2018/12/19/resizing-hetzner-cloud-block-storage-volumes-on-the-fly/"/>
    <updated>2018-12-19T00:59:11-05:00</updated>
    <id>https://blog.ruanbekker.com/blog/2018/12/19/resizing-hetzner-cloud-block-storage-volumes-on-the-fly</id>
    <content type="html"><![CDATA[<p><img src="https://user-images.githubusercontent.com/567298/50203557-96a01100-036a-11e9-8fd5-2953497f92d8.png" alt="" /></p>

<p>Today we will be looking into Hetzner&rsquo;s Cloud Storage Volumes and how you can resize volumes on the fly!</p>

<h2>What is Hetzner&rsquo;s Cloud Storage Volumes</h2>

<p><a href="https://www.hetzner.com/cloud">Hetzner Cloud</a> offers a fast, flexible, and cost-effective SSD based Block Storage which can be attach to your Hetzner Cloud Server. At this point in time its available in the Nuremberg and Helsinki regions.</p>

<h2>Resizing of Volumes</h2>

<p>Volumes can be resized up to 10TB and the console allows you to resize in 1GB increments. You are allowed to increase, but cannot decrease.</p>

<h2>Demo through Cloud Volumes</h2>

<p>Let&rsquo;s run through a demo, where we will do the following:</p>

<ul>
<li>Provision a Server</li>
<li>Provision a Volume (XFS Filesystem / EXT4 is also optional)</li>
<li>Inspect the Volume, do some performance testing</li>
<li>Resize the Volume via Hetzner Cloud Console</li>
<li>Grow the XFS Filesystem</li>
</ul>


<p>After provisioning a server, which takes less than a minute, you should see that the server is created:</p>

<p><img src="https://user-images.githubusercontent.com/567298/50202325-6f474500-0366-11e9-8e7d-e96f0c78beba.png" alt="" /></p>

<p>SSH into your server. At this moment, we have not provisioned any volumes, so only the root partition should be mounted. Look at the block allocation:</p>

<pre><code class="bash">$ lsblk
NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
sda      8:0    0 19.1G  0 disk
--sda1   8:1    0 19.1G  0 part /
sr0     11:0    1 1024M  0 rom
</code></pre>

<p>Have a look at the fstab:</p>

<pre><code class="bash">cat /etc/fstab
# &lt;file system&gt; &lt;mount point&gt;   &lt;type&gt;  &lt;options&gt;       &lt;dump&gt;  &lt;pass&gt;
UUID=2f54e8e6-ff9c-497a-88ea-ce159f6cd283 /               ext4    discard,errors=remount-ro 0       1
/dev/fd0        /media/floppy0  auto    rw,user,noauto,exec,utf8 0       0
</code></pre>

<p>And have a look at the mounted disks layout:</p>

<pre><code class="bash">$ df -h
Filesystem      Size  Used Avail Use% Mounted on
udev            959M     0  959M   0% /dev
tmpfs           195M  652K  194M   1% /run
/dev/sda1        19G  1.6G   17G   9% /
tmpfs           973M     0  973M   0% /dev/shm
tmpfs           5.0M     0  5.0M   0% /run/lock
tmpfs           973M     0  973M   0% /sys/fs/cgroup
tmpfs           195M     0  195M   0% /run/user/0
</code></pre>

<p>Now, time to provision a Volume. Head over to the Volumes section:</p>

<p><img src="https://user-images.githubusercontent.com/567298/50202468-dfee6180-0366-11e9-8e48-aaadeb707938.png" alt="" /></p>

<p>I&rsquo;m going ahead with creating a volume with 10GB of space and assign it to my server, and yeah that&rsquo;s right, 10GB of storage is 0,40 EUR per month, epic value for money!</p>

<p><img src="https://user-images.githubusercontent.com/567298/50202502-fd233000-0366-11e9-9c71-475966488ca1.png" alt="" /></p>

<p>After you volume is created, you should see similar output below:</p>

<p><img src="https://user-images.githubusercontent.com/567298/50202614-5a1ee600-0367-11e9-97ab-8352d5b6f064.png" alt="" /></p>

<p>Head back to your server, and have a look at the output when running the similar commands from earlier:</p>

<pre><code class="bash">$ lsblk
NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
sda      8:0    0 19.1G  0 disk
--sda1   8:1    0 19.1G  0 part /
sdb      8:16   0   10G  0 disk /mnt/HC_Volume_1497823
sr0     11:0    1 1024M  0 rom
</code></pre>

<p>The fstab config:</p>

<pre><code class="bash">$ cat /etc/fstab
# &lt;file system&gt; &lt;mount point&gt;   &lt;type&gt;  &lt;options&gt;       &lt;dump&gt;  &lt;pass&gt;
UUID=2f54e8e6-ff9c-497a-88ea-ce159f6cd283 /               ext4    discard,errors=remount-ro 0       1
/dev/fd0        /media/floppy0  auto    rw,user,noauto,exec,utf8 0       0
/dev/disk/by-id/scsi-0HC_Volume_1497823 /mnt/HC_Volume_1497823 xfs discard,nofail,defaults 0 0
</code></pre>

<p>The disk layout:</p>

<pre><code class="bash">$ df -h
Filesystem      Size  Used Avail Use% Mounted on
udev            959M     0  959M   0% /dev
tmpfs           195M  660K  194M   1% /run
/dev/sda1        19G  1.6G   17G   9% /
tmpfs           973M     0  973M   0% /dev/shm
tmpfs           5.0M     0  5.0M   0% /run/lock
tmpfs           973M     0  973M   0% /sys/fs/cgroup
tmpfs           195M     0  195M   0% /run/user/0
/dev/sdb         10G   43M   10G   1% /mnt/HC_Volume_1497823
</code></pre>

<p>We can see from the output above how easy it is to provision a volume to your Hetzner Cloud Server. And everything gets done for you, the disk is mounted and the <code>/etc/fstab</code> configuration is populated for you.</p>

<p>Time for some performance testing on the volume:</p>

<pre><code class="bash">$ dd bs=2M count=256 if=/dev/zero of=/mnt/HC_Volume_1497823/test.dd
256+0 records in
256+0 records out
536870912 bytes (537 MB, 512 MiB) copied, 0.911306 s, 589 MB/s
</code></pre>

<p>Pretty neat right? :D</p>

<p>Let&rsquo;s resize the volume via the Hetzner Cloud Console to 20GB and resize the filesystem. From the Console, head over to the volumes section, select the more options and select resize:</p>

<p><img src="https://user-images.githubusercontent.com/567298/50203010-bcc4b180-0368-11e9-86e8-653490ad6870.png" alt="" /></p>

<p>After the volume has been resized, head back to your server and resize the filesystem. As we are using XFS Filesystem, we will use <code>xfs_growfs</code> :</p>

<pre><code class="bash">$ xfs_growfs /dev/sdb
meta-data=/dev/sdb               isize=512    agcount=4, agsize=655360 blks
         =                       sectsz=512   attr=2, projid32bit=1
         =                       crc=1        finobt=1 spinodes=0 rmapbt=0
         =                       reflink=0
data     =                       bsize=4096   blocks=2621440, imaxpct=25
         =                       sunit=0      swidth=0 blks
naming   =version 2              bsize=4096   ascii-ci=0 ftype=1
log      =internal               bsize=4096   blocks=2560, version=2
         =                       sectsz=512   sunit=0 blks, lazy-count=1
realtime =none                   extsz=4096   blocks=0, rtextents=0
data blocks changed from 2621440 to 5242880
</code></pre>

<p>Have a look at the disk layout and see that the filesystem was resized on the fly. If you have applications writing/reading to and from that volume, its better to unmount it first.</p>

<pre><code class="bash">$ df -h
Filesystem      Size  Used Avail Use% Mounted on
udev            959M     0  959M   0% /dev
tmpfs           195M  660K  194M   1% /run
/dev/sda1        19G  2.1G   16G  12% /
tmpfs           973M     0  973M   0% /dev/shm
tmpfs           5.0M     0  5.0M   0% /run/lock
tmpfs           973M     0  973M   0% /sys/fs/cgroup
tmpfs           195M     0  195M   0% /run/user/0
/dev/sdb         20G  565M   20G   3% /mnt/HC_Volume_1497823
</code></pre>

<p>I must admit, I am really stoked with Hetzner&rsquo;s offerings and their performance. I&rsquo;ve been hosting servers with them for the past 5 months and so far they really impressed me.</p>

<p>Have a look at <a href="https://www.hetzner.com/cloud">Hetzner Cloud&rsquo;s</a> offerings, they have great prices as you can start off with a server from as little as 2.49 EUR per month, which gives you 1vCPU, 2GB of RAM, 20GB disk Space and 20TB of traffic. I mean, thats awesome value for money. They also offer Floating IP&rsquo;s, Backups, etc.</p>

<h2>Resources:</h2>

<ul>
<li><a href="https://www.hetzner.com/cloud">Hetzner Cloud&rsquo;s</a></li>
<li><a href="https://wiki.hetzner.de/index.php/CloudServer/en#What_are_the_Hetzner_Cloud_Volumes.3F">More info on Hetzner Volumes</a></li>
</ul>


<h2>Thank You</h2>

<p>Please feel free to show support by, <strong>sharing</strong> this post, making a <strong>donation</strong>, <strong>subscribing</strong> or <strong>reach out to me</strong> if you want me to demo and write up on any specific tech topic.</p>

<center>
<form action="https://www.paypal.com/cgi-bin/webscr" method="post" target="_top">
<input type="hidden" name="cmd" value="_s-xclick" />
<input type="hidden" name="hosted_button_id" value="W7CBGYTCWGANQ" />
<input type="image" src="https://user-images.githubusercontent.com/567298/49853901-461c3700-fdf1-11e8-9d80-8a424a3173af.png" border="0" name="submit" title="PayPal - The safer, easier way to pay online!" alt="Donate with PayPal button" />
</form>
</center>


<p><br></p>

<p>Ad space:</p>

<script type="text/javascript">
  ( function() {
    if (window.CHITIKA === undefined) { window.CHITIKA = { 'units' : [] }; };
    var unit = {"calltype":"async[2]","publisher":"rbekker87","width":728,"height":90,"sid":"Chitika Default"};
    var placement_id = window.CHITIKA.units.length;
    window.CHITIKA.units.push(unit);
    document.write('<div id="chitikaAdBlock-' + placement_id + '"></div>');
}());
</script>


<script type="text/javascript" src="//cdn.chitika.net/getads.js" async></script>




<p><p></p>

<p>Thanks for reading!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[VULTR Cloud Servers Limited Signup Promotion]]></title>
    <link href="https://blog.ruanbekker.com/blog/2018/12/12/vultr-cloud-servers-limited-singup-promotion/"/>
    <updated>2018-12-12T01:00:32-05:00</updated>
    <id>https://blog.ruanbekker.com/blog/2018/12/12/vultr-cloud-servers-limited-singup-promotion</id>
    <content type="html"><![CDATA[<p><img src="https://user-images.githubusercontent.com/567298/49853336-78c53000-fdef-11e8-8cc2-4b7684550060.png" alt="" /></p>

<p>It&rsquo;s promotion time with VULTR! Get a head start with some free credits.</p>

<h2>Promotion</h2>

<p>VULTR has a promotion running for a limited time, when you sign up with this link below, use the coupon / promo code: <em>VULTRMATCH</em> and you will receive double the deposit in credits for up to $100. This applies to new customers only.</p>

<p>I&rsquo;m not quite sure how long they will be running this promotion, but you can get $100 free in credits when you sign up. That is basically <em>20 months free hosting</em> of a Cloud Server with 1CPU, 1GB RAM, 1TB Bandwidth.</p>

<p>Here&rsquo;s the link:</p>

<p><a href="https://goo.gl/hiAamd"><img src="https://www.vultr.com/media/banner_1.png" width="468" height="60"></a></p>

<h2>About VULTR</h2>

<p>If you are not familliar with VULTR, they are a Cloud Hosting Company that offers cloud servers, bare-metal servers and storage servers in 16 different regions and they provide a hourly billing model.</p>

<p>Below are some of their features:</p>

<ul>
<li>16 Locations: Silicon Valley, Seattle, LA, Dallas, Toronto, Miami, New Jersey, Chicago, Atlanta, London, Paris, Frankfurt, Amsterdam, Tokyo, Singapore, Sydney</li>
<li>100% SLA Guaranteed</li>
<li>Solid-State Drives (SSD)</li>
<li>Private Networking</li>
<li>Reserved IP&rsquo;s</li>
<li>Anti-DDOS Support</li>
<li>Backups</li>
<li>DNS</li>
<li>Startup Scripts</li>
<li>Firewalls</li>
<li>Pretty Slick User Interface</li>
<li>Root Access</li>
<li>Hourly Billing</li>
<li>Deploy Applications Instantly to your Servers with App Deploys</li>
<li>OS Support: Linux, Windows and Custom Uploads</li>
<li>API Support</li>
<li>Great Documentation and Tutorials</li>
</ul>


<p>They also allow you to submit articles to them that can earn you up to $300 per article, check it out <a href="https://goo.gl/hiAamd">here</a></p>

<h2>VULTR Mission</h2>

<p>From their website, their about us section states:</p>

<p>&ldquo;Vultr, founded in 2014, is on a mission to empower developers and businesses by simplifying the deployment of infrastructure via its advanced cloud platform. Vultr is strategically located in 16 datacenters around the globe and provides frictionless provisioning of public cloud, storage and single-tenant bare metal.&rdquo;</p>

<p>&ldquo;Vultr has made it our priority to offer a standardized highly reliable high performance cloud compute environment in all of the cities we serve. Launching a cloud server environment in 16 cities around the globe has never been easier!&rdquo;</p>

<h2>Launching a Server</h2>

<p>I decided to deploy a server pre-configured with Docker, and just about a minute I had my server up and running with Docker, ready to go.</p>

<p>Screenshot of the UI:</p>

<p><img src="https://user-images.githubusercontent.com/567298/49851122-bc686b80-fde8-11e8-82f5-d5fd7fdbaf8a.png" alt="" /></p>

<p>Screenshot of the root login:</p>

<p><img src="https://user-images.githubusercontent.com/567298/49851151-d609b300-fde8-11e8-98aa-974b79b67ed1.png" alt="" /></p>

<h2>Overall</h2>

<p>I&rsquo;m quite impressed with VULTR and the ease of use. The pricing is really good and like the fact that you can deploy servers with pre-configured software on it.</p>

<h2>Thank You</h2>

<p>Please feel free to show support by, <strong>sharing</strong> this post, making a <strong>donation</strong>, <strong>subscribing</strong> or <strong>reach out to me</strong> if you want me to demo and write up on any specific tech topic.</p>

<center>
<form action="https://www.paypal.com/cgi-bin/webscr" method="post" target="_top">
<input type="hidden" name="cmd" value="_s-xclick" />
<input type="hidden" name="hosted_button_id" value="W7CBGYTCWGANQ" />
<input type="image" src="https://user-images.githubusercontent.com/567298/49853901-461c3700-fdf1-11e8-9d80-8a424a3173af.png" border="0" name="submit" title="PayPal - The safer, easier way to pay online!" alt="Donate with PayPal button" />
<img alt="" border="0" src="https://www.paypal.com/en_ZA/i/scr/pixel.gif" width="1" height="1" />
</form>
</center>


<p><br></p>

<script type="text/javascript">
  ( function() {
    if (window.CHITIKA === undefined) { window.CHITIKA = { 'units' : [] }; };
    var unit = {"calltype":"async[2]","publisher":"rbekker87","width":728,"height":90,"sid":"Chitika Default"};
    var placement_id = window.CHITIKA.units.length;
    window.CHITIKA.units.push(unit);
    document.write('<div id="chitikaAdBlock-' + placement_id + '"></div>');
}());
</script>


<script type="text/javascript" src="//cdn.chitika.net/getads.js" async></script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Expanding the Size of Your EBS Volume on AWS EC2 for Linux]]></title>
    <link href="https://blog.ruanbekker.com/blog/2018/03/28/expanding-the-size-of-your-ebs-volume-on-aws-ec2-for-linux/"/>
    <updated>2018-03-28T01:45:07-04:00</updated>
    <id>https://blog.ruanbekker.com/blog/2018/03/28/expanding-the-size-of-your-ebs-volume-on-aws-ec2-for-linux</id>
    <content type="html"><![CDATA[<p><img src="https://i.snag.gy/BJLbwQ.jpg" alt="" /></p>

<p>Resizing your EBS Volume on the fly, that is attached to your EC2 Linux instance, on Amazon Web Services.</p>

<p>We want to resize our EBS Volume from 100GB to 1000GB and at the moment my EBS Volume is 100GB, as you can see:</p>

<pre><code class="bash">$ df -h
Filesystem      Size  Used Avail Use% Mounted on
devtmpfs        7.9G   60K  7.9G   1% /dev
tmpfs           7.9G     0  7.9G   0% /dev/shm
/dev/xvda1       99G   32G   67G  32% /
</code></pre>

<p>Now we want to resize the volume to 1000GB, without shutting down our EC2 instance.</p>

<p>Go to your EC2 Management Console, Select your EC2 Instance, scroll down to the EBS Volume, click on it and click the EBS Volume ID, from there select Actions, modify and resize the disk to the needed size. As you can see the disk is now 1000GB:</p>

<pre><code class="bash">$ lsblk
NAME    MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
xvda    202:0    0 1000G  0 disk
xvda1 202:1    0 1000G  0 part /
</code></pre>

<p>But our partition is still 100GB:</p>

<pre><code class="bash">$ df -h
Filesystem      Size  Used Avail Use% Mounted on
devtmpfs        7.9G   60K  7.9G   1% /dev
tmpfs           7.9G     0  7.9G   0% /dev/shm
/dev/xvda1       99G   32G   67G  32% /
</code></pre>

<p>We need to use <code>growpart</code> and <code>resize2fs</code> to resize our partition:</p>

<pre><code class="bash">$ sudo growpart /dev/xvda 1
CHANGED: disk=/dev/xvda partition=1: start=4096 old: size=209711070,end=209715166 new: size=2097147870,end=2097151966
</code></pre>

<pre><code class="bash">$ sudo resize2fs /dev/xvda1
resize2fs 1.42.12 (29-Aug-2014)
Filesystem at /dev/xvda1 is mounted on /; on-line resizing required
old_desc_blocks = 7, new_desc_blocks = 63
The filesystem on /dev/xvda1 is now 262143483 (4k) blocks long.
</code></pre>

<p><strong>Note:</strong> If you are using XFS as your filesystem type, you will need to use <code>xfs_growfs</code> instead of <code>resize2fs</code>. (Thanks Donovan).</p>

<p>Example using XFS shown below:</p>

<pre><code class="bash">$ sudo xfs_growfs /dev/xvda1
</code></pre>

<p><strong>Note:</strong> If you are using nvme, it will look like this:</p>

<pre><code>$ sudo lsblk
NAME        MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
nvme1n1     259:0    0  160G  0 disk
-nvme1n1p1  259:1    0   80G  0 part /data

$ sudo growpart /dev/nvme1n1 1
CHANGED: partition=1 start=2048 old: size=167770112 end=167772160 new: size=335542239 end=335544287

$ resize2fs /dev/nvme1n1p1
resize2fs 1.45.5 (07-Jan-2020)

$ sudo lsblk
NAME        MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
nvme1n1     259:0    0  160G  0 disk
-nvme1n1p1  259:1    0  160G  0 part /data
</code></pre>

<p>Now we will have a resized partition to 100GB:</p>

<pre><code class="bash">$ df -h
Filesystem      Size  Used Avail Use% Mounted on
devtmpfs        7.9G   60K  7.9G   1% /dev
tmpfs           7.9G     0  7.9G   0% /dev/shm
/dev/xvda1      985G   33G  952G   4% /
</code></pre>

<p>Resources:</p>

<ul>
<li><a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/recognize-expanded-volume-linux.html">https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/recognize-expanded-volume-linux.html</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
