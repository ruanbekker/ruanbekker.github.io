<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Clustering | Ruan Bekker's Blog]]></title>
  <link href="http://blog.ruanbekker.com/blog/categories/clustering/atom.xml" rel="self"/>
  <link href="http://blog.ruanbekker.com/"/>
  <updated>2017-10-24T10:13:53-04:00</updated>
  <id>http://blog.ruanbekker.com/</id>
  <author>
    <name><![CDATA[Ruan]]></name>
    <email><![CDATA[ruan@ruanbekker.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Setup a Local MongoDB Development 3 Member Replica Set]]></title>
    <link href="http://blog.ruanbekker.com/blog/2017/08/27/setup-a-local-mongodb-development-3-member-replica-set/"/>
    <updated>2017-08-27T01:10:16-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2017/08/27/setup-a-local-mongodb-development-3-member-replica-set</id>
    <content type="html"><![CDATA[<p>Setup a Development Environment of a MongoDB Replica Set consisting of 3 mongod MongoDB Instances.</p>

<p>This is purely aimed for a testing or development environment, as one of the key points is that security is disabled, and that for this post, all 3 instances will be running on the same node.</p>

<h2>Resources:</h2>

<ul>
<li><a href="https://docs.mongodb.com/manual/tutorial/install-mongodb-on-ubuntu/">https://docs.mongodb.com/manual/tutorial/install-mongodb-on-ubuntu/</a></li>
<li><a href="https://docs.mongodb.com/manual/tutorial/deploy-replica-set-for-testing/">https://docs.mongodb.com/manual/tutorial/deploy-replica-set-for-testing/</a></li>
</ul>


<h2>Installation:</h2>

<p>I am using Ubuntu 16.04, for other distributions, have a look at <a href="https://docs.mongodb.com/manual/administration/install-community/">MongoDBs Installation Page</a></p>

<pre><code class="bash MongoDB Installation">$ sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 0C49F3730359A14518585931BC711F9BA15703C6
$ echo "deb [ arch=amd64,arm64 ] http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.4 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.4.list
$ apt update
$ apt install -y mongodb-org -y
</code></pre>

<h2>Prepare Directories:</h2>

<p>Prepare the data directories, and as I am planning to use the <code>--fork</code> option, I need to specify the the <code>--logpath</code>, so therefore I will create the log directories as well:</p>

<pre><code class="bash Create the Directory Paths">$ mkdir -p /srv/mongodb/rs0-0 /srv/mongodb/rs0-1 /srv/mongodb/rs0-2
$ mkdir -p /var/log/mongodb/rs0-0 /var/log/mongodb/rs0-1 /var/log/mongodb/rs0-2
</code></pre>

<h2>Run 3 MongoDB Instances:</h2>

<p>Create 3 MongoDB Instances, each instance listening on it&rsquo;s unique port.</p>

<p>From MongoDB&rsquo;s Documentation:</p>

<blockquote><p>&ldquo;The &ndash;smallfiles and &ndash;oplogSize settings reduce the disk space that each mongod instance uses&rdquo;</p></blockquote>

<pre><code class="bash">$ mongod --port 27017 --dbpath /srv/mongodb/rs0-0 --replSet rs0 --smallfiles --oplogSize 128 --logpath /var/log/mongodb/rs0-0/server.log --fork
$ mongod --port 27018 --dbpath /srv/mongodb/rs0-1 --replSet rs0 --smallfiles --oplogSize 128 --logpath /var/log/mongodb/rs0-1/server.log --fork
$ mongod --port 27019 --dbpath /srv/mongodb/rs0-2 --replSet rs0 --smallfiles --oplogSize 128 --logpath /var/log/mongodb/rs0-2/server.log --fork
</code></pre>

<h2>Cofirm:</h2>

<p>Confirm that the processes are listening on the ports that we defined:</p>

<pre><code class="bash">$ netstat -tulpn
Active Internet connections (only servers)
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name
tcp        0      0 0.0.0.0:27017           0.0.0.0:*               LISTEN      1100/mongod
tcp        0      0 0.0.0.0:27018           0.0.0.0:*               LISTEN      1127/mongod
tcp        0      0 0.0.0.0:27019           0.0.0.0:*               LISTEN      1154/mongod
</code></pre>

<h2>Connect to the first MongoDB Instnace:</h2>

<p>Connect to our first MongoDB Instance, where we will setup the replica set:</p>

<pre><code class="bash">$ mongo --port 27017
\&gt;
</code></pre>

<p>Create the Replica Set Configuration Object:</p>

<pre><code class="bash">&gt; rsconf = {
             _id: "rs0",
             members: [
                        {
                         _id: 0,
                         host: "10.78.1.24:27017"
                        }
                      ]
           }
</code></pre>

<p>Initiate the replica set configuration:</p>

<pre><code class="bash">&gt; rs.initiate( rsconf )
{ "ok" : 1 }
</code></pre>

<p>Display the Replica Configuration with <code>rs.conf()</code>:</p>

<pre><code class="bash">rs0:SECONDARY&gt; rs.conf()
{
        "_id" : "rs0",
        "version" : 1,
        "protocolVersion" : NumberLong(1),
        "members" : [
                {
                        "_id" : 0,
                        "host" : "10.78.1.24:27017",
                        "arbiterOnly" : false,
                        "buildIndexes" : true,
                        "hidden" : false,
                        "priority" : 1,
                        "tags" : {

                        },
                        "slaveDelay" : NumberLong(0),
                        "votes" : 1
                }
        ],
        "settings" : {
                "chainingAllowed" : true,
                "heartbeatIntervalMillis" : 2000,
                "heartbeatTimeoutSecs" : 10,
                "electionTimeoutMillis" : 10000,
                "catchUpTimeoutMillis" : 60000,
                "getLastErrorModes" : {

                },
                "getLastErrorDefaults" : {
                        "w" : 1,
                        "wtimeout" : 0
                },
                "replicaSetId" : ObjectId("59a2339f5ff27709a1645d28")
        }
}
</code></pre>

<p>Add the other two mongodb instances to the replica set using <code>rs.add()</code>:</p>

<pre><code class="bash">rs0:PRIMARY&gt; rs.add("10.78.1.24:27018")
{ "ok" : 1 }

rs0:PRIMARY&gt; rs.add("10.78.1.24:27019")
{ "ok" : 1 }
</code></pre>

<p>View the status of our MongoDB Replica Set with <code>rs.status()</code>:</p>

<pre><code class="bash">rs0:PRIMARY&gt; rs.status()
</code></pre>

<pre><code class="json">{
        "set" : "rs0",
        "date" : ISODate("2017-08-27T02:52:08.106Z"),
        "myState" : 1,
        "term" : NumberLong(1),
        "heartbeatIntervalMillis" : NumberLong(2000),
        "optimes" : {
                "lastCommittedOpTime" : {
                        "ts" : Timestamp(1503802316, 1),
                        "t" : NumberLong(1)
                },
                "appliedOpTime" : {
                        "ts" : Timestamp(1503802316, 1),
                        "t" : NumberLong(1)
                },
                "durableOpTime" : {
                        "ts" : Timestamp(1503802316, 1),
                        "t" : NumberLong(1)
                }
        },
        "members" : [
                {
                        "_id" : 0,
                        "name" : "10.78.1.24:27017",
                        "health" : 1,
                        "state" : 1,
                        "stateStr" : "PRIMARY",
                        "uptime" : 890,
                        "optime" : {
                                "ts" : Timestamp(1503802316, 1),
                                "t" : NumberLong(1)
                        },
                        "optimeDate" : ISODate("2017-08-27T02:51:56Z"),
                        "infoMessage" : "could not find member to sync from",
                        "electionTime" : Timestamp(1503802272, 1),
                        "electionDate" : ISODate("2017-08-27T02:51:12Z"),
                        "configVersion" : 3,
                        "self" : true
                },
                {
                        "_id" : 1,
                        "name" : "10.78.1.24:27018",
                        "health" : 1,
                        "state" : 2,
                        "stateStr" : "SECONDARY",
                        "uptime" : 16,
                        "optime" : {
                                "ts" : Timestamp(1503802316, 1),
                                "t" : NumberLong(1)
                        },
                        "optimeDurable" : {
                                "ts" : Timestamp(1503802316, 1),
                                "t" : NumberLong(1)
                        },
                        "optimeDate" : ISODate("2017-08-27T02:51:56Z"),
                        "optimeDurableDate" : ISODate("2017-08-27T02:51:56Z"),
                        "lastHeartbeat" : ISODate("2017-08-27T02:52:06.638Z"),
                        "lastHeartbeatRecv" : ISODate("2017-08-27T02:52:07.638Z"),
                        "pingMs" : NumberLong(0),
                        "syncingTo" : "10.78.1.24:27017",
                        "configVersion" : 3
                },
                {
                        "_id" : 2,
                        "name" : "10.78.1.24:27019",
                        "health" : 1,
                        "state" : 2,
                        "stateStr" : "SECONDARY",
                        "uptime" : 11,
                        "optime" : {
                                "ts" : Timestamp(1503802316, 1),
                                "t" : NumberLong(1)
                        },
                        "optimeDurable" : {
                                "ts" : Timestamp(1503802316, 1),
                                "t" : NumberLong(1)
                        },
                        "optimeDate" : ISODate("2017-08-27T02:51:56Z"),
                        "optimeDurableDate" : ISODate("2017-08-27T02:51:56Z"),
                        "lastHeartbeat" : ISODate("2017-08-27T02:52:06.638Z"),
                        "lastHeartbeatRecv" : ISODate("2017-08-27T02:52:07.241Z"),
                        "pingMs" : NumberLong(0),
                        "configVersion" : 3
                }
        ],
        "ok" : 1
}
</code></pre>

<h2>Write some Data to MongoDB:</h2>

<p>Create a Database named <code>mydb</code>:</p>

<pre><code class="bash">rs0:PRIMARY&gt; use mydb
switched to db mydb
</code></pre>

<p>Create a Collection, named <code>mycol1</code>:</p>

<pre><code class="bash">rs0:PRIMARY&gt; db.createCollection("mycol1")
{ "ok" : 1 }

rs0:PRIMARY&gt; show collections
mycol1
</code></pre>

<p>Write 2 documents with:</p>

<ul>
<li>Name: James, Home Address: Country => South Africa, City => Cape Town</li>
<li>Name: Frank, Home Address: Country => Ireland, City => Dublin</li>
</ul>


<pre><code class="bash Write some Data">rs0:PRIMARY&gt; db.mycol1.insert({"name": "james", "home address": {"country": "south africa", "city": "cape town"}})
WriteResult({ "nInserted" : 1 })

rs0:PRIMARY&gt; db.mycol1.insert({"name": "frank", "home address": {"country": "ireland", "city": "dublin"}})
WriteResult({ "nInserted" : 1 })
</code></pre>

<p>Count all Documents in our Database:</p>

<pre><code class="bash Counting">rs0:PRIMARY&gt; db.mycol1.find().count()
2
</code></pre>

<p>Scan through all documents, and show the in <code>pretty print</code>:</p>

<pre><code class="bash Pretty Print">rs0:PRIMARY&gt; db.mycol1.find().pretty()
{
        "_id" : ObjectId("59a23d26c0c3824694f79ff6"),
        "name" : "james",
        "home address" : {
                "country" : "south africa",
                "city" : "cape town"
        }
}
{
        "_id" : ObjectId("59a23dbdc0c3824694f79ff7"),
        "name" : "frank",
        "home address" : {
                "country" : "ireland",
                "city" : "dublin"
        }
}
</code></pre>

<p>Find Information about <code>Frank</code>:</p>

<pre><code class="bash Franks Info">rs0:PRIMARY&gt; db.mycol1.find({"name": "frank"})
{ "_id" : ObjectId("59a23dbdc0c3824694f79ff7"), "name" : "frank", "home address" : { "country" : "ireland", "city" : "dublin" } }
</code></pre>

<p>Delete the Database, but confirm which database your are logged on, the delete using <code>dropDatabase()</code>:</p>

<pre><code class="bash Drop Database">rs0:PRIMARY&gt; db
mydb

rs0:PRIMARY&gt; db.dropDatabase()
{ "dropped" : "mydb", "ok" : 1 }

rs0:PRIMARY&gt; exit
bye
</code></pre>
]]></content>
  </entry>
  
</feed>
