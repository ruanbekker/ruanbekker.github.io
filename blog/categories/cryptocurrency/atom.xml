<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Cryptocurrency | Ruan Bekker's Blog]]></title>
  <link href="https://blog.ruanbekker.com/blog/categories/cryptocurrency/atom.xml" rel="self"/>
  <link href="https://blog.ruanbekker.com/"/>
  <updated>2022-08-06T03:43:41-04:00</updated>
  <id>https://blog.ruanbekker.com/</id>
  <author>
    <name><![CDATA[Ruan]]></name>
    <email><![CDATA[ruan@ruanbekker.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How to Specify Wallet Name in Bitcoin Core Walletnotify]]></title>
    <link href="https://blog.ruanbekker.com/blog/2021/08/04/how-to-specify-wallet-name-in-bitcoin-core-walletnotify/"/>
    <updated>2021-08-04T09:41:51-04:00</updated>
    <id>https://blog.ruanbekker.com/blog/2021/08/04/how-to-specify-wallet-name-in-bitcoin-core-walletnotify</id>
    <content type="html"><![CDATA[<p><img src="https://blog.ruanbekker.com/images/ruanbekker-header-photo.png" alt="" /></p>

<p>With bitcoin-core, you get a configuration option called <code>walletnotify</code> which allow you to invoke a command whenever you receive a payment, first confirmation of a payment or send a payment.</p>

<p>You can specify <code>%s</code> as an argument which will be used to parse the transaction id.</p>

<h2>Bitcoind WalletNotify TransactionID Example</h2>

<p>To see what walletnotify does, in my <code>bitcoin.conf</code> I had a basic script to write a entry every time I receive a payment:</p>

<pre><code>$ cat ~/.bitcoin/bitcoin.conf
...
walletnotify=/bin/notify.sh %s %w
</code></pre>

<p>And in my <code>/bin/notify.sh</code> script I have this:</p>

<pre><code>#!/usr/bin/env bash
transaction_id=$1

# writing to log
echo "[$(date +%FT%T)] event for txid $transaction_id" &gt;&gt; /var/log/bitcoin-notify.log
</code></pre>

<p>I have executable permissions for the script:</p>

<pre><code>$ chmod +x /bin/notify.sh
</code></pre>

<p>When a payment was made, my logfile showed the following:</p>

<pre><code>[2021-08-04T12:21:43] event for txid xxxxxx5d92f729ed77xxxxxx2cbccedxxxxa7a03a801xxxxxxx33a41c1xxxxxd2 
</code></pre>

<h2>Capturing the wallet name in walletnotify</h2>

<p>In bitcoin-core we wave wallets, and in a wallet we have one or more bitcoin addresses, as can be seen below for wallets:</p>

<pre><code>$ curl -s -u "bitcoin:${bpass}" -d '{"jsonrpc": "1.0", "id": "curl", "method": "listwallets", "params": []}' -H 'content-type: text/plain;' http://127.0.0.1:18332/
{"result":["rpi01-main", "rpi01-secondary"],"error":null,"id":"curl"}
</code></pre>

<p>and to get the addresses for that wallet:</p>

<pre><code>$ curl -s -u "bitcoin:${bpass}" -d '{"jsonrpc": "1.0", "id": "curl", "method": "getaddressesbylabel", "params": [""]}' -H 'content-type: text/plain;' http://127.0.0.1:18332/wallet/rpi01-main
{"result":{"txxxxxmefmcpq98xxxxxxx80gvug2fe97xxxxxx8yv":{"purpose":"receive"}},"error":null,"id":"curl"}
</code></pre>

<p>I had to figure out how to capture the wallet name as well as the transaction id, as I thought its not possible until I stumbled upon a post which mentioned from bitcoind 0.20:</p>

<blockquote><p>The -walletnotify configuration parameter will now replace any %w in its argument with the name of the wallet generating the notification.</p></blockquote>

<p>Which was merged by this PR:
- <a href="https://github.com/bitcoin/bitcoin/pull/13339">https://github.com/bitcoin/bitcoin/pull/13339</a></p>

<p>So first to verify that bitcoind is newer than mentioned:</p>

<pre><code class="bash">$ /usr/local/bin/bitcoind -version
Bitcoin Core version v0.21.1
</code></pre>

<p>Updated the <code>walletnotify</code> config in <code>bitcoin.conf</code> to include <code>%w</code>:</p>

<pre><code class="bash">$ cat /home/bitcoin/.bitcoin/bitcoin.conf | grep wallet
walletnotify=/bin/notify.sh %s %w
</code></pre>

<p>Then in the <code>notify.sh</code> script:</p>

<pre><code class="bash">#!/usr/bin/env bash
transaction_id=$1
wallet_name=$2

echo "[$(date +%FT%T)] $transaction_id $wallet_name" &gt;&gt; /var/log/bitcoin-notify.log
</code></pre>

<p>And then restart bitcoind:</p>

<pre><code>$ sudo systemctl restart bitcoind
</code></pre>

<p>When a transaction occurred, I could see the transaction id with the corresponding wallet name:</p>

<pre><code>$ tail -f /var/log/bitcoin-notify.log
[2021-08-04T12:31:20] fxxxxxxxxxxxxxxxxxxxxxxx2cbcced28ea26fhkxxxxhjn01f33a41c12f8xxx8 rpi01-main
</code></pre>

<h2>Thanks</h2>

<p>Thanks for reading, if you like my content, check out my <strong><a href="https://ruan.dev">website</a></strong> or follow me at <strong><a href="https://twitter.com/ruanbekker">@ruanbekker</a></strong> on Twitter.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup a Crypto Digibyte Full Node on Linux]]></title>
    <link href="https://blog.ruanbekker.com/blog/2021/05/03/setup-a-crypto-digibyte-full-node-on-linux/"/>
    <updated>2021-05-03T17:14:49-04:00</updated>
    <id>https://blog.ruanbekker.com/blog/2021/05/03/setup-a-crypto-digibyte-full-node-on-linux</id>
    <content type="html"><![CDATA[<p><img src="https://upload.wikimedia.org/wikipedia/en/8/8f/DigiByte_logo.svg" alt="" /></p>

<p>In this tutorial I will show you how to setup a digibyte (DGB) Full Node on Linux and show you how to interact with your wallet and the blockchain.</p>

<h2>What is a Full Node</h2>

<p>By running a Full Node, you contribute by helping to fully validate transactions and blocks. Almost all full nodes also help the network by accepting transactions and blocks from other full nodes, validating those transactions and blocks and then relaying them to other full nodes. Therefore you are contributing to maintaining the consensus of the blockchain.</p>

<h2>Hardware Requirements</h2>

<p>In order to run a full digibyte node you will need a server that is preferrably online 24/7 and that you have an uncapped connection as at the time of writing the digibyte blockchain is about 25GB in size but increases over time. I also used a server with 2vCPU&rsquo;s and 4GB of memory.</p>

<h2>Setup the Pre-Requisites</h2>

<p>First create the user:</p>

<pre><code class="bash">$ useradd -G sudo digibyte -m -s /bin/bash
$ echo "digibyte ALL=(ALL:ALL) NOPASSWD: ALL" | sudo tee /etc/sudoers.d/no-sudo-password-for-digibyte
</code></pre>

<p>Create the configuration directory:</p>

<pre><code class="bash">$ mkdir -p /etc/digibyte /var/lib/digibyte
</code></pre>

<p>Create the digibyte configuration file:</p>

<pre><code class="bash">$ cat &lt;&lt;EOF &gt; /etc/digibyte/digibyte.conf
daemon=1
maxconnections=300
disablewallet=0
rpcuser=jsonrpc
rpcpassword=$(openssl rand -base64 18)
EOF
</code></pre>

<h2>Download the Software</h2>

<p>Get the <a href="https://github.com/DigiByte-Core/digibyte/releases">latest</a> release, but at the time of writing v7.17.2 is the latest:</p>

<pre><code class="bash">$ wget https://github.com/DigiByte-Core/digibyte/releases/download/v7.17.2/digibyte-7.17.2-x86_64-linux-gnu.tar.gz
$ tar -xf digibyte-7.17.2-x86_64-linux-gnu.tar.gz
$ mv digibyte-7.17.2 /usr/local/digibyte-7.17.2
</code></pre>

<p>Then symbolic link the version directory to digibyte:</p>

<pre><code class="bash">$ ln -s /usr/local/digibyte-7.17.2 /usr/local/digibyte
</code></pre>

<h2>SystemD</h2>

<p>Create the systemd unit file:</p>

<pre><code>$ cat &lt;&lt;EOF &gt; /etc/systemd/system/digibyted.service
[Unit]
Description=DigiByte's distributed currency daemon
After=network.target

[Service]
User=digibyte
Group=digibyte

Type=forking
PIDFile=/etc/digibyte/digibyted.pid
ExecStart=/usr/local/digibyte/bin/digibyted -daemon -pid=/etc/digibyte/digibyted.pid \
  -conf=/etc/digibyte/digibyte.conf -datadir=/var/lib/digibyte -deprecatedrpc=accounts 

Restart=always
PrivateTmp=true
TimeoutStopSec=60s
TimeoutStartSec=2s
StartLimitInterval=120s
StartLimitBurst=5

[Install]
WantedBy=multi-user.target
EOF
</code></pre>

<p>Change the ownerships to digibyte:</p>

<pre><code class="bash">$ chown -R digibyte:digibyte /etc/digibyte /var/lib/digibyte
</code></pre>

<p>Enable and start the service:</p>

<pre><code class="bash">$ systemctl enable digibyted.service
$ systemctl start digibyted.service
</code></pre>

<p>Check the log:</p>

<pre><code class="bash">$ tail -f /var/lib/digibyte/debug.log
</code></pre>

<h2>Interact with the Node</h2>

<p>Check the uptime:</p>

<pre><code class="bash">$ curl -XPOST -H 'Content-Type: application/json' -u "jsonrpc:$PASSWORD" http://localhost:14022 -d '{"jsonrpc": "1.0", "id": "curl", "method": "uptime", "params": []}'
</code></pre>

<p>Check the wallet address:</p>

<pre><code class="bash">$ curl -XPOST -H 'Content-Type: application/json' -u "jsonrpc:$PASSWORD" http://localhost:14022 -d '{"jsonrpc": "1.0", "id": "curl", "method": "getaccountaddress", "params": []}'
{"result":"D7ZznMe4NyEkXd6zA6MB3GYXiAURo64hNs","error":null,"id":"curl"}
</code></pre>

<p>Get the account balance:</p>

<pre><code class="bash">$ curl -XPOST -H 'Content-Type: application/json' -u "jsonrpc:$PASSWORD" http://localhost:14022 -d '{"jsonrpc": "1.0", "id": "curl", "method": "getbalance", "params": []}'
{"result":0.00000000,"error":null,"id":"curl"}
</code></pre>

<p>Using the digibyte-cli:</p>

<pre><code class="bash">$ /usr/local/digibyte/bin/digibyte-cli -getinfo
{
  "version": 7170200,
  "protocolversion": 70017,
  "walletversion": 169900,
  "balance": 0.00000000,
  "blocks": 183019,
  "timeoffset": 0,
  "connections": 8,
  "proxy": "",
  "difficulty": null,
  "testnet": false,
  "keypoololdest": 1619558662,
  "keypoolsize": 1000,
  "paytxfee": 0.00000000,
  "relayfee": 0.00001000,
  "warnings": ""
}
</code></pre>

<h2>Making a Transaction to my Wallet</h2>

<p>Let&rsquo;s make a transaction to my wallet node from a crypto currency exchange where I have digibyte, so first to get the wallet address where we would like to deposit the crypto currency:</p>

<pre><code class="bash">$ curl -XPOST -H 'Content-Type: application/json' -u "jsonrpc:$PASSWORD" http://localhost:14022 -d '{"jsonrpc": "1.0", "id": "curl", "method": "getaccountaddress", "params": []}'
{"result":"D7ZznMe4NyEkXd6zA6MB3GYXiAURo64hNs","error":null,"id":"curl"}
</code></pre>

<p>From a exchange where you have DGB, withdraw to the address DN8RMAUz2yHGW1PuuLtiSkiTZARzMJ4L2A which is your wallet on the node (ensure you have enough to cover the transaction fee).</p>

<p>Once the transaction has enough confirmations, have a look at your wallet balance, and you will see the 5 DGB that I sent to my wallet can be seen:</p>

<pre><code class="bash">$ curl -H 'Content-Type: application/json' -u "jsonrpc:$PASSWORD" http://localhost:14022 -d '{"jsonrpc": "1.0", "id": "curl", "method": "getbalance", "params": [""]}'
{"result":5.00000000,"error":null,"id":"curl"}
</code></pre>

<p>I&rsquo;ve setup a software wallet on my pc, and from DGB I selected receive and copied my DGB software wallet address, now I would like to transfer my funds from my node wallet to my software wallet:</p>

<pre><code class="bash">$ curl -H 'Content-Type: application/json' -u "jsonrpc:$PASSWORD" http://localhost:14022 -d '{"jsonrpc": "1.0", "id":"curl", "method": "sendtoaddress", "params": ["DTqHG9KA3oQAywq18gpBknxHXHZviyYdvS", 5.0, "donation", "happy bday"] }'
{"result":null,"error":{"code":-4,"message":"Error: This transaction requires a transaction fee of at least 0.0004324"},"id":"curl"}
</code></pre>

<p>As you can see I don&rsquo;t have enough in my nodes wallet to make the transaction, therefore I need to keep the transaction cost in consideration:</p>

<pre><code class="bash">$ python3 -c 'print(5.0-0.0004324)'
4.9995676
</code></pre>

<p>So let&rsquo;s send <code>4.998</code>:</p>

<pre><code class="bash">$ curl -H 'Content-Type: application/json' -u "jsonrpc:$PASSWORD" http://localhost:14022 -d '{"jsonrpc": "1.0", "id":"curl", "method": "sendtoaddress", "params": ["DTqHG9KA3oQAywq18gpBknxHXHZviyYdvS", 4.998, "donation", "happy bday"] }'
{"result":"260e49b72f17f42f5a6c858e5403e23b5382000650997292e7e79f1535f5c4d0","error":null,"id":"curl"}
</code></pre>

<p>As you can see we are getting back a transaction id which we can use later to check up on. A couple of seconds later I received a notification on my software wallet that my funds were received:</p>

<p><img src="https://user-images.githubusercontent.com/567298/116690769-2aae2880-a9ba-11eb-8735-3fd1f0cc9ece.png" alt="" /></p>

<p>First, using our software wallet&rsquo;s address we can look it up:
- <a href="https://digiexplorer.info/address/DTqHG9KA3oQAywq18gpBknxHXHZviyYdvS">https://digiexplorer.info/address/DTqHG9KA3oQAywq18gpBknxHXHZviyYdvS</a></p>

<p>And it should look like this:</p>

<p><img src="https://user-images.githubusercontent.com/567298/116691497-29313000-a9bb-11eb-962d-0427a560718a.png" alt="" /></p>

<p>We can also lookup the transaction id:
- <a href="https://digiexplorer.info/tx/260e49b72f17f42f5a6c858e5403e23b5382000650997292e7e79f1535f5c4d0">https://digiexplorer.info/tx/260e49b72f17f42f5a6c858e5403e23b5382000650997292e7e79f1535f5c4d0</a></p>

<p>And it should look like this:</p>

<p><img src="https://user-images.githubusercontent.com/567298/116691773-9ba21000-a9bb-11eb-978e-58be3a8be045.png" alt="" /></p>

<h2>Resources</h2>

<p>RPC Docs:
- <a href="https://developer.bitcoin.org/reference/rpc/index.html">https://developer.bitcoin.org/reference/rpc/index.html</a>
- <a href="https://chainquery.com/bitcoin-cli">https://chainquery.com/bitcoin-cli</a></p>

<p>Digibyte Config:
- <a href="https://github.com/digibyte/digibyte/blob/master/contrib/debian/examples/digibyte.conf">https://github.com/digibyte/digibyte/blob/master/contrib/debian/examples/digibyte.conf</a></p>

<p>REST Config:
- <a href="https://github.com/digibyte/digibyte/blob/master/doc/REST-interface.md">https://github.com/digibyte/digibyte/blob/master/doc/REST-interface.md</a></p>

<p>Resources:
- <a href="https://digibytewallets.com/">https://digibytewallets.com/</a></p>
]]></content>
  </entry>
  
</feed>
