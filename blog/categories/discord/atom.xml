<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Discord | Ruan Bekker's Blog]]></title>
  <link href="https://blog.ruanbekker.com/blog/categories/discord/atom.xml" rel="self"/>
  <link href="https://blog.ruanbekker.com/"/>
  <updated>2023-07-15T17:51:28-04:00</updated>
  <id>https://blog.ruanbekker.com/</id>
  <author>
    <name><![CDATA[Ruan]]></name>
    <email><![CDATA[ruan@ruanbekker.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Create a Discord Bot in Python]]></title>
    <link href="https://blog.ruanbekker.com/blog/2022/05/05/create-a-discord-bot-in-python/"/>
    <updated>2022-05-05T04:32:12-04:00</updated>
    <id>https://blog.ruanbekker.com/blog/2022/05/05/create-a-discord-bot-in-python</id>
    <content type="html"><![CDATA[<p><img src="https://user-images.githubusercontent.com/567298/166907630-cfd0760e-ddff-46b4-9b82-f163fb90f0ee.png" alt="discord-logo" /></p>

<p>In this tutorial we will develop our own <strong><a href="https://discord.com/">Discord</a></strong> bot using <strong>Python</strong>.</p>

<p>The source code for this bot will be stored in my <a href="https://github.com/ruanbekker/discord-minecraft-python-bot">github repository</a></p>

<h2>About the bot</h2>

<p>First we will create a basic discord bot that will greet the message sender, and then we will create a Minecraft Bot, that will enable us to do the following:</p>

<pre><code>:: Bot Usage ::
!mc help          : shows help
!mc serverusage   : shows system load in percentage
!mc serverstatus  : shows if the server is online or offline
!mc whoisonline   : shows who is online at the moment
</code></pre>

<p>Let&rsquo;s get into it.</p>

<h2>Dependencies</h2>

<p>Create a python virtual environment and install the dependent packages:</p>

<pre><code>$ python3 -m virtualenv .venv
$ source .venv/bin/activate
$ pip install discord
$ pip install python-dotenv
</code></pre>

<h2>Create the Discord Application</h2>

<p>We first need to create the application on discord and retrieve a token that our python app will require.</p>

<p>Create a application on discord:</p>

<ul>
<li><a href="https://discordapp.com/developers/applications">https://discordapp.com/developers/applications</a></li>
</ul>


<p>You should see:</p>

<p><img width="1782" alt="image" src="https://user-images.githubusercontent.com/567298/165783157-0747c6f1-af2d-434a-9e3f-1e554f7e69ef.png"></p>

<p>Click &ldquo;New Application&rdquo; and provide it a name:</p>

<p><img width="478" alt="image" src="https://user-images.githubusercontent.com/567298/165783246-68899cd9-c796-41a9-ae9d-88764a83ec0d.png"></p>

<p>Once you create the application you will get a screen to upload a logo, provide a description and most importantly get your application id as well as your public key:</p>

<p><img src="https://user-images.githubusercontent.com/567298/165911250-0fd11a0b-b851-4d65-a898-7049dd73aa60.png" alt="image" /></p>

<p>Then select the Bot section:</p>

<p><img width="1756" alt="image" src="https://user-images.githubusercontent.com/567298/165911940-a85498bd-d572-455b-b38a-50114e6b4144.png"></p>

<p>Then select &ldquo;Add Bot&rdquo;:</p>

<p><img width="717" alt="image" src="https://user-images.githubusercontent.com/567298/165912066-6cd72b29-e0fe-4c4f-b73d-269e48da61d6.png"></p>

<p>Select OAuth2 and select the &ldquo;bot&rdquo; scope:</p>

<p><img width="1751" alt="image" src="https://user-images.githubusercontent.com/567298/165912862-a51a9f29-d876-4ba7-b226-be78214c934d.png"></p>

<p>At the bottom of the page it will provide you with a URL that looks something like:</p>

<pre><code>https://discord.com/api/oauth2/authorize?client_id=xxxxxxxxxxx&amp;permissions=0&amp;scope=bot
</code></pre>

<p>Paste the link in your browser and authorize the bot to your server of choice:</p>

<p><img src="https://user-images.githubusercontent.com/567298/165917380-6e8fbbed-9237-4017-a8bd-c27d58bcdc6d.png" alt="image" /></p>

<p>Then click authorize, and you should see your bot appearing on Discord:</p>

<p><img src="https://user-images.githubusercontent.com/567298/165917760-d8c132e9-18d4-4428-b551-c895d4a5102c.png" alt="image" /></p>

<h2>Developing the Discord Bot</h2>

<p>Now we will be building our python discord bot, head back to the &ldquo;Bot&rdquo; section and select &ldquo;Reset Token&rdquo;, then copy and store the token value to a file <code>.env</code>:</p>

<pre><code>DISCORD_TOKEN=xxxxxxxxx
</code></pre>

<p>So in our current working directory, we should have a file <code>.env</code> with the following content:</p>

<pre><code>$ cat .env
DISCORD_TOKEN=your-unique-token-value-will-be-here
</code></pre>

<p>For this demonstration, I will create a private channel in discord called <code>minecraft-test</code> and add the bot <code>MinecraftBot</code> to the channel (this is only for testing, after testing you can add your bot to your other channels for other people to use):</p>

<p><img src="https://user-images.githubusercontent.com/567298/166233812-2596960b-5142-4ad1-809e-96d884ea5c58.png" alt="image" /></p>

<p>For our first test, a basic bot, where we would like to type <code>hello</code> and the bot should greet us by our username, in our <code>mc_discord_bot.py</code> file we will have:</p>

<pre><code class="python">import discord
import os
from dotenv import load_dotenv

BOT_NAME = "MinecraftBot"

load_dotenv()
DISCORD_TOKEN = os.getenv("DISCORD_TOKEN")

bot = discord.Client()

@bot.event
async def on_ready():
    print(f'{bot.user} has logged in.')

@bot.event
async def on_message(message):
    if message.author == bot.user:
        return
    if message.content == 'hello':
        await message.channel.send(f'Hey {message.author}')
    if message.content == 'goodbye':
        await message.channel.send(f'Goodbye {message.author}')

bot.run(DISCORD_TOKEN)
</code></pre>

<p>Then run the bot:</p>

<pre><code>$ python mc_discord_bot.py
MinecraftBot has logged in.
</code></pre>

<p>And when we type <code>hello</code> and <code>goodbye</code> you can see our bot responds on those values:</p>

<p><img src="https://user-images.githubusercontent.com/567298/166235388-7240a66c-2be4-4343-8f36-398077c4fcf6.png" alt="image" /></p>

<p>Now that we tested our bot, we can clear the <code>mc_discord_bot.py</code> and write our minecraft bot, the requirements of this bot is simple, but we would like the following:</p>

<ul>
<li>use the command <code>!mc</code> to trigger our bot and subcommands for what we want</li>
<li>able to see who is playing minecraft on our server at the moment</li>
<li>able to get the status if the minecraft server is online</li>
<li>able to get the server load percentage (as the bot runs on the minecraft server)</li>
</ul>


<p>This is our complete <code>mc_discord_bot.py</code>:</p>

<pre><code class="python">import discord
from discord.ext import commands
import requests
import os
from dotenv import load_dotenv
import random
import multiprocessing

# Variables
BOT_NAME = "MinecraftBot"
load_dotenv()
DISCORD_TOKEN = os.getenv("DISCORD_TOKEN")

minecraft_server_url = "lightmc.fun" # this is just an example, and you should use your own minecraft server

bot_help_message = """
:: Bot Usage ::
`!mc help`                   : shows help
`!mc serverusage`   : shows system load in percentage
`!mc serverstatus` : shows if the server is online or offline
`!mc whoisonline`   : shows who is online at the moment
"""

available_commands = ['help', 'serverusage', 'serverstatus', 'whoisonline']

# Set the bot command prefix
bot = commands.Bot(command_prefix="!")

# Executes when the bot is ready
@bot.event
async def on_ready():
    print(f'{bot.user} succesfully logged in!')

# Executes whenever there is an incoming message event
@bot.event
async def on_message(message):
    print(f'Guild: {message.guild.name}, User: {message.author}, Message: {message.content}')
    if message.author == bot.user:
        return

    if message.content == '!mc':
        await message.channel.send(bot_help_message)

    if 'whosonline' in message.content:
        print(f'{message.author} used {message.content}')
    await bot.process_commands(message)

# Executes when the command mc is used and we trigger specific functions
# when specific arguments are caught in our if statements
@bot.command()
async def mc(ctx, arg):
    if arg == 'help':
        await ctx.send(bot_help_message)

    if arg == 'serverusage':
        cpu_count = multiprocessing.cpu_count()
        one, five, fifteen = os.getloadavg()
        load_percentage = int(five / cpu_count * 100)
        await ctx.send(f'Server load is at {load_percentage}%')

    if arg == 'serverstatus':
        response = requests.get(f'https://api.mcsrvstat.us/2/{minecraft_server_url}').json()
        server_status = response['online']
        if server_status == True:
            server_status = 'online'
        await ctx.send(f'Server is {server_status}')

    if arg == 'whoisonline':
        response = requests.get('https://api.mcsrvstat.us/2/{minecraft_server_url}').json()
        players_status = response['players']
        if players_status['online'] == 0:
            players_online_message = 'No one is online'
        if players_status['online'] == 1:
            players_online_username = players_status['list'][0]
            players_online_message = f'1 player is online: {players_online_username}'
        if players_status['online'] &gt; 1:
            po = players_status['online']
            players_online_usernames = players_status['list']
            joined_usernames = ", ".join(players_online_usernames)
            players_online_message = f'{po} players are online: {joined_usernames}'
        await ctx.send(f'{players_online_message}')

bot.run(DISCORD_TOKEN)
</code></pre>

<p>And now we can start our bot:</p>

<pre><code class="bash">$ python mc_discord_bot.py
</code></pre>

<p>And we can run our help command:</p>

<pre><code class="bash">!mc help
</code></pre>

<p>Which will prompt our help message, and then test out the others:</p>

<p><img src="https://user-images.githubusercontent.com/567298/166237617-c2df1dd1-99bc-4558-8eb8-b1159e850836.png" alt="image" /></p>

<h2>Resources</h2>

<p>Thank you to the following authors, which really helped me doing this:</p>

<ul>
<li><a href="https://www.freecodecamp.org/news/create-a-discord-bot-with-python/">https://www.freecodecamp.org/news/create-a-discord-bot-with-python/</a></li>
<li><a href="https://betterprogramming.pub/coding-a-discord-bot-with-python-64da9d6cade7">https://betterprogramming.pub/coding-a-discord-bot-with-python-64da9d6cade7</a></li>
<li><a href="https://dev.to/codesphere/create-a-discord-bot-in-minutes-with-python-2jgp">https://dev.to/codesphere/create-a-discord-bot-in-minutes-with-python-2jgp</a></li>
</ul>


<h2>Thank You</h2>

<p>Thanks for reading, if you like my content, check out my <strong><a href="https://ruan.dev">website</a></strong>, read my <strong><a href="http://digests.ruanbekker.com/?via=ruanbekker-blog">newsletter</a></strong> or follow me at <strong><a href="https://twitter.com/ruanbekker">@ruanbekker</a></strong> on Twitter.</p>

<p>The source code for this bot will be stored in my github repository:
- <a href="https://github.com/ruanbekker/discord-minecraft-python-bot">https://github.com/ruanbekker/discord-minecraft-python-bot</a></p>

<p>I&rsquo;ve started a brand new Discord server, not much happening at the moment, but planning to share and distribute tech content and a place for like minded people to hang out. If that&rsquo;s something you are interested in, feel free to join on <strong><a href="https://discord.gg/bPmc4Stchd">this link</a></strong></p>
]]></content>
  </entry>
  
</feed>
