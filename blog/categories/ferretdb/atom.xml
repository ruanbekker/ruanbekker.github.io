<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ferretdb | Ruan Bekker's Blog]]></title>
  <link href="https://blog.ruanbekker.com/blog/categories/ferretdb/atom.xml" rel="self"/>
  <link href="https://blog.ruanbekker.com/"/>
  <updated>2023-07-15T18:10:57-04:00</updated>
  <id>https://blog.ruanbekker.com/</id>
  <author>
    <name><![CDATA[Ruan]]></name>
    <email><![CDATA[ruan@ruanbekker.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Getting Started With FerretDB on Docker]]></title>
    <link href="https://blog.ruanbekker.com/blog/2023/06/14/getting-started-with-ferretdb-on-docker/"/>
    <updated>2023-06-14T22:00:00-04:00</updated>
    <id>https://blog.ruanbekker.com/blog/2023/06/14/getting-started-with-ferretdb-on-docker</id>
    <content type="html"><![CDATA[<p>In this post we will have a look at <strong>FerretDB</strong> which is a opensource proxy that translates MongoDB queries to SQL, where PostgreSQL being the database engine.</p>

<h2>More about FerretDB</h2>

<p>From <a href="https://www.ferretdb.io/">FerretDB</a> website, they describe FerretDB as:</p>

<p>&ldquo;Initially built as open-source software, MongoDB was a game-changer for many developers, enabling them to build fast and robust applications. Its ease of use and extensive documentation made it a top choice for many developers looking for an open-source database. However, all this changed when they switched to an SSPL license, moving away from their open-source roots.&rdquo;</p>

<p>&ldquo;In light of this, FerretDB was founded to become the true open-source alternative to MongoDB, making it the go-to choice for most MongoDB users looking for an open-source alternative to MongoDB. With FerretDB, users can run the same MongoDB protocol queries without needing to learn a new language or command.&rdquo;</p>

<h2>What can you expect from this tutorial</h2>

<p>We will be doing the following:</p>

<ul>
<li>deploying ferretdb and postgres on docker containers using docker compose</li>
<li>then use <code>mongosh</code> as a client to logon to ferretdb using the ferretdb endpoint</li>
<li>explore some example queries to insert and read data from ferretdb</li>
<li>use scripting to generate data into ferretedb</li>
<li>explore the embedded prometheus endpoint for metrics</li>
</ul>


<h2>Deploy FerretDB</h2>

<p>The following <code>docker-compose.yaml</code> defines a postgres container which will be used as the database engine for ferretdb, and then we define the ferretdb container, which connects to postgres via the environment variable <code>FERRETDB_POSTGRESQL_URL</code>.</p>
]]></content>
  </entry>
  
</feed>
