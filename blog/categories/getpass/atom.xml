<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Getpass | Ruan Bekker's Blog]]></title>
  <link href="http://blog.ruanbekker.com/blog/categories/getpass/atom.xml" rel="self"/>
  <link href="http://blog.ruanbekker.com/"/>
  <updated>2018-12-19T08:38:11-05:00</updated>
  <id>http://blog.ruanbekker.com/</id>
  <author>
    <name><![CDATA[Ruan]]></name>
    <email><![CDATA[ruan@ruanbekker.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using Getpass in Python to Accept Passwords From Stdin Without Echoing It Back]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/01/22/using-getpass-in-python-to-accept-passwords-from-stdin-without-echoing-it-back/"/>
    <updated>2018-01-22T13:15:09-05:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/01/22/using-getpass-in-python-to-accept-passwords-from-stdin-without-echoing-it-back</id>
    <content type="html"><![CDATA[<p>Using <code>raw_input</code> in python expects standard input, which echo&rsquo;s it back after enter is executed, below is an example:</p>

<pre><code class="python">&gt;&gt;&gt; word = raw_input("What is the word? \n")
What is the word?
football
&gt;&gt;&gt; print(word)
football
</code></pre>

<p>Using getpass, the standard input gets masked, like you would expect when entering a password, like below:</p>

<pre><code class="python">&gt;&gt;&gt; from getpass import getpass
&gt;&gt;&gt; word = getpass()
Password:
&gt;&gt;&gt; print(word)
rugby
</code></pre>

<p>Changing the default prompt:</p>

<pre><code class="python">&gt;&gt;&gt; word = getpass(prompt='What is your name? ')
What is your name?
&gt;&gt;&gt; print(word)
Ruan
</code></pre>

<p>Creating a Simple Insecure Password Verification App:</p>

<pre><code class="python">from getpass import getpass

password = getpass()
if password.lower() == 'simplepass':
    print 'Password Correct'
else:
    print 'Password Failed'
</code></pre>

<p>Testing it, by first entering a incorrect string, then the correct one:</p>

<pre><code class="bash">$ python auth-check.py
Password:
Password Failed

$ python auth-check.py
Password:
Password Correct
</code></pre>

<p>You definitely don&rsquo;t want to hard code the credentials in your app, but you get the idea.</p>
]]></content>
  </entry>
  
</feed>
