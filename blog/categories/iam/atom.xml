<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Iam | Ruan Bekker's Blog]]></title>
  <link href="http://blog.ruanbekker.com/blog/categories/iam/atom.xml" rel="self"/>
  <link href="http://blog.ruanbekker.com/"/>
  <updated>2017-10-14T15:10:44-04:00</updated>
  <id>http://blog.ruanbekker.com/</id>
  <author>
    <name><![CDATA[Ruan]]></name>
    <email><![CDATA[ruan@ruanbekker.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[AWS: IAM S3 Policy for Cyberduck to Allow Listing Buckets and Access to One Bucket]]></title>
    <link href="http://blog.ruanbekker.com/blog/2017/09/15/aws-iam-s3-policy-for-cyberduck-to-allow-listing-buckets-and-access-to-one-bucket/"/>
    <updated>2017-09-15T11:18:17-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2017/09/15/aws-iam-s3-policy-for-cyberduck-to-allow-listing-buckets-and-access-to-one-bucket</id>
    <content type="html"><![CDATA[<p>When using Cyberduck to access S3, and a account has restrictive policies, you may find error <code>Listing Directory: /</code> failed.</p>

<p>If you have restrictive IAM Policies in your account, this may be due to the fact that <code>S3:ListMyBuckets</code> is not allowed.</p>

<p>In this post we want to allow a user to list all buckets, so that Cyberduck can do the initial list after configuration / launch, and we would like to give the user access to their designated bucket.</p>

<h2>Creating the IAM Policy:</h2>

<p>We will create this IAM Policy and associate the policy to the user&rsquo;s account:</p>

<pre><code class="json">{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "Stmt1480515305000",
            "Effect": "Allow",
            "Action": [
                "s3:ListAllMyBuckets",
                "s3:GetBucketLocation"
            ],
            "Resource": [
                "arn:aws:s3:::*"
            ]
        },
        {
            "Sid": "Stmt1480515305002",
            "Effect": "Allow",
            "Action": [
                "s3:List*",
                "s3:GetObject",
                "s3:PutObject",
                "s3:DeleteObject"
            ],
            "Resource": [
                "arn:aws:s3:::allowed-bucket",
                "arn:aws:s3:::allowed-bucket/*"
            ]
        }
    ]
}
</code></pre>

<p>So here we should be able to list the buckets:</p>

<pre><code class="bash">$ aws --profile cyberduck s3 ls /
2017-06-08 08:27:01 allowed-bucket
2017-05-21 13:39:21 private-bucket
2016-12-21 08:23:45 confidential-bucket
2017-08-10 14:18:19 test-bucket
2016-08-03 12:38:29 datalake-bucket
</code></pre>

<p>Able to list inside the bucket, as well as Get, Put etc.</p>

<pre><code class="bash">$ aws --profile cyberduck s3 ls allowed-bucket/
                           PRE data/
</code></pre>

<p>Unable to list the buckets content which is expected, as we did not mention in the policy:</p>

<pre><code class="bash">$ aws --profile cyberduck s3 ls confidential-bucket/

An error occurred (AccessDenied) when calling the ListObjects operation: Access Denied
</code></pre>

<h2>Resources:</h2>

<ul>
<li><a href="https://aws.amazon.com/blogs/security/writing-iam-policies-how-to-grant-access-to-an-amazon-s3-bucket/">https://aws.amazon.com/blogs/security/writing-iam-policies-how-to-grant-access-to-an-amazon-s3-bucket/</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Change IAM Username With AWS CLI]]></title>
    <link href="http://blog.ruanbekker.com/blog/2017/08/28/change-iam-username-with-aws-cli/"/>
    <updated>2017-08-28T18:27:21-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2017/08/28/change-iam-username-with-aws-cli</id>
    <content type="html"><![CDATA[<p>You may find yourself in a position where you need to rename more than one IAM Username, and one way of doing this is using the AWS CLI tools to rename the username.</p>

<p>The benefit of this is that the user&rsquo;s access keys remains the same, any policies associated to the user, will stay on the user after the username gets renamed.</p>

<p>The only thing that changes, is ofcourse the username that the user will use when logging onto the AWS Management Console:</p>

<h2>Details of our User:</h2>

<p>We will change the IAM User <code>peter</code> to <code>peter.franklin</code>. Currently Peter&rsquo;s ACCESS_KEY will be <code>AKIA123456ABCDEF1234</code> which is configured with the profile name <code>peter</code>.</p>

<p>Lets first get details of our user before changing it:</p>

<pre><code class="bash ">$ aws --profile admin iam get-user --user-name peter
{
    "User": {
        "UserName": "peter",
        "PasswordLastUsed": "2017-08-28T13:17:22Z",
        "CreateDate": "2017-08-28T13:11:25Z",
        "UserId": "ABCDEFGHIJKLMNOPQRST",
        "Path": "/",
        "Arn": "arn:aws:iam::123456789012:user/peter"
    }
}
</code></pre>

<h2>Rename the IAM User</h2>

<p>Update user peter to peter.franklin:</p>

<pre><code class="bash Rename the IAM User">$ aws --profile aws iam update-user --user-name peter --new-user-name peter.franklin
</code></pre>

<p>Describe peter&rsquo;s new username:</p>

<pre><code class="bash">$ aws --profile aws iam get-user --user-name peter.franklin
{
    "User": {
        "UserName": "peter.franklin",
        "PasswordLastUsed": "2017-08-28T13:23:18Z",
        "CreateDate": "2017-08-28T13:11:25Z",
        "UserId": "ABCDEFGHIJKLNMOPQRST",
        "Path": "/",
        "Arn": "arn:aws:iam::123456789012:user/peter.franklin"
    }
}
</code></pre>

<p>Verify that access keys are the same:</p>

<pre><code class="bash">$ aws --profile aws iam list-access-keys --user-name peter.franklin
{
    "AccessKeyMetadata": [
        {
            "UserName": "peter.franklin",
            "Status": "Active",
            "CreateDate": "2017-08-28T13:11:27Z",
            "AccessKeyId": "AKIA123456ABCDEF1234"
        }
    ]
}
</code></pre>

<p>At this momemnt we can see that Peter&rsquo;s AccessKeyId is still the same, which means he does not have to update his credentials on his end.</p>

<h2>Some Useful CLI Commands:</h2>

<p>Get only the Access Key for a User:</p>

<pre><code class="bash">$ aws --profile admin iam list-access-keys --user-name peter.franklin | jq -r '.[][].AccessKeyId'
AKIA123456ABCDEF1234
</code></pre>

<h2>Determine when the AccessKey was last used, and for which Service:</h2>

<p>For auditing, or verifying if a AccessKeyId is being used, we can call the <code>get-access-key-last-used</code>, which will give us the last time the key was used, and also see for which service in question.</p>

<p>Let Peter create a DynamoDB Table:</p>

<pre><code class="bash">$ aws --profile peter dynamodb \
create-table --table-name test01 \
--attribute-definitions "AttributeName=username,AttributeType=S" \
--key-schema "AttributeName=username,KeyType=HASH" \
--provisioned-throughput "ReadCapacityUnits=1,WriteCapacityUnits=1"
</code></pre>

<pre><code class="json">{
    "TableDescription": {
        "TableArn": "arn:aws:dynamodb:eu-west-1:123456789012:table/test01",
        "AttributeDefinitions": [
            {
                "AttributeName": "username",
                "AttributeType": "S"
            }
        ],
        "ProvisionedThroughput": {
            "NumberOfDecreasesToday": 0,
            "WriteCapacityUnits": 1,
            "ReadCapacityUnits": 1
        },
        "TableSizeBytes": 0,
        "TableName": "test01",
        "TableStatus": "CREATING",
        "KeySchema": [
            {
                "KeyType": "HASH",
                "AttributeName": "username"
            }
        ],
        "ItemCount": 0,
        "CreationDateTime": 1503928537.671
    }
}
</code></pre>

<p>Get Detail on LastUsedDate:</p>

<pre><code class="bash">$ aws --profile admin iam get-access-key-last-used  --access-key $(aws --profile aws iam list-access-keys --user-name peter.franklin | jq -r '.[][].AccessKeyId') | jq -r '.[]'
peter.franklin
{
  "Region": "eu-west-1",
  "ServiceName": "dynamodb",
  "LastUsedDate": "2017-08-28T13:55:00Z"
}
</code></pre>

<p>Only getting the LastUsedDate of the AccessKeyId:</p>

<pre><code class="bash">$ aws --profile admin iam get-access-key-last-used  --access-key $(aws --profile aws iam list-access-keys --user-name peter.franklin | jq -r '.[][].AccessKeyId') | jq '.AccessKeyLastUsed.LastUsedDate'
"2017-08-28T13:55:00Z"
</code></pre>

<h2>Resources:</h2>

<ul>
<li><ul>
<li><a href="http://docs.aws.amazon.com/cli/latest/reference/iam/update-user.html?shortFooter=true">http://docs.aws.amazon.com/cli/latest/reference/iam/update-user.html?shortFooter=true</a></li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
</feed>
