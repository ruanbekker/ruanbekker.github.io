<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Learning-python | Ruan Bekker's Blog]]></title>
  <link href="https://blog.ruanbekker.com/blog/categories/learning-python/atom.xml" rel="self"/>
  <link href="https://blog.ruanbekker.com/"/>
  <updated>2020-11-06T16:10:00+00:00</updated>
  <id>https://blog.ruanbekker.com/</id>
  <author>
    <name><![CDATA[Ruan]]></name>
    <email><![CDATA[ruan@ruanbekker.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Basic Example With Python to Create a Module That Consists of Classes and Functions]]></title>
    <link href="https://blog.ruanbekker.com/blog/2017/10/22/basic-example-with-python-to-create-a-module-that-consists-of-classes-and-functions/"/>
    <updated>2017-10-22T05:45:17-04:00</updated>
    <id>https://blog.ruanbekker.com/blog/2017/10/22/basic-example-with-python-to-create-a-module-that-consists-of-classes-and-functions</id>
    <content type="html"><![CDATA[<p>Just a very basic example how to create a Python Module that consists of a Single Class and 2 basic functions.</p>

<p>Our main app will can our module to print out a word, that we pass to our first function.</p>

<h2>The Directory Setup:</h2>

<p>Below is a tree view of my current working directory:</p>

<pre><code class="bash">$ tree
.
├── providers
│   ├── __init__.py
│   ├── test.py
├── README.md
└── main.py
</code></pre>

<p>In order to make a python file a module, we need to have a blank <code>__init__.py</code> file in our directory. So any files under our providers directory will be seen as modules from our <code>main.py</code> file.</p>

<h2>Our Test Module:</h2>

<p>in our <code>providers/test.py</code> file:</p>

<pre><code class="python">class TestClass:

    def word_to_return(self, word_value):
        return word_value

    def simple_test(self):
        data = self.word_to_return('its me!')
        return data
</code></pre>

<p>Then our <code>providers/test.py</code> file will be blank.</p>

<p>Our <code>main.py</code>, we will import our test module, instantiate our class, and call our function within the class that we instantiated:</p>

<pre><code class="python">from providers import test

test_instance = test.TestClass()
response = test_instance.simple_test()

print(response)
</code></pre>

<p>instead of <code>response = test_instance.simple_test()</code>, you could also do <code>print(test_instance.simple_test()</code></p>

<h2>Testing it out:</h2>

<pre><code class="bash">$ python main.py
its me!
</code></pre>

<p>It&rsquo;s very basic but will post some more topics around this in the future.</p>

<p>Also note, this blog is for quick posts that I come accross during my daily doings, for more details tutorials have a look at my main blog: <a href="https://sysadmins.co.za/?referral=blog.ruanbekker.com?category=python">sysadmins.co.za</a></p>
]]></content>
  </entry>
  
</feed>
