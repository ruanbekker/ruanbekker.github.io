<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Nagios | Ruan Bekker's Blog]]></title>
  <link href="http://blog.ruanbekker.com/blog/categories/nagios/atom.xml" rel="self"/>
  <link href="http://blog.ruanbekker.com/"/>
  <updated>2019-12-04T22:55:06+02:00</updated>
  <id>http://blog.ruanbekker.com/</id>
  <author>
    <name><![CDATA[Ruan]]></name>
    <email><![CDATA[ruan@ruanbekker.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Setup NRPE Client and Server for Monitoring Remote Services in Nagios]]></title>
    <link href="http://blog.ruanbekker.com/blog/2019/03/18/setup-nrpe-client-and-server-for-monitoring-remote-services-in-nagios/"/>
    <updated>2019-03-18T18:49:59+02:00</updated>
    <id>http://blog.ruanbekker.com/blog/2019/03/18/setup-nrpe-client-and-server-for-monitoring-remote-services-in-nagios</id>
    <content type="html"><![CDATA[<p><img src="https://user-images.githubusercontent.com/567298/54547916-65f26680-49af-11e9-8d42-e27c57ef8e2e.png" alt="" /></p>

<p>If you have not setup the <a href="https://blog.ruanbekker.com/blog/2019/03/13/how-to-setup-a-nagios-monitoring-server/">Nagios Server</a> have a look at that link to setup the Nagios server.</p>

<h2>Nagios NRPE</h2>

<p>Nagios Remote Plugin Executor (NRPE) allows you to remotely execute Nagios plugins on other linux systems. This allows you to monitor remote machine metrics (disk usage, CPU, local listening services, etc.).</p>

<p>NRPE has 2 sections:</p>

<ul>
<li>The nagios server side.</li>
<li>The client side.</li>
</ul>


<p>For nagios to execute remote plugins, the client configuration needs to allow the nrpe server which will be nagios.</p>

<p>Download, extract, configure and install NRPE server:</p>

<pre><code>$ wget 'https://github.com/NagiosEnterprises/nrpe/releases/download/nrpe-3.2.1/nrpe-3.2.1.tar.gz'
$ tar -xvf nrpe-3.2.1.tar.gz
$ cd nrpe-3.2.1
$ ./configure --enable-command-args --with-nagios-user=nagios --with-nagios-group=nagcmd --with-ssl=/usr/bin/openssl --with-ssl-lib=/usr/lib/x86_64-linux-gnu
$ make all
$ make install
$ make install-init
$ make install-config
$ systemctl enable nrpe.service
</code></pre>

<p>Installing NRPE on the client side:</p>

<pre><code>$ apt update &amp;&amp; apt install nagios-nrpe-server -y
$ systemctl enable nagios-nrpe-server
$ systemctl start nagios-nrpe-server
</code></pre>

<p>Allow your nagios server ip in <code>/etc/nagios/nrpe.cfg</code>:</p>

<pre><code>allowed_hosts=nagios.ip.in.here
</code></pre>

<p>Restart NRPE on the client:</p>

<pre><code>$ systemctl restart nagios-nrpe-server
</code></pre>

<p>Ensure that the <code>check_nrpe</code> plugin is configured and available in the commands.cfg configuration for the nagios server:</p>

<pre><code>$ vi /usr/local/nagios/etc/objects/commands.cfg

define command {
    command_name check_nrpe
    command_line $USER1$/check_nrpe -H $HOSTADDRESS$ -c $ARG1$
}
</code></pre>

<p>Check <a href="">this</a> out how to create a python nrpe nagios plugin to check disk space on the client host</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Monitor Your First Host and Services With Nagios]]></title>
    <link href="http://blog.ruanbekker.com/blog/2019/03/18/monitor-your-first-host-and-services-with-nagios/"/>
    <updated>2019-03-18T18:49:23+02:00</updated>
    <id>http://blog.ruanbekker.com/blog/2019/03/18/monitor-your-first-host-and-services-with-nagios</id>
    <content type="html"><![CDATA[<p><img src="https://user-images.githubusercontent.com/567298/54547916-65f26680-49af-11e9-8d42-e27c57ef8e2e.png" alt="" /></p>

<p>If you have not setup the <a href="https://blog.ruanbekker.com/blog/2019/03/13/how-to-setup-a-nagios-monitoring-server/">Nagios Server</a> have a look at that link to setup the Nagios server.</p>

<h2>Configure Nagios to Monitor our first Host</h2>

<p>I like to setup an isolated path for my custom host/service configigurations. First we will declare the configuration path for our servers.</p>

<p>Open up: <code>/usr/local/nagios/etc/nagios.cfg</code> and add a new cfg_dir:</p>

<pre><code>cfg_dir=/usr/local/nagios/etc/servers
</code></pre>

<p>Now, create the directory:</p>

<pre><code>$ mkdir /usr/local/nagios/etc/servers
</code></pre>

<p>Configure your email address for notifications in <code>/usr/local/nagios/etc/objects/contacts.cfg</code> and configure:</p>

<pre><code>email     youremail@yourdomain.com;
</code></pre>

<p>Let&rsquo;s say we want to configure a web server named web01 that sits at the location 10.10.10.10:</p>

<pre><code>$ vi /usr/local/nagios/etc/servers/webservers.cfg
</code></pre>

<p>First we define our host configuration:</p>

<ol>
<li>We are using the <code>linux-server</code> template that is defined in <code>/usr/local/nagios/etc/objects/templates.cfg</code></li>
<li>We set the hostname, alias and address as well as notification prediods</li>
</ol>


<pre><code>define host {
    use                      linux-server
    host_name                WEB01
    alias                    WEB01
    address                  10.10.10.10
    max_check_attempts       5
    check_period             24x7
    notification_interval    30
    notification_period      24x7
}
</code></pre>

<p>While you have the config open, we want to define the services that we would like to monitor, and associate the services to the host that we defined.</p>

<p>In this example, we want to ping the server and check port tcp 22 and 80. Ensure that your web server is allowing the mentioned ports from the nagios server ip.</p>

<p>In the config, we are declaring the following:</p>

<ol>
<li>Use the <code>generic-service</code> template</li>
<li>Map the hostname which the service should be associated to</li>
<li>The description that you will see in nagios</li>
<li>Use the check_ping / check_ssh / check_http plugin and set the thresholds for ok, warning, critical</li>
</ol>


<pre><code>define service {
    use                    generic-service
    host_name              WEB01
    service_description    PING
    check_command          check_ping!100.0,20%!500.0,60%
}

define service {
    use                      generic-service
    host_name                WEB01
    service_description      SSH
    check_command            check_ssh
    notifications_enabled    1
}

define service {
    use                      generic-service
    host_name                WEB01
    service_description      HTTP
    check_command            check_http
    notifications_enabled    1
}
</code></pre>

<p>Save the config, test the config:</p>

<pre><code>$ /usr/local/nagios/bin/nagios -v /usr/local/nagios/etc/nagios
</code></pre>

<p>If you don&rsquo;t see any errors, go ahead and restart to apply the configs:</p>

<pre><code>$ systemctl restart nagios
$ systemctl restart apache2
</code></pre>

<p>Head over to nagios user interface at <a href="http://nagios-ip/nagios">http://nagios-ip/nagios</a> and you should see that the services are scheduled to be checked and should be reflecting in a minute or two.</p>

<h2>Up Next</h2>

<p>Next up, <a href="https://blog.ruanbekker.com/blog/2019/03/18/setup-nrpe-client-and-server-for-monitoring-remote-services-in-nagios/">Setup the NRPE Server and Client</a> to monitor remote systems using the nrpe plugin.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Setup the NagiosGraph Plugin on Nagios Monitoring Server]]></title>
    <link href="http://blog.ruanbekker.com/blog/2019/03/18/how-to-setup-the-nagiosgraph-plugin-on-nagios-monitoring-server/"/>
    <updated>2019-03-18T18:27:11+02:00</updated>
    <id>http://blog.ruanbekker.com/blog/2019/03/18/how-to-setup-the-nagiosgraph-plugin-on-nagios-monitoring-server</id>
    <content type="html"><![CDATA[<p><img src="https://user-images.githubusercontent.com/567298/54547916-65f26680-49af-11e9-8d42-e27c57ef8e2e.png" alt="" /></p>

<p>If you have not setup the <a href="https://blog.ruanbekker.com/blog/2019/03/13/how-to-setup-a-nagios-monitoring-server/">Nagios Server</a> have a look at that link to setup the Nagios server.</p>

<h2>NagiosGraph</h2>

<p>In this post we will setup the nagiosgraph plugin to graph performance data of our monitored host and services.</p>

<h2>Download and Install</h2>

<p>Download the nagiosgraph plugin and extract:</p>

<pre><code>$ wget 'https://downloads.sourceforge.net/project/nagiosgraph/nagiosgraph/1.5.2/nagiosgraph-1.5.2.tar.gz' -O nagiosgraph-1.5.2.tar.gz
$ tar -xvf nagiosgraph-1.5.2.tar.gz
</code></pre>

<p>Install dependencies and install the nagiosgraph plugin:</p>

<pre><code>$ apt install libnet-snmp-perl libsensors4 libsnmp-base libtalloc2 libtdb1 libwbclient0  snmp whois mrtg  libcgi-pm-perl librrds-perl libgd-perl libnagios-object-perl nagios-plugins-contrib
$ ./install.pl --check-prereq
$ ./install.pl --layout standalone --prefix /usr/local/nagiosgraph


Destination directory (prefix)? [/usr/local/nagiosgraph]
Location of configuration files (etc-dir)? [/usr/local/nagiosgraph/etc]
Location of executables? [/usr/local/nagiosgraph/bin]
Location of CGI scripts? [/usr/local/nagiosgraph/cgi]
Location of documentation (doc-dir)? [/usr/local/nagiosgraph/doc]
Location of examples? [/usr/local/nagiosgraph/examples]
Location of CSS and JavaScript files? [/usr/local/nagiosgraph/share]
Location of utilities? [/usr/local/nagiosgraph/util]
Location of state files (var-dir)? [/usr/local/nagiosgraph/var]
Location of RRD files? [/usr/local/nagiosgraph/var/rrd]
Location of log files (log-dir)? [/usr/local/nagiosgraph/var/log]
Path of log file? [/usr/local/nagiosgraph/var/log/nagiosgraph.log]
Path of CGI log file? [/usr/local/nagiosgraph/var/log/nagiosgraph-cgi.log]
Base URL? [/nagiosgraph]
URL of CGI scripts? [/nagiosgraph/cgi-bin]
URL of CSS file? [/nagiosgraph/nagiosgraph.css]
URL of JavaScript file? [/nagiosgraph/nagiosgraph.js]
URL of Nagios CGI scripts? [/nagios/cgi-bin]
Path of Nagios performance data file? [/tmp/perfdata.log]
username or userid of Nagios user? [nagios]
username or userid of web server user? [www-data]
Modify the Nagios configuration? [n] y
Path of Nagios configuration file? [/usr/local/nagios/etc/nagios.cfg]
Path of Nagios commands file? [/usr/local/nagios/etc/objects/commands.cfg]
Modify the Apache configuration? [n] y
Path of Apache configuration directory? /etc/apache2/sites-enabled
</code></pre>

<p>Ensure that your nagiosgraph configuration under apache: <code>/etc/apache2/sites-enabled/nagiosgraph.conf</code> has the following config (might be standard)</p>

<p><img src="https://user-images.githubusercontent.com/567298/54547000-946f4200-49ad-11e9-933e-b0e8b19bf014.png" alt="" /></p>

<p>Ensure the following configuration is set under nagios main config:</p>

<pre><code>$ vi /usr/local/nagios/etc/nagios.cfg

process_performance_data=1 
service_perfdata_file=/usr/local/nagios/var/service-perfdata.log 
service_perfdata_file_template=$LASTSERVICECHECK$||$HOSTNAME$||$SERVICEDESC$||$SERVICEOUTPUT$||$SERVICEPERFDATA$ 
service_perfdata_file_mode=a 
service_perfdata_file_processing_interval=30 
service_perfdata_file_processing_command=process-service-perfdata-for-nagiosgraph
</code></pre>

<p>Ensure that we have the following commands in place for nagiosgraph:</p>

<pre><code>$ vi /usr/local/nagios/etc/objects/commands.cfg

define command {
  command_name process-service-perfdata-for-nagiosgraph
  command_line /usr/local/nagiosgraph/bin/insert.pl
}
</code></pre>

<p>Create the template <code>graphed-service</code>, this will be mapped to each service that needs to be graphed in nagiosgraph:</p>

<pre><code>$ vi /usr/local/nagios/etc/objects/templates.cfg

define service {
      name              graphed-service
      action_url        /nagiosgraph/cgi-bin/show.cgi?host=$HOSTNAME$&amp;service=$SERVICEDESC$' onMouseOver='showGraphPopup(this)' onMouseOut='hideGraphPopup()' rel='/nagiosgraph/cgi-bin/showgraph.cgi?host=$HOSTNAME$&amp;service=$SERVICEDESC$&amp;period=week&amp;rrdopts=-w+450+-j
      register        0
      }
</code></pre>

<p>Next configure the services that needs to be graphed on nagios graph. Note, we only need to append the service template that we defined in our template configuration from above:</p>

<p>Note, if you have not checked out <a href="https://blog.ruanbekker.com/blog/2019/03/13/how-to-setup-a-nagios-monitoring-server/">Nagios Server Setup</a> post, in that post the inital configuration of the below config is explained.</p>

<pre><code>$ vi /usr/local/nagios/etc/servers/vpn.cfg

define host {
    use                      linux-server
    host_name                WEB01
    alias                    WEB01
    address                  10.10.10.10
    max_check_attempts       5
    check_period             24x7
    notification_interval    30
    notification_period      24x7
}

define service {
    use                    generic-service,graphed-service
    host_name              WEB01
    service_description    PING
    check_command          check_ping!100.0,20%!500.0,60%
}

define service {
    use                      generic-service,graphed-service
    host_name                WEB01
    service_description      SSH
    check_command            check_ssh
    notifications_enabled    1
}

define service {
    use                      generic-service,graphed-service
    host_name                WEB01
    service_description      HTTP
    check_command            check_http
    notifications_enabled    1
}
</code></pre>

<p>Test the nagios config and restart if there are no warnings:</p>

<pre><code>$ /usr/local/nagios/bin/nagios -v /usr/local/nagios/etc/nagios.cfg
$ systemctl restart nagios
$ systemctl restart apache2
</code></pre>

<p>Access your nagios server at <a href="http://nagios-ip/nagios">http://nagios-ip/nagios</a> and you will find that the graph icon next to the service will open the graph in a new tab, like the screenshot below:</p>

<p><img src="https://user-images.githubusercontent.com/567298/54546912-5d992c00-49ad-11e9-8a7a-331578d20f5b.png" alt="" /></p>

<h2>Up Next</h2>

<p>Next, <a href="https://blog.ruanbekker.com/blog/2019/03/18/monitor-your-first-host-and-services-with-nagios/">Monitor your first Server with Nagios</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Setup a Nagios Monitoring Server]]></title>
    <link href="http://blog.ruanbekker.com/blog/2019/03/13/how-to-setup-a-nagios-monitoring-server/"/>
    <updated>2019-03-13T23:53:42+02:00</updated>
    <id>http://blog.ruanbekker.com/blog/2019/03/13/how-to-setup-a-nagios-monitoring-server</id>
    <content type="html"><![CDATA[<p><img src="https://user-images.githubusercontent.com/567298/54547916-65f26680-49af-11e9-8d42-e27c57ef8e2e.png" alt="" /></p>

<p>Good old nagios! Nagios is a great Open Source Monitoring Server that monitors your servers and services/applications that is hosted on top of them, and has the ability to notify in the event when they go down.</p>

<p>I&rsquo;ve been using Nagios for the last 7 years and worked for 3 business that chose Nagios as their preferred server monitoring solution.</p>

<p>All <a href="https://blog.ruanbekker.com/blog/categories/nagios/">Nagios</a> related posts are grouped under the <a href="https://blog.ruanbekker.com/blog/categories/nagios/">#nagios</a> category.</p>

<h2>What we are doing today</h2>

<p>Today we will setup a Nagios server and its plugins. The plugins helps to check different endpoints, such as custom tcp checks, ssh, snmp etc.</p>

<p>In this nagios tutorial series, I will publish a couple of post which will include:</p>

<ul>
<li>Setup the Nagios Server and its Plugins - this post</li>
<li>Setup the NRPE Server and NRPE Client Server (this is nice for local ports or custom checks)</li>
<li>Setup Nagiosgraph (Graph performance data and add it as extra host configuration)</li>
<li>Setup a custom Bash and Python Nagios Plugin for Custom Checks</li>
<li>Setup a Telegram / Slack Plugin</li>
</ul>


<h2>Installing Dependencies:</h2>

<p>Go ahead and install all the dependencies needed by nagios and add the nagios user and group:</p>

<pre><code class="bash">$ apt update
$ apt install build-essential libgd-dev openssl libssl-dev unzip apache2 -y
$ apt install autoconf gcc libc6 make wget unzip apache2 php libapache2-mod-php7.2 libgd-dev
$ apt install libmcrypt-dev libssl-dev bc gawk dc build-essential libnet-snmp-perl gettext
$ apt install libcarp-clan-perl rrdtool php-rrd libssl1.0-dev
$ useradd nagios
$ groupadd nagcmd
$ usermod -a -G nagcmd nagios
</code></pre>

<h2>Install Nagios</h2>

<p>Download the nagios tarball from their website, have a look at <a href="https://www.nagios.org/downloads/">https://www.nagios.org/downloads/</a> for the latest version.</p>

<pre><code class="bash">$ wget -O nagios.tar.gz 'https://assets.nagios.com/downloads/nagioscore/releases/nagios-4.4.3.tar.gz?__hstc=118811158.7bdae752f04b6d927ddf150ae1ce5c71.1552389135285.1552394646569.1552410974898.3&amp;__hssc=118811158.1.1552410974898&amp;__hsfp=2323916385#_ga=2.246938692.1332751653.1552389134-913645931.1552389134'
</code></pre>

<p>Extract the archive:</p>

<pre><code>$ tar xpf nagios*.tar.gz
$ cd nagios-4.4.3/
</code></pre>

<p>Configure with nagios user and nagcmd group, install and change the ownership of the generated data:</p>

<pre><code>$ ./configure --with-nagios-group=nagios --with-command-group=nagcmd
$ make -j4 all
$ make install
$ make install-commandmode
$ make install-init
$ make install-config
$ /usr/bin/install -c -m 644 sample-config/httpd.conf /etc/apache2/sites-available/nagios.conf
$ usermod -a -G nagcmd www-data
</code></pre>

<h2>Install Nagios Plugins</h2>

<p>Get the nagios plugins tarball, extract and install:</p>

<pre><code>$ wget nagios-plugins.tar.gz 'https://nagios-plugins.org/download/nagios-plugins-2.2.1.tar.gz#_ga=2.250909126.1332751653.1552389134-913645931.1552389134'
$ tar xpf nagios-plugins*.tar.gz
$ cd nagios-plugins-2.2.1
$ ./configure --with-nagios-user=nagios --with-nagios-group=nagcmd --with-openssl
$ make -j4
$ make install
</code></pre>

<h2>Access Nagios</h2>

<p>Enable apache modules:</p>

<pre><code>$ a2enmod rewrite
$ a2enmod cgi
</code></pre>

<p>Setup basic auth for logging onto nagios:</p>

<pre><code>$ htpasswd -c /usr/local/nagios/etc/htpasswd.users nagiosadmin
</code></pre>

<p>Setup a symlink for apache&rsquo;s nagios configuration</p>

<p>The configuration for the above will look more or less like the following:</p>

<pre><code>$ cat /etc/apache2/sites-enabled/nagios.conf

...
         Require all granted
         AuthName "Nagios Access"
         AuthType Basic
         AuthUserFile /usr/local/nagios/etc/htpasswd.users
         Require valid-user
...
</code></pre>

<p>Create the systemd unit file for nagios <code>/etc/systemd/system/nagios.service</code></p>

<pre><code>[Unit]
Description=Nagios
BindTo=network.target

[Install]
WantedBy=multi-user.target

[Service]
Type=simple
User=nagios
Group=nagcmd
ExecStart=/usr/local/nagios/bin/nagios /usr/local/nagios/etc/nagios.cfg
</code></pre>

<p>Reload the daemon:</p>

<pre><code>$ systemctl daemon-reload
</code></pre>

<p>Enable the service:</p>

<pre><code>$ systemctl enable /etc/systemd/system/nagios.service
</code></pre>

<p>Ensure nagios is started:</p>

<pre><code class="bash">$ systemctl restart nagios
$ systemctl restart apache2
</code></pre>

<p>Access nagios on <a href="http://nagios-ip/nagios">http://nagios-ip/nagios</a> with the credentials that you configured earlier.</p>

<h2>Up Next</h2>

<p>In the next posts I will cover the following:</p>

<ol>
<li><a href="https://blog.ruanbekker.com/blog/2019/03/18/how-to-setup-the-nagiosgraph-plugin-on-nagios-monitoring-server/">Setup NagiosGraph for monitoring performance data</a></li>
<li>Show you how to create a custom nagios plugin in python</li>
<li>Create a Custom Notification service to send notifications to Telegram (or any API)</li>
</ol>

]]></content>
  </entry>
  
</feed>
