<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Oneprovider | Ruan Bekker's Blog]]></title>
  <link href="https://blog.ruanbekker.com/blog/categories/oneprovider/atom.xml" rel="self"/>
  <link href="https://blog.ruanbekker.com/"/>
  <updated>2023-05-22T02:39:35-04:00</updated>
  <id>https://blog.ruanbekker.com/</id>
  <author>
    <name><![CDATA[Ruan]]></name>
    <email><![CDATA[ruan@ruanbekker.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Setup a KVM Host for Virtualization on OneProvider]]></title>
    <link href="https://blog.ruanbekker.com/blog/2020/10/07/setup-a-kvm-host-for-virtualization-on-oneprovider/"/>
    <updated>2020-10-07T23:31:43+00:00</updated>
    <id>https://blog.ruanbekker.com/blog/2020/10/07/setup-a-kvm-host-for-virtualization-on-oneprovider</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve been on the hunt for a hobby dedicated server for a terraform project, where I&rsquo;m intending to use the <a href="https://github.com/dmacvicar/terraform-provider-libvirt">libvirt provider</a> and found one awesome provider that offers amazingly great prices.</p>

<p>At <a href="https://oneprovider.com/dedicated-servers">oneprovider.com</a>, they offer dedicated servers for great prices and they offer a huge number of locations. So I decided to give them a go and ordered a dedicated server in Amsterdam, Netherlands:</p>

<p><img src="https://user-images.githubusercontent.com/567298/95398393-e9630800-0905-11eb-8277-79f13393187c.png" alt="cheap-dedicated-servers" /></p>

<p>I went for a 4GB DDR3 RAM, Atom C2350 2 Cores CPU with 128GB SSD and 1Gbps unmetered bandwidth for $7.30 a month, which is super cheap and more than enough for a hobby project:</p>

<p><img src="https://user-images.githubusercontent.com/567298/95398413-f7188d80-0905-11eb-9250-6368ea92b873.png" alt="image" /></p>

<p>I&rsquo;ve been using them for the last week and super impressed.</p>

<h2>What are we doing</h2>

<p>As part of my Terraform project, I would like to experiment with the libvirt provisioner to provision KVM instances, I need a dedicated server with KVM installed, and in this guide we will install KVM and create a dedicated user that we will use with Terraform.</p>

<h2>Install KVM</h2>

<p>Once your server is provisioned, SSH to your dedicated server and install <code>cpu-checker</code> to ensure that we are able to install KVM:</p>

<pre><code>$ $ apt update &amp;&amp; apt upgrade -y
$ apt install cpu-checker -y
</code></pre>

<p>Test using <code>kvm-ok</code>:</p>

<pre><code>$ kvm-ok
INFO: /dev/kvm exists
KVM acceleration can be used
</code></pre>

<p>On a client pc, generate the SSH key that we will use to authenticate with on our KVM host:</p>

<pre><code>$ ssh-keygen -t rsa -C deploys -f ~/.ssh/deploys.pem
</code></pre>

<p>Back on the server, create the user and prepare the ssh directory:</p>

<pre><code>$ useradd -m -s /bin/bash deploys
$ mkdir /home/deploys/.ssh
$ touch /home/deploys/.ssh/authorized_keys
</code></pre>

<p>On the client PC where you generated your SSH key, copy the public key:</p>

<pre><code>$ cat ~/.ssh/deploys.pem.pub| pbcopy
</code></pre>

<p>Paste your public key to the servers authorized_keys file:</p>

<pre><code>$ vim /home/deploys/.ssh/authorized_keys
# paste the public key contents and save
</code></pre>

<p>Update the content below with the correct permissions:</p>

<pre><code>$ chown -R deploys:deploys /home/deploys
$ chmod 755 /home/deploys/.ssh
$ chmod 644 /home/deploys/.ssh/authorized_keys
</code></pre>

<p>Install KVM on the host:</p>

<pre><code>$ apt install bridge-utils qemu-kvm libvirt-bin virtinst -y
</code></pre>

<p>Add our dedicated user to the libvirt group:</p>

<pre><code>$ usermod -G libvirt deploys
</code></pre>

<p>Create the directory where we will store our vm&rsquo;s disks:</p>

<pre><code>$ mkdir -p /opt/kvm
</code></pre>

<p>And apply ownership permissions for our user and group:</p>

<pre><code>$ chown -R deploys:libvirt /opt/kvm
</code></pre>

<p>I ran into a permission denied issue using terraform and the dedicated user, and to resolve I had to ensure that the <code>security_driver</code> is set to <code>none</code> in <code>/etc/libvirt/qemu.conf</code>:</p>

<pre><code>$ vim /etc/libvirt/qemu.conf
</code></pre>

<p>and update the following:</p>

<pre><code>security_driver = "none"
</code></pre>

<p>Then restart libvirtd:</p>

<pre><code>$ sudo systemctl restart libvirtd 
</code></pre>

<h2>Test KVM</h2>

<p>Switch to the <code>deploys</code> user:</p>

<pre><code>$ sudo su - deploys
</code></pre>

<p>And list domains using <code>virsh</code>:</p>

<pre><code>$ virsh list
 Id    Name                           State
----------------------------------------------------
</code></pre>

<h2>Thank You</h2>

<p>That&rsquo;s it, now we have a KVM host that allows us to provision VM&rsquo;s. In the next post we will install terraform and the libvirt provisioner for terraform to provision a vm and use ansible to deploy software to our vm.</p>

<p><a href="https://saythanks.io/to/ruan.ru.bekker@gmail.com"><img src="https://img.shields.io/badge/Say%20Thanks-!-1EAEDB.svg" alt="Say Thanks!" /></a></p>

<p>Thanks for reaching out to me, check out my <strong><a href="" rel="nofollow" target="_blank">website</a></strong> or follow me at <strong><a href="https://twitter.com/ruanbekker" rel="nofollow" target="_blank">@ruanbekker</a></strong> on Twitter.</p>
]]></content>
  </entry>
  
</feed>
