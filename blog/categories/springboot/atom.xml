<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Springboot | Ruan Bekker's Blog]]></title>
  <link href="http://blog.ruanbekker.com/blog/categories/springboot/atom.xml" rel="self"/>
  <link href="http://blog.ruanbekker.com/"/>
  <updated>2018-08-03T08:57:43-04:00</updated>
  <id>http://blog.ruanbekker.com/</id>
  <author>
    <name><![CDATA[Ruan]]></name>
    <email><![CDATA[ruan@ruanbekker.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Hello World Web App With Java Springboot and Maven]]></title>
    <link href="http://blog.ruanbekker.com/blog/2018/08/03/hello-world-web-app-with-java-springboot-and-maven/"/>
    <updated>2018-08-03T08:31:58-04:00</updated>
    <id>http://blog.ruanbekker.com/blog/2018/08/03/hello-world-web-app-with-java-springboot-and-maven</id>
    <content type="html"><![CDATA[<p>In this post we will setup a Java Hello World Web App, using Maven and SpringBoot on Ubuntu 16. I will create all the needed files in this tutorial, but you can head to start.spring.io to generate the zip for you.</p>

<h2>Setup Java</h2>

<p>Setup Java 1.8:</p>

<pre><code class="bash">$ apt update
$ apt install wget openssl vim software-properties-common -y
$ add-apt-repository ppa:webupd8team/java -y
$ apt-key adv --keyserver keyserver.ubuntu.com --recv-keys C2518248EEA14886
$ apt update &amp;&amp; apt install oracle-java8-installer -y
</code></pre>

<p>Ensure that Java is installed:</p>

<pre><code class="bash">$ java -version
java version "1.8.0_181"
Java(TM) SE Runtime Environment (build 1.8.0_181-b13)
Java HotSpot(TM) 64-Bit Server VM (build 25.181-b13, mixed mode)
</code></pre>

<h2>Install Apache Maven:</h2>

<p>Maven is a build automation tool used primarily for Java projects. Let&rsquo;s setup Maven:</p>

<pre><code>$ cd /opt
$ curl -SL  http://www-eu.apache.org/dist/maven/maven-3/3.5.4/binaries/apache-maven-3.5.4-bin.tar.gz | tar -xz
$ mv apache-maven-3.5.4 maven
$ echo 'M2_HOME=/opt/maven' &gt; /etc/profile.d/mavenenv.sh
$ echo 'export PATH=${M2_HOME}/bin:${PATH}' &gt;&gt; /etc/profile.d/mavenenv.sh
$ chmod +x /etc/profile.d/mavenenv.sh
$ source /etc/profile.d/mavenenv.sh
</code></pre>

<p>Verify that Maven is installed:</p>

<pre><code>$ mvn -version
Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z)
Maven home: /opt/maven
Java version: 1.8.0_181, vendor: Oracle Corporation, runtime: /usr/lib/jvm/java-8-oracle/jre
Default locale: en_US, platform encoding: ANSI_X3.4-1968
OS name: "linux", version: "4.9.87-linuxkit-aufs", arch: "amd64", family: "unix"
</code></pre>

<h2>Setup the Application:</h2>

<p>Create the home directory:</p>

<pre><code class="bash">$ mkdir myapp &amp;&amp; cd myapp
</code></pre>

<p>Create the directory structure:</p>

<pre><code class="bash">$ mkdir -p src/main/java/hello
</code></pre>

<p>Create and Edit the pom.xml:</p>

<pre><code>$ vim pom.xml
</code></pre>

<pre><code class="xml">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"&gt;
    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;

    &lt;groupId&gt;hello&lt;/groupId&gt;
    &lt;artifactId&gt;myapp&lt;/artifactId&gt;
    &lt;version&gt;1.0&lt;/version&gt;

    &lt;parent&gt;
        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;
        &lt;version&gt;1.5.9.RELEASE&lt;/version&gt;
    &lt;/parent&gt;

    &lt;dependencies&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;
        &lt;/dependency&gt;
    &lt;/dependencies&gt;

    &lt;properties&gt;
        &lt;java.version&gt;1.8&lt;/java.version&gt;
    &lt;/properties&gt;

    &lt;build&gt;
        &lt;plugins&gt;
            &lt;plugin&gt;
                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;
            &lt;/plugin&gt;
        &lt;/plugins&gt;
    &lt;/build&gt;

&lt;/project&gt;
</code></pre>

<p>Create the Main Application Class:</p>

<pre><code class="bash">$ vim src/main/java/hello/MainApplicationClass.java
</code></pre>

<pre><code class="java">package hello;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class MainApplicationClass {

    public static void main(String[] args) {
        SpringApplication.run(MainApplicationClass.class, args);
    }
}
</code></pre>

<p>Create the Route Controller:</p>

<pre><code class="bash">$ vim src/main/java/hello/HelloController.java
</code></pre>

<pre><code class="java">package hello;

import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class HelloController {

    @RequestMapping("/")
        public String index() {
        return "This is the index!\n";
    }
    @RequestMapping("/hello")
        public String index2() {

        return "Hello, World!\n";
    }

}
</code></pre>

<h2>Build and Compile:</h2>

<p>This will download all the dependencies and build the jar file:</p>

<pre><code class="bash">$ mvn clean package
</code></pre>

<h2>Start and Test the Application:</h2>

<p>Run the application:</p>

<pre><code class="bash">$ java -jar target/myapp-1.0.jar

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v1.5.9.RELEASE)
...
2018-08-03 12:31:06.967  INFO 5594 --- [           main] hello.MainApplicationClass               : Started MainApplicationClass in 3.656 seconds (JVM running for 4.243)
^
</code></pre>

<p>Test the Application:</p>

<pre><code class="bash">$ curl http://localhost:8080/
This is the index!
</code></pre>

<p>And for our <code>/hello</code> route:</p>

<pre><code class="bash">$ curl http://localhost:8080/hello
Hello, World!
</code></pre>
]]></content>
  </entry>
  
</feed>
