<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Tunneling | Ruan Bekker's Blog]]></title>
  <link href="https://blog.ruanbekker.com/blog/categories/tunneling/atom.xml" rel="self"/>
  <link href="https://blog.ruanbekker.com/"/>
  <updated>2021-08-15T17:47:25-04:00</updated>
  <id>https://blog.ruanbekker.com/</id>
  <author>
    <name><![CDATA[Ruan]]></name>
    <email><![CDATA[ruan@ruanbekker.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using a SSH Reverse Tunnel to Access Nodes on Private Ranges]]></title>
    <link href="https://blog.ruanbekker.com/blog/2020/06/13/using-a-ssh-reverse-tunnel-to-access-nodes-on-private-ranges/"/>
    <updated>2020-06-13T19:59:27+02:00</updated>
    <id>https://blog.ruanbekker.com/blog/2020/06/13/using-a-ssh-reverse-tunnel-to-access-nodes-on-private-ranges</id>
    <content type="html"><![CDATA[<p><img src="https://img.sysadmins.co.za/wngib2.png" alt="ssh-tunneling" /></p>

<p>Personal utility (actually just a command) that I use to reach my Raspberry Pi Nodes that has no direct route via the Internet</p>

<h2>Other Projects</h2>

<p>There&rsquo;s a lot of other tools out there that&rsquo;s already solving this issue, such as <a href="https://inlets.dev">inlets</a>, but I wanted my own, so that I can extend features to it as it pleases me.</p>

<h2>Overview</h2>

<p>This is more ore less how it looks like:</p>

<pre><code>[VPS] &lt;-- Has a Public IP
 |
 |
 [HOME NETWORK] &lt;-- Dynamic IP
   |
   |
 [rpi-01:22], [rpi-02:22] &lt;-- Private IPs
</code></pre>

<ul>
<li>SSH Tunnel is setup from the Raspberry Pi Nodes</li>
<li>Each Raspberry Pi sets up a unique port on the VPS for the tunnel to traverse to the Rpi on port 22</li>
<li>To reach Rpi-01, you hop onto the VPS and ssh to localhost port 2201</li>
<li>To reach Rpi-02, you hop onto the VPS and ssh to localhost port 2202, etc</li>
</ul>


<h2>Progress</h2>

<p>The tool will still be built, but using ssh it&rsquo;s quite easy</p>

<h2>Usage</h2>

<p>Setup the SSH Reverse Tunnel from rpi-01:</p>

<pre><code>$ ssh -i ~/.ssh/bastion.pem \
  -o StrictHostKeyChecking=no \
  -o UserKnownHostsFile=/dev/null \
  -o ServerAliveInterval=60 \
  -N -R 2201:localhost:22 \
  -p 22 ruan@bastion-9239.domain.cloud
</code></pre>

<p>Setup the SSH Reverse Tunnel from rpi-02:</p>

<pre><code>$ ssh -i ~/.ssh/bastion.pem \
  -o StrictHostKeyChecking=no \
  -o UserKnownHostsFile=/dev/null \
  -o ServerAliveInterval=60 \
  -N -R 2202:localhost:22 \
  -p 22 ruan@bastion-9239.domain.cloud
</code></pre>

<p>On the VPS, we can see that we have port 2021 and 2022 listening:</p>

<pre><code>$ netstat -tulpn
Active Internet connections (only servers)
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name
tcp        0      0 127.0.0.1:2201          0.0.0.0:*               LISTEN      -
tcp        0      0 127.0.0.1:2202          0.0.0.0:*               LISTEN      -
</code></pre>

<p>To connect to rpi-01, we ssh to localhost on port 2201, from the VPS:</p>

<pre><code>$ ssh -p 2201 pi@localhost
pi@rpi-01:~ $
</code></pre>

<p>To connect to rpi-02, we ssh to localhost on port 2202 from the VPS:</p>

<pre><code>$ ssh -p 2202 pi@localhost
pi@rpi-02:~ $
</code></pre>
]]></content>
  </entry>
  
</feed>
